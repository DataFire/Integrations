{
  "swagger": "2.0",
  "info": {
    "contact": {
      "x-twitter": "rawgtheworld"
    },
    "description": "\nThe largest open video games database.\n\n### Why build on RAWG\n- More than 350,000 games for 50 platforms including mobiles.\n- Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates,\nMetacritic ratings.\n- Where to buy: links to digital distribution services\n- Similar games based on visual similarity.\n- Player activity data: Steam average playtime and RAWG player counts and ratings.\n- Actively developing and constantly getting better by user contribution and our algorithms.\n\n### Terms of Use\n- Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active\nhyperlink from every page where the data of RAWG is used.\n- Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000\npage views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for\ncommercial terms.\n- No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy\nto say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt,\nand we will talk it through.\n- You must include an API key with every request. The key can be obtained at https://rawg.io/apidocs.\nIf you don’t provide it, we may ban your requests.\n\n__[Read more](https://rawg.io/apidocs)__.\n",
    "title": "RAWG Video Games Database API",
    "version": "v1.0",
    "x-apisguru-categories": [
      "entertainment"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_rawgtheworld_profile_image.jpeg"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://api.rawg.io/docs/?format=openapi",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "rawg.io",
    "x-datafire": {
      "name": "rawg",
      "type": "openapi"
    }
  },
  "host": "api.rawg.io",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/creator-roles": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Position"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "creator-roles"
        ],
        "description": "",
        "operationId": "creator-roles_list",
        "summary": "Get a list of creator positions (jobs)."
      }
    },
    "/creators": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Person"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "creators"
        ],
        "description": "",
        "operationId": "creators_list",
        "summary": "Get a list of game creators."
      }
    },
    "/creators/{id}": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Person.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PersonSingle"
            }
          }
        },
        "tags": [
          "creators"
        ],
        "description": "",
        "operationId": "creators_read",
        "summary": "Get details of the creator."
      }
    },
    "/developers": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Developer"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "developers"
        ],
        "description": "",
        "operationId": "developers_list",
        "summary": "Get a list of game developers."
      }
    },
    "/developers/{id}": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Developer.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeveloperSingle"
            }
          }
        },
        "tags": [
          "developers"
        ],
        "description": "",
        "operationId": "developers_read",
        "summary": "Get details of the developer."
      }
    },
    "/games": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Search query.",
            "in": "query",
            "name": "search",
            "type": "string"
          },
          {
            "description": "Filter by parent platforms, for example: `1,2,3`.",
            "in": "query",
            "name": "parent_platforms",
            "type": "string"
          },
          {
            "description": "Filter by platforms, for example: `4,5`.",
            "in": "query",
            "name": "platforms",
            "type": "string"
          },
          {
            "description": "Filter by stores, for example: `5,6`.",
            "in": "query",
            "name": "stores",
            "type": "string"
          },
          {
            "description": "Filter by developers, for example: `1612,18893` or `valve-software,feral-interactive`.",
            "in": "query",
            "name": "developers",
            "type": "string"
          },
          {
            "description": "Filter by publishers, for example: `354,20987` or `electronic-arts,microsoft-studios`.",
            "in": "query",
            "name": "publishers",
            "type": "string"
          },
          {
            "description": "Filter by genres, for example: `4,51` or `action,indie`.",
            "in": "query",
            "name": "genres",
            "type": "string"
          },
          {
            "description": "Filter by tags, for example: `31,7` or `singleplayer,multiplayer`.",
            "in": "query",
            "name": "tags",
            "type": "string"
          },
          {
            "description": "Filter by creators, for example: `78,28` or `cris-velasco,mike-morasky`.",
            "in": "query",
            "name": "creators",
            "type": "string"
          },
          {
            "description": "Filter by a release date, for example: `2010-01-01,2018-12-31.1960-01-01,1969-12-31`.",
            "in": "query",
            "name": "dates",
            "type": "string"
          },
          {
            "description": "Filter by an update date, for example: `2020-12-01,2020-12-31`.",
            "in": "query",
            "name": "updated",
            "type": "string"
          },
          {
            "description": "Filter by platforms count, for example: `1`.",
            "in": "query",
            "name": "platforms_count",
            "type": "integer"
          },
          {
            "description": "Exclude games from a particular collection, for example: `123`.",
            "in": "query",
            "name": "exclude_collection",
            "type": "integer"
          },
          {
            "description": "Exclude additions.",
            "in": "query",
            "name": "exclude_additions",
            "type": "boolean"
          },
          {
            "description": "Exclude games which have additions.",
            "in": "query",
            "name": "exclude_parents",
            "type": "boolean"
          },
          {
            "description": "Exclude games which included in a game series.",
            "in": "query",
            "name": "exclude_game_series",
            "type": "boolean"
          },
          {
            "description": "Available fields: `name`, `released`, `added`, `created`, `updated`, `rating`. You can reverse the sort order adding a hyphen, for example: `-released`.",
            "in": "query",
            "name": "ordering",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Game"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_list",
        "summary": "Get a list of games."
      }
    },
    "/games/sitemap": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/GameSingle"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_sitemap_read",
        "summary": "Get The Sitemap Games list."
      }
    },
    "/games/{game_pk}/additions": {
      "parameters": [
        {
          "in": "path",
          "name": "game_pk",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Game"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_additions_list",
        "summary": "Get a list of DLC's for the game, GOTY and other editions, companion apps, etc."
      }
    },
    "/games/{game_pk}/development-team": {
      "parameters": [
        {
          "in": "path",
          "name": "game_pk",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/GamePersonList"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_development-team_list",
        "summary": "Get a list of individual creators that were part of the development team."
      }
    },
    "/games/{game_pk}/game-series": {
      "parameters": [
        {
          "in": "path",
          "name": "game_pk",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Game"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_game-series_list",
        "summary": "Get a list of games that are part of the same series."
      }
    },
    "/games/{game_pk}/parent-games": {
      "parameters": [
        {
          "in": "path",
          "name": "game_pk",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Game"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_parent-games_list",
        "summary": "Get a list of parent games for DLC's and editions."
      }
    },
    "/games/{game_pk}/screenshots": {
      "parameters": [
        {
          "in": "path",
          "name": "game_pk",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/ScreenShot"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_screenshots_list",
        "summary": "Get screenshots for the game."
      }
    },
    "/games/{game_pk}/stores": {
      "parameters": [
        {
          "in": "path",
          "name": "game_pk",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/GameStoreFull"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_stores_list",
        "summary": "Get links to the stores that sell the game."
      }
    },
    "/games/{id}": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Game.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An ID or a slug identifying this Game.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GameSingle"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_read",
        "summary": "Get details of the game."
      }
    },
    "/games/{id}/achievements": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Game.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An ID or a slug identifying this Game.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ParentAchievement"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_achievements_read",
        "summary": "Get a list of game achievements."
      }
    },
    "/games/{id}/movies": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Game.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An ID or a slug identifying this Game.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_movies_read",
        "summary": "Get a list of game trailers."
      }
    },
    "/games/{id}/reddit": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Game.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An ID or a slug identifying this Game.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Reddit"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_reddit_read",
        "summary": "Get a list of most recent posts from the game's subreddit."
      }
    },
    "/games/{id}/suggested": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Game.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An ID or a slug identifying this Game.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GameSingle"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_suggested_read",
        "summary": "Get a list of visually similar games, available only for business and enterprise API users."
      }
    },
    "/games/{id}/twitch": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Game.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An ID or a slug identifying this Game.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Twitch"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_twitch_read",
        "summary": "Get streams on Twitch associated with the game, available only for business and enterprise API users."
      }
    },
    "/games/{id}/youtube": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Game.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An ID or a slug identifying this Game.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Youtube"
            }
          }
        },
        "tags": [
          "games"
        ],
        "description": "",
        "operationId": "games_youtube_read",
        "summary": "Get videos from YouTube associated with the game, available only for business and enterprise API users."
      }
    },
    "/genres": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Genre"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "genres"
        ],
        "description": "",
        "operationId": "genres_list",
        "summary": "Get a list of video game genres."
      }
    },
    "/genres/{id}": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Genre.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenreSingle"
            }
          }
        },
        "tags": [
          "genres"
        ],
        "description": "",
        "operationId": "genres_read",
        "summary": "Get details of the genre."
      }
    },
    "/platforms": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Platform"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "platforms"
        ],
        "description": "",
        "operationId": "platforms_list",
        "summary": "Get a list of video game platforms."
      }
    },
    "/platforms/lists/parents": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/PlatformParentSingle"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "platforms"
        ],
        "description": "For instance, for PS2 and PS4 the “parent platform” is PlayStation.",
        "operationId": "platforms_lists_parents_list",
        "summary": "Get a list of parent platforms."
      }
    },
    "/platforms/{id}": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Platform.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PlatformSingle"
            }
          }
        },
        "tags": [
          "platforms"
        ],
        "description": "",
        "operationId": "platforms_read",
        "summary": "Get details of the platform."
      }
    },
    "/publishers": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Publisher"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "publishers"
        ],
        "description": "",
        "operationId": "publishers_list",
        "summary": "Get a list of video game publishers."
      }
    },
    "/publishers/{id}": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Publisher.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PublisherSingle"
            }
          }
        },
        "tags": [
          "publishers"
        ],
        "description": "",
        "operationId": "publishers_read",
        "summary": "Get details of the publisher."
      }
    },
    "/stores": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Which field to use when ordering the results.",
            "in": "query",
            "name": "ordering",
            "required": false,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Store"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "stores"
        ],
        "description": "",
        "operationId": "stores_list",
        "summary": "Get a list of video game storefronts."
      }
    },
    "/stores/{id}": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Store.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StoreSingle"
            }
          }
        },
        "tags": [
          "stores"
        ],
        "description": "",
        "operationId": "stores_read",
        "summary": "Get details of the store."
      }
    },
    "/tags": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "previous": {
                  "format": "uri",
                  "type": "string",
                  "x-nullable": true
                },
                "results": {
                  "items": {
                    "$ref": "#/definitions/Tag"
                  },
                  "type": "array"
                }
              },
              "required": [
                "count",
                "results"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "",
        "operationId": "tags_list",
        "summary": "Get a list of tags."
      }
    },
    "/tags/{id}": {
      "parameters": [
        {
          "description": "A unique integer value identifying this Tag.",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagSingle"
            }
          }
        },
        "tags": [
          "tags"
        ],
        "description": "",
        "operationId": "tags_read",
        "summary": "Get details of the tag."
      }
    }
  },
  "definitions": {
    "Developer": {
      "properties": {
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "DeveloperSingle": {
      "properties": {
        "description": {
          "title": "Description",
          "type": "string"
        },
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Game": {
      "properties": {
        "added": {
          "readOnly": true,
          "title": "Added",
          "type": "integer"
        },
        "added_by_status": {
          "readOnly": true,
          "title": "Added by status",
          "type": "object"
        },
        "background_image": {
          "format": "uri",
          "readOnly": true,
          "title": "Background image",
          "type": "string"
        },
        "esrb_rating": {
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "enum": [
                "Everyone",
                "Everyone 10+",
                "Teen",
                "Mature",
                "Adults Only",
                "Rating Pending"
              ],
              "type": "string"
            },
            "slug": {
              "enum": [
                "everyone",
                "everyone-10-plus",
                "teen",
                "mature",
                "adults-only",
                "rating-pending"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "x-nullable": true
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "metacritic": {
          "readOnly": true,
          "title": "Metacritic",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "platforms": {
          "items": {
            "properties": {
              "platform": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "released_at": {
                "type": "string",
                "x-nullable": true
              },
              "requirements": {
                "properties": {
                  "minimum": {
                    "type": "string"
                  },
                  "recommended": {
                    "type": "string"
                  }
                },
                "type": "object",
                "x-nullable": true
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "playtime": {
          "description": "in hours",
          "readOnly": true,
          "title": "Playtime",
          "type": "integer"
        },
        "rating": {
          "title": "Rating",
          "type": "number"
        },
        "rating_top": {
          "readOnly": true,
          "title": "Rating top",
          "type": "integer"
        },
        "ratings": {
          "readOnly": true,
          "title": "Ratings",
          "type": "object"
        },
        "ratings_count": {
          "readOnly": true,
          "title": "Ratings count",
          "type": "integer"
        },
        "released": {
          "format": "date",
          "readOnly": true,
          "title": "Released",
          "type": "string"
        },
        "reviews_text_count": {
          "readOnly": true,
          "title": "Reviews text count",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        },
        "suggestions_count": {
          "readOnly": true,
          "title": "Suggestions count",
          "type": "integer"
        },
        "tba": {
          "readOnly": true,
          "title": "TBA",
          "type": "boolean"
        },
        "updated": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated",
          "type": "string"
        }
      },
      "required": [
        "rating"
      ],
      "type": "object"
    },
    "GamePersonList": {
      "properties": {
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image": {
          "format": "uri",
          "readOnly": true,
          "title": "Image",
          "type": "string"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "GamePlatformMetacritic": {
      "properties": {
        "metascore": {
          "readOnly": true,
          "title": "Metascore",
          "type": "integer"
        },
        "url": {
          "minLength": 1,
          "readOnly": true,
          "title": "Url",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GameSingle": {
      "properties": {
        "achievements_count": {
          "readOnly": true,
          "title": "Achievements count",
          "type": "integer"
        },
        "added": {
          "readOnly": true,
          "title": "Added",
          "type": "integer"
        },
        "added_by_status": {
          "readOnly": true,
          "title": "Added by status",
          "type": "object"
        },
        "additions_count": {
          "readOnly": true,
          "title": "Additions count",
          "type": "integer"
        },
        "alternative_names": {
          "items": {
            "maxLength": 200,
            "minLength": 1,
            "title": "Alternative names",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "background_image": {
          "format": "uri",
          "readOnly": true,
          "title": "Background image",
          "type": "string"
        },
        "background_image_additional": {
          "readOnly": true,
          "title": "Background image additional",
          "type": "string"
        },
        "creators_count": {
          "readOnly": true,
          "title": "Creators count",
          "type": "integer"
        },
        "description": {
          "minLength": 1,
          "readOnly": true,
          "title": "Description",
          "type": "string"
        },
        "esrb_rating": {
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "enum": [
                "Everyone",
                "Everyone 10+",
                "Teen",
                "Mature",
                "Adults Only",
                "Rating Pending"
              ],
              "type": "string"
            },
            "slug": {
              "enum": [
                "everyone",
                "everyone-10-plus",
                "teen",
                "mature",
                "adults-only",
                "rating-pending"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "x-nullable": true
        },
        "game_series_count": {
          "readOnly": true,
          "title": "Game series count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "metacritic": {
          "readOnly": true,
          "title": "Metacritic",
          "type": "integer"
        },
        "metacritic_platforms": {
          "items": {
            "$ref": "#/definitions/GamePlatformMetacritic"
          },
          "readOnly": true,
          "type": "array"
        },
        "metacritic_url": {
          "description": "For example \"http://www.metacritic.com/game/playstation-4/the-witcher-3-wild-hunt\"",
          "minLength": 1,
          "readOnly": true,
          "title": "Metacritic url",
          "type": "string"
        },
        "movies_count": {
          "readOnly": true,
          "title": "Movies count",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "name_original": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name original",
          "type": "string"
        },
        "parent_achievements_count": {
          "readOnly": true,
          "title": "Parent achievements count",
          "type": "string"
        },
        "parents_count": {
          "readOnly": true,
          "title": "Parents count",
          "type": "integer"
        },
        "platforms": {
          "items": {
            "properties": {
              "platform": {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "released_at": {
                "type": "string",
                "x-nullable": true
              },
              "requirements": {
                "properties": {
                  "minimum": {
                    "type": "string"
                  },
                  "recommended": {
                    "type": "string"
                  }
                },
                "type": "object",
                "x-nullable": true
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "playtime": {
          "description": "in hours",
          "readOnly": true,
          "title": "Playtime",
          "type": "integer"
        },
        "rating": {
          "title": "Rating",
          "type": "number"
        },
        "rating_top": {
          "readOnly": true,
          "title": "Rating top",
          "type": "integer"
        },
        "ratings": {
          "readOnly": true,
          "title": "Ratings",
          "type": "object"
        },
        "ratings_count": {
          "readOnly": true,
          "title": "Ratings count",
          "type": "integer"
        },
        "reactions": {
          "readOnly": true,
          "title": "Reactions",
          "type": "object"
        },
        "reddit_count": {
          "readOnly": true,
          "title": "Reddit count",
          "type": "integer"
        },
        "reddit_description": {
          "minLength": 1,
          "readOnly": true,
          "title": "Reddit description",
          "type": "string"
        },
        "reddit_logo": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Reddit logo",
          "type": "string"
        },
        "reddit_name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Reddit name",
          "type": "string"
        },
        "reddit_url": {
          "description": "For example \"https://www.reddit.com/r/uncharted/\" or \"uncharted\"",
          "minLength": 1,
          "readOnly": true,
          "title": "Reddit url",
          "type": "string"
        },
        "released": {
          "format": "date",
          "readOnly": true,
          "title": "Released",
          "type": "string"
        },
        "reviews_text_count": {
          "readOnly": true,
          "title": "Reviews text count",
          "type": "string"
        },
        "screenshots_count": {
          "readOnly": true,
          "title": "Screenshots count",
          "type": "integer"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        },
        "suggestions_count": {
          "readOnly": true,
          "title": "Suggestions count",
          "type": "integer"
        },
        "tba": {
          "readOnly": true,
          "title": "TBA",
          "type": "boolean"
        },
        "twitch_count": {
          "readOnly": true,
          "title": "Twitch count",
          "type": "string"
        },
        "updated": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated",
          "type": "string"
        },
        "website": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Website",
          "type": "string"
        },
        "youtube_count": {
          "readOnly": true,
          "title": "Youtube count",
          "type": "string"
        }
      },
      "required": [
        "rating"
      ],
      "type": "object"
    },
    "GameStoreFull": {
      "properties": {
        "game_id": {
          "readOnly": true,
          "title": "Game id",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "store_id": {
          "readOnly": true,
          "title": "Store id",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "maxLength": 500,
          "minLength": 1,
          "title": "Url",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "Genre": {
      "properties": {
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "GenreSingle": {
      "properties": {
        "description": {
          "title": "Description",
          "type": "string"
        },
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Movie": {
      "properties": {
        "data": {
          "readOnly": true,
          "title": "Data",
          "type": "object"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "preview": {
          "format": "uri",
          "readOnly": true,
          "title": "Preview",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ParentAchievement": {
      "properties": {
        "description": {
          "minLength": 1,
          "readOnly": true,
          "title": "Description",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image": {
          "format": "uri",
          "readOnly": true,
          "title": "Image",
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "percent": {
          "format": "decimal",
          "readOnly": true,
          "title": "Percent",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Person": {
      "properties": {
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image": {
          "format": "uri",
          "readOnly": true,
          "title": "Image",
          "type": "string"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "PersonSingle": {
      "properties": {
        "description": {
          "minLength": 1,
          "title": "Description",
          "type": "string"
        },
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image": {
          "format": "uri",
          "readOnly": true,
          "title": "Image",
          "type": "string"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "rating": {
          "format": "decimal",
          "readOnly": true,
          "title": "Rating",
          "type": "string"
        },
        "rating_top": {
          "readOnly": true,
          "title": "Rating top",
          "type": "integer"
        },
        "reviews_count": {
          "readOnly": true,
          "title": "Reviews count",
          "type": "integer"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        },
        "updated": {
          "format": "date-time",
          "readOnly": true,
          "title": "Updated",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Platform": {
      "properties": {
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image": {
          "format": "uri",
          "readOnly": true,
          "title": "Image",
          "type": "string",
          "x-nullable": true
        },
        "image_background": {
          "format": "uri",
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        },
        "year_end": {
          "maximum": 32767,
          "minimum": 0,
          "title": "Year end",
          "type": "integer",
          "x-nullable": true
        },
        "year_start": {
          "maximum": 32767,
          "minimum": 0,
          "title": "Year start",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "PlatformParentSingle": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "platforms": {
          "items": {
            "$ref": "#/definitions/Platform"
          },
          "type": "array"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name",
        "platforms"
      ],
      "type": "object"
    },
    "PlatformSingle": {
      "properties": {
        "description": {
          "title": "Description",
          "type": "string"
        },
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image": {
          "format": "uri",
          "readOnly": true,
          "title": "Image",
          "type": "string",
          "x-nullable": true
        },
        "image_background": {
          "format": "uri",
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        },
        "year_end": {
          "maximum": 32767,
          "minimum": 0,
          "title": "Year end",
          "type": "integer",
          "x-nullable": true
        },
        "year_start": {
          "maximum": 32767,
          "minimum": 0,
          "title": "Year start",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Position": {
      "properties": {
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Publisher": {
      "properties": {
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "PublisherSingle": {
      "properties": {
        "description": {
          "title": "Description",
          "type": "string"
        },
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Reddit": {
      "properties": {
        "created": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image",
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "text": {
          "minLength": 1,
          "readOnly": true,
          "title": "Text",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Url",
          "type": "string"
        },
        "username": {
          "minLength": 1,
          "readOnly": true,
          "title": "Username",
          "type": "string"
        },
        "username_url": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Username url",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScreenShot": {
      "example": {
        "hidden": false,
        "image": "@image.jpg"
      },
      "properties": {
        "height": {
          "readOnly": true,
          "title": "Height",
          "type": "integer"
        },
        "hidden": {
          "default": false,
          "description": "Set image as hidden or visible.",
          "title": "Hidden",
          "type": "boolean"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image": {
          "description": "An image file with size up to 20 MB.",
          "format": "uri",
          "readOnly": true,
          "title": "Image",
          "type": "string"
        },
        "width": {
          "readOnly": true,
          "title": "Width",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Store": {
      "properties": {
        "domain": {
          "maxLength": 255,
          "title": "Domain",
          "type": "string",
          "x-nullable": true
        },
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "StoreSingle": {
      "properties": {
        "description": {
          "title": "Description",
          "type": "string"
        },
        "domain": {
          "maxLength": 255,
          "title": "Domain",
          "type": "string",
          "x-nullable": true
        },
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Tag": {
      "properties": {
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "language": {
          "minLength": 1,
          "readOnly": true,
          "title": "Language",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "TagSingle": {
      "properties": {
        "description": {
          "title": "Description",
          "type": "string"
        },
        "games_count": {
          "readOnly": true,
          "title": "Games count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "image_background": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Image background",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "slug": {
          "format": "slug",
          "minLength": 1,
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "title": "Slug",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Twitch": {
      "properties": {
        "created": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created",
          "type": "string"
        },
        "description": {
          "minLength": 1,
          "readOnly": true,
          "title": "Description",
          "type": "string"
        },
        "external_id": {
          "readOnly": true,
          "title": "External id",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "language": {
          "minLength": 1,
          "readOnly": true,
          "title": "Language",
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "published": {
          "format": "date-time",
          "readOnly": true,
          "title": "Published",
          "type": "string"
        },
        "thumbnail": {
          "format": "uri",
          "minLength": 1,
          "readOnly": true,
          "title": "Thumbnail",
          "type": "string"
        },
        "view_count": {
          "readOnly": true,
          "title": "View count",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Youtube": {
      "properties": {
        "channel_id": {
          "minLength": 1,
          "readOnly": true,
          "title": "Channel id",
          "type": "string"
        },
        "channel_title": {
          "minLength": 1,
          "readOnly": true,
          "title": "Channel title",
          "type": "string"
        },
        "comments_count": {
          "readOnly": true,
          "title": "Comments count",
          "type": "integer"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "title": "Created",
          "type": "string"
        },
        "description": {
          "minLength": 1,
          "readOnly": true,
          "title": "Description",
          "type": "string"
        },
        "dislike_count": {
          "readOnly": true,
          "title": "Dislike count",
          "type": "integer"
        },
        "external_id": {
          "minLength": 1,
          "readOnly": true,
          "title": "External id",
          "type": "string"
        },
        "favorite_count": {
          "readOnly": true,
          "title": "Favorite count",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "title": "ID",
          "type": "integer"
        },
        "like_count": {
          "readOnly": true,
          "title": "Like count",
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "readOnly": true,
          "title": "Name",
          "type": "string"
        },
        "thumbnails": {
          "readOnly": true,
          "title": "Thumbnails",
          "type": "object"
        },
        "view_count": {
          "readOnly": true,
          "title": "View count",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "x-components": {}
}