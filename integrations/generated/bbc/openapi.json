{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "nitro@bbc.co.uk",
      "name": "Open Nitro Project",
      "url": "http://developer.bbc.co.uk/"
    },
    "description": "BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.",
    "license": {
      "name": "Nitro Public License",
      "url": "https://github.com/Mermade/bbcparse/wiki/Nitro-Public-License"
    },
    "termsOfService": "http://www.bbc.co.uk/terms/",
    "title": "BBC Nitro API",
    "version": "1.0.0",
    "x-apiClientRegistration": {
      "url": "https://developer.bbc.co.uk/user/register"
    },
    "x-apisguru-categories": [
      "media",
      "open_data"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_github.com_Mermade_bbcparse_blob_master_nitroApi_nitro-logo.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/bbcparse",
          "version": "1.3.1"
        },
        "url": "http://programmes.api.bbc.com/nitro/api"
      },
      {
        "converter": {
          "url": "https://github.com/lucybot/api-spec-converter",
          "version": "2.7.11"
        },
        "format": "openapi",
        "url": "https://raw.githubusercontent.com/Mermade/bbcparse/master/nitroApi/openapi.yaml",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "bbc.com",
    "x-tags": [
      "BBC",
      "programme information",
      "iPlayer",
      "iPlayer Radio"
    ],
    "x-unofficialSpec": true,
    "x-datafire": {
      "name": "bbc",
      "type": "openapi"
    }
  },
  "host": "programmes.api.bbc.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Metadata response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "schema"
        ],
        "description": "Get API definition",
        "operationId": "getAPI",
        "summary": "Get API definition"
      }
    },
    "/availabilities": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Sorts:\n* scheduled_start: sort chronologically by scheduled start time/date, ascending\n",
            "enum": [
              "scheduled_start"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort direction",
            "enum": [
              "ascending",
              "descending"
            ],
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of availabilities",
            "in": "query",
            "items": {
              "enum": [
                "available"
              ],
              "type": "string"
            },
            "name": "availability",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of availabilities that have PID as ancestor",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "descendants_of",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of availabilities with media set",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "media_set",
            "required": false,
            "type": "array"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for availabilities in given territory",
            "in": "query",
            "items": {
              "enum": [
                "uk",
                "nonuk",
                "world"
              ],
              "type": "string"
            },
            "name": "territory",
            "required": false,
            "type": "array"
          },
          {
            "description": "Turn on debug information (undocumented)",
            "in": "query",
            "name": "debug",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "Discover details of on-demand availability for programmes and their versions",
        "operationId": "listAvailability",
        "summary": "Discover details of on-demand availability for programmes and their versions"
      }
    },
    "/broadcasts": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Sorts:\n* start_date: sort chronologically by scheduled start time/date, ascending\n",
            "enum": [
              "start_date"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort direction",
            "enum": [
              "ascending",
              "descending"
            ],
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Mixins:\n* titles: return ancestor programme titles\n",
            "in": "query",
            "items": {
              "enum": [
                "titles"
              ],
              "type": "string"
            },
            "name": "mixin",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts that have given authority",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "authority",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts that are descendants of the given programme PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "descendants_of",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of broadcasts that end on or later than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "end_from",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of broadcasts that end on or earlier than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "end_to",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts that are classified in the given format ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "format",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts that are classified in the given genre ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "genre",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts that have given identifier",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts with the given item performed on it",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "item",
            "required": false,
            "type": "array"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "description": "filter for subset of broadcasts that have given contributor",
            "in": "query",
            "name": "people",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts having given PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of broadcasts matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of broadcasts that start on the specified day (BBC time)",
            "format": "date",
            "in": "query",
            "name": "schedule_day",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of broadcasts that start on or after the specified day (BBC time)",
            "format": "date",
            "in": "query",
            "name": "schedule_day_from",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of broadcasts that start on or before the specified day (BBC time)",
            "format": "date",
            "in": "query",
            "name": "schedule_day_to",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts with given service master brand",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "service_master_brand",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts that are on the specified linear service",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "sid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of broadcasts that start on or later than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "start_from",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of broadcasts that start on or earlier than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "start_to",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts with given PID as their parent version",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "version",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "Fetch metadata about linear Broadcasts and Services, allowing the generation of Television and Radio schedules and other datasets for broadcast items. Use /schedules instead of this feed as it is more efficient. Broadcasts will be deprecated in the future.",
        "operationId": "listBroadcasts",
        "summary": "Build schedules and find metadata for TV and radio broadcasts"
      }
    },
    "/groups": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Sorts:\n* pid: sort alphabetically by PID\n",
            "enum": [
              "pid"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort direction",
            "enum": [
              "descending"
            ],
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Mixins:\n* alternate_images: mixin to return the alternate images for a group\n* group_for: mixin to return links to programme entities that group belongs to\n* images: mixin to add image information for a group\n* related_links: mixin to return related links for the group\n",
            "in": "query",
            "items": {
              "enum": [
                "alternate_images",
                "group_for",
                "images",
                "related_links"
              ],
              "type": "string"
            },
            "name": "mixin",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for groups related to given programme or its descendants",
            "in": "query",
            "minLength": 8,
            "name": "for_descendants_of",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of groups directly related to a given programme",
            "in": "query",
            "minLength": 8,
            "name": "for_programme",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of groups which belong to the given group pid",
            "in": "query",
            "minLength": 8,
            "name": "group",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of groups that have the given group type",
            "in": "query",
            "items": {
              "enum": [
                "collection",
                "franchise",
                "gallery",
                "season"
              ],
              "type": "string"
            },
            "name": "group_type",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of groups which contain an entity with the given pid as a member",
            "in": "query",
            "minLength": 8,
            "name": "member",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for groups by partner ID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for groups by partner PID",
            "in": "query",
            "items": {
              "default": "s0000001",
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_pid",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of seasons, collections, galleries or franchises having given PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of groups matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "Control return of embargoed items (undocumented)",
            "enum": [
              "include",
              "exclude",
              "only"
            ],
            "in": "query",
            "name": "embargoed",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "Long-lived curated collections of programmes and more, including Collections, Seasons, Franchises and Galleries",
        "operationId": "listGroups",
        "summary": "Find metadata for curated groups: seasons, collections, galleries or franchises"
      }
    },
    "/images": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Sorts:\n* group_position: sort numerically by position, ascending only\n* pid: sort alphabetically by PID\n",
            "enum": [
              "group_position",
              "pid"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort direction",
            "enum": [
              "ascending",
              "descending"
            ],
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for images belonging to the given group (i.e. Gallery)",
            "in": "query",
            "minLength": 8,
            "name": "group",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for images by type",
            "in": "query",
            "items": {
              "enum": [
                "standard",
                "podcast",
                "store",
                "portrait",
                "letterbox"
              ],
              "type": "string"
            },
            "name": "image_type",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for alternate images by entity PID",
            "in": "query",
            "minLength": 8,
            "name": "is_alternate_image_for",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for images by entity PID",
            "in": "query",
            "minLength": 8,
            "name": "is_image_for",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for images by partner ID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for images by partner PID",
            "in": "query",
            "items": {
              "default": "s0000001",
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_pid",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of images having given PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of images matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "Control return of embargoed items (undocumented)",
            "enum": [
              "include",
              "exclude",
              "only"
            ],
            "in": "query",
            "name": "embargoed",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "Find metadata for images, particularly those in galleries",
        "operationId": "listImages",
        "summary": "Find metadata for images"
      }
    },
    "/items": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Sorts:\n* pid: sort by pid, descending\n",
            "enum": [
              "pid"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort direction",
            "enum": [
              "descending"
            ],
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Mixins:\n* contributions: mixin to return information about contributors to items\n* images: mixin to add image information for an item\n* offset: mixin to return programme segment offsets, works in conjunction with programme filter\n* play_event: mixin to return programme segment events, works in conjunction with programme or segment_event filters\n",
            "in": "query",
            "items": {
              "enum": [
                "contributions",
                "images",
                "offset",
                "play_event"
              ],
              "type": "string"
            },
            "name": "mixin",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of items that have an ID issued by the given authority",
            "in": "query",
            "name": "authority",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of items having given ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "id",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of items that have given an ID of the given type",
            "in": "query",
            "name": "id_type",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for specific type(s) of items",
            "in": "query",
            "items": {
              "enum": [
                "chapter",
                "highlight",
                "music",
                "speech",
                "other"
              ],
              "type": "string"
            },
            "name": "item_type",
            "required": false,
            "type": "array"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for items by partner ID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for items by partner PID",
            "in": "query",
            "items": {
              "default": "s0000001",
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of items that have specified person involved",
            "in": "query",
            "name": "people",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of items matching one of the given PIDs",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of items that are part of the given programme",
            "in": "query",
            "minLength": 8,
            "name": "programme",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of items matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for item with the given segment_event",
            "in": "query",
            "name": "segment_event",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "Look inside programmes to find segments: chapters, tracks and more",
        "operationId": "listItems",
        "summary": "Look inside programmes to find segments: chapters, tracks and more"
      }
    },
    "/master_brands": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Sorts:\n* mid: sort by mid, ascending\n",
            "enum": [
              "mid"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort direction",
            "enum": [
              "ascending"
            ],
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Mixins:\n* images: mixin to add image information for a masterbrand\n",
            "in": "query",
            "items": {
              "enum": [
                "images"
              ],
              "type": "string"
            },
            "name": "mixin",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of masterbrands that have given identifier",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "mid",
            "required": false,
            "type": "array"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for masterbrands by partner ID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for masterbrands by partner PID",
            "in": "query",
            "items": {
              "default": "s0000001",
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of masterbrands matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "List all Master Brands",
        "operationId": "listMasterbrands",
        "summary": "List all Master Brands"
      }
    },
    "/people": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "filter for subset of people that have an ID issued by the given authority",
            "in": "query",
            "name": "authority",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for people who have an external identifier",
            "in": "query",
            "items": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            },
            "name": "has_external_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of people having given ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "id",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of people that have given an ID of the given type",
            "in": "query",
            "name": "id_type",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for people by partner ID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for people by partner PID",
            "in": "query",
            "items": {
              "default": "s0000001",
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_pid",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of people having given PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of people that have contributed to the given programme pid",
            "in": "query",
            "name": "programme",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of people matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "The People feed allows you to search for the people and groups that contribute to programmes. This is the starting point for cast and crew credits, as well as finding contributors using external IDs (such as Wikipedia URLs)",
        "operationId": "listPeople",
        "summary": "Find the people behind and in programmes: cast, crew, guests and more"
      }
    },
    "/pips": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "description": "filter for subset of programmes matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "Look inside pips entities",
        "operationId": "listPips",
        "summary": "Look inside pips entities"
      }
    },
    "/programme_details": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter for programme information by partner PID",
            "in": "query",
            "minLength": 8,
            "name": "partner_pid",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter for programme information for the provided PID",
            "in": "query",
            "minLength": 8,
            "name": "pid",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "Exposes programme information for a single pid",
        "operationId": "listProgrammeDetails",
        "summary": "Exposes programme information for a single pid"
      }
    },
    "/programmes": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Sorts:\n* group_position: sort numerically by position in group, ascending\n* pid: sort alphabetically by PID, descending\n* position: sort numerically by position, ascending\n* promotion: sort by promotion rank, ascending\n* release_date: sort chronologically by release date, descending\n* relevance: sort by weighting of search term (use with q parameter)\n* scheduled_start: sort chronologically by scheduled start time/date, ascending\n* strict_title: sort alphabetically by title, ascending\n* title: sort by title librarian style (ignoring leading 'The', 'A', etc), ascending\n* tree: sort by root pid and then preorder tree sort. Requires entities to have release date.\n",
            "enum": [
              "group_position",
              "pid",
              "position",
              "promotion",
              "release_date",
              "relevance",
              "scheduled_start",
              "strict_title",
              "title",
              "tree"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort direction",
            "enum": [
              "ascending",
              "descending"
            ],
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Mixins:\n* alternate_images: mixin to return the alternate images for a programme\n* ancestor_titles: mixin to return ancestor programme titles\n* availability: mixin to return programme availability information\n* available_simulcasts: mixin to return information about programmes that are currently available as simulcasts\n* available_versions: mixin to return information about programmes that are currently available on demand\n* available_webcasts: mixin to return information about programmes that are currently available as webcasts\n* contributions: mixin to return information about contributors to a programme\n* duration: mixin to return original version duration in programme concept entities\n* genre_groupings: mixin to return list of genre groupings\n* genre_groups: mixin to return list of genre groups\n* images: mixin to add image information for a programme\n* is_embeddable: mixin to add embeddable information for a programme\n* previous_next: mixin to return the programmes which appear before and after a programme (as determined by the sort applied in the request)\n* programme_type: mixin to return the programme type\n* related_links: mixin to return information about related links to a programme\n* titles: mixin to return ancestor programme titles\n* versions_availability: mixin to return information about programmes that are currently available\n",
            "in": "query",
            "items": {
              "enum": [
                "alternate_images",
                "ancestor_titles",
                "availability",
                "available_simulcasts",
                "available_versions",
                "available_webcasts",
                "contributions",
                "duration",
                "genre_groupings",
                "genre_groups",
                "images",
                "is_embeddable",
                "previous_next",
                "programme_type",
                "related_links",
                "titles",
                "versions_availability"
              ],
              "type": "string"
            },
            "name": "mixin",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes that are audio-described",
            "in": "query",
            "items": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            },
            "name": "audio_described",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes that have availability",
            "in": "query",
            "items": {
              "enum": [
                "available",
                "pending"
              ],
              "type": "string"
            },
            "name": "availability",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "additional filter when availability=available",
            "in": "query",
            "items": {
              "enum": [
                "episode",
                "clip"
              ],
              "type": "string"
            },
            "name": "availability_entity_type",
            "required": false,
            "type": "array"
          },
          {
            "deprecated": true,
            "description": "filter for subset of programmes that are available after or at the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "availability_from",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for a subset of programmes that are available for a given type",
            "in": "query",
            "items": {
              "enum": [
                "ondemand",
                "webcast",
                "simulcast"
              ],
              "type": "string"
            },
            "name": "availability_type",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes that have PID as immediate parent",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "children_of",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes that have PID as ancestor",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "descendants_of",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes that have given duration",
            "in": "query",
            "items": {
              "enum": [
                "short",
                "medium",
                "long"
              ],
              "type": "string"
            },
            "name": "duration",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes that have given entity type",
            "in": "query",
            "items": {
              "enum": [
                "brand",
                "series",
                "episode",
                "clip"
              ],
              "type": "string"
            },
            "name": "entity_type",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes with format",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "format",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes with genre",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "genre",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of programmes which belong to the given group pid",
            "in": "query",
            "minLength": 8,
            "name": "group",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of programmes with title beginning with initial letter librarian style (ignoring leading 'The', 'An' (Welsh), etc) 0-9 a-z",
            "in": "query",
            "maxLength": 1,
            "minLength": 1,
            "name": "initial_letter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Programmes with (librarian) titles whose initial letter is equal/before given letter. Use with initial_letter_start for a range",
            "in": "query",
            "maxLength": 1,
            "minLength": 1,
            "name": "initial_letter_end",
            "required": false,
            "type": "string"
          },
          {
            "description": "Programmes with (librarian) titles whose initial letter is equal/after given letter. Use with initial_letter_end for range.",
            "in": "query",
            "maxLength": 1,
            "minLength": 1,
            "name": "initial_letter_start",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes with title beginning with initial letter",
            "in": "query",
            "items": {
              "maxLength": 1,
              "minLength": 1,
              "type": "string"
            },
            "name": "initial_letter_strict",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes with linked to versions which have the given item pids",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "item",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes with master_brand",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "master_brand",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of programmes with media set",
            "in": "query",
            "name": "media_set",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes with media type",
            "in": "query",
            "items": {
              "enum": [
                "audio",
                "audio_video"
              ],
              "type": "string"
            },
            "name": "media_type",
            "required": false,
            "type": "array"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for programmes by partner ID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for programmes by partner PID",
            "in": "query",
            "items": {
              "default": "s0000001",
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_pid",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for a subset of programmes that are of the given payment_type",
            "in": "query",
            "items": {
              "enum": [
                "free",
                "bbcstore",
                "uscansvod"
              ],
              "type": "string"
            },
            "name": "payment_type",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of programmes with contributions by given people PID",
            "in": "query",
            "minLength": 8,
            "name": "people",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes having given PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of programmes which are promoted for given service",
            "in": "query",
            "name": "promoted_for",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of programmes matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes that are signed",
            "in": "query",
            "items": {
              "enum": [
                "exclusive",
                "inclusive",
                "exclude"
              ],
              "type": "string"
            },
            "name": "signed",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of programmes with tag",
            "in": "query",
            "name": "tag_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of programmes with a tag",
            "in": "query",
            "name": "tag_scheme",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes that are TLEOs",
            "in": "query",
            "items": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            },
            "name": "tleo",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of programmes with given PID as one of their versions",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "version",
            "required": false,
            "type": "array"
          },
          {
            "description": "Control return of embargoed items (undocumented)",
            "enum": [
              "include",
              "exclude",
              "only"
            ],
            "in": "query",
            "name": "embargoed",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "Fetch metadata about Programmes (brands, series, episodes, clips). By applying different filter restrictions this feed can be used in many ways, for example to retrieve all series belonging to a brand, all the episodes and/or clips for a specific series, or any TLEO objects for a masterbrand. Other filters permit restricting to specific formats and/or genres, and you can request specific versions (for example Signed or Audio-Described). Parameters may be combined in any way suitable for your application.",
        "operationId": "listProgrammes",
        "summary": "Start here for programmes metadata: Brands, Series, Episodes and Clips"
      }
    },
    "/promotions": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Mixins:\n* related_links: mixin to return information about related links to a promotion\n",
            "in": "query",
            "items": {
              "enum": [
                "related_links"
              ],
              "type": "string"
            },
            "name": "mixin",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of promotions belonging to a given context",
            "in": "query",
            "minLength": 8,
            "name": "context",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for promotions by partner ID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for promotions by partner PID",
            "in": "query",
            "items": {
              "default": "s0000001",
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_pid",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of promotions having given PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "pid",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of promotions having given promoted by",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "promoted_by",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of promotions having given promoted for",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "promoted_for",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of promotions matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of promotions with status",
            "in": "query",
            "items": {
              "enum": [
                "current"
              ],
              "type": "string"
            },
            "name": "status",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "Details of short-term editorially curated \"promotions\", for instance those programmes featured on iPlayer today",
        "operationId": "listPromotions",
        "summary": "Discover metadata for content promotions"
      }
    },
    "/schedules": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Sorts:\n* start_date: sort chronologically by scheduled start time/date, ascending\n",
            "enum": [
              "start_date"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort direction",
            "enum": [
              "ascending",
              "descending"
            ],
            "in": "query",
            "name": "sort_direction",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Mixins:\n* ancestor_titles: return ancestor programme titles\n* images: mixin to add image information for broadcasts and webcasts\n* titles: return ancestor programme titles\n",
            "in": "query",
            "items": {
              "enum": [
                "ancestor_titles",
                "images",
                "titles"
              ],
              "type": "string"
            },
            "name": "mixin",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts that have given authority",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "authority",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts that are descendants of the given programme PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "descendants_of",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of broadcasts and webcasts that end on or later than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "end_from",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of broadcasts and webcasts that end on or earlier than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "end_to",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts that are classified in the given format ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "format",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts that are classified in the given genre ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "genre",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of broadcasts and webcasts that have programmes in the given group",
            "in": "query",
            "minLength": 8,
            "name": "group",
            "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts that have given identifier",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts that have given id type",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "id_type",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts with the given item performed on it",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "item",
            "required": false,
            "type": "array"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for broadcasts and webcasts by partner ID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for broadcasts and webcasts by partner PID",
            "in": "query",
            "items": {
              "default": "s0000001",
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of broadcasts and webcasts that have given contributor",
            "in": "query",
            "name": "people",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts having given PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of broadcasts and webcasts matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter to show either only repeats or non-repeats",
            "in": "query",
            "name": "repeat",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "filter for subset of broadcasts and webcasts that start on the specified day (BBC time)",
            "format": "date",
            "in": "query",
            "name": "schedule_day",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of broadcasts and webcasts that start on or after the specified day (BBC time)",
            "format": "date",
            "in": "query",
            "name": "schedule_day_from",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of broadcasts and webcasts that start on or before the specified day (BBC time)",
            "format": "date",
            "in": "query",
            "name": "schedule_day_to",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts with given service master brand",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "service_master_brand",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts that are on the specified linear service",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "sid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of broadcasts and webcasts that start on or later than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "start_from",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of broadcasts and webcasts that start on or earlier than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "start_to",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of broadcasts and webcasts with given PID as their parent version",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "version",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "Dates, Times, Schedules: when and where are programmes being shown?",
        "operationId": "listSchedules",
        "summary": "Build schedules and find metadata for TV and radio broadcasts and webcasts"
      }
    },
    "/schema": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Metadata response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "schema"
        ],
        "description": "Get Schema definition",
        "operationId": "getXSD",
        "summary": "Get Schema definition"
      }
    },
    "/services": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Return services that end on or later than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "end_from",
            "required": false,
            "type": "string"
          },
          {
            "description": "filter for subset of broadcasts that end on or earlier than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "end_to",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for services by masterbrand MID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "mid",
            "required": false,
            "type": "array"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for services by partner ID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for services by partner PID",
            "in": "query",
            "items": {
              "default": "s0000001",
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "filter for subset of services matching supplied keyword/phrase (boolean operators permitted)",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for specified type of linear services",
            "in": "query",
            "items": {
              "enum": [
                "Interactive",
                "Local Radio",
                "Master Brand Only",
                "National Radio",
                "On Demand",
                "Regional Radio",
                "Simulcast",
                "TV",
                "Web Only",
                "Webcast"
              ],
              "type": "string"
            },
            "name": "service_type",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for specified linear service",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "sid",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return services that start on or later than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "start_from",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return services that start earlier than the specified datetime",
            "format": "date-time",
            "in": "query",
            "name": "start_to",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "The services feed exposes the linear broadcast \"services\" from PIPs. These are the actual services which broadcast programmes (eg bbc_one_oxford is the service for BBC One in Oxford).",
        "operationId": "listServices",
        "summary": "Information about the linear services used for broadcast transmissions"
      }
    },
    "/v1/brands/{pid}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          }
        },
        "tags": [
          "Raw"
        ],
        "description": "Get raw brand",
        "operationId": "Get_Raw_brand",
        "summary": "Get raw brand"
      }
    },
    "/v1/brands/{pid}/franchises/": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          }
        },
        "tags": [
          "Raw"
        ],
        "description": "Get raw brand franchises",
        "operationId": "Get_Raw_brand franchises",
        "summary": "Get raw brand franchise"
      }
    },
    "/v1/episodes/{pid}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          }
        },
        "tags": [
          "Raw"
        ],
        "description": "Get raw episode",
        "operationId": "Get_Raw_episode",
        "summary": "Get raw episode"
      }
    },
    "/v1/episodes/{pid}/ancestors/": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          }
        },
        "tags": [
          "Raw"
        ],
        "description": "Get raw ancestors",
        "operationId": "Get_Raw_ancestors",
        "summary": "Get raw ancestors"
      }
    },
    "/v1/episodes/{pid}/formats/": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          }
        },
        "tags": [
          "Raw"
        ],
        "description": "Get raw formats",
        "operationId": "Get_Raw_formats",
        "summary": "Get raw formats"
      }
    },
    "/v1/episodes/{pid}/genre_groups/": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          }
        },
        "tags": [
          "Raw"
        ],
        "description": "Get raw genre groups",
        "operationId": "Get_Raw_genre_groups",
        "summary": "Get raw genre groups"
      }
    },
    "/v1/images/{pid}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          }
        },
        "tags": [
          "Raw"
        ],
        "description": "Get raw image",
        "operationId": "Get_Raw_image",
        "summary": "Get raw image"
      }
    },
    "/v1/master_brands/{mbid}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mbid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          }
        },
        "tags": [
          "Raw"
        ],
        "description": "Get raw masterbrand",
        "operationId": "Get_Raw_masterbrand",
        "summary": "Get raw masterbrand"
      }
    },
    "/v1/promotions/{pid}": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          }
        },
        "tags": [
          "Raw"
        ],
        "description": "Get raw promotion",
        "operationId": "Get_Raw_promotion",
        "summary": "Get raw promotion"
      }
    },
    "/versions": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "filter for subset of versions that have availability",
            "in": "query",
            "items": {
              "enum": [
                "available"
              ],
              "type": "string"
            },
            "name": "availability",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of versions having given programme PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "descendants_of",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of versions with availability in the given media set",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "media_set",
            "required": false,
            "type": "array"
          },
          {
            "default": 1,
            "description": "which page of results to return",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "number of results in each page",
            "in": "query",
            "maximum": 300,
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for versions by partner ID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_id",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for versions by partner PID",
            "in": "query",
            "items": {
              "default": "s0000001",
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "partner_pid",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for a subset of versions that are of the given payment_type",
            "in": "query",
            "items": {
              "enum": [
                "free",
                "bbcstore",
                "uscansvod"
              ],
              "type": "string"
            },
            "name": "payment_type",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "filter for subset of versions having given PID",
            "in": "query",
            "items": {
              "minLength": 8,
              "pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
              "type": "string"
            },
            "name": "pid",
            "required": false,
            "type": "array"
          },
          {
            "description": "Control return of embargoed items (undocumented)",
            "enum": [
              "include",
              "exclude",
              "only"
            ],
            "in": "query",
            "name": "embargoed",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nitro response",
            "schema": {
              "$ref": "#/definitions/nitro"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        },
        "tags": [
          "feeds"
        ],
        "description": "The versions feed exposes editorial \"Versions\" of programmes. These are concepts used to capture different presentations of an overall programme: for example, versions of a programme may include one with sign language, one with audio description, one edited for content and more. Versions are also important to understand for broadcasts: a linear broadcast or an ondemand is always of a specific version, not merely of a programme.",
        "operationId": "listVersions",
        "summary": "Metadata on editorial programme versions: original, signed, audio-described, etc"
      }
    }
  },
  "definitions": {
    "ErrorModel": {
      "properties": {
        "fault": {
          "properties": {
            "detail": {
              "properties": {
                "errorcode": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "faultString": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "accurate_programme_time": {
      "$ref": "#/definitions/dateRange"
    },
    "accurate_time": {
      "$ref": "#/definitions/broadcastTime"
    },
    "actual_start": {
      "format": "date-time",
      "type": "string"
    },
    "advertising_allowed": {
      "pattern": "[a-z0-9_]+",
      "type": "string"
    },
    "affected_by": {
      "additionalProperties": false,
      "properties": {
        "filter": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "description": {
                "type": "string"
              },
              "filter": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "description"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "description"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "alternate_images_mixin": {
      "additionalProperties": false,
      "properties": {
        "alternate_images": {
          "additionalProperties": false,
          "properties": {
            "alternate_image": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "alternate_images": {
                    "additionalProperties": false,
                    "properties": {
                      "alternate_image": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "type": "string"
                            },
                            "template_url": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "template_url"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "href": {
                    "type": "string"
                  },
                  "template_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "template_url",
                  "alternate_images"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "alternate_images"
      ],
      "type": "object"
    },
    "ancestor_titles": {
      "additionalProperties": false,
      "properties": {
        "brand": {
          "additionalProperties": false,
          "properties": {
            "pid": {
              "$ref": "#/definitions/pid"
            },
            "title": {
              "$ref": "#/definitions/title"
            }
          },
          "required": [
            "pid"
          ],
          "type": "object"
        },
        "episode": {
          "additionalProperties": false,
          "properties": {
            "brand": {
              "additionalProperties": false,
              "properties": {
                "pid": {
                  "$ref": "#/definitions/pid"
                },
                "title": {
                  "$ref": "#/definitions/title"
                }
              },
              "required": [
                "pid"
              ],
              "type": "object"
            },
            "containers_title": {
              "$ref": "#/definitions/containers_title"
            },
            "episode": {
              "additionalProperties": false,
              "properties": {
                "containers_title": {
                  "$ref": "#/definitions/containers_title"
                },
                "pid": {
                  "$ref": "#/definitions/pid"
                },
                "presentation_title": {
                  "$ref": "#/definitions/presentation_title"
                },
                "title": {
                  "$ref": "#/definitions/title"
                }
              },
              "required": [
                "pid"
              ],
              "type": "object"
            },
            "pid": {
              "$ref": "#/definitions/pid"
            },
            "presentation_title": {
              "$ref": "#/definitions/presentation_title"
            },
            "series": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "pid": {
                    "$ref": "#/definitions/pid"
                  },
                  "title": {
                    "$ref": "#/definitions/title"
                  }
                },
                "required": [
                  "pid"
                ],
                "type": "object"
              },
              "maxItems": 5,
              "type": "array"
            },
            "title": {
              "$ref": "#/definitions/title"
            }
          },
          "required": [
            "pid"
          ],
          "type": "object"
        },
        "series": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "pid": {
                "$ref": "#/definitions/pid"
              },
              "title": {
                "$ref": "#/definitions/title"
              }
            },
            "required": [
              "pid"
            ],
            "type": "object"
          },
          "maxItems": 5,
          "type": "array"
        }
      },
      "type": "object"
    },
    "ancestors": {
      "$ref": "#/definitions/reference"
    },
    "ancestors_titles": {
      "additionalProperties": false,
      "properties": {
        "brand": {
          "additionalProperties": false,
          "properties": {
            "pid": {
              "$ref": "#/definitions/pid"
            },
            "title": {
              "$ref": "#/definitions/title"
            }
          },
          "required": [
            "pid"
          ],
          "type": "object"
        },
        "episode": {
          "additionalProperties": false,
          "properties": {
            "brand": {
              "additionalProperties": false,
              "properties": {
                "pid": {
                  "$ref": "#/definitions/pid"
                },
                "title": {
                  "$ref": "#/definitions/title"
                }
              },
              "required": [
                "pid"
              ],
              "type": "object"
            },
            "containers_title": {
              "$ref": "#/definitions/containers_title"
            },
            "episode": {
              "additionalProperties": false,
              "properties": {
                "containers_title": {
                  "$ref": "#/definitions/containers_title"
                },
                "pid": {
                  "$ref": "#/definitions/pid"
                },
                "presentation_title": {
                  "$ref": "#/definitions/presentation_title"
                },
                "title": {
                  "$ref": "#/definitions/title"
                }
              },
              "required": [
                "pid"
              ],
              "type": "object"
            },
            "pid": {
              "$ref": "#/definitions/pid"
            },
            "presentation_title": {
              "$ref": "#/definitions/presentation_title"
            },
            "series": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "pid": {
                    "$ref": "#/definitions/pid"
                  },
                  "title": {
                    "$ref": "#/definitions/title"
                  }
                },
                "required": [
                  "pid"
                ],
                "type": "object"
              },
              "maxItems": 5,
              "type": "array"
            },
            "title": {
              "$ref": "#/definitions/title"
            }
          },
          "required": [
            "pid"
          ],
          "type": "object"
        },
        "series": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "pid": {
                "$ref": "#/definitions/pid"
              },
              "title": {
                "$ref": "#/definitions/title"
              }
            },
            "required": [
              "pid"
            ],
            "type": "object"
          },
          "maxItems": 5,
          "type": "array"
        }
      },
      "type": "object"
    },
    "availability": {
      "additionalProperties": false,
      "properties": {
        "accurate_programme_time": {
          "$ref": "#/definitions/accurate_programme_time"
        },
        "actual_start": {
          "$ref": "#/definitions/actual_start"
        },
        "availability-debug": {
          "$ref": "#/definitions/availability-debug"
        },
        "availability_of": {
          "items": {
            "$ref": "#/definitions/availability_of"
          },
          "type": "array"
        },
        "availability_type": {
          "$ref": "#/definitions/availability_type"
        },
        "media_availability_time": {
          "$ref": "#/definitions/media_availability_time"
        },
        "media_set": {
          "items": {
            "$ref": "#/definitions/media_set"
          },
          "type": "array"
        },
        "revocation_status": {
          "$ref": "#/definitions/revocation_status"
        },
        "scheduled_time": {
          "$ref": "#/definitions/scheduled_time"
        },
        "status": {
          "$ref": "#/definitions/status"
        }
      },
      "required": [
        "status",
        "availability_type"
      ],
      "type": "object"
    },
    "availability-debug": {
      "additionalProperties": false,
      "properties": {
        "availability_of": {
          "$ref": "#/definitions/pidReference"
        },
        "media_profile_groups": {
          "$ref": "#/definitions/media_profile_groups"
        },
        "service": {
          "$ref": "#/definitions/serviceReference"
        },
        "territory": {
          "type": "string"
        }
      },
      "required": [
        "availability_of"
      ],
      "type": "object"
    },
    "availability_mixin": {
      "additionalProperties": false,
      "properties": {
        "availability": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "status": {
                "$ref": "#/definitions/status"
              },
              "version_types": {
                "additionalProperties": false,
                "properties": {
                  "version_type": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "end": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "start": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "version_type": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "availability": {
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "status": {
                                      "$ref": "#/definitions/status"
                                    },
                                    "version_types": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "version_type": {
                                          "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "end": {
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "string"
                                              },
                                              "start": {
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "version_type": {
                                                "items": {
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "end": {
                                                      "format": "date-time",
                                                      "type": "string"
                                                    },
                                                    "id": {
                                                      "type": "string"
                                                    },
                                                    "start": {
                                                      "format": "date-time",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "minItems": 1,
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "version_type"
                                            ],
                                            "type": "object"
                                          },
                                          "minItems": 1,
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "version_type"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "status",
                                    "version_types"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "end": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "start": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "required": [
                        "version_type"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  }
                },
                "required": [
                  "version_type"
                ],
                "type": "object"
              }
            },
            "required": [
              "status",
              "version_types"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "availability_of": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "result_type": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "result_type",
        "pid",
        "href"
      ],
      "type": "object"
    },
    "availability_type": {
      "enum": [
        "ondemand",
        "simulcast",
        "webcast"
      ]
    },
    "available_media_sets": {
      "additionalProperties": false,
      "properties": {
        "media_sets": {
          "additionalProperties": false,
          "properties": {
            "media_set": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "#text": {
                    "type": "string"
                  },
                  "media_sets": {
                    "additionalProperties": false,
                    "properties": {
                      "media_set": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "#text": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      }
                    },
                    "required": [
                      "media_set"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "minItems": 1,
              "type": "array"
            }
          },
          "required": [
            "media_set"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "available_mixins": {
      "additionalProperties": false,
      "properties": {
        "availabilities": {
          "additionalProperties": false,
          "properties": {
            "availabilities": {
              "additionalProperties": false,
              "properties": {
                "availability": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "accurate_end": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "accurate_start": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "available_versions_media_sets": {
                        "$ref": "#/definitions/available_versions_media_sets"
                      },
                      "media_availability_end": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "media_availability_start": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "payment_type": {
                        "type": "string"
                      },
                      "scheduled_end": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "scheduled_start": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "available_versions_media_sets"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "availability"
              ],
              "type": "object"
            },
            "availability": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "accurate_end": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "accurate_start": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "available_versions_media_sets": {
                    "$ref": "#/definitions/available_versions_media_sets"
                  },
                  "media_availability_end": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "media_availability_start": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "payment_type": {
                    "type": "string"
                  },
                  "scheduled_end": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "scheduled_start": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "available_versions_media_sets"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array"
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "availability",
            "availabilities"
          ],
          "type": "object"
        }
      },
      "required": [
        "availabilities"
      ],
      "type": "object"
    },
    "available_simulcasts": {
      "additionalProperties": false,
      "properties": {
        "available": {
          "type": "integer"
        },
        "available_versions_element": {
          "$ref": "#/definitions/available_versions_element"
        }
      },
      "required": [
        "available_versions_element",
        "available"
      ],
      "type": "object"
    },
    "available_versions": {
      "additionalProperties": false,
      "properties": {
        "available": {
          "type": "integer"
        },
        "available_versions_element": {
          "$ref": "#/definitions/available_versions_element"
        }
      },
      "required": [
        "available_versions_element",
        "available"
      ],
      "type": "object"
    },
    "available_versions_element": {
      "additionalProperties": false,
      "properties": {
        "version": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "available_mixins": {
                "$ref": "#/definitions/available_mixins"
              },
              "competition_warning": {
                "type": "boolean"
              },
              "duration": {
                "pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
                "type": "string"
              },
              "guidance_warnings": {
                "$ref": "#/definitions/guidance_warnings"
              },
              "pid": {
                "$ref": "#/definitions/pid"
              },
              "types": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array"
              },
              "version": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "available_mixins": {
                      "$ref": "#/definitions/available_mixins"
                    },
                    "competition_warning": {
                      "type": "boolean"
                    },
                    "duration": {
                      "pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
                      "type": "string"
                    },
                    "guidance_warnings": {
                      "$ref": "#/definitions/guidance_warnings"
                    },
                    "pid": {
                      "$ref": "#/definitions/pid"
                    },
                    "types": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "types"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "types"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "available_versions_media_sets": {
      "additionalProperties": false,
      "properties": {
        "media_sets": {
          "additionalProperties": false,
          "properties": {
            "media_set": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "actual_start": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "territories": {
                    "additionalProperties": false,
                    "properties": {
                      "media_sets": {
                        "additionalProperties": false,
                        "properties": {
                          "media_set": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "actual_start": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "territories": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "territory": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          }
                        },
                        "required": [
                          "media_set"
                        ],
                        "type": "object"
                      },
                      "territory": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array"
            }
          },
          "required": [
            "media_set"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "available_webcasts": {
      "additionalProperties": false,
      "properties": {
        "available": {
          "type": "integer"
        },
        "available_versions_element": {
          "$ref": "#/definitions/available_versions_element"
        }
      },
      "required": [
        "available_versions_element",
        "available"
      ],
      "type": "object"
    },
    "brand": {
      "additionalProperties": false,
      "properties": {
        "alternate_images_mixin": {
          "$ref": "#/definitions/alternate_images_mixin"
        },
        "availability_mixin": {
          "$ref": "#/definitions/availability_mixin"
        },
        "contributions_mixin": {
          "$ref": "#/definitions/contributions_mixin"
        },
        "embargoed": {
          "$ref": "#/definitions/embargoed"
        },
        "expected_child_count": {
          "$ref": "#/definitions/expected_child_count"
        },
        "franchises": {
          "$ref": "#/definitions/franchises"
        },
        "genre_groupings": {
          "$ref": "#/definitions/genre_groupings"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "image_link": {
          "$ref": "#/definitions/image_link"
        },
        "images_mixin": {
          "$ref": "#/definitions/images_mixin"
        },
        "is_embeddable": {
          "$ref": "#/definitions/is_embeddable"
        },
        "items_for": {
          "$ref": "#/definitions/items_for"
        },
        "master_brand_link": {
          "$ref": "#/definitions/master_brand_link"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "previous_next_mixin": {
          "$ref": "#/definitions/previous_next_mixin"
        },
        "programme_formats": {
          "$ref": "#/definitions/programme_formats"
        },
        "programme_type": {
          "$ref": "#/definitions/programme_type"
        },
        "related_links": {
          "$ref": "#/definitions/related_links"
        },
        "release_date_group": {
          "$ref": "#/definitions/release_date_group"
        },
        "synopses": {
          "$ref": "#/definitions/synopses"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "updated_time": {
          "$ref": "#/definitions/updated_time"
        },
        "uri": {
          "$ref": "#/definitions/uri"
        }
      },
      "required": [
        "pid",
        "partner",
        "updated_time",
        "embargoed"
      ],
      "type": "object"
    },
    "broadcast": {
      "additionalProperties": false,
      "properties": {
        "ancestor_titles": {
          "$ref": "#/definitions/ancestor_titles"
        },
        "ancestors_titles": {
          "$ref": "#/definitions/ancestors_titles"
        },
        "broadcast_of": {
          "items": {
            "$ref": "#/definitions/broadcast_of"
          },
          "type": "array"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "ids": {
          "$ref": "#/definitions/ids"
        },
        "image_link": {
          "$ref": "#/definitions/image_link"
        },
        "images_mixin": {
          "$ref": "#/definitions/images_mixin"
        },
        "is_audio_described": {
          "$ref": "#/definitions/is_audio_described"
        },
        "is_blanked": {
          "$ref": "#/definitions/is_blanked"
        },
        "is_critical": {
          "$ref": "#/definitions/is_critical"
        },
        "is_repeat": {
          "$ref": "#/definitions/is_repeat"
        },
        "is_simulcast": {
          "$ref": "#/definitions/is_simulcast"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "published_time": {
          "$ref": "#/definitions/published_time"
        },
        "service": {
          "$ref": "#/definitions/serviceReference"
        },
        "tx_time": {
          "$ref": "#/definitions/tx_time"
        },
        "updated_time": {
          "$ref": "#/definitions/updated_time"
        }
      },
      "required": [
        "pid",
        "partner"
      ],
      "type": "object"
    },
    "broadcastTime": {
      "allOf": [
        {
          "$ref": "#/definitions/dateRange"
        },
        {
          "additionalProperties": true,
          "properties": {
            "duration": {
              "pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
              "type": "string"
            }
          },
          "type": "object"
        }
      ]
    },
    "broadcast_of": {
      "$ref": "#/definitions/pidReference"
    },
    "broadcaster": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        },
        "result_type": {
          "type": "string"
        },
        "sid": {
          "$ref": "#/definitions/sid"
        }
      },
      "required": [
        "href",
        "sid",
        "result_type"
      ],
      "type": "object"
    },
    "caption": {
      "type": "string"
    },
    "catalogue_number": {
      "maxLength": 32,
      "minLength": 1,
      "type": "string"
    },
    "chapter": {
      "$ref": "#/definitions/item"
    },
    "clip": {
      "additionalProperties": false,
      "properties": {
        "advertising_allowed": {
          "$ref": "#/definitions/advertising_allowed"
        },
        "alternate_images_mixin": {
          "$ref": "#/definitions/alternate_images_mixin"
        },
        "ancestor_titles": {
          "$ref": "#/definitions/ancestor_titles"
        },
        "ancestors": {
          "$ref": "#/definitions/ancestors"
        },
        "ancestors_titles": {
          "$ref": "#/definitions/ancestors_titles"
        },
        "availability_mixin": {
          "$ref": "#/definitions/availability_mixin"
        },
        "caption": {
          "$ref": "#/definitions/caption"
        },
        "clip_of": {
          "$ref": "#/definitions/clip_of"
        },
        "contributions_mixin": {
          "$ref": "#/definitions/contributions_mixin"
        },
        "embargoed": {
          "$ref": "#/definitions/embargoed"
        },
        "genre_groupings": {
          "$ref": "#/definitions/genre_groupings"
        },
        "genre_groups": {
          "$ref": "#/definitions/genre_groups"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "image_link": {
          "$ref": "#/definitions/image_link"
        },
        "images_mixin": {
          "$ref": "#/definitions/images_mixin"
        },
        "is_embeddable": {
          "$ref": "#/definitions/is_embeddable"
        },
        "items_for": {
          "$ref": "#/definitions/items_for"
        },
        "master_brand_link": {
          "$ref": "#/definitions/master_brand_link"
        },
        "media_type": {
          "$ref": "#/definitions/media_type"
        },
        "original_version_duration": {
          "$ref": "#/definitions/original_version_duration"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "previous_next_mixin": {
          "$ref": "#/definitions/previous_next_mixin"
        },
        "programme_formats": {
          "$ref": "#/definitions/programme_formats"
        },
        "related_links": {
          "$ref": "#/definitions/related_links"
        },
        "release_date_group": {
          "$ref": "#/definitions/release_date_group"
        },
        "synopses": {
          "$ref": "#/definitions/synopses"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "updated_time": {
          "$ref": "#/definitions/updated_time"
        },
        "uri": {
          "$ref": "#/definitions/uri"
        },
        "versions_mixin": {
          "$ref": "#/definitions/versions_mixin"
        }
      },
      "required": [
        "pid",
        "partner",
        "updated_time",
        "embargoed",
        "advertising_allowed"
      ],
      "type": "object"
    },
    "clip_of": {
      "$ref": "#/definitions/pidReference"
    },
    "code": {
      "type": "string"
    },
    "collection": {
      "$ref": "#/definitions/group-body"
    },
    "competition_warning": {
      "type": "boolean"
    },
    "containers_title": {
      "type": "string"
    },
    "context": {
      "additionalProperties": false,
      "properties": {
        "cascades_to_descendants": {
          "type": "boolean"
        },
        "href": {
          "type": "string"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "result_type": {
          "type": "string"
        }
      },
      "required": [
        "pid",
        "result_type"
      ],
      "type": "object"
    },
    "contributions_mixin": {
      "additionalProperties": false,
      "properties": {
        "contributions": {
          "additionalProperties": false,
          "properties": {
            "contributions": {
              "additionalProperties": false,
              "properties": {
                "contributions_mixin_contribution": {
                  "items": {
                    "$ref": "#/definitions/contributions_mixin_contribution"
                  },
                  "type": "array"
                },
                "href": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "contributions_mixin_contribution": {
              "items": {
                "$ref": "#/definitions/contributions_mixin_contribution"
              },
              "type": "array"
            },
            "href": {
              "type": "string"
            }
          },
          "required": [
            "contributions"
          ],
          "type": "object"
        }
      },
      "required": [
        "contributions"
      ],
      "type": "object"
    },
    "contributions_mixin_contribution": {
      "additionalProperties": false,
      "properties": {
        "contribution": {
          "additionalProperties": false,
          "properties": {
            "character_name": {
              "type": "string"
            },
            "contribution": {
              "additionalProperties": false,
              "properties": {
                "character_name": {
                  "type": "string"
                },
                "contributions_mixin_contributor": {
                  "$ref": "#/definitions/contributions_mixin_contributor"
                },
                "credit_role": {
                  "additionalProperties": false,
                  "properties": {
                    "#text": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "contributions_mixin_contributor": {
              "$ref": "#/definitions/contributions_mixin_contributor"
            },
            "credit_role": {
              "additionalProperties": false,
              "properties": {
                "#text": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "contribution"
          ],
          "type": "object"
        }
      },
      "required": [
        "contribution"
      ],
      "type": "object"
    },
    "contributions_mixin_contributor": {
      "additionalProperties": false,
      "properties": {
        "contributor": {
          "additionalProperties": false,
          "properties": {
            "contributions_mixin_contributor_name": {
              "$ref": "#/definitions/contributions_mixin_contributor_name"
            },
            "contributor": {
              "additionalProperties": false,
              "properties": {
                "contributions_mixin_contributor_name": {
                  "$ref": "#/definitions/contributions_mixin_contributor_name"
                },
                "href": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/type"
                }
              },
              "type": "object"
            },
            "href": {
              "type": "string"
            },
            "type": {
              "$ref": "#/definitions/type"
            }
          },
          "required": [
            "contributor"
          ],
          "type": "object"
        }
      },
      "required": [
        "contributor"
      ],
      "type": "object"
    },
    "contributions_mixin_contributor_name": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "additionalProperties": false,
          "properties": {
            "family": {
              "type": "string"
            },
            "given": {
              "type": "string"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "family": {
                  "type": "string"
                },
                "given": {
                  "type": "string"
                },
                "presentation": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "presentation": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "contributor": {
      "additionalProperties": false,
      "properties": {
        "contributor_name": {
          "$ref": "#/definitions/contributor_name"
        },
        "contributor_to": {
          "items": {
            "$ref": "#/definitions/contributor_to"
          },
          "type": "array"
        },
        "disambiguation": {
          "$ref": "#/definitions/disambiguation"
        },
        "href": {
          "type": "string"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "ids": {
          "$ref": "#/definitions/ids"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "type": {
          "$ref": "#/definitions/type"
        }
      },
      "required": [
        "pid",
        "partner"
      ],
      "type": "object"
    },
    "contributor_name": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "additionalProperties": false,
          "properties": {
            "family": {
              "type": "string"
            },
            "given": {
              "type": "string"
            },
            "lang": {
              "type": "string"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "family": {
                  "type": "string"
                },
                "given": {
                  "type": "string"
                },
                "lang": {
                  "type": "string"
                },
                "presentation": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "presentation": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "contributor_to": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        },
        "result_type": {
          "type": "string"
        }
      },
      "required": [
        "result_type",
        "href"
      ],
      "type": "object"
    },
    "credits_time": {
      "additionalProperties": false,
      "properties": {
        "squeeze_end": {
          "format": "date-time",
          "type": "string"
        },
        "squeeze_start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "data": {
      "additionalProperties": false,
      "properties": {
        "datum": {
          "$ref": "#/definitions/datum"
        }
      },
      "type": "object"
    },
    "dateRange": {
      "additionalProperties": false,
      "properties": {
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "date_range": {
      "$ref": "#/definitions/dateRange"
    },
    "datum": {
      "type": "string"
    },
    "dependency_on": {
      "additionalProperties": false,
      "properties": {
        "filter": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "deprecated": {
      "additionalProperties": false,
      "properties": {
        "deprecated_since": {
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "replaced_by": {
          "type": "string"
        },
        "replacement_type": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "deprecated_since"
      ],
      "type": "object"
    },
    "deprecatedReferenceElement": {
      "allOf": [
        {
          "$ref": "#/definitions/referenceAttributes"
        },
        {
          "$ref": "#/definitions/deprecationAttributes"
        }
      ]
    },
    "deprecationAttributes": {
      "additionalProperties": false,
      "properties": {
        "deprecated": {
          "type": "boolean"
        },
        "deprecated_since": {
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
          "type": "string"
        },
        "replaced_by": {
          "type": "string"
        }
      },
      "required": [
        "deprecated",
        "deprecated_since",
        "replaced_by"
      ],
      "type": "object"
    },
    "deprecations": {
      "additionalProperties": false,
      "properties": {
        "deprecated": {
          "items": {
            "$ref": "#/definitions/deprecated"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "description": {
      "type": "string"
    },
    "dimensions": {
      "additionalProperties": false,
      "properties": {
        "height": {
          "type": "integer"
        },
        "width": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "disambiguation": {
      "type": "string"
    },
    "embargoed": {
      "enum": [
        "true",
        "false"
      ]
    },
    "end": {
      "format": "date-time",
      "type": "string"
    },
    "end_time": {
      "format": "date-time",
      "type": "string"
    },
    "episode": {
      "additionalProperties": false,
      "properties": {
        "advertising_allowed": {
          "$ref": "#/definitions/advertising_allowed"
        },
        "alternate_images_mixin": {
          "$ref": "#/definitions/alternate_images_mixin"
        },
        "ancestor_titles": {
          "$ref": "#/definitions/ancestor_titles"
        },
        "ancestors": {
          "$ref": "#/definitions/ancestors"
        },
        "ancestors_titles": {
          "$ref": "#/definitions/ancestors_titles"
        },
        "availability_mixin": {
          "$ref": "#/definitions/availability_mixin"
        },
        "contributions_mixin": {
          "$ref": "#/definitions/contributions_mixin"
        },
        "embargoed": {
          "$ref": "#/definitions/embargoed"
        },
        "episode_of": {
          "$ref": "#/definitions/episode_of"
        },
        "genre_groupings": {
          "$ref": "#/definitions/genre_groupings"
        },
        "genre_groups": {
          "$ref": "#/definitions/genre_groups"
        },
        "has_guidance": {
          "$ref": "#/definitions/has_guidance"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "image_link": {
          "$ref": "#/definitions/image_link"
        },
        "images_mixin": {
          "$ref": "#/definitions/images_mixin"
        },
        "is_embeddable": {
          "$ref": "#/definitions/is_embeddable"
        },
        "is_stacked": {
          "$ref": "#/definitions/is_stacked"
        },
        "items_for": {
          "$ref": "#/definitions/items_for"
        },
        "master_brand_link": {
          "$ref": "#/definitions/master_brand_link"
        },
        "media_type": {
          "$ref": "#/definitions/media_type"
        },
        "original_version_duration": {
          "$ref": "#/definitions/original_version_duration"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "presentation_title": {
          "$ref": "#/definitions/presentation_title"
        },
        "previous_next_mixin": {
          "$ref": "#/definitions/previous_next_mixin"
        },
        "programme_formats": {
          "$ref": "#/definitions/programme_formats"
        },
        "programme_type": {
          "$ref": "#/definitions/programme_type"
        },
        "related_links": {
          "$ref": "#/definitions/related_links"
        },
        "release_date_group": {
          "$ref": "#/definitions/release_date_group"
        },
        "synopses": {
          "$ref": "#/definitions/synopses"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "updated_time": {
          "$ref": "#/definitions/updated_time"
        },
        "uri": {
          "$ref": "#/definitions/uri"
        },
        "versions_mixin": {
          "$ref": "#/definitions/versions_mixin"
        }
      },
      "required": [
        "pid",
        "partner",
        "updated_time",
        "embargoed",
        "advertising_allowed"
      ],
      "type": "object"
    },
    "episode_of": {
      "$ref": "#/definitions/pidReference"
    },
    "error": {
      "additionalProperties": false,
      "properties": {
        "code": {
          "$ref": "#/definitions/code"
        },
        "data": {
          "$ref": "#/definitions/data"
        },
        "error-name": {
          "$ref": "#/definitions/error-name"
        },
        "expr": {
          "$ref": "#/definitions/expr"
        },
        "format-string": {
          "$ref": "#/definitions/format-string"
        },
        "message": {
          "$ref": "#/definitions/message"
        },
        "retryable": {
          "$ref": "#/definitions/retryable"
        },
        "xquery-version": {
          "$ref": "#/definitions/xquery-version"
        }
      },
      "required": [
        "code",
        "error-name",
        "xquery-version",
        "message",
        "format-string",
        "retryable",
        "expr",
        "data"
      ],
      "type": "object"
    },
    "error-name": {
      "type": "string"
    },
    "errors": {
      "additionalProperties": false,
      "properties": {
        "error": {
          "$ref": "#/definitions/error"
        }
      },
      "type": "object"
    },
    "expected_child_count": {
      "type": "integer"
    },
    "expr": {
      "type": "string"
    },
    "feed": {
      "additionalProperties": false,
      "properties": {
        "deprecations": {
          "$ref": "#/definitions/deprecations"
        },
        "filters": {
          "$ref": "#/definitions/filters"
        },
        "href": {
          "type": "string"
        },
        "mixins": {
          "$ref": "#/definitions/mixins"
        },
        "name": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "release_status": {
          "$ref": "#/definitions/release_status_type"
        },
        "sorts": {
          "$ref": "#/definitions/sorts"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "href",
        "name",
        "rel",
        "title"
      ],
      "type": "object"
    },
    "feeds": {
      "additionalProperties": false,
      "properties": {
        "deployment_root": {
          "type": "string"
        },
        "deprecations": {
          "$ref": "#/definitions/deprecations"
        },
        "feed": {
          "items": {
            "$ref": "#/definitions/feed"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "filter": {
      "additionalProperties": false,
      "properties": {
        "default": {
          "type": "string"
        },
        "depends_on": {
          "type": "string"
        },
        "deprecated": {
          "type": "boolean"
        },
        "deprecated_since": {
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
          "type": "string"
        },
        "guaranteed_until": {
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
          "type": "string"
        },
        "max_value": {
          "type": "integer"
        },
        "min_value": {
          "type": "integer"
        },
        "multiple_values": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "option": {
          "items": {
            "$ref": "#/definitions/option"
          },
          "type": "array"
        },
        "prefer": {
          "type": "string"
        },
        "prohibits": {
          "items": {
            "$ref": "#/definitions/prohibits"
          },
          "type": "array"
        },
        "release_status": {
          "$ref": "#/definitions/release_status_type"
        },
        "replaced_by": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "title",
        "type"
      ],
      "type": "object"
    },
    "filters": {
      "additionalProperties": false,
      "properties": {
        "filter": {
          "items": {
            "$ref": "#/definitions/filter"
          },
          "type": "array"
        },
        "unstable_filters": {
          "$ref": "#/definitions/unstable_filters"
        }
      },
      "type": "object"
    },
    "focus_point": {
      "additionalProperties": false,
      "properties": {
        "x": {
          "type": "integer"
        },
        "y": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "for_programme": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "for_programmes": {
      "additionalProperties": false,
      "properties": {
        "for_programme": {
          "items": {
            "$ref": "#/definitions/for_programme"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "format": {
      "additionalProperties": false,
      "properties": {
        "#text": {
          "type": "string"
        },
        "format_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "format-string": {
      "type": "string"
    },
    "franchise": {
      "$ref": "#/definitions/group-body"
    },
    "franchises": {
      "$ref": "#/definitions/reference"
    },
    "gallery": {
      "$ref": "#/definitions/group-body"
    },
    "genre": {
      "additionalProperties": false,
      "properties": {
        "#text": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "genreGroupingsType": {
      "additionalProperties": false,
      "properties": {
        "genre_group": {
          "items": {
            "$ref": "#/definitions/genre_group"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "genreGroupsType": {
      "allOf": [
        {
          "$ref": "#/definitions/deprecatedReferenceElement"
        },
        {
          "additionalProperties": true,
          "properties": {
            "genre_group": {
              "items": {
                "$ref": "#/definitions/genre_group"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ]
    },
    "genre_group": {
      "additionalProperties": false,
      "properties": {
        "genres": {
          "additionalProperties": false,
          "properties": {
            "genre": {
              "items": {
                "$ref": "#/definitions/genre"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "genres"
      ],
      "type": "object"
    },
    "genre_groupings": {
      "$ref": "#/definitions/genreGroupingsType"
    },
    "genre_groups": {
      "$ref": "#/definitions/genreGroupsType"
    },
    "group-body": {
      "additionalProperties": false,
      "properties": {
        "alternate_images_mixin": {
          "$ref": "#/definitions/alternate_images_mixin"
        },
        "embargoed": {
          "$ref": "#/definitions/embargoed"
        },
        "for_programmes": {
          "$ref": "#/definitions/for_programmes"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "ids": {
          "$ref": "#/definitions/ids"
        },
        "images_mixin": {
          "$ref": "#/definitions/images_mixin"
        },
        "master_brand_link": {
          "$ref": "#/definitions/master_brand_link"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "related_links": {
          "$ref": "#/definitions/related_links"
        },
        "scheduled": {
          "$ref": "#/definitions/scheduled"
        },
        "synopses": {
          "$ref": "#/definitions/synopses"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "updated_time": {
          "$ref": "#/definitions/updated_time"
        },
        "url_key": {
          "$ref": "#/definitions/url_key"
        }
      },
      "required": [
        "pid",
        "embargoed",
        "partner",
        "updated_time"
      ],
      "type": "object"
    },
    "guidance_warnings": {
      "additionalProperties": false,
      "properties": {
        "warnings": {
          "additionalProperties": false,
          "properties": {
            "warning_items": {
              "$ref": "#/definitions/warning_items"
            },
            "warning_texts": {
              "$ref": "#/definitions/warning_texts"
            },
            "warnings": {
              "additionalProperties": false,
              "properties": {
                "warning_items": {
                  "$ref": "#/definitions/warning_items"
                },
                "warning_texts": {
                  "$ref": "#/definitions/warning_texts"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "has_guidance": {
      "type": "boolean"
    },
    "highlight": {
      "$ref": "#/definitions/item"
    },
    "id": {
      "additionalProperties": false,
      "properties": {
        "#text": {
          "type": "string"
        },
        "authority": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "identifier": {
      "additionalProperties": false,
      "properties": {
        "#text": {
          "type": "string"
        },
        "authority": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "identifiers": {
      "additionalProperties": false,
      "properties": {
        "identifier": {
          "items": {
            "$ref": "#/definitions/identifier"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "identifier"
      ],
      "type": "object"
    },
    "ids": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "items": {
            "$ref": "#/definitions/id"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "image": {
      "additionalProperties": false,
      "properties": {
        "author": {
          "type": "string"
        },
        "embargoed": {
          "$ref": "#/definitions/embargoed"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "shoot_date": {
          "format": "date-time",
          "type": "string"
        },
        "source_asset": {
          "$ref": "#/definitions/source_asset"
        },
        "synopses": {
          "$ref": "#/definitions/synopses"
        },
        "template_url": {
          "type": "string"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "pid",
        "embargoed",
        "partner"
      ],
      "type": "object"
    },
    "image_link": {
      "additionalProperties": false,
      "properties": {
        "image": {
          "additionalProperties": false,
          "type": "object"
        }
      },
      "required": [
        "image"
      ],
      "type": "object"
    },
    "images_mixin": {
      "additionalProperties": false,
      "properties": {
        "images": {
          "additionalProperties": false,
          "properties": {
            "image": {
              "additionalProperties": false,
              "properties": {
                "href": {
                  "type": "string"
                },
                "images": {
                  "additionalProperties": false,
                  "properties": {
                    "image": {
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "type": "string"
                        },
                        "inherited_from": {
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "type": "string"
                            },
                            "result_type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "template_url": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "template_url"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "inherited_from": {
                  "additionalProperties": false,
                  "properties": {
                    "href": {
                      "type": "string"
                    },
                    "result_type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "template_url": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "template_url",
                "images"
              ],
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "images"
      ],
      "type": "object"
    },
    "is_audio_described": {
      "type": "boolean"
    },
    "is_blanked": {
      "type": "boolean"
    },
    "is_concrete": {
      "type": "boolean"
    },
    "is_critical": {
      "type": "boolean"
    },
    "is_downloadable": {
      "type": "boolean"
    },
    "is_embeddable": {
      "type": "boolean"
    },
    "is_external": {
      "type": "boolean"
    },
    "is_repeat": {
      "type": "boolean"
    },
    "is_signed": {
      "type": "boolean"
    },
    "is_simulcast": {
      "type": "boolean"
    },
    "is_stacked": {
      "type": "boolean"
    },
    "is_streamable": {
      "type": "boolean"
    },
    "item": {
      "additionalProperties": false,
      "properties": {
        "catalogue_number": {
          "$ref": "#/definitions/catalogue_number"
        },
        "contributions_mixin": {
          "$ref": "#/definitions/contributions_mixin"
        },
        "duration": {
          "format": "float",
          "type": "number"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "ids": {
          "$ref": "#/definitions/ids"
        },
        "images_mixin": {
          "$ref": "#/definitions/images_mixin"
        },
        "item_of": {
          "$ref": "#/definitions/item_of"
        },
        "music_code": {
          "$ref": "#/definitions/music_code"
        },
        "offsets": {
          "$ref": "#/definitions/offsets"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "play_events": {
          "$ref": "#/definitions/play_events"
        },
        "publisher": {
          "$ref": "#/definitions/publisher"
        },
        "record_label": {
          "$ref": "#/definitions/record_label"
        },
        "recording_date": {
          "$ref": "#/definitions/recording_date"
        },
        "release_title": {
          "$ref": "#/definitions/release_title"
        },
        "snippet_url": {
          "$ref": "#/definitions/snippet_url"
        },
        "source_media": {
          "$ref": "#/definitions/source_media"
        },
        "synopses": {
          "$ref": "#/definitions/synopses"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "track_number": {
          "$ref": "#/definitions/track_number"
        },
        "track_side": {
          "$ref": "#/definitions/track_side"
        },
        "type": {
          "type": "string"
        },
        "updated_time": {
          "$ref": "#/definitions/updated_time"
        }
      },
      "required": [
        "pid",
        "partner"
      ],
      "type": "object"
    },
    "item_of": {
      "$ref": "#/definitions/reference"
    },
    "items_for": {
      "$ref": "#/definitions/reference"
    },
    "long": {
      "type": "string"
    },
    "master_brand": {
      "additionalProperties": false,
      "properties": {
        "colour": {
          "type": "string"
        },
        "competition_warning": {
          "additionalProperties": false,
          "properties": {
            "href": {
              "type": "string"
            },
            "pid": {
              "$ref": "#/definitions/pid"
            }
          },
          "required": [
            "href",
            "pid"
          ],
          "type": "object"
        },
        "ident": {
          "type": "string"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "image_link": {
          "$ref": "#/definitions/image_link"
        },
        "images_mixin": {
          "$ref": "#/definitions/images_mixin"
        },
        "master_brand_date_range": {
          "additionalProperties": false,
          "properties": {
            "end": {
              "format": "date-time",
              "type": "string"
            },
            "start": {
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        },
        "mid": {
          "$ref": "#/definitions/mid"
        },
        "name": {
          "$ref": "#/definitions/name"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "position": {
          "$ref": "#/definitions/position"
        },
        "synopses": {
          "additionalProperties": false,
          "properties": {
            "long": {
              "$ref": "#/definitions/long"
            },
            "medium": {
              "$ref": "#/definitions/medium"
            },
            "short": {
              "$ref": "#/definitions/short"
            }
          },
          "type": "object"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "url_key": {
          "type": "string"
        }
      },
      "required": [
        "mid",
        "partner"
      ],
      "type": "object"
    },
    "master_brand_link": {
      "additionalProperties": false,
      "properties": {
        "master_brand": {
          "additionalProperties": false,
          "properties": {
            "href": {
              "type": "string"
            },
            "master_brand": {
              "additionalProperties": false,
              "properties": {
                "href": {
                  "type": "string"
                },
                "mid": {
                  "$ref": "#/definitions/mid"
                },
                "result_type": {
                  "type": "string"
                }
              },
              "required": [
                "href",
                "mid",
                "result_type"
              ],
              "type": "object"
            },
            "mid": {
              "$ref": "#/definitions/mid"
            },
            "result_type": {
              "type": "string"
            }
          },
          "required": [
            "href",
            "mid",
            "result_type",
            "master_brand"
          ],
          "type": "object"
        }
      },
      "required": [
        "master_brand"
      ],
      "type": "object"
    },
    "media_availability_time": {
      "$ref": "#/definitions/dateRange"
    },
    "media_profile_group": {
      "additionalProperties": false,
      "properties": {
        "#text": {
          "type": "string"
        },
        "context": {
          "type": "string"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "platform": {
          "type": "string"
        },
        "territory": {
          "type": "string"
        },
        "transport": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "media_profile_groups": {
      "additionalProperties": false,
      "properties": {
        "media_profile_group": {
          "items": {
            "$ref": "#/definitions/media_profile_group"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "media_set": {
      "type": "string"
    },
    "media_type": {
      "enum": [
        "Video",
        "Audio"
      ]
    },
    "medium": {
      "type": "string"
    },
    "message": {
      "type": "string"
    },
    "mid": {
      "type": "string"
    },
    "mixin": {
      "additionalProperties": false,
      "properties": {
        "affected_by": {
          "items": {
            "$ref": "#/definitions/affected_by"
          },
          "type": "array"
        },
        "dependency_on": {
          "items": {
            "$ref": "#/definitions/dependency_on"
          },
          "type": "array"
        },
        "depends_on": {
          "type": "string"
        },
        "deprecated": {
          "type": "boolean"
        },
        "deprecated_since": {
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
          "type": "string"
        },
        "guaranteed_until": {
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prohibits": {
          "items": {
            "$ref": "#/definitions/prohibits"
          },
          "type": "array"
        },
        "release_status": {
          "$ref": "#/definitions/release_status_type"
        },
        "replaced_by": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "title"
      ],
      "type": "object"
    },
    "mixins": {
      "additionalProperties": false,
      "properties": {
        "mixin": {
          "items": {
            "$ref": "#/definitions/mixin"
          },
          "type": "array"
        },
        "unstable_mixins": {
          "$ref": "#/definitions/unstable_mixins"
        }
      },
      "type": "object"
    },
    "music": {
      "$ref": "#/definitions/item"
    },
    "music_code": {
      "maxLength": 8,
      "minLength": 1,
      "type": "string"
    },
    "name": {
      "type": "string"
    },
    "next": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        }
      },
      "required": [
        "href"
      ],
      "type": "object"
    },
    "nitro": {
      "additionalProperties": true,
      "properties": {
        "deprecations": {
          "$ref": "#/definitions/deprecations"
        },
        "filters": {
          "$ref": "#/definitions/filters"
        },
        "mixins": {
          "$ref": "#/definitions/mixins"
        },
        "pagination": {
          "$ref": "#/definitions/pagination"
        },
        "results": {
          "$ref": "#/definitions/results"
        },
        "sorts": {
          "$ref": "#/definitions/sorts"
        }
      }
    },
    "offset_in": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        },
        "offset": {
          "type": "integer"
        },
        "position": {
          "type": "number"
        },
        "programme": {
          "$ref": "#/definitions/pid"
        },
        "version": {
          "$ref": "#/definitions/pid"
        }
      },
      "required": [
        "programme",
        "version",
        "href"
      ],
      "type": "object"
    },
    "offsets": {
      "additionalProperties": false,
      "properties": {
        "offset_in": {
          "items": {
            "$ref": "#/definitions/offset_in"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "option": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        },
        "release_status": {
          "$ref": "#/definitions/release_status_type"
        },
        "title": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "value",
        "title"
      ],
      "type": "object"
    },
    "original_version_duration": {
      "additionalProperties": false,
      "properties": {
        "version": {
          "additionalProperties": false,
          "properties": {
            "duration": {
              "pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "pid": {
              "$ref": "#/definitions/pid"
            },
            "version": {
              "additionalProperties": false,
              "properties": {
                "duration": {
                  "pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "pid": {
                  "$ref": "#/definitions/pid"
                }
              },
              "required": [
                "pid",
                "href"
              ],
              "type": "object"
            }
          },
          "required": [
            "pid",
            "href"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "other": {
      "$ref": "#/definitions/item"
    },
    "pagination": {
      "additionalProperties": false,
      "properties": {
        "next": {
          "$ref": "#/definitions/next"
        },
        "previous": {
          "$ref": "#/definitions/previous"
        }
      },
      "type": "object"
    },
    "partner": {
      "$ref": "#/definitions/pid"
    },
    "pid": {
      "pattern": "([a-z0-9\\.\\-]+|.*PID.*)",
      "type": "string"
    },
    "pidReference": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "position": {
          "type": "integer"
        },
        "result_type": {
          "type": "string"
        }
      },
      "required": [
        "pid",
        "result_type"
      ],
      "type": "object"
    },
    "play_event": {
      "additionalProperties": false,
      "properties": {
        "offset": {
          "type": "integer"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "played_in_links": {
          "items": {
            "$ref": "#/definitions/played_in_links"
          },
          "type": "array"
        },
        "position": {
          "type": "number"
        },
        "synopses": {
          "$ref": "#/definitions/synopses"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "pid"
      ],
      "type": "object"
    },
    "play_events": {
      "additionalProperties": false,
      "properties": {
        "play_event": {
          "items": {
            "$ref": "#/definitions/play_event"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "played_in_links": {
      "additionalProperties": false,
      "properties": {
        "played_in": {
          "additionalProperties": false,
          "properties": {
            "href": {
              "type": "string"
            },
            "played_in": {
              "additionalProperties": false,
              "properties": {
                "href": {
                  "type": "string"
                },
                "result_type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "result_type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "position": {
      "type": "integer"
    },
    "presentation_title": {
      "type": "string"
    },
    "previous": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        }
      },
      "required": [
        "href"
      ],
      "type": "object"
    },
    "previous_next_mixin": {
      "additionalProperties": false,
      "properties": {
        "previous_next": {
          "additionalProperties": false,
          "properties": {
            "next": {
              "$ref": "#/definitions/reference"
            },
            "previous": {
              "$ref": "#/definitions/reference"
            },
            "previous_next": {
              "additionalProperties": false,
              "properties": {
                "next": {
                  "$ref": "#/definitions/reference"
                },
                "previous": {
                  "$ref": "#/definitions/reference"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "previous_next"
          ],
          "type": "object"
        }
      },
      "required": [
        "previous_next"
      ],
      "type": "object"
    },
    "priority": {
      "type": "integer"
    },
    "programme_formats": {
      "additionalProperties": false,
      "properties": {
        "format": {
          "items": {
            "$ref": "#/definitions/format"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "format"
      ],
      "type": "object"
    },
    "programme_type": {
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "prohibits": {
      "additionalProperties": false,
      "properties": {
        "filter": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "mixin": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "filter": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "mixin": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "promoted_by": {
      "type": "string"
    },
    "promoted_for": {
      "type": "string"
    },
    "promotion": {
      "additionalProperties": false,
      "properties": {
        "context": {
          "$ref": "#/definitions/context"
        },
        "end_time": {
          "$ref": "#/definitions/end_time"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "priority": {
          "$ref": "#/definitions/priority"
        },
        "promoted_by": {
          "$ref": "#/definitions/promoted_by"
        },
        "promoted_for": {
          "$ref": "#/definitions/promoted_for"
        },
        "promotion_of": {
          "$ref": "#/definitions/promotion_of"
        },
        "related_links": {
          "$ref": "#/definitions/related_links"
        },
        "start_time": {
          "$ref": "#/definitions/start_time"
        },
        "status": {
          "$ref": "#/definitions/status"
        },
        "synopses": {
          "$ref": "#/definitions/synopses"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "updated_time": {
          "$ref": "#/definitions/updated_time"
        },
        "uri": {
          "$ref": "#/definitions/uri"
        },
        "url": {
          "$ref": "#/definitions/url"
        }
      },
      "required": [
        "pid",
        "partner",
        "updated_time"
      ],
      "type": "object"
    },
    "promotion_of": {
      "$ref": "#/definitions/pidReference"
    },
    "publication_rights": {
      "additionalProperties": false,
      "properties": {
        "#text": {
          "type": "string"
        },
        "context": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "territory": {
          "type": "string"
        },
        "transport": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "published_time": {
      "$ref": "#/definitions/broadcastTime"
    },
    "publisher": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "record_label": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "recording_date": {
      "maxLength": 10,
      "minLength": 4,
      "type": "string"
    },
    "reference": {
      "allOf": [
        {
          "$ref": "#/definitions/referenceAttributes"
        },
        {
          "additionalProperties": true,
          "properties": {
            "href_deprecated": {
              "type": "boolean"
            },
            "result_type_deprecated": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ]
    },
    "referenceAttributes": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        },
        "result_type": {
          "type": "string"
        }
      },
      "required": [
        "href",
        "result_type"
      ],
      "type": "object"
    },
    "region": {
      "type": "string"
    },
    "related_link": {
      "additionalProperties": false,
      "properties": {
        "availability": {
          "additionalProperties": false,
          "properties": {
            "end": {
              "format": "date-time",
              "type": "string"
            },
            "start": {
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        },
        "is_external": {
          "$ref": "#/definitions/is_external"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "position": {
          "$ref": "#/definitions/position"
        },
        "synopses": {
          "$ref": "#/definitions/synopses"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "uri": {
          "$ref": "#/definitions/uri"
        }
      },
      "required": [
        "pid"
      ],
      "type": "object"
    },
    "related_links": {
      "additionalProperties": false,
      "properties": {
        "related_link": {
          "items": {
            "$ref": "#/definitions/related_link"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "release_date_group": {
      "additionalProperties": false,
      "properties": {
        "release_date": {
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
          "type": "string"
        },
        "release_year": {
          "pattern": "[0-9]{4}",
          "type": "string"
        },
        "release_year_month": {
          "pattern": "[0-9]{4}-[0-9]{2}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "release_status_type": {
      "enum": [
        "alpha",
        "beta",
        "supported",
        "deprecated"
      ]
    },
    "release_title": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "results": {
      "additionalProperties": false,
      "properties": {
        "availability": {
          "$ref": "#/definitions/availability"
        },
        "brand": {
          "$ref": "#/definitions/brand"
        },
        "broadcast": {
          "$ref": "#/definitions/broadcast"
        },
        "chapter": {
          "$ref": "#/definitions/chapter"
        },
        "clip": {
          "$ref": "#/definitions/clip"
        },
        "collection": {
          "$ref": "#/definitions/collection"
        },
        "contributor": {
          "$ref": "#/definitions/contributor"
        },
        "episode": {
          "$ref": "#/definitions/episode"
        },
        "franchise": {
          "$ref": "#/definitions/franchise"
        },
        "gallery": {
          "$ref": "#/definitions/gallery"
        },
        "highlight": {
          "$ref": "#/definitions/highlight"
        },
        "image": {
          "$ref": "#/definitions/image"
        },
        "master_brand": {
          "$ref": "#/definitions/master_brand"
        },
        "more_than": {
          "type": "integer"
        },
        "music": {
          "$ref": "#/definitions/music"
        },
        "other": {
          "$ref": "#/definitions/other"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "promotion": {
          "$ref": "#/definitions/promotion"
        },
        "season": {
          "$ref": "#/definitions/season"
        },
        "series": {
          "$ref": "#/definitions/series"
        },
        "service": {
          "$ref": "#/definitions/service"
        },
        "speech": {
          "$ref": "#/definitions/speech"
        },
        "total": {
          "type": "integer"
        },
        "version_group": {
          "$ref": "#/definitions/version_group"
        },
        "window": {
          "$ref": "#/definitions/window"
        }
      },
      "required": [
        "page",
        "page_size"
      ],
      "type": "object"
    },
    "retryable": {
      "type": "boolean"
    },
    "revocation_status": {
      "type": "string"
    },
    "schedule_date": {
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
      "type": "string"
    },
    "scheduled": {
      "additionalProperties": false,
      "properties": {
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "scheduled_publication_rights": {
      "additionalProperties": false,
      "properties": {
        "publication_rights": {
          "items": {
            "$ref": "#/definitions/publication_rights"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "scheduled_time": {
      "additionalProperties": false,
      "properties": {
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "season": {
      "$ref": "#/definitions/group-body"
    },
    "series": {
      "additionalProperties": false,
      "properties": {
        "alternate_images_mixin": {
          "$ref": "#/definitions/alternate_images_mixin"
        },
        "ancestor_titles": {
          "$ref": "#/definitions/ancestor_titles"
        },
        "ancestors": {
          "$ref": "#/definitions/ancestors"
        },
        "ancestors_titles": {
          "$ref": "#/definitions/ancestors_titles"
        },
        "availability_mixin": {
          "$ref": "#/definitions/availability_mixin"
        },
        "contributions_mixin": {
          "$ref": "#/definitions/contributions_mixin"
        },
        "embargoed": {
          "$ref": "#/definitions/embargoed"
        },
        "expected_child_count": {
          "$ref": "#/definitions/expected_child_count"
        },
        "genre_groupings": {
          "$ref": "#/definitions/genre_groupings"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "image_link": {
          "$ref": "#/definitions/image_link"
        },
        "images_mixin": {
          "$ref": "#/definitions/images_mixin"
        },
        "is_embeddable": {
          "$ref": "#/definitions/is_embeddable"
        },
        "items_for": {
          "$ref": "#/definitions/items_for"
        },
        "master_brand_link": {
          "$ref": "#/definitions/master_brand_link"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "previous_next_mixin": {
          "$ref": "#/definitions/previous_next_mixin"
        },
        "programme_formats": {
          "$ref": "#/definitions/programme_formats"
        },
        "programme_type": {
          "$ref": "#/definitions/programme_type"
        },
        "related_links": {
          "$ref": "#/definitions/related_links"
        },
        "release_date_group": {
          "$ref": "#/definitions/release_date_group"
        },
        "series_of": {
          "$ref": "#/definitions/series_of"
        },
        "synopses": {
          "$ref": "#/definitions/synopses"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "updated_time": {
          "$ref": "#/definitions/updated_time"
        },
        "uri": {
          "$ref": "#/definitions/uri"
        }
      },
      "required": [
        "pid",
        "partner",
        "updated_time",
        "embargoed"
      ],
      "type": "object"
    },
    "series_of": {
      "$ref": "#/definitions/pidReference"
    },
    "service": {
      "additionalProperties": false,
      "properties": {
        "date_range": {
          "$ref": "#/definitions/date_range"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "ids": {
          "$ref": "#/definitions/ids"
        },
        "is_concrete": {
          "$ref": "#/definitions/is_concrete"
        },
        "is_downloadable": {
          "$ref": "#/definitions/is_downloadable"
        },
        "is_streamable": {
          "$ref": "#/definitions/is_streamable"
        },
        "master_brand_link": {
          "$ref": "#/definitions/master_brand_link"
        },
        "media_type": {
          "$ref": "#/definitions/media_type"
        },
        "name": {
          "$ref": "#/definitions/name"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "region": {
          "$ref": "#/definitions/region"
        },
        "sid": {
          "$ref": "#/definitions/sid"
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "updated_time": {
          "$ref": "#/definitions/updated_time"
        }
      },
      "required": [
        "sid",
        "partner"
      ],
      "type": "object"
    },
    "serviceReference": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        },
        "result_type": {
          "type": "string"
        },
        "sid": {
          "type": "string"
        }
      },
      "required": [
        "result_type",
        "href",
        "sid"
      ],
      "type": "object"
    },
    "short": {
      "type": "string"
    },
    "sid": {
      "pattern": "[a-z0-9A-Z_\\.\\-]+",
      "type": "string"
    },
    "size": {
      "additionalProperties": false,
      "properties": {
        "units": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "snippet_url": {
      "type": "string"
    },
    "sort": {
      "additionalProperties": false,
      "properties": {
        "deprecated": {
          "type": "boolean"
        },
        "deprecated_since": {
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
          "type": "string"
        },
        "guaranteed_until": {
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
          "type": "string"
        },
        "is_default": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "release_status": {
          "$ref": "#/definitions/release_status_type"
        },
        "replaced_by": {
          "type": "string"
        },
        "sort_direction": {
          "items": {
            "$ref": "#/definitions/sort_direction"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "title"
      ],
      "type": "object"
    },
    "sort_direction": {
      "additionalProperties": false,
      "properties": {
        "href": {
          "type": "string"
        },
        "is_default": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "value",
        "is_default",
        "href"
      ],
      "type": "object"
    },
    "sorts": {
      "additionalProperties": false,
      "properties": {
        "sort": {
          "items": {
            "$ref": "#/definitions/sort"
          },
          "type": "array"
        },
        "unstable_sorts": {
          "$ref": "#/definitions/unstable_sorts"
        }
      },
      "type": "object"
    },
    "source_asset": {
      "additionalProperties": false,
      "properties": {
        "dimensions": {
          "$ref": "#/definitions/dimensions"
        },
        "focus_point": {
          "$ref": "#/definitions/focus_point"
        },
        "mime_type": {
          "type": "string"
        },
        "size": {
          "$ref": "#/definitions/size"
        },
        "uri": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "source_media": {
      "maxLength": 64,
      "minLength": 1,
      "type": "string"
    },
    "speech": {
      "$ref": "#/definitions/item"
    },
    "start_time": {
      "format": "date-time",
      "type": "string"
    },
    "status": {
      "type": "string"
    },
    "synopses": {
      "additionalProperties": false,
      "properties": {
        "long": {
          "$ref": "#/definitions/long"
        },
        "medium": {
          "$ref": "#/definitions/medium"
        },
        "short": {
          "$ref": "#/definitions/short"
        }
      },
      "type": "object"
    },
    "title": {
      "type": "string"
    },
    "track_number": {
      "maxLength": 8,
      "minLength": 1,
      "type": "string"
    },
    "track_side": {
      "maxLength": 8,
      "minLength": 1,
      "type": "string"
    },
    "tx_time": {
      "additionalProperties": false,
      "properties": {
        "credits_showing": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "type": {
      "type": "string"
    },
    "types_with_id": {
      "additionalProperties": false,
      "properties": {
        "types": {
          "additionalProperties": false,
          "properties": {
            "type": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "types": {
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "types"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      },
      "required": [
        "types"
      ],
      "type": "object"
    },
    "unstable_filters": {
      "additionalProperties": false,
      "properties": {
        "filter": {
          "items": {
            "$ref": "#/definitions/filter"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "unstable_mixins": {
      "additionalProperties": false,
      "properties": {
        "mixin": {
          "items": {
            "$ref": "#/definitions/mixin"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "unstable_sorts": {
      "additionalProperties": false,
      "properties": {
        "sort": {
          "items": {
            "$ref": "#/definitions/sort"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "updated_time": {
      "format": "date-time",
      "type": "string"
    },
    "uri": {
      "type": "string"
    },
    "url": {
      "type": "string"
    },
    "url_key": {
      "type": "string"
    },
    "version_availability": {
      "additionalProperties": false,
      "properties": {
        "availability": {
          "additionalProperties": false,
          "properties": {
            "availability": {
              "additionalProperties": false,
              "properties": {
                "availability_end": {
                  "format": "date-time",
                  "type": "string"
                },
                "availability_start": {
                  "format": "date-time",
                  "type": "string"
                },
                "available_media_sets": {
                  "$ref": "#/definitions/available_media_sets"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "available_media_sets"
              ],
              "type": "object"
            },
            "availability_end": {
              "format": "date-time",
              "type": "string"
            },
            "availability_start": {
              "format": "date-time",
              "type": "string"
            },
            "available_media_sets": {
              "$ref": "#/definitions/available_media_sets"
            },
            "status": {
              "type": "string"
            }
          },
          "required": [
            "available_media_sets",
            "availability"
          ],
          "type": "object"
        }
      },
      "required": [
        "availability"
      ],
      "type": "object"
    },
    "version_availability_mixin": {
      "additionalProperties": false,
      "properties": {
        "version": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "availabilities": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "version_availability": {
                      "items": {
                        "$ref": "#/definitions/version_availability"
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "version_availability"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "competition_warning": {
                "type": "string"
              },
              "duration": {
                "pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
                "type": "string"
              },
              "guidance_warnings": {
                "$ref": "#/definitions/guidance_warnings"
              },
              "pid": {
                "$ref": "#/definitions/pid"
              },
              "types": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array"
              },
              "version": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "availabilities": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "version_availability": {
                            "items": {
                              "$ref": "#/definitions/version_availability"
                            },
                            "minItems": 1,
                            "type": "array"
                          }
                        },
                        "required": [
                          "version_availability"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "competition_warning": {
                      "type": "string"
                    },
                    "duration": {
                      "pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
                      "type": "string"
                    },
                    "guidance_warnings": {
                      "$ref": "#/definitions/guidance_warnings"
                    },
                    "pid": {
                      "$ref": "#/definitions/pid"
                    },
                    "types": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "types"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "types"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "version_group": {
      "additionalProperties": false,
      "properties": {
        "version": {
          "additionalProperties": false,
          "properties": {
            "aspect_ratio": {
              "type": "string"
            },
            "competition_warning": {
              "$ref": "#/definitions/competition_warning"
            },
            "duration": {
              "pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
              "type": "string"
            },
            "identifiers": {
              "$ref": "#/definitions/identifiers"
            },
            "ids": {
              "$ref": "#/definitions/ids"
            },
            "pid": {
              "$ref": "#/definitions/pid"
            },
            "types_with_id": {
              "$ref": "#/definitions/types_with_id"
            },
            "updated_time": {
              "$ref": "#/definitions/updated_time"
            },
            "version": {
              "additionalProperties": false,
              "properties": {
                "aspect_ratio": {
                  "type": "string"
                },
                "competition_warning": {
                  "$ref": "#/definitions/competition_warning"
                },
                "duration": {
                  "pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
                  "type": "string"
                },
                "identifiers": {
                  "$ref": "#/definitions/identifiers"
                },
                "ids": {
                  "$ref": "#/definitions/ids"
                },
                "pid": {
                  "$ref": "#/definitions/pid"
                },
                "types_with_id": {
                  "$ref": "#/definitions/types_with_id"
                },
                "updated_time": {
                  "$ref": "#/definitions/updated_time"
                },
                "version_of": {
                  "$ref": "#/definitions/version_of"
                },
                "version_types_with_id": {
                  "$ref": "#/definitions/version_types_with_id"
                },
                "warnings": {
                  "$ref": "#/definitions/warnings"
                }
              },
              "required": [
                "pid",
                "updated_time"
              ],
              "type": "object"
            },
            "version_of": {
              "$ref": "#/definitions/version_of"
            },
            "version_types_with_id": {
              "$ref": "#/definitions/version_types_with_id"
            },
            "warnings": {
              "$ref": "#/definitions/warnings"
            }
          },
          "required": [
            "pid",
            "updated_time",
            "version"
          ],
          "type": "object"
        }
      },
      "required": [
        "version"
      ],
      "type": "object"
    },
    "version_of": {
      "$ref": "#/definitions/pidReference"
    },
    "version_types_with_id": {
      "additionalProperties": false,
      "properties": {
        "version_types": {
          "additionalProperties": false,
          "properties": {
            "version_type": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "version_types": {
                    "additionalProperties": false,
                    "properties": {
                      "version_type": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      }
                    },
                    "required": [
                      "version_type"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "version_types"
                ],
                "type": "object"
              },
              "minItems": 1,
              "type": "array"
            }
          },
          "required": [
            "version_type"
          ],
          "type": "object"
        }
      },
      "required": [
        "version_types"
      ],
      "type": "object"
    },
    "versions": {
      "additionalProperties": false,
      "properties": {
        "available": {
          "type": "integer"
        },
        "version_availability_mixin": {
          "$ref": "#/definitions/version_availability_mixin"
        }
      },
      "required": [
        "version_availability_mixin",
        "available"
      ],
      "type": "object"
    },
    "versions_mixin": {
      "additionalProperties": false,
      "properties": {
        "available_simulcasts": {
          "$ref": "#/definitions/available_simulcasts"
        },
        "available_versions": {
          "$ref": "#/definitions/available_versions"
        },
        "available_webcasts": {
          "$ref": "#/definitions/available_webcasts"
        },
        "versions": {
          "items": {
            "$ref": "#/definitions/versions"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "warning": {
      "additionalProperties": false,
      "properties": {
        "#text": {
          "type": "string"
        },
        "short_description": {
          "type": "string"
        },
        "warning_code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "warning_items": {
      "additionalProperties": false,
      "properties": {
        "warning": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "#text": {
                "type": "string"
              },
              "short_description": {
                "type": "string"
              },
              "warning": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "#text": {
                      "type": "string"
                    },
                    "short_description": {
                      "type": "string"
                    },
                    "warning_code": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "warning_code": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "warning_text": {
      "additionalProperties": false,
      "properties": {
        "#text": {
          "type": "string"
        },
        "length": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "warning_texts": {
      "additionalProperties": false,
      "properties": {
        "warning_text": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "#text": {
                "type": "string"
              },
              "length": {
                "type": "string"
              },
              "warning_text": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "#text": {
                      "type": "string"
                    },
                    "length": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "warnings": {
      "additionalProperties": false,
      "properties": {
        "warning": {
          "items": {
            "$ref": "#/definitions/warning"
          },
          "type": "array"
        },
        "warning_text": {
          "items": {
            "$ref": "#/definitions/warning_text"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "window": {
      "additionalProperties": false,
      "properties": {
        "accurate_programme_time": {
          "$ref": "#/definitions/accurate_programme_time"
        },
        "ancestor_titles": {
          "$ref": "#/definitions/ancestor_titles"
        },
        "ancestors_titles": {
          "$ref": "#/definitions/ancestors_titles"
        },
        "identifiers": {
          "$ref": "#/definitions/identifiers"
        },
        "ids": {
          "$ref": "#/definitions/ids"
        },
        "image_link": {
          "$ref": "#/definitions/image_link"
        },
        "images_mixin": {
          "$ref": "#/definitions/images_mixin"
        },
        "media_availability_time": {
          "$ref": "#/definitions/media_availability_time"
        },
        "partner": {
          "$ref": "#/definitions/partner"
        },
        "pid": {
          "$ref": "#/definitions/pid"
        },
        "scheduled_publication_rights": {
          "$ref": "#/definitions/scheduled_publication_rights"
        },
        "scheduled_time": {
          "$ref": "#/definitions/scheduled_time"
        },
        "service": {
          "$ref": "#/definitions/serviceReference"
        },
        "updated_time": {
          "$ref": "#/definitions/updated_time"
        },
        "window_of": {
          "items": {
            "$ref": "#/definitions/window_of"
          },
          "type": "array"
        }
      },
      "required": [
        "pid",
        "partner"
      ],
      "type": "object"
    },
    "window_of": {
      "$ref": "#/definitions/pidReference"
    },
    "xquery-version": {
      "description": "The XQuery language version.",
      "enum": [
        "1.0-ml",
        "0.9-ml",
        "1.0",
        "XSLT"
      ]
    }
  },
  "securityDefinitions": {
    "api_key": {
      "in": "query",
      "name": "api_key",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "tags": [
    {
      "description": "Nitro data feeds",
      "name": "feeds"
    },
    {
      "description": "Nitro metadata",
      "name": "schema"
    },
    {
      "description": "Nitro Raw",
      "name": "Raw"
    }
  ],
  "externalDocs": {
    "description": "Nitro for developers",
    "url": "https://developer.bbc.co.uk/nitro"
  },
  "x-components": {}
}