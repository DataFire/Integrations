{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "firefox.settings.services.mozilla.com",
  "basePath": "/v1",
  "info": {
    "title": "Remote Settings",
    "version": "1.22",
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_cloud.githubusercontent.com_assets_21603_24036792_23286ed2-0af3-11e7-9353-7a772636dee1.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://firefox.settings.services.mozilla.com/v1/__api__",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "mozilla.com",
    "x-serviceName": "kinto",
    "x-datafire": {
      "name": "mozilla_kinto",
      "type": "openapi"
    }
  },
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {},
  "tags": [
    {
      "name": "Blocklist"
    },
    {
      "name": "Changess"
    },
    {
      "name": "Attachment"
    },
    {
      "name": "Batch"
    },
    {
      "name": "Utilities"
    },
    {
      "name": "Buckets"
    },
    {
      "name": "Collections"
    },
    {
      "name": "Groups"
    },
    {
      "name": "Records"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "operationId": "server_info",
        "responses": {
          "200": {
            "description": "Return information about the running Instance.",
            "schema": {
              "additionalProperties": {},
              "title": "SchemaNode",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Utilities"
        ]
      }
    },
    "/__api__": {
      "get": {
        "operationId": "get_openapi_spec",
        "responses": {
          "200": {
            "description": "Return an OpenAPI description of the running instance.",
            "schema": {
              "additionalProperties": {},
              "title": "SchemaNode",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Utilities"
        ]
      }
    },
    "/__heartbeat__": {
      "get": {
        "operationId": "__heartbeat__",
        "responses": {
          "200": {
            "description": "Server is working properly.",
            "schema": {
              "additionalProperties": {},
              "title": "SchemaNode",
              "type": "object"
            }
          },
          "503": {
            "description": "One or more subsystems failing.",
            "schema": {
              "additionalProperties": {},
              "title": "SchemaNode",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Utilities"
        ]
      }
    },
    "/__lbheartbeat__": {
      "get": {
        "operationId": "__lbheartbeat__",
        "responses": {
          "200": {
            "description": "Returned if server is reachable.",
            "schema": {
              "title": "SchemaNode",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Utilities"
        ]
      }
    },
    "/__user_data__": {},
    "/__user_data__/{principal}": {
      "parameters": [
        {
          "in": "path",
          "name": "principal",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/__version__": {
      "get": {
        "operationId": "__version__",
        "responses": {
          "200": {
            "description": "Return the running Instance version information.",
            "schema": {
              "additionalProperties": {},
              "title": "SchemaNode",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Utilities"
        ]
      }
    },
    "/batch": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "batch",
        "parameters": [
          {
            "in": "body",
            "name": "BatchPayloadSchema",
            "required": true,
            "schema": {
              "properties": {
                "defaults": {
                  "properties": {
                    "body": {
                      "additionalProperties": {},
                      "title": "Body",
                      "type": "object"
                    },
                    "headers": {
                      "additionalProperties": {},
                      "title": "Headers",
                      "type": "object"
                    },
                    "method": {
                      "enum": [
                        "GET",
                        "HEAD",
                        "DELETE",
                        "TRACE",
                        "POST",
                        "PUT",
                        "PATCH"
                      ],
                      "title": "Method",
                      "type": "string"
                    },
                    "path": {
                      "pattern": "^/",
                      "title": "Path",
                      "type": "string"
                    }
                  },
                  "title": "Defaults",
                  "type": "object"
                },
                "requests": {
                  "items": {
                    "properties": {
                      "body": {
                        "additionalProperties": {},
                        "title": "Body",
                        "type": "object"
                      },
                      "headers": {
                        "additionalProperties": {},
                        "title": "Headers",
                        "type": "object"
                      },
                      "method": {
                        "enum": [
                          "GET",
                          "HEAD",
                          "DELETE",
                          "TRACE",
                          "POST",
                          "PUT",
                          "PATCH"
                        ],
                        "title": "Method",
                        "type": "string"
                      },
                      "path": {
                        "pattern": "^/",
                        "title": "Path",
                        "type": "string"
                      }
                    },
                    "required": [
                      "path"
                    ],
                    "type": "object"
                  },
                  "title": "Requests",
                  "type": "array"
                }
              },
              "required": [
                "requests"
              ],
              "title": "BatchPayloadSchema",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of operation responses.",
            "schema": {
              "properties": {
                "responses": {
                  "items": {
                    "properties": {
                      "body": {
                        "additionalProperties": {},
                        "title": "Body",
                        "type": "object"
                      },
                      "headers": {
                        "additionalProperties": {},
                        "title": "Headers",
                        "type": "object"
                      },
                      "path": {
                        "title": "Path",
                        "type": "string"
                      },
                      "status": {
                        "title": "Status",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "status",
                      "path"
                    ],
                    "type": "object"
                  },
                  "title": "Responses",
                  "type": "array"
                }
              },
              "required": [
                "responses"
              ],
              "title": "BatchResponseBodySchema",
              "type": "object"
            }
          },
          "400": {
            "description": "The request was badly formatted.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "default": {
            "description": "an unknown error occurred.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Batch"
        ]
      }
    },
    "/buckets": {
      "get": {
        "operationId": "get_buckets",
        "parameters": [
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_sort",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "_token",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_since",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_to",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_before",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "last_modified",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_fields",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "If-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of matching objects.",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "additionalProperties": {},
                    "default": {},
                    "properties": {
                      "collection:schema": {
                        "additionalProperties": {},
                        "type": "object"
                      },
                      "group:schema": {
                        "additionalProperties": {},
                        "type": "object"
                      },
                      "record:schema": {
                        "additionalProperties": {},
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "title": "Schema",
              "type": "object"
            }
          },
          "304": {
            "description": "Reponse has not changed since value in If-None-Match header",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "The request is invalid.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "401": {
            "description": "The request is missing authentication headers.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not allowed to perform the operation, or the resource is not accessible.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "406": {
            "description": "The client doesn't accept supported responses Content-Type.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "412": {
            "description": "Object was changed or deleted since value in `If-Match` header.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Buckets"
        ]
      }
    },
    "/buckets/monitor/collections/changes/records": {
      "get": {
        "operationId": "get_changess",
        "parameters": [
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_sort",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "_token",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_since",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_to",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_before",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "last_modified",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_fields",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "If-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of matching objects.",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "bucket": {
                        "title": "Bucket",
                        "type": "string"
                      },
                      "collection": {
                        "title": "Collection",
                        "type": "string"
                      },
                      "host": {
                        "title": "Host",
                        "type": "string"
                      }
                    },
                    "required": [
                      "host",
                      "bucket",
                      "collection"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "title": "Schema",
              "type": "object"
            }
          },
          "304": {
            "description": "Reponse has not changed since value in If-None-Match header",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "The request is invalid.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "401": {
            "description": "The request is missing authentication headers.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not allowed to perform the operation, or the resource is not accessible.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "406": {
            "description": "The client doesn't accept supported responses Content-Type.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "412": {
            "description": "Object was changed or deleted since value in `If-Match` header.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Changess"
        ]
      }
    },
    "/buckets/{bucket_id}/collections": {
      "get": {
        "operationId": "get_collections",
        "parameters": [
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_sort",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "_token",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_since",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_to",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_before",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "last_modified",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_fields",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "If-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of matching objects.",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "additionalProperties": {},
                    "default": {},
                    "properties": {
                      "cache_expires": {
                        "title": "Cache Expires",
                        "type": "integer"
                      },
                      "schema": {
                        "additionalProperties": {},
                        "title": "Schema",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "title": "Schema",
              "type": "object"
            }
          },
          "304": {
            "description": "Reponse has not changed since value in If-None-Match header",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "The request is invalid.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "401": {
            "description": "The request is missing authentication headers.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not allowed to perform the operation, or the resource is not accessible.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "406": {
            "description": "The client doesn't accept supported responses Content-Type.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "412": {
            "description": "Object was changed or deleted since value in `If-Match` header.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Collections"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "bucket_id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/buckets/{bucket_id}/collections/{collection_id}/records": {
      "get": {
        "operationId": "get_records",
        "parameters": [
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_sort",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "_token",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_since",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_to",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_before",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "last_modified",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_fields",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "If-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of matching objects.",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "additionalProperties": {},
                    "default": {},
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "title": "Schema",
              "type": "object"
            }
          },
          "304": {
            "description": "Reponse has not changed since value in If-None-Match header",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "The request is invalid.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "401": {
            "description": "The request is missing authentication headers.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not allowed to perform the operation, or the resource is not accessible.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "406": {
            "description": "The client doesn't accept supported responses Content-Type.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "412": {
            "description": "Object was changed or deleted since value in `If-Match` header.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Records"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "bucket_id",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "collection_id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/buckets/{bucket_id}/collections/{collection_id}/records/{id}": {
      "get": {
        "operationId": "get_record",
        "parameters": [
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_fields",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "If-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the target object.",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "data": {
                  "additionalProperties": {},
                  "default": {},
                  "type": "object"
                },
                "permissions": {
                  "properties": {
                    "read": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Read",
                      "type": "array"
                    },
                    "write": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Write",
                      "type": "array"
                    }
                  },
                  "title": "Permissions",
                  "type": "object"
                }
              },
              "title": "ObjectSchema",
              "type": "object"
            }
          },
          "304": {
            "description": "Reponse has not changed since value in If-None-Match header",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "The request is invalid.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "401": {
            "description": "The request is missing authentication headers.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not allowed to perform the operation, or the resource is not accessible.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "404": {
            "description": "The object does not exist or was deleted.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "406": {
            "description": "The client doesn't accept supported responses Content-Type.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "412": {
            "description": "Object was changed or deleted since value in `If-Match` header.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Records"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "bucket_id",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "collection_id",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/buckets/{bucket_id}/collections/{collection_id}/records/{id}/attachment": {
      "delete": {
        "operationId": "delete_attachment",
        "responses": {
          "default": {
            "description": "UNDOCUMENTED RESPONSE"
          }
        },
        "security": [],
        "tags": [
          "Attachment"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "bucket_id",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "collection_id",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "operationId": "create_attachment",
        "responses": {
          "default": {
            "description": "UNDOCUMENTED RESPONSE"
          }
        },
        "security": [],
        "tags": [
          "Attachment"
        ]
      }
    },
    "/buckets/{bucket_id}/collections/{id}": {
      "get": {
        "operationId": "get_collection",
        "parameters": [
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_fields",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "If-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the target object.",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "data": {
                  "additionalProperties": {},
                  "default": {},
                  "properties": {
                    "cache_expires": {
                      "title": "Cache Expires",
                      "type": "integer"
                    },
                    "schema": {
                      "additionalProperties": {},
                      "title": "Schema",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "permissions": {
                  "properties": {
                    "read": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Read",
                      "type": "array"
                    },
                    "record:create": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Record:Create",
                      "type": "array"
                    },
                    "write": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Write",
                      "type": "array"
                    }
                  },
                  "title": "Permissions",
                  "type": "object"
                }
              },
              "title": "ObjectSchema",
              "type": "object"
            }
          },
          "304": {
            "description": "Reponse has not changed since value in If-None-Match header",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "The request is invalid.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "401": {
            "description": "The request is missing authentication headers.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not allowed to perform the operation, or the resource is not accessible.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "404": {
            "description": "The object does not exist or was deleted.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "406": {
            "description": "The client doesn't accept supported responses Content-Type.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "412": {
            "description": "Object was changed or deleted since value in `If-Match` header.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Collections"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "bucket_id",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/buckets/{bucket_id}/groups": {
      "get": {
        "operationId": "get_groups",
        "parameters": [
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_limit",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_sort",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "_token",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_since",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_to",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "_before",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "maximum": 9223372036854776000,
            "minimum": 0,
            "name": "last_modified",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_fields",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "If-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of matching objects.",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "additionalProperties": {},
                    "default": {},
                    "properties": {
                      "members": {
                        "items": {
                          "type": "string"
                        },
                        "title": "Members",
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "title": "Schema",
              "type": "object"
            }
          },
          "304": {
            "description": "Reponse has not changed since value in If-None-Match header",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "The request is invalid.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "401": {
            "description": "The request is missing authentication headers.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not allowed to perform the operation, or the resource is not accessible.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "406": {
            "description": "The client doesn't accept supported responses Content-Type.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "412": {
            "description": "Object was changed or deleted since value in `If-Match` header.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Groups"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "bucket_id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/buckets/{bucket_id}/groups/{id}": {
      "get": {
        "operationId": "get_group",
        "parameters": [
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_fields",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "If-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the target object.",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "data": {
                  "additionalProperties": {},
                  "default": {},
                  "properties": {
                    "members": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Members",
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "permissions": {
                  "properties": {
                    "read": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Read",
                      "type": "array"
                    },
                    "write": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Write",
                      "type": "array"
                    }
                  },
                  "title": "Permissions",
                  "type": "object"
                }
              },
              "title": "ObjectSchema",
              "type": "object"
            }
          },
          "304": {
            "description": "Reponse has not changed since value in If-None-Match header",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "The request is invalid.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "401": {
            "description": "The request is missing authentication headers.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not allowed to perform the operation, or the resource is not accessible.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "404": {
            "description": "The object does not exist or was deleted.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "406": {
            "description": "The client doesn't accept supported responses Content-Type.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "412": {
            "description": "Object was changed or deleted since value in `If-Match` header.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Groups"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "bucket_id",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/buckets/{id}": {
      "get": {
        "operationId": "get_bucket",
        "parameters": [
          {
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "_fields",
            "required": false,
            "type": "array"
          },
          {
            "in": "header",
            "name": "If-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "pattern": "^\"([0-9]+?)\"$|\\*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the target object.",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "data": {
                  "additionalProperties": {},
                  "default": {},
                  "properties": {
                    "collection:schema": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "group:schema": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "record:schema": {
                      "additionalProperties": {},
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "permissions": {
                  "properties": {
                    "collection:create": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Collection:Create",
                      "type": "array"
                    },
                    "group:create": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Group:Create",
                      "type": "array"
                    },
                    "read": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Read",
                      "type": "array"
                    },
                    "write": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Write",
                      "type": "array"
                    }
                  },
                  "title": "Permissions",
                  "type": "object"
                }
              },
              "title": "ObjectSchema",
              "type": "object"
            }
          },
          "304": {
            "description": "Reponse has not changed since value in If-None-Match header",
            "headers": {
              "Etag": {
                "pattern": "^\"([0-9]+?)\"$|\\*",
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "The request is invalid.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "401": {
            "description": "The request is missing authentication headers.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "403": {
            "description": "The user is not allowed to perform the operation, or the resource is not accessible.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "404": {
            "description": "The object does not exist or was deleted.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "406": {
            "description": "The client doesn't accept supported responses Content-Type.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "412": {
            "description": "Object was changed or deleted since value in `If-Match` header.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "properties": {
                "code": {
                  "title": "Code",
                  "type": "integer"
                },
                "details": {},
                "errno": {
                  "title": "Errno",
                  "type": "integer"
                },
                "error": {
                  "title": "Error",
                  "type": "string"
                },
                "info": {
                  "title": "Info",
                  "type": "string"
                },
                "message": {
                  "title": "Message",
                  "type": "string"
                }
              },
              "required": [
                "code",
                "errno",
                "error"
              ],
              "title": "ErrorSchema",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Buckets"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/contribute.json": {
      "get": {
        "operationId": "contribute",
        "responses": {
          "200": {
            "description": "Return open source contributing information.",
            "schema": {
              "additionalProperties": {},
              "title": "SchemaNode",
              "type": "object"
            }
          }
        },
        "security": [],
        "tags": [
          "Utilities"
        ]
      }
    },
    "/{prefix}/{api_ver:\\d+}/{application_guid}/{application_ver}/{metrics:.*}": {
      "get": {
        "operationId": "get_blocklist",
        "parameters": [
          {
            "in": "path",
            "name": "api_ver:\\d+",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metrics:.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "UNDOCUMENTED RESPONSE"
          }
        },
        "security": [],
        "tags": [
          "Blocklist"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "prefix",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "application_guid",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "application_ver",
          "required": true,
          "type": "string"
        }
      ]
    }
  }
}