{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS IoT</fullname> <p>AWS IoT-Data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a persistent representation of your things and their state in the AWS cloud.</p> <p>Find the endpoint address for actions in the AWS IoT data plane by running this CLI command:</p> <p> <code>aws iot describe-endpoint --endpoint-type iot:Data-ATS</code> </p> <p>The service name used by <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">AWS Signature Version 4</a> to sign requests is: <i>iotdevicegateway</i>.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS IoT Data Plane",
    "version": "2015-05-28",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-data-2015-05-28.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "iot-data",
    "x-datafire": {
      "name": "amazonaws_data_iot",
      "type": "openapi"
    }
  },
  "host": "data.iot.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/things/shadow/ListNamedShadowsForThing/{thingName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the thing.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "thingName",
            "pattern": "[a-zA-Z0-9:_-]+",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The result page size.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "pageSize",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListNamedShadowsForThingResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "483": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "486": {
            "description": "MethodNotAllowedException",
            "schema": {
              "$ref": "#/definitions/MethodNotAllowedException"
            }
          }
        },
        "description": "Lists the shadows for the specified thing.",
        "operationId": "ListNamedShadowsForThing"
      }
    },
    "/things/{thingName}/shadow": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the thing.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "thingName",
            "pattern": "[a-zA-Z0-9:_-]+",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the shadow.",
            "in": "query",
            "maxLength": 64,
            "minLength": 1,
            "name": "name",
            "pattern": "[a-zA-Z0-9:_-]+",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteThingShadowResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "483": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "486": {
            "description": "MethodNotAllowedException",
            "schema": {
              "$ref": "#/definitions/MethodNotAllowedException"
            }
          },
          "487": {
            "description": "UnsupportedDocumentEncodingException",
            "schema": {
              "$ref": "#/definitions/UnsupportedDocumentEncodingException"
            }
          }
        },
        "description": "<p>Deletes the shadow for the specified thing.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/API_DeleteThingShadow.html\">DeleteThingShadow</a> in the AWS IoT Developer Guide.</p>",
        "operationId": "DeleteThingShadow"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the thing.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "thingName",
            "pattern": "[a-zA-Z0-9:_-]+",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the shadow.",
            "in": "query",
            "maxLength": 64,
            "minLength": 1,
            "name": "name",
            "pattern": "[a-zA-Z0-9:_-]+",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetThingShadowResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "483": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "486": {
            "description": "MethodNotAllowedException",
            "schema": {
              "$ref": "#/definitions/MethodNotAllowedException"
            }
          },
          "487": {
            "description": "UnsupportedDocumentEncodingException",
            "schema": {
              "$ref": "#/definitions/UnsupportedDocumentEncodingException"
            }
          }
        },
        "description": "<p>Gets the shadow for the specified thing.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/API_GetThingShadow.html\">GetThingShadow</a> in the AWS IoT Developer Guide.</p>",
        "operationId": "GetThingShadow"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the thing.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "thingName",
            "pattern": "[a-zA-Z0-9:_-]+",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the shadow.",
            "in": "query",
            "maxLength": 64,
            "minLength": 1,
            "name": "name",
            "pattern": "[a-zA-Z0-9:_-]+",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "payload": {
                  "description": "The state information, in JSON format.",
                  "type": "string"
                }
              },
              "required": [
                "payload"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateThingShadowResponse"
            }
          },
          "480": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "481": {
            "description": "RequestEntityTooLargeException",
            "schema": {
              "$ref": "#/definitions/RequestEntityTooLargeException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "487": {
            "description": "MethodNotAllowedException",
            "schema": {
              "$ref": "#/definitions/MethodNotAllowedException"
            }
          },
          "488": {
            "description": "UnsupportedDocumentEncodingException",
            "schema": {
              "$ref": "#/definitions/UnsupportedDocumentEncodingException"
            }
          }
        },
        "description": "<p>Updates the shadow for the specified thing.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html\">UpdateThingShadow</a> in the AWS IoT Developer Guide.</p>",
        "operationId": "UpdateThingShadow"
      }
    },
    "/topics/{topic}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the MQTT topic.",
            "in": "path",
            "name": "topic",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Quality of Service (QoS) level.",
            "in": "query",
            "maximum": 1,
            "minimum": 0,
            "name": "qos",
            "required": false,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "payload": {
                  "description": "The state information, in JSON format.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "483": {
            "description": "MethodNotAllowedException",
            "schema": {
              "$ref": "#/definitions/MethodNotAllowedException"
            }
          }
        },
        "description": "<p>Publishes state information.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/protocols.html#http\">HTTP Protocol</a> in the AWS IoT Developer Guide.</p>",
        "operationId": "Publish"
      }
    }
  },
  "definitions": {
    "ConflictException": {},
    "DeleteThingShadowRequest": {
      "description": "The input for the DeleteThingShadow operation.",
      "properties": {},
      "title": "DeleteThingShadowRequest",
      "type": "object"
    },
    "DeleteThingShadowResponse": {
      "description": "The output from the DeleteThingShadow operation.",
      "properties": {
        "payload": {
          "allOf": [
            {
              "$ref": "#/definitions/JsonDocument"
            },
            {
              "description": "The state information, in JSON format."
            }
          ]
        }
      },
      "required": [
        "payload"
      ],
      "type": "object"
    },
    "GetThingShadowRequest": {
      "description": "The input for the GetThingShadow operation.",
      "properties": {},
      "title": "GetThingShadowRequest",
      "type": "object"
    },
    "GetThingShadowResponse": {
      "description": "The output from the GetThingShadow operation.",
      "properties": {
        "payload": {
          "allOf": [
            {
              "$ref": "#/definitions/JsonDocument"
            },
            {
              "description": "The state information, in JSON format."
            }
          ]
        }
      },
      "type": "object"
    },
    "InternalFailureException": {},
    "InvalidRequestException": {},
    "JsonDocument": {
      "type": "string"
    },
    "ListNamedShadowsForThingRequest": {
      "properties": {},
      "title": "ListNamedShadowsForThingRequest",
      "type": "object"
    },
    "ListNamedShadowsForThingResponse": {
      "properties": {
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token for the next set of results, or null if there are no additional results."
            }
          ]
        },
        "results": {
          "allOf": [
            {
              "$ref": "#/definitions/NamedShadowList"
            },
            {
              "description": "The list of shadows for the specified thing."
            }
          ]
        },
        "timestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The Epoch date and time the response was generated by AWS IoT."
            }
          ]
        }
      },
      "type": "object"
    },
    "MethodNotAllowedException": {},
    "NamedShadowList": {
      "items": {
        "$ref": "#/definitions/ShadowName"
      },
      "type": "array"
    },
    "NextToken": {
      "type": "string"
    },
    "PageSize": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "Payload": {
      "type": "string"
    },
    "PublishRequest": {
      "description": "The input for the Publish operation.",
      "properties": {
        "payload": {
          "allOf": [
            {
              "$ref": "#/definitions/Payload"
            },
            {
              "description": "The state information, in JSON format."
            }
          ]
        }
      },
      "title": "PublishRequest",
      "type": "object"
    },
    "Qos": {
      "maximum": 1,
      "minimum": 0,
      "type": "integer"
    },
    "RequestEntityTooLargeException": {},
    "ResourceNotFoundException": {},
    "ServiceUnavailableException": {},
    "ShadowName": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "ThingName": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "ThrottlingException": {},
    "Timestamp": {
      "type": "integer"
    },
    "Topic": {
      "type": "string"
    },
    "UnauthorizedException": {},
    "UnsupportedDocumentEncodingException": {},
    "UpdateThingShadowRequest": {
      "description": "The input for the UpdateThingShadow operation.",
      "properties": {
        "payload": {
          "allOf": [
            {
              "$ref": "#/definitions/JsonDocument"
            },
            {
              "description": "The state information, in JSON format."
            }
          ]
        }
      },
      "required": [
        "payload"
      ],
      "title": "UpdateThingShadowRequest",
      "type": "object"
    },
    "UpdateThingShadowResponse": {
      "description": "The output from the UpdateThingShadow operation.",
      "properties": {
        "payload": {
          "allOf": [
            {
              "$ref": "#/definitions/JsonDocument"
            },
            {
              "description": "The state information, in JSON format."
            }
          ]
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/iot/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  }
}