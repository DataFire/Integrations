{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Twitter Developers",
      "url": "https://developer.twitter.com/",
      "x-twitter": "twitter"
    },
    "description": "API Reference â€” Labs v2",
    "license": {
      "name": "Twitter Developer Agreement and Policy",
      "url": "https://developer.twitter.com/en/developer-terms/agreement-and-policy.html"
    },
    "termsOfService": "https://developer.twitter.com/en/developer-terms/agreement-and-policy.html",
    "title": "Tweets and Users",
    "version": "2.10",
    "x-apisguru-categories": [
      "social"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_twitter_profile_image.png"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://api.twitter.com/labs/2/openapi.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "twitter.com",
    "x-serviceName": "labs",
    "x-datafire": {
      "name": "twitter_labs",
      "type": "openapi"
    }
  },
  "host": "api.twitter.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/labs/2/openapi.json": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request was successful",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "General"
        ],
        "description": "Full open api spec in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)",
        "operationId": "getOpenApiSpec",
        "summary": "Returns the open api spec document."
      }
    },
    "/labs/2/tweets": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "A comma separated list of Tweet IDs. Up to 100 are allowed in a single request.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/TweetID"
            },
            "maxItems": 100,
            "minItems": 1,
            "name": "ids",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of fields to expand.",
            "in": "query",
            "items": {
              "enum": [
                "author_id",
                "referenced_tweets.id",
                "in_reply_to_user_id",
                "geo.place_id",
                "attachments.media_keys",
                "attachments.poll_ids",
                "entities.mentions.username",
                "referenced_tweets.id.author_id"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "expansions",
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Tweet fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "text",
                "author_id",
                "in_reply_to_user_id",
                "referenced_tweets",
                "attachments",
                "withheld",
                "geo",
                "entities",
                "public_metrics",
                "possibly_sensitive",
                "source",
                "lang",
                "context_annotations",
                "non_public_metrics",
                "promoted_metrics",
                "organic_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "tweet.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of User fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "name",
                "username",
                "protected",
                "verified",
                "withheld",
                "profile_image_url",
                "location",
                "url",
                "description",
                "entities",
                "pinned_tweet_id",
                "public_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "user.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Media fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "media_key",
                "duration_ms",
                "height",
                "preview_image_url",
                "type",
                "url",
                "width",
                "public_metrics",
                "non_public_metrics",
                "organic_metrics",
                "promoted_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "media.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Place fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "name",
                "country_code",
                "place_type",
                "full_name",
                "country",
                "contained_within",
                "geo"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "place.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Poll fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "options",
                "voting_status",
                "end_datetime",
                "duration_minutes"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "poll.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "schema": {
              "$ref": "#/definitions/TweetLookupResponse"
            }
          },
          "default": {
            "description": "The request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tweets"
        ],
        "description": "Returns a variety of information about the Tweet specified by the requested ID",
        "operationId": "findTweetsById",
        "summary": "Returns hydrated Tweet objects"
      }
    },
    "/labs/2/tweets/{id}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "A single Tweet ID.",
            "in": "path",
            "name": "id",
            "pattern": "^[0-9]{1,19}$",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of fields to expand.",
            "in": "query",
            "items": {
              "enum": [
                "author_id",
                "referenced_tweets.id",
                "in_reply_to_user_id",
                "geo.place_id",
                "attachments.media_keys",
                "attachments.poll_ids",
                "entities.mentions.username",
                "referenced_tweets.id.author_id"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "expansions",
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Tweet fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "text",
                "author_id",
                "in_reply_to_user_id",
                "referenced_tweets",
                "attachments",
                "withheld",
                "geo",
                "entities",
                "public_metrics",
                "possibly_sensitive",
                "source",
                "lang",
                "context_annotations",
                "non_public_metrics",
                "promoted_metrics",
                "organic_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "tweet.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of User fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "name",
                "username",
                "protected",
                "verified",
                "withheld",
                "profile_image_url",
                "location",
                "url",
                "description",
                "entities",
                "pinned_tweet_id",
                "public_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "user.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Media fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "media_key",
                "duration_ms",
                "height",
                "preview_image_url",
                "type",
                "url",
                "width",
                "public_metrics",
                "non_public_metrics",
                "organic_metrics",
                "promoted_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "media.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Place fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "name",
                "country_code",
                "place_type",
                "full_name",
                "country",
                "contained_within",
                "geo"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "place.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Poll fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "options",
                "voting_status",
                "end_datetime",
                "duration_minutes"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "poll.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "schema": {
              "$ref": "#/definitions/SingleTweetLookupResponse"
            }
          },
          "default": {
            "description": "The request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tweets"
        ],
        "description": "Returns a variety of information about the Tweet specified by the requested ID",
        "operationId": "findTweetById",
        "summary": "Returns hydrated Tweet objects"
      }
    },
    "/labs/2/users": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Required. A list of User IDs, comma-separated. You can specify up to 100 IDs.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/UserID"
            },
            "maxItems": 100,
            "minItems": 1,
            "name": "ids",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of fields to expand.",
            "in": "query",
            "items": {
              "enum": [
                "pinned_tweet_id"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "expansions",
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Tweet fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "text",
                "author_id",
                "in_reply_to_user_id",
                "referenced_tweets",
                "attachments",
                "withheld",
                "geo",
                "entities",
                "public_metrics",
                "possibly_sensitive",
                "source",
                "lang",
                "context_annotations",
                "non_public_metrics",
                "promoted_metrics",
                "organic_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "tweet.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of User fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "name",
                "username",
                "protected",
                "verified",
                "withheld",
                "profile_image_url",
                "location",
                "url",
                "description",
                "entities",
                "pinned_tweet_id",
                "public_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "user.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Media fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "media_key",
                "duration_ms",
                "height",
                "preview_image_url",
                "type",
                "url",
                "width",
                "public_metrics",
                "non_public_metrics",
                "organic_metrics",
                "promoted_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "media.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Place fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "name",
                "country_code",
                "place_type",
                "full_name",
                "country",
                "contained_within",
                "geo"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "place.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Poll fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "options",
                "voting_status",
                "end_datetime",
                "duration_minutes"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "poll.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "schema": {
              "$ref": "#/definitions/UserLookupResponse"
            }
          },
          "default": {
            "description": "The request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "This endpoint returns information about users. Specify users by their ID.",
        "operationId": "findUsersById",
        "summary": "Return details for the specified users"
      }
    },
    "/labs/2/users/by": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Required . A list of usernames, comma-separated. You can specify up to 100 usernames.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/UserName"
            },
            "maxItems": 100,
            "minItems": 1,
            "name": "usernames",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of fields to expand.",
            "in": "query",
            "items": {
              "enum": [
                "pinned_tweet_id"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "expansions",
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Tweet fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "text",
                "author_id",
                "in_reply_to_user_id",
                "referenced_tweets",
                "attachments",
                "withheld",
                "geo",
                "entities",
                "public_metrics",
                "possibly_sensitive",
                "source",
                "lang",
                "context_annotations",
                "non_public_metrics",
                "promoted_metrics",
                "organic_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "tweet.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of User fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "name",
                "username",
                "protected",
                "verified",
                "withheld",
                "profile_image_url",
                "location",
                "url",
                "description",
                "entities",
                "pinned_tweet_id",
                "public_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "user.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Media fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "media_key",
                "duration_ms",
                "height",
                "preview_image_url",
                "type",
                "url",
                "width",
                "public_metrics",
                "non_public_metrics",
                "organic_metrics",
                "promoted_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "media.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Place fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "name",
                "country_code",
                "place_type",
                "full_name",
                "country",
                "contained_within",
                "geo"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "place.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Poll fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "options",
                "voting_status",
                "end_datetime",
                "duration_minutes"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "poll.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "schema": {
              "$ref": "#/definitions/UserLookupResponse"
            }
          },
          "default": {
            "description": "The request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "This endpoint returns information about users. Specify users by their username.",
        "operationId": "findUsersByUsername",
        "summary": "Return details for the specified users"
      }
    },
    "/labs/2/users/by/username/{username}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Required. A username.",
            "in": "path",
            "name": "username",
            "pattern": "^[A-Za-z0-9_]{1,15}$",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of fields to expand.",
            "in": "query",
            "items": {
              "enum": [
                "pinned_tweet_id"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "expansions",
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Tweet fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "text",
                "author_id",
                "in_reply_to_user_id",
                "referenced_tweets",
                "attachments",
                "withheld",
                "geo",
                "entities",
                "public_metrics",
                "possibly_sensitive",
                "source",
                "lang",
                "context_annotations",
                "non_public_metrics",
                "promoted_metrics",
                "organic_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "tweet.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of User fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "name",
                "username",
                "protected",
                "verified",
                "withheld",
                "profile_image_url",
                "location",
                "url",
                "description",
                "entities",
                "pinned_tweet_id",
                "public_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "user.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Media fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "media_key",
                "duration_ms",
                "height",
                "preview_image_url",
                "type",
                "url",
                "width",
                "public_metrics",
                "non_public_metrics",
                "organic_metrics",
                "promoted_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "media.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Place fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "name",
                "country_code",
                "place_type",
                "full_name",
                "country",
                "contained_within",
                "geo"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "place.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Poll fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "options",
                "voting_status",
                "end_datetime",
                "duration_minutes"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "poll.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "schema": {
              "$ref": "#/definitions/SingleUserLookupResponse"
            }
          },
          "default": {
            "description": "The request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "This endpoint returns information about a user. Specify user by username.",
        "operationId": "findUserByUsername",
        "summary": "Return details for the specified users"
      }
    },
    "/labs/2/users/{id}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Required. A User ID.",
            "in": "path",
            "name": "id",
            "pattern": "^[0-9]{1,19}$",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of fields to expand.",
            "in": "query",
            "items": {
              "enum": [
                "pinned_tweet_id"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "expansions",
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Tweet fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "text",
                "author_id",
                "in_reply_to_user_id",
                "referenced_tweets",
                "attachments",
                "withheld",
                "geo",
                "entities",
                "public_metrics",
                "possibly_sensitive",
                "source",
                "lang",
                "context_annotations",
                "non_public_metrics",
                "promoted_metrics",
                "organic_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "tweet.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of User fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "created_at",
                "name",
                "username",
                "protected",
                "verified",
                "withheld",
                "profile_image_url",
                "location",
                "url",
                "description",
                "entities",
                "pinned_tweet_id",
                "public_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "user.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Media fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "media_key",
                "duration_ms",
                "height",
                "preview_image_url",
                "type",
                "url",
                "width",
                "public_metrics",
                "non_public_metrics",
                "organic_metrics",
                "promoted_metrics"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "media.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Place fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "name",
                "country_code",
                "place_type",
                "full_name",
                "country",
                "contained_within",
                "geo"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "place.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          },
          {
            "collectionFormat": "multi",
            "description": "A comma separated list of Poll fields to display.",
            "in": "query",
            "items": {
              "enum": [
                "id",
                "options",
                "voting_status",
                "end_datetime",
                "duration_minutes"
              ],
              "type": "string"
            },
            "minItems": 1,
            "name": "poll.fields",
            "required": false,
            "type": "array",
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "schema": {
              "$ref": "#/definitions/SingleUserLookupResponse"
            }
          },
          "default": {
            "description": "The request has failed.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "This endpoint returns information about a user. Specify user by ID.",
        "operationId": "findUserById",
        "summary": "Return details for the specified users"
      }
    }
  },
  "definitions": {
    "AnimatedGif": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonMediaFields"
        }
      ],
      "properties": {
        "preview_image_url": {
          "format": "uri",
          "type": "string"
        },
        "type": {
          "enum": [
            "animated_gif"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CashtagEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityIndices"
        },
        {
          "$ref": "#/definitions/CashtagFields"
        }
      ]
    },
    "CashtagFields": {
      "description": "Represent the portion of text recognized as a Cashtag, and its start and end position within the text.",
      "properties": {
        "tag": {
          "type": "string"
        }
      },
      "required": [
        "tag"
      ],
      "type": "object"
    },
    "ClientForbiddenProblem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProblemFields"
        }
      ],
      "description": "A problem that indicates your client is forbidden from making this request.",
      "properties": {
        "reason": {
          "enum": [
            "official-client-forbidden",
            "client-not-enrolled"
          ],
          "type": "string"
        },
        "registration_url": {
          "format": "uri",
          "type": "string"
        },
        "type": {
          "enum": [
            "https://api.twitter.com/labs/2/problems/client-forbidden"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommonMediaFields": {
      "description": "This contains the list of the fields that are common to all media returned.",
      "properties": {
        "height": {
          "$ref": "#/definitions/MediaHeight"
        },
        "media_key": {
          "$ref": "#/definitions/MediaKey"
        },
        "width": {
          "$ref": "#/definitions/MediaWidth"
        }
      },
      "type": "object"
    },
    "ContextAnnotation": {
      "description": "Annotation inferred from the tweet text.",
      "properties": {
        "domain": {
          "$ref": "#/definitions/ContextAnnotationDomainFields"
        },
        "entity": {
          "$ref": "#/definitions/ContextAnnotationEntityFields"
        }
      },
      "required": [
        "domain",
        "entity"
      ],
      "type": "object"
    },
    "ContextAnnotationDomainFields": {
      "description": "Represents the data for the context annotation domain.",
      "properties": {
        "description": {
          "description": "Description of the context annotation domain.",
          "type": "string"
        },
        "id": {
          "description": "The unique id for a context annotation domain.",
          "pattern": "^[0-9]{1,19}$",
          "type": "string"
        },
        "name": {
          "description": "Name of the context annotation domain.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "ContextAnnotationEntityFields": {
      "description": "Represents the data for the context annotation entity.",
      "properties": {
        "description": {
          "description": "Description of the context annotation entity.",
          "type": "string"
        },
        "id": {
          "description": "The unique id for a context annotation entity.",
          "pattern": "^[0-9]{1,19}$",
          "type": "string"
        },
        "name": {
          "description": "Name of the context annotation entity.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "CountryCode": {
      "pattern": "^[A-Z]{2}$",
      "type": "string"
    },
    "DisallowedResourceProblem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProblemFields"
        }
      ],
      "description": "A problem that indicates that the resource requested violates the precepts of this API.",
      "properties": {
        "resource_id": {
          "type": "string"
        },
        "resource_type": {
          "enum": [
            "tweet",
            "media"
          ],
          "type": "string"
        },
        "section": {
          "enum": [
            "data",
            "includes"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "https://api.twitter.com/labs/2/problems/disallowed-resource"
          ],
          "type": "string"
        }
      },
      "required": [
        "resource_id",
        "resource_type",
        "section"
      ],
      "type": "object"
    },
    "EntityIndices": {
      "description": "Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.",
      "properties": {
        "end": {
          "description": "Index (zero-based) at which position this entity ends.",
          "minimum": 0,
          "type": "integer"
        },
        "start": {
          "description": "Index (zero-based) at which position this entity starts.",
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "start",
        "end"
      ],
      "type": "object"
    },
    "Error": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Expansions": {
      "properties": {
        "media": {
          "items": {
            "$ref": "#/definitions/Media"
          },
          "minItems": 1,
          "type": "array"
        },
        "places": {
          "items": {
            "$ref": "#/definitions/Place"
          },
          "minItems": 1,
          "type": "array"
        },
        "polls": {
          "items": {
            "$ref": "#/definitions/Poll"
          },
          "minItems": 1,
          "type": "array"
        },
        "tweets": {
          "items": {
            "$ref": "#/definitions/Tweet"
          },
          "minItems": 1,
          "type": "array"
        },
        "users": {
          "items": {
            "$ref": "#/definitions/User"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "type": "object"
    },
    "FullTextEntities": {
      "properties": {
        "cashtags": {
          "items": {
            "$ref": "#/definitions/CashtagEntity"
          },
          "minItems": 1,
          "type": "array"
        },
        "hashtags": {
          "items": {
            "$ref": "#/definitions/HashtagEntity"
          },
          "minItems": 1,
          "type": "array"
        },
        "mentions": {
          "items": {
            "$ref": "#/definitions/MentionEntity"
          },
          "minItems": 1,
          "type": "array"
        },
        "urls": {
          "items": {
            "$ref": "#/definitions/UrlEntity"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "type": "object"
    },
    "GenericProblem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProblemFields"
        }
      ],
      "description": "A generic problem with no additional information beyond that provided by the HTTP status code.",
      "properties": {
        "status": {
          "type": "integer"
        },
        "type": {
          "enum": [
            "about:blank"
          ],
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    },
    "Geo": {
      "properties": {
        "bbox": {
          "items": {
            "format": "double",
            "maximum": 180,
            "minimum": -180,
            "type": "number"
          },
          "maxItems": 4,
          "minItems": 4,
          "type": "array"
        },
        "geometry": {
          "$ref": "#/definitions/Point"
        },
        "properties": {
          "type": "object"
        },
        "type": {
          "enum": [
            "Feature"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "bbox",
        "properties"
      ],
      "type": "object"
    },
    "HTTPStatusCode": {
      "description": "HTTP Status Code.",
      "maximum": 599,
      "minimum": 100,
      "type": "integer"
    },
    "HashtagEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityIndices"
        },
        {
          "$ref": "#/definitions/HashtagFields"
        }
      ]
    },
    "HashtagFields": {
      "description": "Represent the portion of text recognized as a Hashtag, and its start and end position within the text.",
      "properties": {
        "tag": {
          "description": "The text of the Hashtag",
          "type": "string"
        }
      },
      "required": [
        "tag"
      ],
      "type": "object"
    },
    "InvalidRequestProblem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProblemFields"
        }
      ],
      "description": "A problem that indicates this request is invalid.",
      "properties": {
        "errors": {
          "items": {
            "properties": {
              "parameters": {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "https://api.twitter.com/labs/2/problems/invalid-request"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Media": {
      "required": [
        "type"
      ]
    },
    "MediaHeight": {
      "description": "The height of the media in pixels",
      "minimum": 0,
      "type": "integer"
    },
    "MediaKey": {
      "description": "The Media Key identifier for this attachment.",
      "pattern": "^([0-9]+)_([0-9]+)$",
      "type": "string"
    },
    "MediaWidth": {
      "description": "The width of the media in pixels",
      "minimum": 0,
      "type": "integer"
    },
    "MentionEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityIndices"
        },
        {
          "$ref": "#/definitions/MentionFields"
        }
      ]
    },
    "MentionFields": {
      "description": "Represent the portion of text recognized as a User mention, and its start and end position within the text.",
      "properties": {
        "username": {
          "$ref": "#/definitions/UserName"
        }
      },
      "required": [
        "username"
      ],
      "type": "object"
    },
    "Photo": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonMediaFields"
        }
      ],
      "properties": {
        "type": {
          "enum": [
            "photo"
          ],
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Place": {
      "properties": {
        "contained_within": {
          "items": {
            "$ref": "#/definitions/PlaceId"
          },
          "minItems": 1,
          "type": "array"
        },
        "country": {
          "type": "string"
        },
        "country_code": {
          "$ref": "#/definitions/CountryCode"
        },
        "full_name": {
          "type": "string"
        },
        "geo": {
          "$ref": "#/definitions/Geo"
        },
        "id": {
          "$ref": "#/definitions/PlaceId"
        },
        "name": {
          "description": "The human readable name of this place.",
          "type": "string"
        },
        "place_type": {
          "$ref": "#/definitions/PlaceType"
        }
      },
      "required": [
        "id",
        "full_name"
      ]
    },
    "PlaceId": {
      "description": "The identifier for this place",
      "type": "string"
    },
    "PlaceType": {
      "enum": [
        "poi",
        "neighborhood",
        "city",
        "admin",
        "country",
        "unknown"
      ],
      "type": "string"
    },
    "Point": {
      "description": "A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) geometry object.",
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/Position"
        },
        "type": {
          "enum": [
            "Point"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object"
    },
    "Poll": {
      "description": "Represent a Poll attached to a Tweet",
      "properties": {
        "duration_minutes": {
          "type": "integer"
        },
        "end_datetime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/PollId"
        },
        "options": {
          "items": {
            "$ref": "#/definitions/PollOption"
          },
          "maxItems": 4,
          "minItems": 2,
          "type": "array"
        },
        "voting_status": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        }
      },
      "required": [
        "id",
        "options"
      ],
      "type": "object"
    },
    "PollId": {
      "description": "Unique identifier of this poll.",
      "pattern": "^[0-9]{1,19}$",
      "type": "string"
    },
    "PollOption": {
      "description": "Describes a choice in a Poll object.",
      "properties": {
        "label": {
          "description": "The text of a poll choice.",
          "type": "string"
        },
        "position": {
          "description": "Position of this choice in the poll.",
          "type": "integer"
        },
        "votes": {
          "description": "Number of users who voted for this choice.",
          "type": "integer"
        }
      },
      "required": [
        "position",
        "label",
        "votes"
      ],
      "type": "object"
    },
    "Position": {
      "description": "A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in the format `[longitude,latitude]`.",
      "items": {
        "type": "number"
      },
      "maxItems": 2,
      "minItems": 2,
      "type": "array"
    },
    "Problem": {
      "description": "An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807)."
    },
    "ProblemFields": {
      "properties": {
        "detail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "type",
        "title",
        "detail"
      ],
      "type": "object"
    },
    "ResourceNotFoundProblem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProblemFields"
        }
      ],
      "description": "A problem that indicates that a given Tweet, User, etc. does not exist.",
      "properties": {
        "parameter": {
          "minLength": 1,
          "type": "string"
        },
        "resource_type": {
          "enum": [
            "user",
            "tweet",
            "media"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "https://api.twitter.com/labs/2/problems/resource-not-found"
          ],
          "type": "string"
        },
        "value": {
          "description": "Value will match the schema of the field."
        }
      },
      "required": [
        "parameter",
        "value",
        "resource_type"
      ],
      "type": "object"
    },
    "ResourceUnauthorizedProblem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProblemFields"
        }
      ],
      "description": "A problem that indicates you are not allowed to see a particular Tweet, User, etc.",
      "properties": {
        "resource_id": {
          "type": "string"
        },
        "resource_type": {
          "enum": [
            "tweet",
            "user",
            "media"
          ],
          "type": "string"
        },
        "section": {
          "enum": [
            "data",
            "includes"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "https://api.twitter.com/labs/2/problems/not-authorized-for-resource"
          ],
          "type": "string"
        }
      },
      "required": [
        "resource_id",
        "resource_type",
        "section"
      ],
      "type": "object"
    },
    "SingleTweetLookupResponse": {
      "properties": {
        "data": {
          "$ref": "#/definitions/Tweet"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/Problem"
          },
          "minItems": 1,
          "type": "array"
        },
        "includes": {
          "$ref": "#/definitions/Expansions"
        }
      },
      "type": "object"
    },
    "SingleUserLookupResponse": {
      "properties": {
        "data": {
          "$ref": "#/definitions/User"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/Problem"
          },
          "minItems": 1,
          "type": "array"
        },
        "includes": {
          "$ref": "#/definitions/Expansions"
        }
      },
      "type": "object"
    },
    "Tweet": {
      "example": {
        "author_id": "712089797812",
        "created_at": "Wed Jun 20 16:53:49 +0000 2018",
        "id": "12234",
        "text": "Some great insight into the human condition."
      },
      "properties": {
        "attachments": {
          "description": "Specifies the type of attachments (if any) present in this Tweet.",
          "properties": {
            "media_keys": {
              "description": "A list of Media Keys for each one of the media attachments (if media are attached).",
              "items": {
                "$ref": "#/definitions/MediaKey"
              },
              "minItems": 1,
              "type": "array"
            },
            "poll_ids": {
              "description": "A list of poll IDs (if polls are attached).",
              "items": {
                "$ref": "#/definitions/PollId"
              },
              "minItems": 1,
              "type": "array"
            }
          },
          "type": "object"
        },
        "author_id": {
          "$ref": "#/definitions/UserID"
        },
        "context_annotations": {
          "items": {
            "$ref": "#/definitions/ContextAnnotation"
          },
          "minItems": 1,
          "type": "array"
        },
        "created_at": {
          "description": "Creation time of the Tweet.",
          "format": "date-time",
          "type": "string"
        },
        "entities": {
          "$ref": "#/definitions/FullTextEntities"
        },
        "geo": {
          "description": "The location tagged on the Tweet, if the user provided one.",
          "properties": {
            "coordinates": {
              "$ref": "#/definitions/Point"
            },
            "place_id": {
              "$ref": "#/definitions/PlaceId"
            }
          },
          "type": "object"
        },
        "id": {
          "$ref": "#/definitions/TweetID"
        },
        "in_reply_to_user_id": {
          "$ref": "#/definitions/UserID"
        },
        "lang": {
          "description": "Language of the Tweet, if detected by Twitter. Returned as a BCP47 language tag.",
          "type": "string"
        },
        "non_public_metrics": {
          "description": "Nonpublic engagement metrics for the Tweet at the time of the request.",
          "properties": {
            "impression_count": {
              "description": "Number of times this Tweet has been viewed.",
              "format": "int32",
              "type": "integer"
            },
            "url_link_clicks": {
              "description": "Number of times links in this Tweet have been clicked.",
              "type": "integer"
            },
            "user_profile_clicks": {
              "description": "Number of times the user's profile from this Tweet has been clicked.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "organic_metrics": {
          "description": "Organic nonpublic engagement metrics for the Tweet at the time of the request.",
          "properties": {
            "impression_count": {
              "description": "Number of times this Tweet has been viewed.",
              "type": "integer"
            },
            "like_count": {
              "description": "Number of times this Tweet has been liked.",
              "type": "integer"
            },
            "reply_count": {
              "description": "Number of times this Tweet has been replied to.",
              "type": "integer"
            },
            "retweet_count": {
              "description": "Number of times this Tweet has been Retweeted.",
              "type": "integer"
            },
            "url_link_clicks": {
              "description": "Number of times links in this Tweet have been clicked.",
              "type": "integer"
            },
            "user_profile_clicks": {
              "description": "Number of times the user's profile from this Tweet has been clicked.",
              "type": "integer"
            }
          },
          "required": [
            "impression_count",
            "retweet_count",
            "reply_count",
            "like_count",
            "user_profile_clicks"
          ],
          "type": "object"
        },
        "possibly_sensitive": {
          "description": "Indicates if this Tweet contains URLs marked as sensitive, for example content suitable for mature audiences.",
          "type": "boolean"
        },
        "promoted_metrics": {
          "description": "Promoted nonpublic engagement metrics for the Tweet at the time of the request.",
          "properties": {
            "impression_count": {
              "description": "Number of times this Tweet has been viewed.",
              "format": "int32",
              "type": "integer"
            },
            "like_count": {
              "description": "Number of times this Tweet has been liked.",
              "format": "int32",
              "type": "integer"
            },
            "reply_count": {
              "description": "Number of times this Tweet has been replied to.",
              "format": "int32",
              "type": "integer"
            },
            "retweet_count": {
              "description": "Number of times this Tweet has been Retweeted.",
              "format": "int32",
              "type": "integer"
            },
            "url_link_clicks": {
              "description": "Number of times links in this Tweet have been clicked.",
              "type": "integer"
            },
            "user_profile_clicks": {
              "description": "Number of times the user's profile from this Tweet has been clicked.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "public_metrics": {
          "description": "Engagement metrics for the Tweet at the time of the request.",
          "properties": {
            "like_count": {
              "description": "Number of times this Tweet has been liked.",
              "type": "integer"
            },
            "quote_count": {
              "description": "Number of times this Tweet has been quoted.",
              "type": "integer"
            },
            "reply_count": {
              "description": "Number of times this Tweet has been replied to.",
              "type": "integer"
            },
            "retweet_count": {
              "description": "Number of times this Tweet has been Retweeted.",
              "type": "integer"
            }
          },
          "required": [
            "retweet_count",
            "reply_count",
            "like_count"
          ],
          "type": "object"
        },
        "referenced_tweets": {
          "description": "A list of Tweets this Tweet refers to. For example, if the parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include the related Tweet referenced to by its parent.",
          "items": {
            "properties": {
              "id": {
                "$ref": "#/definitions/TweetID"
              },
              "type": {
                "enum": [
                  "retweeted",
                  "quoted",
                  "replied_to"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "minItems": 1,
          "type": "array"
        },
        "source": {
          "description": "The name of the app the user Tweeted from.",
          "type": "string"
        },
        "text": {
          "description": "The content of the Tweet.",
          "type": "string"
        },
        "withheld": {
          "$ref": "#/definitions/TweetWithheld"
        }
      },
      "required": [
        "id",
        "text"
      ]
    },
    "TweetID": {
      "description": "Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.",
      "example": "120897978112909812",
      "pattern": "^[0-9]{1,19}$",
      "type": "string"
    },
    "TweetLookupResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/Tweet"
          },
          "minItems": 1,
          "type": "array"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/Problem"
          },
          "minItems": 1,
          "type": "array"
        },
        "includes": {
          "$ref": "#/definitions/Expansions"
        }
      },
      "type": "object"
    },
    "TweetWithheld": {
      "description": "Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).",
      "properties": {
        "copyright": {
          "description": "Indicates if the content is being withheld for on the basis of copyright infringement.",
          "type": "boolean"
        },
        "country_codes": {
          "description": "Provides a list of countries where this content is not available.",
          "items": {
            "$ref": "#/definitions/CountryCode"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        },
        "scope": {
          "description": "Indicates whether the content being withheld is the `tweet` or a `user`.",
          "enum": [
            "tweet",
            "user"
          ],
          "type": "string"
        }
      },
      "required": [
        "copyright",
        "country_codes"
      ],
      "type": "object"
    },
    "URL": {
      "description": "A validly formatted URL.",
      "example": "https://example.com",
      "format": "uri",
      "type": "string"
    },
    "URLFields": {
      "description": "Represent the portion of text recognized as a URL.",
      "properties": {
        "description": {
          "description": "Description of the URL landing page.",
          "type": "string"
        },
        "display_url": {
          "description": "The URL as displayed in the Twitter client.",
          "type": "string"
        },
        "expanded_url": {
          "$ref": "#/definitions/URL"
        },
        "images": {
          "items": {
            "$ref": "#/definitions/URLImage"
          },
          "minItems": 1,
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/HTTPStatusCode"
        },
        "title": {
          "description": "Title of the page the URL points to.",
          "type": "string"
        },
        "unwound_url": {
          "description": "Fully resolved url",
          "format": "uri",
          "type": "string"
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "URLImage": {
      "description": "Represent the information for the URL image",
      "properties": {
        "height": {
          "$ref": "#/definitions/MediaHeight"
        },
        "url": {
          "$ref": "#/definitions/URL"
        },
        "width": {
          "$ref": "#/definitions/MediaWidth"
        }
      },
      "type": "object"
    },
    "UnsupportedAuthenticationProblem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProblemFields"
        }
      ],
      "description": "A problem that indicates that the authentication used is not supported.",
      "properties": {
        "type": {
          "enum": [
            "https://api.twitter.com/labs/2/problems/unsupported-authentication"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UrlEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityIndices"
        },
        {
          "$ref": "#/definitions/URLFields"
        }
      ],
      "description": "Represent the portion of text recognized as a URL, and its start and end position within the text."
    },
    "UsageCapExceededProblem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProblemFields"
        }
      ],
      "description": "A problem that indicates that a usage cap has been exceeded.",
      "properties": {
        "period": {
          "enum": [
            "Daily",
            "Monthly"
          ],
          "type": "string"
        },
        "scope": {
          "enum": [
            "Account",
            "Product"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "https://api.twitter.com/labs/2/problems/usage-capped"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "User": {
      "description": "The Twitter User object",
      "example": {
        "created_at": "2017-10-09T17:16:24Z",
        "id": "1234",
        "name": "Twitter API",
        "protected": false,
        "username": "twitterapi"
      },
      "properties": {
        "created_at": {
          "description": "Creation time of this user.",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "The text of this user's profile description (also known as bio), if the user provided one.",
          "type": "string"
        },
        "entities": {
          "description": "A list of metadata found in the user's profile description.",
          "properties": {
            "description": {
              "$ref": "#/definitions/FullTextEntities"
            },
            "url": {
              "description": "Expanded details for the URL specified in the user's profile, with start and end indices.",
              "properties": {
                "urls": {
                  "items": {
                    "$ref": "#/definitions/UrlEntity"
                  },
                  "minItems": 1,
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "id": {
          "$ref": "#/definitions/UserID"
        },
        "location": {
          "description": "The location specified in the user's profile, if the user provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries.",
          "type": "string"
        },
        "name": {
          "description": "The friendly name of this user, as shown on their profile.",
          "type": "string"
        },
        "pinned_tweet_id": {
          "$ref": "#/definitions/TweetID"
        },
        "profile_image_url": {
          "description": "The URL to the profile image for this user.",
          "format": "uri",
          "type": "string"
        },
        "protected": {
          "description": "Indicates if this user has chosen to protect their Tweets (in other words, if this user's Tweets are private).",
          "type": "boolean"
        },
        "public_metrics": {
          "description": "A list of metrics for this user",
          "properties": {
            "followers_count": {
              "description": "Number of users who are following this user.",
              "type": "integer"
            },
            "following_count": {
              "description": "Number of users this user is following.",
              "type": "integer"
            },
            "listed_count": {
              "description": "The number of lists that include this user.",
              "type": "integer"
            },
            "tweet_count": {
              "description": "The number of Tweets (including Retweets) posted by this user.",
              "type": "integer"
            }
          },
          "required": [
            "followers_count",
            "following_count",
            "tweet_count",
            "listed_count"
          ],
          "type": "object"
        },
        "url": {
          "description": "The URL specified in the user's profile.",
          "type": "string"
        },
        "username": {
          "$ref": "#/definitions/UserName"
        },
        "verified": {
          "description": "Indicate if this user is a verified Twitter User.",
          "type": "boolean"
        },
        "withheld": {
          "$ref": "#/definitions/UserWithheld"
        }
      },
      "required": [
        "id",
        "name",
        "username"
      ]
    },
    "UserID": {
      "description": "Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.",
      "example": "712089797812",
      "pattern": "^[0-9]{1,19}$",
      "type": "string"
    },
    "UserLookupResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/User"
          },
          "minItems": 1,
          "type": "array"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/Problem"
          },
          "minItems": 1,
          "type": "array"
        },
        "includes": {
          "$ref": "#/definitions/Expansions"
        }
      },
      "type": "object"
    },
    "UserName": {
      "description": "The Twitter handle (screen name) of this user.",
      "pattern": "^[A-Za-z0-9_]{1,15}$",
      "type": "string"
    },
    "UserWithheld": {
      "description": "Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).",
      "properties": {
        "country_codes": {
          "description": "Provides a list of countries where this content is not available.",
          "items": {
            "$ref": "#/definitions/CountryCode"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        },
        "scope": {
          "description": "Indicates that the content being withheld is a `user`.",
          "enum": [
            "user"
          ],
          "type": "string"
        }
      },
      "required": [
        "country_codes"
      ],
      "type": "object"
    },
    "Video": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonMediaFields"
        }
      ],
      "properties": {
        "duration_ms": {
          "type": "integer"
        },
        "non_public_metrics": {
          "description": "Nonpublic engagement metrics for the Media at the time of the request.",
          "properties": {
            "playback_0_count": {
              "description": "Number of users who made it through 0% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_100_count": {
              "description": "Number of users who made it through 100% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_25_count": {
              "description": "Number of users who made it through 25% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_50_count": {
              "description": "Number of users who made it through 50% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_75_count": {
              "description": "Number of users who made it through 75% of the video.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "organic_metrics": {
          "description": "Organic nonpublic engagement metrics for the Media at the time of the request.",
          "properties": {
            "playback_0_count": {
              "description": "Number of users who made it through 0% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_100_count": {
              "description": "Number of users who made it through 100% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_25_count": {
              "description": "Number of users who made it through 25% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_50_count": {
              "description": "Number of users who made it through 50% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_75_count": {
              "description": "Number of users who made it through 75% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "view_count": {
              "description": "Number of times this video has been viewed.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "preview_image_url": {
          "format": "uri",
          "type": "string"
        },
        "promoted_metrics": {
          "description": "Promoted nonpublic engagement metrics for the Media at the time of the request.",
          "properties": {
            "playback_0_count": {
              "description": "Number of users who made it through 0% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_100_count": {
              "description": "Number of users who made it through 100% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_25_count": {
              "description": "Number of users who made it through 25% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_50_count": {
              "description": "Number of users who made it through 50% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "playback_75_count": {
              "description": "Number of users who made it through 75% of the video.",
              "format": "int32",
              "type": "integer"
            },
            "view_count": {
              "description": "Number of times this video has been viewed.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "public_metrics": {
          "description": "Engagement metrics for the Media at the time of the request.",
          "properties": {
            "view_count": {
              "description": "Number of times this video has been viewed.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "type": {
          "enum": [
            "video"
          ],
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "tags": [
    {
      "externalDocs": {
        "description": "Find out more",
        "url": "https://developer.twitter.com/en/docs/labs"
      },
      "description": "Miscellaneous endpoints for general API functionality",
      "name": "General"
    },
    {
      "externalDocs": {
        "description": "Find out more",
        "url": "https://developer.twitter.com/en/docs/labs/tweets-and-users/overview"
      },
      "description": "APIs related to Tweets",
      "name": "Tweets"
    },
    {
      "externalDocs": {
        "description": "Find out more",
        "url": "https://developer.twitter.com/en/docs/labs/tweets-and-users/overview"
      },
      "description": "APIs related to Users",
      "name": "Users"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "x-components": {
    "parameters": {
      "MediaFieldsParameter": {
        "collectionFormat": "multi",
        "description": "A comma separated list of Media fields to display.",
        "in": "query",
        "items": {
          "enum": [
            "media_key",
            "duration_ms",
            "height",
            "preview_image_url",
            "type",
            "url",
            "width",
            "public_metrics",
            "non_public_metrics",
            "organic_metrics",
            "promoted_metrics"
          ],
          "type": "string"
        },
        "minItems": 1,
        "name": "media.fields",
        "required": false,
        "type": "array",
        "uniqueItems": true
      },
      "PlaceFieldsParameter": {
        "collectionFormat": "multi",
        "description": "A comma separated list of Place fields to display.",
        "in": "query",
        "items": {
          "enum": [
            "id",
            "name",
            "country_code",
            "place_type",
            "full_name",
            "country",
            "contained_within",
            "geo"
          ],
          "type": "string"
        },
        "minItems": 1,
        "name": "place.fields",
        "required": false,
        "type": "array",
        "uniqueItems": true
      },
      "PollFieldsParameter": {
        "collectionFormat": "multi",
        "description": "A comma separated list of Poll fields to display.",
        "in": "query",
        "items": {
          "enum": [
            "id",
            "options",
            "voting_status",
            "end_datetime",
            "duration_minutes"
          ],
          "type": "string"
        },
        "minItems": 1,
        "name": "poll.fields",
        "required": false,
        "type": "array",
        "uniqueItems": true
      },
      "TweetExpansionsParameter": {
        "collectionFormat": "multi",
        "description": "A comma separated list of fields to expand.",
        "in": "query",
        "items": {
          "enum": [
            "author_id",
            "referenced_tweets.id",
            "in_reply_to_user_id",
            "geo.place_id",
            "attachments.media_keys",
            "attachments.poll_ids",
            "entities.mentions.username",
            "referenced_tweets.id.author_id"
          ],
          "type": "string"
        },
        "minItems": 1,
        "name": "expansions",
        "type": "array",
        "uniqueItems": true
      },
      "TweetFieldsParameter": {
        "collectionFormat": "multi",
        "description": "A comma separated list of Tweet fields to display.",
        "in": "query",
        "items": {
          "enum": [
            "id",
            "created_at",
            "text",
            "author_id",
            "in_reply_to_user_id",
            "referenced_tweets",
            "attachments",
            "withheld",
            "geo",
            "entities",
            "public_metrics",
            "possibly_sensitive",
            "source",
            "lang",
            "context_annotations",
            "non_public_metrics",
            "promoted_metrics",
            "organic_metrics"
          ],
          "type": "string"
        },
        "minItems": 1,
        "name": "tweet.fields",
        "required": false,
        "type": "array",
        "uniqueItems": true
      },
      "UserExpansionsParameter": {
        "collectionFormat": "multi",
        "description": "A comma separated list of fields to expand.",
        "in": "query",
        "items": {
          "enum": [
            "pinned_tweet_id"
          ],
          "type": "string"
        },
        "minItems": 1,
        "name": "expansions",
        "type": "array",
        "uniqueItems": true
      },
      "UserFieldsParameter": {
        "collectionFormat": "multi",
        "description": "A comma separated list of User fields to display.",
        "in": "query",
        "items": {
          "enum": [
            "id",
            "created_at",
            "name",
            "username",
            "protected",
            "verified",
            "withheld",
            "profile_image_url",
            "location",
            "url",
            "description",
            "entities",
            "pinned_tweet_id",
            "public_metrics"
          ],
          "type": "string"
        },
        "minItems": 1,
        "name": "user.fields",
        "required": false,
        "type": "array",
        "uniqueItems": true
      }
    },
    "responses": {
      "HttpErrorResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "application/problem+json": {
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "description": "The request has failed."
      }
    }
  }
}