{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html\">Amazon Cloud Directory Developer Guide</a>.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon CloudDirectory",
    "version": "2017-01-11",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/clouddirectory-2017-01-11.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "clouddirectory",
    "x-datafire": {
      "name": "amazonaws_clouddirectory",
      "type": "openapi"
    }
  },
  "host": "clouddirectory.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/amazonclouddirectory/2017-01-11/batchread#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ],
            "in": "header",
            "name": "x-amz-consistency-level",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Operations": {
                  "description": "A list of operations that are part of the batch.",
                  "items": {
                    "$ref": "#/definitions/BatchReadOperation"
                  },
                  "type": "array"
                }
              },
              "required": [
                "Operations"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchReadResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          }
        },
        "description": "Performs all the read operations in a batch. ",
        "operationId": "BatchRead"
      }
    },
    "/amazonclouddirectory/2017-01-11/batchwrite#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Operations": {
                  "description": "A list of operations that are part of the batch.",
                  "items": {
                    "$ref": "#/definitions/BatchWriteOperation"
                  },
                  "type": "array"
                }
              },
              "required": [
                "Operations"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchWriteResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "BatchWriteException",
            "schema": {
              "$ref": "#/definitions/BatchWriteException"
            }
          }
        },
        "description": "Performs all the write operations in a batch. Either all the operations succeed or none.",
        "operationId": "BatchWrite"
      }
    },
    "/amazonclouddirectory/2017-01-11/directory#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the directory to delete.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteDirectoryResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "DirectoryNotDisabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotDisabledException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryDeletedException",
            "schema": {
              "$ref": "#/definitions/DirectoryDeletedException"
            }
          },
          "487": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "488": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          }
        },
        "description": "Deletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme caution when deleting directories.",
        "operationId": "DeleteDirectory"
      }
    },
    "/amazonclouddirectory/2017-01-11/directory/create#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the published schema that will be copied into the data <a>Directory</a>. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name of the <a>Directory</a>. Should be unique per account, per region.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDirectoryResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/DirectoryAlreadyExistsException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Creates a <a>Directory</a> by copying the published schema into the directory. A directory cannot be created without a schema.</p> <p>You can also quickly create a directory using a managed schema, called the <code>QuickStartSchema</code>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_managed.html\">Managed Schema</a> in the <i>Amazon Cloud Directory Developer Guide</i>.</p>",
        "operationId": "CreateDirectory"
      }
    },
    "/amazonclouddirectory/2017-01-11/directory/disable#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the directory to disable.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisableDirectoryResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "DirectoryDeletedException",
            "schema": {
              "$ref": "#/definitions/DirectoryDeletedException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "487": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          }
        },
        "description": "Disables the specified directory. Disabled directories cannot be read or written to. Only enabled directories can be disabled. Disabled directories may be reenabled.",
        "operationId": "DisableDirectory"
      }
    },
    "/amazonclouddirectory/2017-01-11/directory/enable#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the directory to enable.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnableDirectoryResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "DirectoryDeletedException",
            "schema": {
              "$ref": "#/definitions/DirectoryDeletedException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "487": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          }
        },
        "description": "Enables the specified directory. Only disabled directories can be enabled. Once enabled, the directory can then be read and written to.",
        "operationId": "EnableDirectory"
      }
    },
    "/amazonclouddirectory/2017-01-11/directory/get#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the directory.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDirectoryResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "Retrieves metadata about a directory.",
        "operationId": "GetDirectory"
      }
    },
    "/amazonclouddirectory/2017-01-11/directory/list": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "state": {
                  "description": "The state of the directories in the list. Can be either Enabled, Disabled, or Deleted.",
                  "enum": [
                    "ENABLED",
                    "DISABLED",
                    "DELETED"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDirectoriesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": "Lists directories created within an account.",
        "operationId": "ListDirectories"
      }
    },
    "/amazonclouddirectory/2017-01-11/facet#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name of the facet to retrieve.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetFacetResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "FacetNotFoundException",
            "schema": {
              "$ref": "#/definitions/FacetNotFoundException"
            }
          }
        },
        "description": "Gets details of the <a>Facet</a>, such as facet name, attributes, <a>Rule</a>s, or <code>ObjectType</code>. You can call this on all kinds of schema facets -- published, development, or applied.",
        "operationId": "GetFacet"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AttributeUpdates": {
                  "description": "List of attributes that need to be updated in a given schema <a>Facet</a>. Each attribute is followed by <code>AttributeAction</code>, which specifies the type of update operation to perform. ",
                  "items": {
                    "$ref": "#/definitions/FacetAttributeUpdate"
                  },
                  "type": "array"
                },
                "Name": {
                  "description": "The name of the facet.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                },
                "ObjectType": {
                  "description": "The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.",
                  "enum": [
                    "NODE",
                    "LEAF_NODE",
                    "POLICY",
                    "INDEX"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateFacetResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "InvalidFacetUpdateException",
            "schema": {
              "$ref": "#/definitions/InvalidFacetUpdateException"
            }
          },
          "487": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          },
          "488": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "489": {
            "description": "FacetNotFoundException",
            "schema": {
              "$ref": "#/definitions/FacetNotFoundException"
            }
          },
          "490": {
            "description": "InvalidRuleException",
            "schema": {
              "$ref": "#/definitions/InvalidRuleException"
            }
          }
        },
        "description": "<p>Does the following:</p> <ol> <li> <p>Adds new <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Updates existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Deletes existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> </ol>",
        "operationId": "UpdateFacet"
      }
    },
    "/amazonclouddirectory/2017-01-11/facet/attributes#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the schema where the facet resides.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "Name": {
                  "description": "The name of the facet whose attributes will be retrieved.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFacetAttributesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "FacetNotFoundException",
            "schema": {
              "$ref": "#/definitions/FacetNotFoundException"
            }
          },
          "488": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": "Retrieves attributes attached to the facet.",
        "operationId": "ListFacetAttributes"
      }
    },
    "/amazonclouddirectory/2017-01-11/facet/create#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The schema ARN in which the new <a>Facet</a> will be created. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Attributes": {
                  "description": "The attributes that are associated with the <a>Facet</a>.",
                  "items": {
                    "$ref": "#/definitions/FacetAttribute"
                  },
                  "type": "array"
                },
                "FacetStyle": {
                  "description": "There are two different styles that you can define on any given facet, <code>Static</code> and <code>Dynamic</code>. For static facets, all attributes must be defined in the schema. For dynamic facets, attributes can be defined during data plane operations.",
                  "enum": [
                    "STATIC",
                    "DYNAMIC"
                  ],
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the <a>Facet</a>, which is unique for a given schema.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                },
                "ObjectType": {
                  "description": "<p>Specifies whether a given object created from this facet is of type node, leaf node, policy or index.</p> <ul> <li> <p>Node: Can have multiple children but one parent.</p> </li> </ul> <ul> <li> <p>Leaf node: Cannot have children but can have multiple parents.</p> </li> </ul> <ul> <li> <p>Policy: Allows you to store a policy document and policy type. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\">Policies</a>.</p> </li> </ul> <ul> <li> <p>Index: Can be created with the Index API.</p> </li> </ul>",
                  "enum": [
                    "NODE",
                    "LEAF_NODE",
                    "POLICY",
                    "INDEX"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateFacetResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "FacetAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/FacetAlreadyExistsException"
            }
          },
          "488": {
            "description": "InvalidRuleException",
            "schema": {
              "$ref": "#/definitions/InvalidRuleException"
            }
          },
          "489": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Creates a new <a>Facet</a> in a schema. Facet creation is allowed only in development or applied schemas.",
        "operationId": "CreateFacet"
      }
    },
    "/amazonclouddirectory/2017-01-11/facet/delete#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name of the facet to delete.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteFacetResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "FacetNotFoundException",
            "schema": {
              "$ref": "#/definitions/FacetNotFoundException"
            }
          },
          "488": {
            "description": "FacetInUseException",
            "schema": {
              "$ref": "#/definitions/FacetInUseException"
            }
          }
        },
        "description": "Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s that are associated with the facet will be deleted. Only development schema facets are allowed deletion.",
        "operationId": "DeleteFacet"
      }
    },
    "/amazonclouddirectory/2017-01-11/facet/list#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) to retrieve facet names from.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFacetNamesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": "Retrieves the names of facets that exist in a schema.",
        "operationId": "ListFacetNames"
      }
    },
    "/amazonclouddirectory/2017-01-11/index#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the directory where the index should be created.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "IsUnique": {
                  "description": "Indicates whether the attribute that is being indexed has unique values or not.",
                  "type": "boolean"
                },
                "LinkName": {
                  "description": "The name of the link between the parent object and the index object.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+",
                  "type": "string"
                },
                "OrderedIndexedAttributeList": {
                  "description": "Specifies the attributes that should be indexed on. Currently only a single attribute is supported.",
                  "items": {
                    "$ref": "#/definitions/AttributeKey"
                  },
                  "type": "array"
                },
                "ParentReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "OrderedIndexedAttributeList",
                "IsUnique"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateIndexResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          },
          "489": {
            "description": "LinkNameAlreadyInUseException",
            "schema": {
              "$ref": "#/definitions/LinkNameAlreadyInUseException"
            }
          },
          "490": {
            "description": "UnsupportedIndexTypeException",
            "schema": {
              "$ref": "#/definitions/UnsupportedIndexTypeException"
            }
          }
        },
        "description": "Creates an index object. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.html\">Indexing and search</a> for more information.",
        "operationId": "CreateIndex"
      }
    },
    "/amazonclouddirectory/2017-01-11/index/attach#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the directory where the object and index exist.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "IndexReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "TargetReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "IndexReference",
                "TargetReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AttachToIndexResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "InvalidAttachmentException",
            "schema": {
              "$ref": "#/definitions/InvalidAttachmentException"
            }
          },
          "488": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "489": {
            "description": "LinkNameAlreadyInUseException",
            "schema": {
              "$ref": "#/definitions/LinkNameAlreadyInUseException"
            }
          },
          "490": {
            "description": "IndexedAttributeMissingException",
            "schema": {
              "$ref": "#/definitions/IndexedAttributeMissingException"
            }
          },
          "491": {
            "description": "NotIndexException",
            "schema": {
              "$ref": "#/definitions/NotIndexException"
            }
          }
        },
        "description": "Attaches the specified object to the specified index.",
        "operationId": "AttachToIndex"
      }
    },
    "/amazonclouddirectory/2017-01-11/index/detach#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the directory the index and object exist in.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "IndexReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "TargetReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "IndexReference",
                "TargetReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DetachFromIndexResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "ObjectAlreadyDetachedException",
            "schema": {
              "$ref": "#/definitions/ObjectAlreadyDetachedException"
            }
          },
          "489": {
            "description": "NotIndexException",
            "schema": {
              "$ref": "#/definitions/NotIndexException"
            }
          }
        },
        "description": "Detaches the specified object from the specified index.",
        "operationId": "DetachFromIndex"
      }
    },
    "/amazonclouddirectory/2017-01-11/index/targets#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the directory that the index exists in.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "The consistency level to execute the request at.",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ],
            "in": "header",
            "name": "x-amz-consistency-level",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "IndexReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "MaxResults": {
                  "description": "The maximum number of objects in a single page to retrieve from the index during a request. For more information, see <a href=\"http://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html\">Amazon Cloud Directory Limits</a>.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "RangesOnIndexedValues": {
                  "description": "Specifies the ranges of indexed values that you want to query.",
                  "items": {
                    "$ref": "#/definitions/ObjectAttributeRange"
                  },
                  "type": "array"
                }
              },
              "required": [
                "IndexReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListIndexResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          },
          "484": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "485": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "486": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "487": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "488": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "489": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "490": {
            "description": "NotIndexException",
            "schema": {
              "$ref": "#/definitions/NotIndexException"
            }
          }
        },
        "description": "Lists objects attached to the specified index.",
        "operationId": "ListIndex"
      }
    },
    "/amazonclouddirectory/2017-01-11/object#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> in which the object will be created. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "LinkName": {
                  "description": "The name of link that is used to attach this object to a parent.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+",
                  "type": "string"
                },
                "ObjectAttributeList": {
                  "description": "The attribute map whose attribute ARN contains the key and attribute value as the map value.",
                  "items": {
                    "$ref": "#/definitions/AttributeKeyAndValue"
                  },
                  "type": "array"
                },
                "ParentReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "SchemaFacets": {
                  "description": "A list of schema facets to be associated with the object. Do not provide minor version components. See <a>SchemaFacet</a> for details.",
                  "items": {
                    "$ref": "#/definitions/SchemaFacet"
                  },
                  "type": "array"
                }
              },
              "required": [
                "SchemaFacets"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateObjectResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          },
          "489": {
            "description": "LinkNameAlreadyInUseException",
            "schema": {
              "$ref": "#/definitions/LinkNameAlreadyInUseException"
            }
          },
          "490": {
            "description": "UnsupportedIndexTypeException",
            "schema": {
              "$ref": "#/definitions/UnsupportedIndexTypeException"
            }
          }
        },
        "description": "Creates an object in a <a>Directory</a>. Additionally attaches the object to a parent, if a parent reference and <code>LinkName</code> is specified. An object is simply a collection of <a>Facet</a> attributes. You can also use this API call to create a policy object, if the facet from which you create the object is a policy facet. ",
        "operationId": "CreateObject"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/attach#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ChildReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "LinkName": {
                  "description": "The link name with which the child object is attached to the parent.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+",
                  "type": "string"
                },
                "ParentReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ParentReference",
                "ChildReference",
                "LinkName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AttachObjectResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "LinkNameAlreadyInUseException",
            "schema": {
              "$ref": "#/definitions/LinkNameAlreadyInUseException"
            }
          },
          "489": {
            "description": "InvalidAttachmentException",
            "schema": {
              "$ref": "#/definitions/InvalidAttachmentException"
            }
          },
          "490": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "491": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "<p>Attaches an existing object to another object. An object can be accessed in two ways:</p> <ol> <li> <p>Using the path</p> </li> <li> <p>Using <code>ObjectIdentifier</code> </p> </li> </ol>",
        "operationId": "AttachObject"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/attributes#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ],
            "in": "header",
            "name": "x-amz-consistency-level",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "FacetFilter": {
                  "description": "A facet.",
                  "properties": {
                    "FacetName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/FacetName"
                        },
                        {
                          "description": "The name of the facet."
                        }
                      ]
                    },
                    "SchemaArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_inplaceschemaupgrade.html\">In-Place Schema Upgrade</a> for a description of when to provide minor versions."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "MaxResults": {
                  "description": "The maximum number of items to be retrieved in a single call. This is an approximate number.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListObjectAttributesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "489": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Lists all attributes that are associated with an object. ",
        "operationId": "ListObjectAttributes"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/attributes/get#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "The consistency level at which to retrieve the attributes on an object.",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ],
            "in": "header",
            "name": "x-amz-consistency-level",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AttributeNames": {
                  "description": "List of attribute names whose values will be retrieved.",
                  "items": {
                    "$ref": "#/definitions/AttributeName"
                  },
                  "type": "array"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "SchemaFacet": {
                  "description": "A facet.",
                  "properties": {
                    "FacetName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/FacetName"
                        },
                        {
                          "description": "The name of the facet."
                        }
                      ]
                    },
                    "SchemaArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_inplaceschemaupgrade.html\">In-Place Schema Upgrade</a> for a description of when to provide minor versions."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference",
                "SchemaFacet",
                "AttributeNames"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetObjectAttributesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Retrieves attributes within a facet that are associated with an object.",
        "operationId": "GetObjectAttributes"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/children#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ],
            "in": "header",
            "name": "x-amz-consistency-level",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of items to be retrieved in a single call. This is an approximate number.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListObjectChildrenResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "489": {
            "description": "NotNodeException",
            "schema": {
              "$ref": "#/definitions/NotNodeException"
            }
          }
        },
        "description": "Returns a paginated list of child objects that are associated with a given object.",
        "operationId": "ListObjectChildren"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/delete#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteObjectResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "ObjectNotDetachedException",
            "schema": {
              "$ref": "#/definitions/ObjectNotDetachedException"
            }
          }
        },
        "description": "Deletes an object and its associated attributes. Only objects with no children and no parents can be deleted. The maximum number of attributes that can be deleted during an object deletion is 30. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html\">Amazon Cloud Directory Limits</a>.",
        "operationId": "DeleteObject"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/detach#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "LinkName": {
                  "description": "The link name associated with the object that needs to be detached.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+",
                  "type": "string"
                },
                "ParentReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ParentReference",
                "LinkName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DetachObjectResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "NotNodeException",
            "schema": {
              "$ref": "#/definitions/NotNodeException"
            }
          }
        },
        "description": "Detaches a given object from the parent object. The object that is to be detached from the parent is specified by the link name.",
        "operationId": "DetachObject"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/facets#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ObjectAttributeList": {
                  "description": "Attributes on the facet that you are adding to the object.",
                  "items": {
                    "$ref": "#/definitions/AttributeKeyAndValue"
                  },
                  "type": "array"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "SchemaFacet": {
                  "description": "A facet.",
                  "properties": {
                    "FacetName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/FacetName"
                        },
                        {
                          "description": "The name of the facet."
                        }
                      ]
                    },
                    "SchemaArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_inplaceschemaupgrade.html\">In-Place Schema Upgrade</a> for a description of when to provide minor versions."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "SchemaFacet",
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AddFacetToObjectResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Adds a new <a>Facet</a> to an object. An object can have more than one facet applied on it.",
        "operationId": "AddFacetToObject"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/facets/delete#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the directory in which the object resides.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "SchemaFacet": {
                  "description": "A facet.",
                  "properties": {
                    "FacetName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/FacetName"
                        },
                        {
                          "description": "The name of the facet."
                        }
                      ]
                    },
                    "SchemaArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_inplaceschemaupgrade.html\">In-Place Schema Upgrade</a> for a description of when to provide minor versions."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "SchemaFacet",
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RemoveFacetFromObjectResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Removes the specified facet from the specified object.",
        "operationId": "RemoveFacetFromObject"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/indices#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the directory.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "The consistency level to use for this operation.",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ],
            "in": "header",
            "name": "x-amz-consistency-level",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "TargetReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "TargetReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAttachedIndicesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Lists indices attached to the specified object.",
        "operationId": "ListAttachedIndices"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/information#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the directory being retrieved.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "The consistency level at which to retrieve the object information.",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ],
            "in": "header",
            "name": "x-amz-consistency-level",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetObjectInformationResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Retrieves metadata about an object.",
        "operationId": "GetObjectInformation"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/parent#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ],
            "in": "header",
            "name": "x-amz-consistency-level",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "IncludeAllLinksToEachParent": {
                  "description": "When set to True, returns all <a>ListObjectParentsResponse$ParentLinks</a>. There could be multiple links between a parent-child pair.",
                  "type": "boolean"
                },
                "MaxResults": {
                  "description": "The maximum number of items to be retrieved in a single call. This is an approximate number.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListObjectParentsResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "489": {
            "description": "CannotListParentOfRootException",
            "schema": {
              "$ref": "#/definitions/CannotListParentOfRootException"
            }
          }
        },
        "description": "Lists parent objects that are associated with a given object in pagination fashion.",
        "operationId": "ListObjectParents"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/parentpaths#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the directory to which the parent path applies.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of items to be retrieved in a single call. This is an approximate number.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListObjectParentPathsResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "488": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html\">Directory Structure</a>.</p> <p>Use this API to evaluate all parents for an object. The call returns all objects from the root of the directory up to the requested object. The API returns the number of paths based on user-defined <code>MaxResults</code>, in case there are multiple paths to the parent. The order of the paths and nodes returned is consistent among multiple API calls unless the objects are deleted or moved. Paths not leading to the directory root are ignored from the target object.</p>",
        "operationId": "ListObjectParentPaths"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/policy#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ],
            "in": "header",
            "name": "x-amz-consistency-level",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of items to be retrieved in a single call. This is an approximate number.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListObjectPoliciesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": "Returns policies attached to an object in pagination fashion.",
        "operationId": "ListObjectPolicies"
      }
    },
    "/amazonclouddirectory/2017-01-11/object/update#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AttributeUpdates": {
                  "description": "The attributes update structure.",
                  "items": {
                    "$ref": "#/definitions/ObjectAttributeUpdate"
                  },
                  "type": "array"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference",
                "AttributeUpdates"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateObjectAttributesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "LinkNameAlreadyInUseException",
            "schema": {
              "$ref": "#/definitions/LinkNameAlreadyInUseException"
            }
          },
          "489": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Updates a given object's attributes.",
        "operationId": "UpdateObjectAttributes"
      }
    },
    "/amazonclouddirectory/2017-01-11/policy/attach#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "PolicyReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "PolicyReference",
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AttachPolicyResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "NotPolicyException",
            "schema": {
              "$ref": "#/definitions/NotPolicyException"
            }
          }
        },
        "description": "Attaches a policy object to a regular object. An object can have a limited number of attached policies.",
        "operationId": "AttachPolicy"
      }
    },
    "/amazonclouddirectory/2017-01-11/policy/attachment#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ],
            "in": "header",
            "name": "x-amz-consistency-level",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of items to be retrieved in a single call. This is an approximate number.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "PolicyReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "PolicyReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListPolicyAttachmentsResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "488": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "489": {
            "description": "NotPolicyException",
            "schema": {
              "$ref": "#/definitions/NotPolicyException"
            }
          }
        },
        "description": "Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.",
        "operationId": "ListPolicyAttachments"
      }
    },
    "/amazonclouddirectory/2017-01-11/policy/detach#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "PolicyReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "PolicyReference",
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DetachPolicyResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "NotPolicyException",
            "schema": {
              "$ref": "#/definitions/NotPolicyException"
            }
          }
        },
        "description": "Detaches a policy from an object.",
        "operationId": "DetachPolicy"
      }
    },
    "/amazonclouddirectory/2017-01-11/policy/lookup#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of items to be retrieved in a single call. This is an approximate number.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The token to request the next page of results.",
                  "type": "string"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LookupPolicyResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "488": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don't have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don't lead to the root from the target object are ignored. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\">Policies</a>.",
        "operationId": "LookupPolicy"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the development schema. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteSchemaResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "StillContainsLinksException",
            "schema": {
              "$ref": "#/definitions/StillContainsLinksException"
            }
          }
        },
        "description": "Deletes a given schema. Schemas in a development and published state can only be deleted. ",
        "operationId": "DeleteSchema"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/applied": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DirectoryArn": {
                  "description": "The ARN of the directory you are listing.",
                  "type": "string"
                },
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "SchemaArn": {
                  "description": "The response for <code>ListAppliedSchemaArns</code> when this parameter is used will list all minor version ARNs for a major version.",
                  "type": "string"
                }
              },
              "required": [
                "DirectoryArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAppliedSchemaArnsResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": "Lists schema major versions applied to a directory. If <code>SchemaArn</code> is provided, lists the minor version.",
        "operationId": "ListAppliedSchemaArns"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/apply#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> into which the schema is copied. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "PublishedSchemaArn": {
                  "description": "Published schema Amazon Resource Name (ARN) that needs to be copied. For more information, see <a>arns</a>.",
                  "type": "string"
                }
              },
              "required": [
                "PublishedSchemaArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApplySchemaResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "SchemaAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/SchemaAlreadyExistsException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "InvalidAttachmentException",
            "schema": {
              "$ref": "#/definitions/InvalidAttachmentException"
            }
          }
        },
        "description": "Copies the input published schema, at the specified version, into the <a>Directory</a> with the same name and version as that of the published schema.",
        "operationId": "ApplySchema"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/create": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name that is associated with the schema. This is unique to each account and in each region.",
                  "maxLength": 32,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateSchemaResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "SchemaAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/SchemaAlreadyExistsException"
            }
          },
          "487": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Creates a new schema in a development state. A schema can exist in three phases:</p> <ul> <li> <p> <i>Development:</i> This is a mutable phase of the schema. All new schemas are in the development phase. Once the schema is finalized, it can be published.</p> </li> <li> <p> <i>Published:</i> Published schemas are immutable and have a version associated with them.</p> </li> <li> <p> <i>Applied:</i> Applied schemas are mutable in a way that allows you to add new schema facets. You can also add new, nonrequired attributes to existing schema facets. You can apply only published schemas to directories. </p> </li> </ul>",
        "operationId": "CreateSchema"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/development": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDevelopmentSchemaArnsResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": "Retrieves each Amazon Resource Name (ARN) of schemas in the development state.",
        "operationId": "ListDevelopmentSchemaArns"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/getappliedschema": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "SchemaArn": {
                  "description": "The ARN of the applied schema.",
                  "type": "string"
                }
              },
              "required": [
                "SchemaArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAppliedSchemaVersionResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Returns current applied schema version ARN, including the minor version in use.",
        "operationId": "GetAppliedSchemaVersion"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/json#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the schema to retrieve.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSchemaAsJsonResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Retrieves a JSON representation of the schema. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json\">JSON Schema Format</a> for more information.",
        "operationId": "GetSchemaAsJson"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the schema to update.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Document": {
                  "description": "The replacement JSON schema.",
                  "type": "string"
                }
              },
              "required": [
                "Document"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutSchemaFromJsonResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "InvalidSchemaDocException",
            "schema": {
              "$ref": "#/definitions/InvalidSchemaDocException"
            }
          },
          "487": {
            "description": "InvalidRuleException",
            "schema": {
              "$ref": "#/definitions/InvalidRuleException"
            }
          }
        },
        "description": "Allows a schema to be updated using JSON upload. Only available for development schemas. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json\">JSON Schema Format</a> for more information.",
        "operationId": "PutSchemaFromJson"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/managed": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "SchemaArn": {
                  "description": "The response for ListManagedSchemaArns. When this parameter is used, all minor version ARNs for a major version are listed.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListManagedSchemaArnsResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": "Lists the major version families of each managed schema. If a major version ARN is provided as SchemaArn, the minor version revisions in that family are listed instead.",
        "operationId": "ListManagedSchemaArns"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/publish#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the development schema. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MinorVersion": {
                  "description": "The minor version under which the schema will be published. This parameter is recommended. Schemas have both a major and minor version associated with them.",
                  "maxLength": 10,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                },
                "Name": {
                  "description": "The new name under which the schema will be published. If this is not provided, the development schema is considered.",
                  "maxLength": 32,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                },
                "Version": {
                  "description": "The major version under which the schema will be published. Schemas have both a major and minor version associated with them.",
                  "maxLength": 10,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                }
              },
              "required": [
                "Version"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PublishSchemaResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "SchemaAlreadyPublishedException",
            "schema": {
              "$ref": "#/definitions/SchemaAlreadyPublishedException"
            }
          }
        },
        "description": "Publishes a development schema with a major version and a recommended minor version.",
        "operationId": "PublishSchema"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/published": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "SchemaArn": {
                  "description": "The response for <code>ListPublishedSchemaArns</code> when this parameter is used will list all minor version ARNs for a major version.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListPublishedSchemaArnsResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": "Lists the major version families of each published schema. If a major version ARN is provided as <code>SchemaArn</code>, the minor version revisions in that family are listed instead.",
        "operationId": "ListPublishedSchemaArns"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/update#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the development schema. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name of the schema.",
                  "maxLength": 32,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateSchemaResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Updates the schema name with a new name. Only development schema names can be updated.",
        "operationId": "UpdateSchema"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/upgradeapplied": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DirectoryArn": {
                  "description": "The ARN for the directory to which the upgraded schema will be applied.",
                  "type": "string"
                },
                "DryRun": {
                  "description": "Used for testing whether the major version schemas are backward compatible or not. If schema compatibility fails, an exception would be thrown else the call would succeed but no changes will be saved. This parameter is optional.",
                  "type": "boolean"
                },
                "PublishedSchemaArn": {
                  "description": "The revision of the published schema to upgrade the directory to.",
                  "type": "string"
                }
              },
              "required": [
                "PublishedSchemaArn",
                "DirectoryArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpgradeAppliedSchemaResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "IncompatibleSchemaException",
            "schema": {
              "$ref": "#/definitions/IncompatibleSchemaException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidAttachmentException",
            "schema": {
              "$ref": "#/definitions/InvalidAttachmentException"
            }
          },
          "488": {
            "description": "SchemaAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/SchemaAlreadyExistsException"
            }
          }
        },
        "description": "Upgrades a single directory in-place using the <code>PublishedSchemaArn</code> with schema updates found in <code>MinorVersion</code>. Backwards-compatible minor version upgrades are instantaneously available for readers on all objects in the directory. Note: This is a synchronous API call and upgrades only one schema on a given directory per call. To upgrade multiple directories from one schema, you would need to call this API on each directory.",
        "operationId": "UpgradeAppliedSchema"
      }
    },
    "/amazonclouddirectory/2017-01-11/schema/upgradepublished": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DevelopmentSchemaArn": {
                  "description": "The ARN of the development schema with the changes used for the upgrade.",
                  "type": "string"
                },
                "DryRun": {
                  "description": "Used for testing whether the Development schema provided is backwards compatible, or not, with the publish schema provided by the user to be upgraded. If schema compatibility fails, an exception would be thrown else the call would succeed. This parameter is optional and defaults to false.",
                  "type": "boolean"
                },
                "MinorVersion": {
                  "description": "Identifies the minor version of the published schema that will be created. This parameter is NOT optional.",
                  "maxLength": 10,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                },
                "PublishedSchemaArn": {
                  "description": "The ARN of the published schema to be upgraded.",
                  "type": "string"
                }
              },
              "required": [
                "DevelopmentSchemaArn",
                "PublishedSchemaArn",
                "MinorVersion"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpgradePublishedSchemaResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "IncompatibleSchemaException",
            "schema": {
              "$ref": "#/definitions/IncompatibleSchemaException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidAttachmentException",
            "schema": {
              "$ref": "#/definitions/InvalidAttachmentException"
            }
          },
          "488": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "Upgrades a published schema under a new minor version revision using the current contents of <code>DevelopmentSchemaArn</code>.",
        "operationId": "UpgradePublishedSchema"
      }
    },
    "/amazonclouddirectory/2017-01-11/tags": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. This is for future use and is not supported currently.",
                  "minimum": 50,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token. This is for future use. Currently pagination is not supported for tagging.",
                  "type": "string"
                },
                "ResourceArn": {
                  "description": "The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.",
                  "type": "string"
                }
              },
              "required": [
                "ResourceArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidTaggingRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidTaggingRequestException"
            }
          }
        },
        "description": "Returns tags for a resource. Tagging is currently supported only for directories with a limit of 50 tags per directory. All 50 tags are returned for a given directory with this API call.",
        "operationId": "ListTagsForResource"
      }
    },
    "/amazonclouddirectory/2017-01-11/tags/add": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ResourceArn": {
                  "description": "The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.",
                  "type": "string"
                },
                "Tags": {
                  "description": "A list of tag key-value pairs.",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  },
                  "type": "array"
                }
              },
              "required": [
                "ResourceArn",
                "Tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidTaggingRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidTaggingRequestException"
            }
          }
        },
        "description": "An API operation for adding tags to a resource.",
        "operationId": "TagResource"
      }
    },
    "/amazonclouddirectory/2017-01-11/tags/remove": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ResourceArn": {
                  "description": "The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.",
                  "type": "string"
                },
                "TagKeys": {
                  "description": "Keys of the tag that need to be removed from the resource.",
                  "items": {
                    "$ref": "#/definitions/TagKey"
                  },
                  "type": "array"
                }
              },
              "required": [
                "ResourceArn",
                "TagKeys"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidTaggingRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidTaggingRequestException"
            }
          }
        },
        "description": "An API operation for removing tags from a resource.",
        "operationId": "UntagResource"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/attach#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the directory where you want to attach the typed link.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Attributes": {
                  "description": "A set of attributes that are associated with the typed link.",
                  "items": {
                    "$ref": "#/definitions/AttributeNameAndValue"
                  },
                  "type": "array"
                },
                "SourceObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "TargetObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "TypedLinkFacet": {
                  "description": "Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.",
                  "properties": {
                    "SchemaArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
                        }
                      ]
                    },
                    "TypedLinkName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TypedLinkName"
                        },
                        {
                          "description": "The unique name of the typed link facet."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "SourceObjectReference",
                "TargetObjectReference",
                "TypedLinkFacet",
                "Attributes"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AttachTypedLinkResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "InvalidAttachmentException",
            "schema": {
              "$ref": "#/definitions/InvalidAttachmentException"
            }
          },
          "489": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "490": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Attaches a typed link to a specified source and target object. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
        "operationId": "AttachTypedLink"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/attributes/get#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the Directory where the typed link resides. For more information, see <a>arns</a> or <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AttributeNames": {
                  "description": "A list of attribute names whose values will be retrieved.",
                  "items": {
                    "$ref": "#/definitions/AttributeName"
                  },
                  "type": "array"
                },
                "ConsistencyLevel": {
                  "description": "The consistency level at which to retrieve the attributes on a typed link.",
                  "enum": [
                    "SERIALIZABLE",
                    "EVENTUAL"
                  ],
                  "type": "string"
                },
                "TypedLinkSpecifier": {
                  "description": "Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.",
                  "properties": {
                    "IdentityAttributeValues": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AttributeNameAndValueList"
                        },
                        {
                          "description": "Identifies the attribute value to update."
                        }
                      ]
                    },
                    "SourceObjectReference": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ObjectReference"
                        },
                        {
                          "description": "Identifies the source object that the typed link will attach to."
                        }
                      ]
                    },
                    "TargetObjectReference": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ObjectReference"
                        },
                        {
                          "description": "Identifies the target object that the typed link will attach to."
                        }
                      ]
                    },
                    "TypedLinkFacet": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TypedLinkSchemaAndFacetName"
                        },
                        {
                          "description": "Identifies the typed link facet that is associated with the typed link."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "TypedLinkSpecifier",
                "AttributeNames"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetLinkAttributesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Retrieves attributes that are associated with a typed link.",
        "operationId": "GetLinkAttributes"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/attributes/update#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the Directory where the updated typed link resides. For more information, see <a>arns</a> or <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AttributeUpdates": {
                  "description": "The attributes update structure.",
                  "items": {
                    "$ref": "#/definitions/LinkAttributeUpdate"
                  },
                  "type": "array"
                },
                "TypedLinkSpecifier": {
                  "description": "Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.",
                  "properties": {
                    "IdentityAttributeValues": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AttributeNameAndValueList"
                        },
                        {
                          "description": "Identifies the attribute value to update."
                        }
                      ]
                    },
                    "SourceObjectReference": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ObjectReference"
                        },
                        {
                          "description": "Identifies the source object that the typed link will attach to."
                        }
                      ]
                    },
                    "TargetObjectReference": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ObjectReference"
                        },
                        {
                          "description": "Identifies the target object that the typed link will attach to."
                        }
                      ]
                    },
                    "TypedLinkFacet": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TypedLinkSchemaAndFacetName"
                        },
                        {
                          "description": "Identifies the typed link facet that is associated with the typed link."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "TypedLinkSpecifier",
                "AttributeUpdates"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateLinkAttributesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Updates a given typed link’s attributes. Attributes to be updated must not contribute to the typed link’s identity, as defined by its <code>IdentityAttributeOrder</code>.",
        "operationId": "UpdateLinkAttributes"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/detach#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the directory where you want to detach the typed link.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "TypedLinkSpecifier": {
                  "description": "Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.",
                  "properties": {
                    "IdentityAttributeValues": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AttributeNameAndValueList"
                        },
                        {
                          "description": "Identifies the attribute value to update."
                        }
                      ]
                    },
                    "SourceObjectReference": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ObjectReference"
                        },
                        {
                          "description": "Identifies the source object that the typed link will attach to."
                        }
                      ]
                    },
                    "TargetObjectReference": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ObjectReference"
                        },
                        {
                          "description": "Identifies the target object that the typed link will attach to."
                        }
                      ]
                    },
                    "TypedLinkFacet": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TypedLinkSchemaAndFacetName"
                        },
                        {
                          "description": "Identifies the typed link facet that is associated with the typed link."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "TypedLinkSpecifier"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Detaches a typed link from a specified source and target object. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
        "operationId": "DetachTypedLink"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/facet#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AttributeUpdates": {
                  "description": "Attributes update structure.",
                  "items": {
                    "$ref": "#/definitions/TypedLinkFacetAttributeUpdate"
                  },
                  "type": "array"
                },
                "IdentityAttributeOrder": {
                  "description": "The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to a typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
                  "items": {
                    "$ref": "#/definitions/AttributeName"
                  },
                  "type": "array"
                },
                "Name": {
                  "description": "The unique name of the typed link facet.",
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                }
              },
              "required": [
                "Name",
                "AttributeUpdates",
                "IdentityAttributeOrder"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateTypedLinkFacetResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          },
          "487": {
            "description": "InvalidFacetUpdateException",
            "schema": {
              "$ref": "#/definitions/InvalidFacetUpdateException"
            }
          },
          "488": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "489": {
            "description": "FacetNotFoundException",
            "schema": {
              "$ref": "#/definitions/FacetNotFoundException"
            }
          },
          "490": {
            "description": "InvalidRuleException",
            "schema": {
              "$ref": "#/definitions/InvalidRuleException"
            }
          }
        },
        "description": "Updates a <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
        "operationId": "UpdateTypedLinkFacet"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/facet/attributes#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "Name": {
                  "description": "The unique name of the typed link facet.",
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTypedLinkFacetAttributesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "FacetNotFoundException",
            "schema": {
              "$ref": "#/definitions/FacetNotFoundException"
            }
          },
          "488": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": "Returns a paginated list of all attribute definitions for a particular <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
        "operationId": "ListTypedLinkFacetAttributes"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/facet/create#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Facet": {
                  "description": "Defines the typed links structure and its attributes. To create a typed link facet, use the <a>CreateTypedLinkFacet</a> API.",
                  "properties": {
                    "Attributes": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TypedLinkAttributeDefinitionList"
                        },
                        {
                          "description": "A set of key-value pairs associated with the typed link. Typed link attributes are used when you have data values that are related to the link itself, and not to one of the two objects being linked. Identity attributes also serve to distinguish the link from others of the same type between the same objects."
                        }
                      ]
                    },
                    "IdentityAttributeOrder": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AttributeNameList"
                        },
                        {
                          "description": "The set of attributes that distinguish links made from this facet from each other, in the order of significance. Listing typed links can filter on the values of these attributes. See <a>ListOutgoingTypedLinks</a> and <a>ListIncomingTypedLinks</a> for details."
                        }
                      ]
                    },
                    "Name": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TypedLinkName"
                        },
                        {
                          "description": "The unique name of the typed link facet."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "Facet"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateTypedLinkFacetResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "FacetAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/FacetAlreadyExistsException"
            }
          },
          "488": {
            "description": "InvalidRuleException",
            "schema": {
              "$ref": "#/definitions/InvalidRuleException"
            }
          },
          "489": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Creates a <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
        "operationId": "CreateTypedLinkFacet"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/facet/delete#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The unique name of the typed link facet.",
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteTypedLinkFacetResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "FacetNotFoundException",
            "schema": {
              "$ref": "#/definitions/FacetNotFoundException"
            }
          }
        },
        "description": "Deletes a <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
        "operationId": "DeleteTypedLinkFacet"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/facet/get#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The unique name of the typed link facet.",
                  "pattern": "^[a-zA-Z0-9._-]*$",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetTypedLinkFacetInformationResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "488": {
            "description": "FacetNotFoundException",
            "schema": {
              "$ref": "#/definitions/FacetNotFoundException"
            }
          }
        },
        "description": "Returns the identity attribute order for a specific <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
        "operationId": "GetTypedLinkFacetInformation"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/facet/list#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTypedLinkFacetNamesResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "487": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          }
        },
        "description": "Returns a paginated list of <code>TypedLink</code> facet names for a particular schema. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
        "operationId": "ListTypedLinkFacetNames"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/incoming#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the directory where you want to list the typed links.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ConsistencyLevel": {
                  "description": "The consistency level to execute the request at.",
                  "enum": [
                    "SERIALIZABLE",
                    "EVENTUAL"
                  ],
                  "type": "string"
                },
                "FilterAttributeRanges": {
                  "description": "Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.",
                  "items": {
                    "$ref": "#/definitions/TypedLinkAttributeRange"
                  },
                  "type": "array"
                },
                "FilterTypedLink": {
                  "description": "Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.",
                  "properties": {
                    "SchemaArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
                        }
                      ]
                    },
                    "TypedLinkName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TypedLinkName"
                        },
                        {
                          "description": "The unique name of the typed link facet."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListIncomingTypedLinksResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "489": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
        "operationId": "ListIncomingTypedLinks"
      }
    },
    "/amazonclouddirectory/2017-01-11/typedlink/outgoing#x-amz-data-partition": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the directory where you want to list the typed links.",
            "in": "header",
            "name": "x-amz-data-partition",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ConsistencyLevel": {
                  "description": "The consistency level to execute the request at.",
                  "enum": [
                    "SERIALIZABLE",
                    "EVENTUAL"
                  ],
                  "type": "string"
                },
                "FilterAttributeRanges": {
                  "description": "Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.",
                  "items": {
                    "$ref": "#/definitions/TypedLinkAttributeRange"
                  },
                  "type": "array"
                },
                "FilterTypedLink": {
                  "description": "Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.",
                  "properties": {
                    "SchemaArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
                        }
                      ]
                    },
                    "TypedLinkName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TypedLinkName"
                        },
                        {
                          "description": "The unique name of the typed link facet."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "MaxResults": {
                  "description": "The maximum number of results to retrieve.",
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The pagination token.",
                  "type": "string"
                },
                "ObjectReference": {
                  "description": "The reference that identifies an object.",
                  "properties": {
                    "Selector": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SelectorObjectReference"
                        },
                        {
                          "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ObjectReference"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListOutgoingTypedLinksResponse"
            }
          },
          "480": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "481": {
            "description": "InvalidArnException",
            "schema": {
              "$ref": "#/definitions/InvalidArnException"
            }
          },
          "482": {
            "description": "RetryableConflictException",
            "schema": {
              "$ref": "#/definitions/RetryableConflictException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "DirectoryNotEnabledException",
            "schema": {
              "$ref": "#/definitions/DirectoryNotEnabledException"
            }
          },
          "487": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "488": {
            "description": "InvalidNextTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidNextTokenException"
            }
          },
          "489": {
            "description": "FacetValidationException",
            "schema": {
              "$ref": "#/definitions/FacetValidationException"
            }
          }
        },
        "description": "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
        "operationId": "ListOutgoingTypedLinks"
      }
    }
  },
  "definitions": {
    "AccessDeniedException": {},
    "AddFacetToObjectRequest": {
      "properties": {
        "ObjectAttributeList": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "Attributes on the facet that you are adding to the object."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object you are adding the specified facet to."
            }
          ]
        },
        "SchemaFacet": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacet"
            },
            {
              "description": "Identifiers for the facet that you are adding to the object. See <a>SchemaFacet</a> for details."
            }
          ]
        }
      },
      "required": [
        "SchemaFacet",
        "ObjectReference"
      ],
      "title": "AddFacetToObjectRequest",
      "type": "object"
    },
    "AddFacetToObjectResponse": {
      "properties": {},
      "type": "object"
    },
    "ApplySchemaRequest": {
      "properties": {
        "PublishedSchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "Published schema Amazon Resource Name (ARN) that needs to be copied. For more information, see <a>arns</a>."
            }
          ]
        }
      },
      "required": [
        "PublishedSchemaArn"
      ],
      "title": "ApplySchemaRequest",
      "type": "object"
    },
    "ApplySchemaResponse": {
      "properties": {
        "AppliedSchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The applied schema ARN that is associated with the copied schema in the <a>Directory</a>. You can use this ARN to describe the schema information applied on this directory. For more information, see <a>arns</a>."
            }
          ]
        },
        "DirectoryArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN that is associated with the <a>Directory</a>. For more information, see <a>arns</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "Arn": {
      "type": "string"
    },
    "Arns": {
      "items": {
        "$ref": "#/definitions/Arn"
      },
      "type": "array"
    },
    "AttachObjectRequest": {
      "properties": {
        "ChildReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The child object reference to be attached to the object."
            }
          ]
        },
        "LinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkName"
            },
            {
              "description": "The link name with which the child object is attached to the parent."
            }
          ]
        },
        "ParentReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The parent object reference."
            }
          ]
        }
      },
      "required": [
        "ParentReference",
        "ChildReference",
        "LinkName"
      ],
      "title": "AttachObjectRequest",
      "type": "object"
    },
    "AttachObjectResponse": {
      "properties": {
        "AttachedObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The attached <code>ObjectIdentifier</code>, which is the child <code>ObjectIdentifier</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "AttachPolicyRequest": {
      "properties": {
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object to which the policy will be attached."
            }
          ]
        },
        "PolicyReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that is associated with the policy object."
            }
          ]
        }
      },
      "required": [
        "PolicyReference",
        "ObjectReference"
      ],
      "title": "AttachPolicyRequest",
      "type": "object"
    },
    "AttachPolicyResponse": {
      "properties": {},
      "type": "object"
    },
    "AttachToIndexRequest": {
      "properties": {
        "IndexReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the index that you are attaching the object to."
            }
          ]
        },
        "TargetReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object that you are attaching to the index."
            }
          ]
        }
      },
      "required": [
        "IndexReference",
        "TargetReference"
      ],
      "title": "AttachToIndexRequest",
      "type": "object"
    },
    "AttachToIndexResponse": {
      "properties": {
        "AttachedObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the object that was attached to the index."
            }
          ]
        }
      },
      "type": "object"
    },
    "AttachTypedLinkRequest": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameAndValueList"
            },
            {
              "description": "A set of attributes that are associated with the typed link."
            }
          ]
        },
        "SourceObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Identifies the source object that the typed link will attach to."
            }
          ]
        },
        "TargetObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Identifies the target object that the typed link will attach to."
            }
          ]
        },
        "TypedLinkFacet": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSchemaAndFacetName"
            },
            {
              "description": "Identifies the typed link facet that is associated with the typed link."
            }
          ]
        }
      },
      "required": [
        "SourceObjectReference",
        "TargetObjectReference",
        "TypedLinkFacet",
        "Attributes"
      ],
      "title": "AttachTypedLinkRequest",
      "type": "object"
    },
    "AttachTypedLinkResponse": {
      "properties": {
        "TypedLinkSpecifier": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifier"
            },
            {
              "description": "Returns a typed link specifier as output."
            }
          ]
        }
      },
      "type": "object"
    },
    "AttributeKey": {
      "description": "A unique identifier for an attribute.",
      "properties": {
        "FacetName": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetName"
            },
            {
              "description": "The name of the facet that the attribute exists within."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeName"
            },
            {
              "description": "The name of the attribute."
            }
          ]
        },
        "SchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the schema that contains the facet and attribute."
            }
          ]
        }
      },
      "required": [
        "SchemaArn",
        "FacetName",
        "Name"
      ],
      "type": "object"
    },
    "AttributeKeyAndValue": {
      "description": "The combination of an attribute key and an attribute value.",
      "properties": {
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKey"
            },
            {
              "description": "The key of the attribute."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedAttributeValue"
            },
            {
              "description": "The value of the attribute."
            }
          ]
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "object"
    },
    "AttributeKeyAndValueList": {
      "items": {
        "$ref": "#/definitions/AttributeKeyAndValue"
      },
      "type": "array"
    },
    "AttributeKeyList": {
      "items": {
        "$ref": "#/definitions/AttributeKey"
      },
      "type": "array"
    },
    "AttributeName": {
      "maxLength": 230,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9._:-]*$",
      "type": "string"
    },
    "AttributeNameAndValue": {
      "description": "Identifies the attribute name and value for a typed link.",
      "properties": {
        "AttributeName": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeName"
            },
            {
              "description": "The attribute name of the typed link."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedAttributeValue"
            },
            {
              "description": "The value for the typed link."
            }
          ]
        }
      },
      "required": [
        "AttributeName",
        "Value"
      ],
      "type": "object"
    },
    "AttributeNameAndValueList": {
      "items": {
        "$ref": "#/definitions/AttributeNameAndValue"
      },
      "type": "array"
    },
    "AttributeNameList": {
      "items": {
        "$ref": "#/definitions/AttributeName"
      },
      "type": "array"
    },
    "BatchAddFacetToObject": {
      "description": "Represents the output of a batch add facet to object operation.",
      "properties": {
        "ObjectAttributeList": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "The attributes to set on the object."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object being mutated."
            }
          ]
        },
        "SchemaFacet": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacet"
            },
            {
              "description": "Represents the facet being added to the object."
            }
          ]
        }
      },
      "required": [
        "SchemaFacet",
        "ObjectAttributeList",
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchAddFacetToObjectResponse": {
      "description": "The result of a batch add facet to object operation.",
      "properties": {},
      "type": "object"
    },
    "BatchAttachObject": {
      "description": "Represents the output of an <a>AttachObject</a> operation.",
      "properties": {
        "ChildReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The child object reference that is to be attached to the object."
            }
          ]
        },
        "LinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkName"
            },
            {
              "description": "The name of the link."
            }
          ]
        },
        "ParentReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The parent object reference."
            }
          ]
        }
      },
      "required": [
        "ParentReference",
        "ChildReference",
        "LinkName"
      ],
      "type": "object"
    },
    "BatchAttachObjectResponse": {
      "description": "Represents the output batch <a>AttachObject</a> response operation.",
      "properties": {
        "attachedObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the object that has been attached."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchAttachPolicy": {
      "description": "Attaches a policy object to a regular object inside a <a>BatchRead</a> operation. For more information, see <a>AttachPolicy</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object to which the policy will be attached."
            }
          ]
        },
        "PolicyReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that is associated with the policy object."
            }
          ]
        }
      },
      "required": [
        "PolicyReference",
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchAttachPolicyResponse": {
      "description": "Represents the output of an <a>AttachPolicy</a> response operation.",
      "properties": {},
      "type": "object"
    },
    "BatchAttachToIndex": {
      "description": "Attaches the specified object to the specified index inside a <a>BatchRead</a> operation. For more information, see <a>AttachToIndex</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "IndexReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the index that you are attaching the object to."
            }
          ]
        },
        "TargetReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object that you are attaching to the index."
            }
          ]
        }
      },
      "required": [
        "IndexReference",
        "TargetReference"
      ],
      "type": "object"
    },
    "BatchAttachToIndexResponse": {
      "description": "Represents the output of a <a>AttachToIndex</a> response operation.",
      "properties": {
        "AttachedObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the object that was attached to the index."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchAttachTypedLink": {
      "description": "Attaches a typed link to a specified source and target object inside a <a>BatchRead</a> operation. For more information, see <a>AttachTypedLink</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameAndValueList"
            },
            {
              "description": "A set of attributes that are associated with the typed link."
            }
          ]
        },
        "SourceObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Identifies the source object that the typed link will attach to."
            }
          ]
        },
        "TargetObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Identifies the target object that the typed link will attach to."
            }
          ]
        },
        "TypedLinkFacet": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSchemaAndFacetName"
            },
            {
              "description": "Identifies the typed link facet that is associated with the typed link."
            }
          ]
        }
      },
      "required": [
        "SourceObjectReference",
        "TargetObjectReference",
        "TypedLinkFacet",
        "Attributes"
      ],
      "type": "object"
    },
    "BatchAttachTypedLinkResponse": {
      "description": "Represents the output of a <a>AttachTypedLink</a> response operation.",
      "properties": {
        "TypedLinkSpecifier": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifier"
            },
            {
              "description": "Returns a typed link specifier as output."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchCreateIndex": {
      "description": "Creates an index object inside of a <a>BatchRead</a> operation. For more information, see <a>CreateIndex</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "BatchReferenceName": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchReferenceName"
            },
            {
              "description": "The batch reference name. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/transaction_support.html\">Transaction Support</a> for more information."
            }
          ]
        },
        "IsUnique": {
          "allOf": [
            {
              "$ref": "#/definitions/Bool"
            },
            {
              "description": "Indicates whether the attribute that is being indexed has unique values or not."
            }
          ]
        },
        "LinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkName"
            },
            {
              "description": "The name of the link between the parent object and the index object."
            }
          ]
        },
        "OrderedIndexedAttributeList": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyList"
            },
            {
              "description": "Specifies the attributes that should be indexed on. Currently only a single attribute is supported."
            }
          ]
        },
        "ParentReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the parent object that contains the index object."
            }
          ]
        }
      },
      "required": [
        "OrderedIndexedAttributeList",
        "IsUnique"
      ],
      "type": "object"
    },
    "BatchCreateIndexResponse": {
      "description": "Represents the output of a <a>CreateIndex</a> response operation.",
      "properties": {
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the index created by this operation."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchCreateObject": {
      "description": "Represents the output of a <a>CreateObject</a> operation.",
      "properties": {
        "BatchReferenceName": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchReferenceName"
            },
            {
              "description": "The batch reference name. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/transaction_support.html\">Transaction Support</a> for more information."
            }
          ]
        },
        "LinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkName"
            },
            {
              "description": "The name of the link."
            }
          ]
        },
        "ObjectAttributeList": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "An attribute map, which contains an attribute ARN as the key and attribute value as the map value."
            }
          ]
        },
        "ParentReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "If specified, the parent reference to which this object will be attached."
            }
          ]
        },
        "SchemaFacet": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacetList"
            },
            {
              "description": "A list of <code>FacetArns</code> that will be associated with the object. For more information, see <a>arns</a>."
            }
          ]
        }
      },
      "required": [
        "SchemaFacet",
        "ObjectAttributeList"
      ],
      "type": "object"
    },
    "BatchCreateObjectResponse": {
      "description": "Represents the output of a <a>CreateObject</a> response operation.",
      "properties": {
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The ID that is associated with the object."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchDeleteObject": {
      "description": "Represents the output of a <a>DeleteObject</a> operation.",
      "properties": {
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchDeleteObjectResponse": {
      "description": "Represents the output of a <a>DeleteObject</a> response operation.",
      "properties": {},
      "type": "object"
    },
    "BatchDetachFromIndex": {
      "description": "Detaches the specified object from the specified index inside a <a>BatchRead</a> operation. For more information, see <a>DetachFromIndex</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "IndexReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the index object."
            }
          ]
        },
        "TargetReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object being detached from the index."
            }
          ]
        }
      },
      "required": [
        "IndexReference",
        "TargetReference"
      ],
      "type": "object"
    },
    "BatchDetachFromIndexResponse": {
      "description": "Represents the output of a <a>DetachFromIndex</a> response operation.",
      "properties": {
        "DetachedObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the object that was detached from the index."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchDetachObject": {
      "description": "Represents the output of a <a>DetachObject</a> operation.",
      "properties": {
        "BatchReferenceName": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchReferenceName"
            },
            {
              "description": "The batch reference name. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/transaction_support.html\">Transaction Support</a> for more information."
            }
          ]
        },
        "LinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkName"
            },
            {
              "description": "The name of the link."
            }
          ]
        },
        "ParentReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Parent reference from which the object with the specified link name is detached."
            }
          ]
        }
      },
      "required": [
        "ParentReference",
        "LinkName"
      ],
      "type": "object"
    },
    "BatchDetachObjectResponse": {
      "description": "Represents the output of a <a>DetachObject</a> response operation.",
      "properties": {
        "detachedObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the detached object."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchDetachPolicy": {
      "description": "Detaches the specified policy from the specified directory inside a <a>BatchWrite</a> operation. For more information, see <a>DetachPolicy</a> and <a>BatchWriteRequest$Operations</a>.",
      "properties": {
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the object whose policy object will be detached."
            }
          ]
        },
        "PolicyReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the policy object."
            }
          ]
        }
      },
      "required": [
        "PolicyReference",
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchDetachPolicyResponse": {
      "description": "Represents the output of a <a>DetachPolicy</a> response operation.",
      "properties": {},
      "type": "object"
    },
    "BatchDetachTypedLink": {
      "description": "Detaches a typed link from a specified source and target object inside a <a>BatchRead</a> operation. For more information, see <a>DetachTypedLink</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "TypedLinkSpecifier": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifier"
            },
            {
              "description": "Used to accept a typed link specifier as input."
            }
          ]
        }
      },
      "required": [
        "TypedLinkSpecifier"
      ],
      "type": "object"
    },
    "BatchDetachTypedLinkResponse": {
      "description": "Represents the output of a <a>DetachTypedLink</a> response operation.",
      "properties": {},
      "type": "object"
    },
    "BatchGetLinkAttributes": {
      "description": "Retrieves attributes that are associated with a typed link inside a <a>BatchRead</a> operation. For more information, see <a>GetLinkAttributes</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "AttributeNames": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameList"
            },
            {
              "description": "A list of attribute names whose values will be retrieved."
            }
          ]
        },
        "TypedLinkSpecifier": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifier"
            },
            {
              "description": "Allows a typed link specifier to be accepted as input."
            }
          ]
        }
      },
      "required": [
        "TypedLinkSpecifier",
        "AttributeNames"
      ],
      "type": "object"
    },
    "BatchGetLinkAttributesResponse": {
      "description": "Represents the output of a <a>GetLinkAttributes</a> response operation.",
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "The attributes that are associated with the typed link."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchGetObjectAttributes": {
      "description": "Retrieves attributes within a facet that are associated with an object inside an <a>BatchRead</a> operation. For more information, see <a>GetObjectAttributes</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "AttributeNames": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameList"
            },
            {
              "description": "List of attribute names whose values will be retrieved."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the object whose attributes will be retrieved."
            }
          ]
        },
        "SchemaFacet": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacet"
            },
            {
              "description": "Identifier for the facet whose attributes will be retrieved. See <a>SchemaFacet</a> for details."
            }
          ]
        }
      },
      "required": [
        "ObjectReference",
        "SchemaFacet",
        "AttributeNames"
      ],
      "type": "object"
    },
    "BatchGetObjectAttributesResponse": {
      "description": "Represents the output of a <a>GetObjectAttributes</a> response operation.",
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "The attribute values that are associated with an object."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchGetObjectInformation": {
      "description": "Retrieves metadata about an object inside a <a>BatchRead</a> operation. For more information, see <a>GetObjectInformation</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchGetObjectInformationResponse": {
      "description": "Represents the output of a <a>GetObjectInformation</a> response operation.",
      "properties": {
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the specified object."
            }
          ]
        },
        "SchemaFacets": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacetList"
            },
            {
              "description": "The facets attached to the specified object."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchListAttachedIndices": {
      "description": "Lists indices attached to an object inside a <a>BatchRead</a> operation. For more information, see <a>ListAttachedIndices</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "TargetReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object that has indices attached."
            }
          ]
        }
      },
      "required": [
        "TargetReference"
      ],
      "type": "object"
    },
    "BatchListAttachedIndicesResponse": {
      "description": "Represents the output of a <a>ListAttachedIndices</a> response operation.",
      "properties": {
        "IndexAttachments": {
          "allOf": [
            {
              "$ref": "#/definitions/IndexAttachmentList"
            },
            {
              "description": "The indices attached to the specified object."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchListIncomingTypedLinks": {
      "description": "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object inside a <a>BatchRead</a> operation. For more information, see <a>ListIncomingTypedLinks</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "FilterAttributeRanges": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkAttributeRangeList"
            },
            {
              "description": "Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range."
            }
          ]
        },
        "FilterTypedLink": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSchemaAndFacetName"
            },
            {
              "description": "Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object whose attributes will be listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchListIncomingTypedLinksResponse": {
      "description": "Represents the output of a <a>ListIncomingTypedLinks</a> response operation.",
      "properties": {
        "LinkSpecifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifierList"
            },
            {
              "description": "Returns one or more typed link specifiers as output."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchListIndex": {
      "description": "Lists objects attached to the specified index inside a <a>BatchRead</a> operation. For more information, see <a>ListIndex</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "IndexReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference to the index to list."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "RangesOnIndexedValues": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectAttributeRangeList"
            },
            {
              "description": "Specifies the ranges of indexed values that you want to query."
            }
          ]
        }
      },
      "required": [
        "IndexReference"
      ],
      "type": "object"
    },
    "BatchListIndexResponse": {
      "description": "Represents the output of a <a>ListIndex</a> response operation.",
      "properties": {
        "IndexAttachments": {
          "allOf": [
            {
              "$ref": "#/definitions/IndexAttachmentList"
            },
            {
              "description": "The objects and indexed values attached to the index."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchListObjectAttributes": {
      "description": "Represents the output of a <a>ListObjectAttributes</a> operation.",
      "properties": {
        "FacetFilter": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacet"
            },
            {
              "description": "Used to filter the list of object attributes that are associated with a certain facet."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of items to be retrieved in a single call. This is an approximate number."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference of the object whose attributes need to be listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchListObjectAttributesResponse": {
      "description": "Represents the output of a <a>ListObjectAttributes</a> response operation.",
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "The attributes map that is associated with the object. <code>AttributeArn</code> is the key; attribute value is the value."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchListObjectChildren": {
      "description": "Represents the output of a <a>ListObjectChildren</a> operation.",
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "Maximum number of items to be retrieved in a single call. This is an approximate number."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference of the object for which child objects are being listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchListObjectChildrenResponse": {
      "description": "Represents the output of a <a>ListObjectChildren</a> response operation.",
      "properties": {
        "Children": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkNameToObjectIdentifierMap"
            },
            {
              "description": "The children structure, which is a map with the key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchListObjectParentPaths": {
      "description": "Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects inside a <a>BatchRead</a> operation. For more information, see <a>ListObjectParentPaths</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object whose attributes will be listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchListObjectParentPathsResponse": {
      "description": "Represents the output of a <a>ListObjectParentPaths</a> response operation.",
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "PathToObjectIdentifiersList": {
          "allOf": [
            {
              "$ref": "#/definitions/PathToObjectIdentifiersList"
            },
            {
              "description": "Returns the path to the <code>ObjectIdentifiers</code> that are associated with the directory."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchListObjectParents": {
      "properties": {
        "MaxResults": {
          "$ref": "#/definitions/NumberResults"
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken"
        },
        "ObjectReference": {
          "$ref": "#/definitions/ObjectReference"
        }
      },
      "required": [
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchListObjectParentsResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken"
        },
        "ParentLinks": {
          "$ref": "#/definitions/ObjectIdentifierAndLinkNameList"
        }
      },
      "type": "object"
    },
    "BatchListObjectPolicies": {
      "description": "Returns policies attached to an object in pagination fashion inside a <a>BatchRead</a> operation. For more information, see <a>ListObjectPolicies</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object whose attributes will be listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchListObjectPoliciesResponse": {
      "description": "Represents the output of a <a>ListObjectPolicies</a> response operation.",
      "properties": {
        "AttachedPolicyIds": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifierList"
            },
            {
              "description": "A list of policy <code>ObjectIdentifiers</code>, that are attached to the object."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchListOutgoingTypedLinks": {
      "description": "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object inside a <a>BatchRead</a> operation. For more information, see <a>ListOutgoingTypedLinks</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "FilterAttributeRanges": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkAttributeRangeList"
            },
            {
              "description": "Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range."
            }
          ]
        },
        "FilterTypedLink": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSchemaAndFacetName"
            },
            {
              "description": "Filters are interpreted in the order of the attributes defined on the typed link facet, not the order they are supplied to any API calls."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object whose attributes will be listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchListOutgoingTypedLinksResponse": {
      "description": "Represents the output of a <a>ListOutgoingTypedLinks</a> response operation.",
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "TypedLinkSpecifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifierList"
            },
            {
              "description": "Returns a typed link specifier as output."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchListPolicyAttachments": {
      "description": "Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached inside a <a>BatchRead</a> operation. For more information, see <a>ListPolicyAttachments</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "PolicyReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the policy object."
            }
          ]
        }
      },
      "required": [
        "PolicyReference"
      ],
      "type": "object"
    },
    "BatchListPolicyAttachmentsResponse": {
      "description": "Represents the output of a <a>ListPolicyAttachments</a> response operation.",
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectIdentifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifierList"
            },
            {
              "description": "A list of <code>ObjectIdentifiers</code> to which the policy is attached."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchLookupPolicy": {
      "description": "Lists all policies from the root of the Directory to the object specified inside a <a>BatchRead</a> operation. For more information, see <a>LookupPolicy</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the object whose policies will be looked up."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchLookupPolicyResponse": {
      "description": "Represents the output of a <a>LookupPolicy</a> response operation.",
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "PolicyToPathList": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyToPathList"
            },
            {
              "description": "Provides list of path to policies. Policies contain <code>PolicyId</code>, <code>ObjectIdentifier</code>, and <code>PolicyType</code>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\">Policies</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchReadException": {
      "description": "The batch read exception structure, which contains the exception type and message.",
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/ExceptionMessage"
            },
            {
              "description": "An exception message that is associated with the failure."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchReadExceptionType"
            },
            {
              "description": "A type of exception, such as <code>InvalidArnException</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchReadExceptionType": {
      "enum": [
        "ValidationException",
        "InvalidArnException",
        "ResourceNotFoundException",
        "InvalidNextTokenException",
        "AccessDeniedException",
        "NotNodeException",
        "FacetValidationException",
        "CannotListParentOfRootException",
        "NotIndexException",
        "NotPolicyException",
        "DirectoryNotEnabledException",
        "LimitExceededException",
        "InternalServiceException"
      ],
      "type": "string"
    },
    "BatchReadOperation": {
      "description": "Represents the output of a <code>BatchRead</code> operation.",
      "properties": {
        "GetLinkAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchGetLinkAttributes"
            },
            {
              "description": "Retrieves attributes that are associated with a typed link."
            }
          ]
        },
        "GetObjectAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchGetObjectAttributes"
            },
            {
              "description": "Retrieves attributes within a facet that are associated with an object."
            }
          ]
        },
        "GetObjectInformation": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchGetObjectInformation"
            },
            {
              "description": "Retrieves metadata about an object."
            }
          ]
        },
        "ListAttachedIndices": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListAttachedIndices"
            },
            {
              "description": "Lists indices attached to an object."
            }
          ]
        },
        "ListIncomingTypedLinks": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListIncomingTypedLinks"
            },
            {
              "description": "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
            }
          ]
        },
        "ListIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListIndex"
            },
            {
              "description": "Lists objects attached to the specified index."
            }
          ]
        },
        "ListObjectAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListObjectAttributes"
            },
            {
              "description": "Lists all attributes that are associated with an object."
            }
          ]
        },
        "ListObjectChildren": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListObjectChildren"
            },
            {
              "description": "Returns a paginated list of child objects that are associated with a given object."
            }
          ]
        },
        "ListObjectParentPaths": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListObjectParentPaths"
            },
            {
              "description": "Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html\">Directory Structure</a>."
            }
          ]
        },
        "ListObjectParents": {
          "$ref": "#/definitions/BatchListObjectParents"
        },
        "ListObjectPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListObjectPolicies"
            },
            {
              "description": "Returns policies attached to an object in pagination fashion."
            }
          ]
        },
        "ListOutgoingTypedLinks": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListOutgoingTypedLinks"
            },
            {
              "description": "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
            }
          ]
        },
        "ListPolicyAttachments": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListPolicyAttachments"
            },
            {
              "description": "Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached."
            }
          ]
        },
        "LookupPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchLookupPolicy"
            },
            {
              "description": "Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don't have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don't lead to the root from the target object are ignored. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\">Policies</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchReadOperationList": {
      "items": {
        "$ref": "#/definitions/BatchReadOperation"
      },
      "type": "array"
    },
    "BatchReadOperationResponse": {
      "description": "Represents the output of a <code>BatchRead</code> response operation.",
      "properties": {
        "ExceptionResponse": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchReadException"
            },
            {
              "description": "Identifies which operation in a batch has failed."
            }
          ]
        },
        "SuccessfulResponse": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchReadSuccessfulResponse"
            },
            {
              "description": "Identifies which operation in a batch has succeeded."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchReadOperationResponseList": {
      "items": {
        "$ref": "#/definitions/BatchReadOperationResponse"
      },
      "type": "array"
    },
    "BatchReadRequest": {
      "properties": {
        "Operations": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchReadOperationList"
            },
            {
              "description": "A list of operations that are part of the batch."
            }
          ]
        }
      },
      "required": [
        "Operations"
      ],
      "title": "BatchReadRequest",
      "type": "object"
    },
    "BatchReadResponse": {
      "properties": {
        "Responses": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchReadOperationResponseList"
            },
            {
              "description": "A list of all the responses for each batch read."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchReadSuccessfulResponse": {
      "description": "Represents the output of a <code>BatchRead</code> success response operation.",
      "properties": {
        "GetLinkAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchGetLinkAttributesResponse"
            },
            {
              "description": "The list of attributes to retrieve from the typed link."
            }
          ]
        },
        "GetObjectAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchGetObjectAttributesResponse"
            },
            {
              "description": "Retrieves attributes within a facet that are associated with an object."
            }
          ]
        },
        "GetObjectInformation": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchGetObjectInformationResponse"
            },
            {
              "description": "Retrieves metadata about an object."
            }
          ]
        },
        "ListAttachedIndices": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListAttachedIndicesResponse"
            },
            {
              "description": "Lists indices attached to an object."
            }
          ]
        },
        "ListIncomingTypedLinks": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListIncomingTypedLinksResponse"
            },
            {
              "description": "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
            }
          ]
        },
        "ListIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListIndexResponse"
            },
            {
              "description": "Lists objects attached to the specified index."
            }
          ]
        },
        "ListObjectAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListObjectAttributesResponse"
            },
            {
              "description": "Lists all attributes that are associated with an object."
            }
          ]
        },
        "ListObjectChildren": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListObjectChildrenResponse"
            },
            {
              "description": "Returns a paginated list of child objects that are associated with a given object."
            }
          ]
        },
        "ListObjectParentPaths": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListObjectParentPathsResponse"
            },
            {
              "description": "Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html\">Directory Structure</a>."
            }
          ]
        },
        "ListObjectParents": {
          "$ref": "#/definitions/BatchListObjectParentsResponse"
        },
        "ListObjectPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListObjectPoliciesResponse"
            },
            {
              "description": "Returns policies attached to an object in pagination fashion."
            }
          ]
        },
        "ListOutgoingTypedLinks": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListOutgoingTypedLinksResponse"
            },
            {
              "description": "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
            }
          ]
        },
        "ListPolicyAttachments": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchListPolicyAttachmentsResponse"
            },
            {
              "description": "Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached."
            }
          ]
        },
        "LookupPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchLookupPolicyResponse"
            },
            {
              "description": "Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don't have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don't lead to the root from the target object are ignored. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\">Policies</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchReferenceName": {
      "type": "string"
    },
    "BatchRemoveFacetFromObject": {
      "description": "A batch operation to remove a facet from an object.",
      "properties": {
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object whose facet will be removed."
            }
          ]
        },
        "SchemaFacet": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacet"
            },
            {
              "description": "The facet to remove from the object."
            }
          ]
        }
      },
      "required": [
        "SchemaFacet",
        "ObjectReference"
      ],
      "type": "object"
    },
    "BatchRemoveFacetFromObjectResponse": {
      "description": "An empty result that represents success.",
      "properties": {},
      "type": "object"
    },
    "BatchUpdateLinkAttributes": {
      "description": "Updates a given typed link’s attributes inside a <a>BatchRead</a> operation. Attributes to be updated must not contribute to the typed link’s identity, as defined by its <code>IdentityAttributeOrder</code>. For more information, see <a>UpdateLinkAttributes</a> and <a>BatchReadRequest$Operations</a>.",
      "properties": {
        "AttributeUpdates": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkAttributeUpdateList"
            },
            {
              "description": "The attributes update structure."
            }
          ]
        },
        "TypedLinkSpecifier": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifier"
            },
            {
              "description": "Allows a typed link specifier to be accepted as input."
            }
          ]
        }
      },
      "required": [
        "TypedLinkSpecifier",
        "AttributeUpdates"
      ],
      "type": "object"
    },
    "BatchUpdateLinkAttributesResponse": {
      "description": "Represents the output of a <a>UpdateLinkAttributes</a> response operation.",
      "properties": {},
      "type": "object"
    },
    "BatchUpdateObjectAttributes": {
      "description": "Represents the output of a <code>BatchUpdate</code> operation. ",
      "properties": {
        "AttributeUpdates": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectAttributeUpdateList"
            },
            {
              "description": "Attributes update structure."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the object."
            }
          ]
        }
      },
      "required": [
        "ObjectReference",
        "AttributeUpdates"
      ],
      "type": "object"
    },
    "BatchUpdateObjectAttributesResponse": {
      "description": "Represents the output of a <code>BatchUpdate</code> response operation.",
      "properties": {
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "ID that is associated with the object."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchWriteException": {},
    "BatchWriteOperation": {
      "description": "Represents the output of a <code>BatchWrite</code> operation. ",
      "properties": {
        "AddFacetToObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchAddFacetToObject"
            },
            {
              "description": "A batch operation that adds a facet to an object."
            }
          ]
        },
        "AttachObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchAttachObject"
            },
            {
              "description": "Attaches an object to a <a>Directory</a>."
            }
          ]
        },
        "AttachPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchAttachPolicy"
            },
            {
              "description": "Attaches a policy object to a regular object. An object can have a limited number of attached policies."
            }
          ]
        },
        "AttachToIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchAttachToIndex"
            },
            {
              "description": "Attaches the specified object to the specified index."
            }
          ]
        },
        "AttachTypedLink": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchAttachTypedLink"
            },
            {
              "description": "Attaches a typed link to a specified source and target object. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
            }
          ]
        },
        "CreateIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchCreateIndex"
            },
            {
              "description": "Creates an index object. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.htm\">Indexing and search</a> for more information."
            }
          ]
        },
        "CreateObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchCreateObject"
            },
            {
              "description": "Creates an object."
            }
          ]
        },
        "DeleteObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDeleteObject"
            },
            {
              "description": "Deletes an object in a <a>Directory</a>."
            }
          ]
        },
        "DetachFromIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDetachFromIndex"
            },
            {
              "description": "Detaches the specified object from the specified index."
            }
          ]
        },
        "DetachObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDetachObject"
            },
            {
              "description": "Detaches an object from a <a>Directory</a>."
            }
          ]
        },
        "DetachPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDetachPolicy"
            },
            {
              "description": "Detaches a policy from a <a>Directory</a>."
            }
          ]
        },
        "DetachTypedLink": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDetachTypedLink"
            },
            {
              "description": "Detaches a typed link from a specified source and target object. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
            }
          ]
        },
        "RemoveFacetFromObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchRemoveFacetFromObject"
            },
            {
              "description": "A batch operation that removes a facet from an object."
            }
          ]
        },
        "UpdateLinkAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchUpdateLinkAttributes"
            },
            {
              "description": "Updates a given object's attributes."
            }
          ]
        },
        "UpdateObjectAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchUpdateObjectAttributes"
            },
            {
              "description": "Updates a given object's attributes."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchWriteOperationList": {
      "items": {
        "$ref": "#/definitions/BatchWriteOperation"
      },
      "type": "array"
    },
    "BatchWriteOperationResponse": {
      "description": "Represents the output of a <code>BatchWrite</code> response operation.",
      "properties": {
        "AddFacetToObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchAddFacetToObjectResponse"
            },
            {
              "description": "The result of an add facet to object batch operation."
            }
          ]
        },
        "AttachObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchAttachObjectResponse"
            },
            {
              "description": "Attaches an object to a <a>Directory</a>."
            }
          ]
        },
        "AttachPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchAttachPolicyResponse"
            },
            {
              "description": "Attaches a policy object to a regular object. An object can have a limited number of attached policies."
            }
          ]
        },
        "AttachToIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchAttachToIndexResponse"
            },
            {
              "description": "Attaches the specified object to the specified index."
            }
          ]
        },
        "AttachTypedLink": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchAttachTypedLinkResponse"
            },
            {
              "description": "Attaches a typed link to a specified source and target object. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
            }
          ]
        },
        "CreateIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchCreateIndexResponse"
            },
            {
              "description": "Creates an index object. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.htm\">Indexing and search</a> for more information."
            }
          ]
        },
        "CreateObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchCreateObjectResponse"
            },
            {
              "description": "Creates an object in a <a>Directory</a>."
            }
          ]
        },
        "DeleteObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDeleteObjectResponse"
            },
            {
              "description": "Deletes an object in a <a>Directory</a>."
            }
          ]
        },
        "DetachFromIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDetachFromIndexResponse"
            },
            {
              "description": "Detaches the specified object from the specified index."
            }
          ]
        },
        "DetachObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDetachObjectResponse"
            },
            {
              "description": "Detaches an object from a <a>Directory</a>."
            }
          ]
        },
        "DetachPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDetachPolicyResponse"
            },
            {
              "description": "Detaches a policy from a <a>Directory</a>."
            }
          ]
        },
        "DetachTypedLink": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDetachTypedLinkResponse"
            },
            {
              "description": "Detaches a typed link from a specified source and target object. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
            }
          ]
        },
        "RemoveFacetFromObject": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchRemoveFacetFromObjectResponse"
            },
            {
              "description": "The result of a batch remove facet from object operation."
            }
          ]
        },
        "UpdateLinkAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchUpdateLinkAttributesResponse"
            },
            {
              "description": "Represents the output of a <code>BatchWrite</code> response operation."
            }
          ]
        },
        "UpdateObjectAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchUpdateObjectAttributesResponse"
            },
            {
              "description": "Updates a given object’s attributes."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchWriteOperationResponseList": {
      "items": {
        "$ref": "#/definitions/BatchWriteOperationResponse"
      },
      "type": "array"
    },
    "BatchWriteRequest": {
      "properties": {
        "Operations": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchWriteOperationList"
            },
            {
              "description": "A list of operations that are part of the batch."
            }
          ]
        }
      },
      "required": [
        "Operations"
      ],
      "title": "BatchWriteRequest",
      "type": "object"
    },
    "BatchWriteResponse": {
      "properties": {
        "Responses": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchWriteOperationResponseList"
            },
            {
              "description": "A list of all the responses for each batch write."
            }
          ]
        }
      },
      "type": "object"
    },
    "BinaryAttributeValue": {
      "type": "string"
    },
    "Bool": {
      "type": "boolean"
    },
    "BooleanAttributeValue": {
      "type": "boolean"
    },
    "CannotListParentOfRootException": {},
    "ConsistencyLevel": {
      "enum": [
        "SERIALIZABLE",
        "EVENTUAL"
      ],
      "type": "string"
    },
    "CreateDirectoryRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryName"
            },
            {
              "description": "The name of the <a>Directory</a>. Should be unique per account, per region."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "CreateDirectoryRequest",
      "type": "object"
    },
    "CreateDirectoryResponse": {
      "properties": {
        "AppliedSchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the published schema in the <a>Directory</a>. Once a published schema is copied into the directory, it has its own ARN, which is referred to applied schema ARN. For more information, see <a>arns</a>."
            }
          ]
        },
        "DirectoryArn": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryArn"
            },
            {
              "description": "The ARN that is associated with the <a>Directory</a>. For more information, see <a>arns</a>."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryName"
            },
            {
              "description": "The name of the <a>Directory</a>."
            }
          ]
        },
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The root object node of the created directory."
            }
          ]
        }
      },
      "required": [
        "DirectoryArn",
        "Name",
        "ObjectIdentifier",
        "AppliedSchemaArn"
      ],
      "type": "object"
    },
    "CreateFacetRequest": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetAttributeList"
            },
            {
              "description": "The attributes that are associated with the <a>Facet</a>."
            }
          ]
        },
        "FacetStyle": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetStyle"
            },
            {
              "description": "There are two different styles that you can define on any given facet, <code>Static</code> and <code>Dynamic</code>. For static facets, all attributes must be defined in the schema. For dynamic facets, attributes can be defined during data plane operations."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetName"
            },
            {
              "description": "The name of the <a>Facet</a>, which is unique for a given schema."
            }
          ]
        },
        "ObjectType": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectType"
            },
            {
              "description": "<p>Specifies whether a given object created from this facet is of type node, leaf node, policy or index.</p> <ul> <li> <p>Node: Can have multiple children but one parent.</p> </li> </ul> <ul> <li> <p>Leaf node: Cannot have children but can have multiple parents.</p> </li> </ul> <ul> <li> <p>Policy: Allows you to store a policy document and policy type. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\">Policies</a>.</p> </li> </ul> <ul> <li> <p>Index: Can be created with the Index API.</p> </li> </ul>"
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "CreateFacetRequest",
      "type": "object"
    },
    "CreateFacetResponse": {
      "properties": {},
      "type": "object"
    },
    "CreateIndexRequest": {
      "properties": {
        "IsUnique": {
          "allOf": [
            {
              "$ref": "#/definitions/Bool"
            },
            {
              "description": "Indicates whether the attribute that is being indexed has unique values or not."
            }
          ]
        },
        "LinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkName"
            },
            {
              "description": "The name of the link between the parent object and the index object."
            }
          ]
        },
        "OrderedIndexedAttributeList": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyList"
            },
            {
              "description": "Specifies the attributes that should be indexed on. Currently only a single attribute is supported."
            }
          ]
        },
        "ParentReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the parent object that contains the index object."
            }
          ]
        }
      },
      "required": [
        "OrderedIndexedAttributeList",
        "IsUnique"
      ],
      "title": "CreateIndexRequest",
      "type": "object"
    },
    "CreateIndexResponse": {
      "properties": {
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the index created by this operation."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateObjectRequest": {
      "properties": {
        "LinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkName"
            },
            {
              "description": "The name of link that is used to attach this object to a parent."
            }
          ]
        },
        "ObjectAttributeList": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "The attribute map whose attribute ARN contains the key and attribute value as the map value."
            }
          ]
        },
        "ParentReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "If specified, the parent reference to which this object will be attached."
            }
          ]
        },
        "SchemaFacets": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacetList"
            },
            {
              "description": "A list of schema facets to be associated with the object. Do not provide minor version components. See <a>SchemaFacet</a> for details."
            }
          ]
        }
      },
      "required": [
        "SchemaFacets"
      ],
      "title": "CreateObjectRequest",
      "type": "object"
    },
    "CreateObjectResponse": {
      "properties": {
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The identifier that is associated with the object."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateSchemaRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaName"
            },
            {
              "description": "The name that is associated with the schema. This is unique to each account and in each region."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "CreateSchemaRequest",
      "type": "object"
    },
    "CreateSchemaResponse": {
      "properties": {
        "SchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateTypedLinkFacetRequest": {
      "properties": {
        "Facet": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkFacet"
            },
            {
              "description": " <a>Facet</a> structure that is associated with the typed link facet."
            }
          ]
        }
      },
      "required": [
        "Facet"
      ],
      "title": "CreateTypedLinkFacetRequest",
      "type": "object"
    },
    "CreateTypedLinkFacetResponse": {
      "properties": {},
      "type": "object"
    },
    "Date": {
      "format": "date-time",
      "type": "string"
    },
    "DatetimeAttributeValue": {
      "format": "date-time",
      "type": "string"
    },
    "DeleteDirectoryRequest": {
      "properties": {},
      "title": "DeleteDirectoryRequest",
      "type": "object"
    },
    "DeleteDirectoryResponse": {
      "properties": {
        "DirectoryArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the deleted directory."
            }
          ]
        }
      },
      "required": [
        "DirectoryArn"
      ],
      "type": "object"
    },
    "DeleteFacetRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetName"
            },
            {
              "description": "The name of the facet to delete."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "DeleteFacetRequest",
      "type": "object"
    },
    "DeleteFacetResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteObjectRequest": {
      "properties": {
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference that identifies the object."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "title": "DeleteObjectRequest",
      "type": "object"
    },
    "DeleteObjectResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteSchemaRequest": {
      "properties": {},
      "title": "DeleteSchemaRequest",
      "type": "object"
    },
    "DeleteSchemaResponse": {
      "properties": {
        "SchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The input ARN that is returned as part of the response. For more information, see <a>arns</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteTypedLinkFacetRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkName"
            },
            {
              "description": "The unique name of the typed link facet."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "DeleteTypedLinkFacetRequest",
      "type": "object"
    },
    "DeleteTypedLinkFacetResponse": {
      "properties": {},
      "type": "object"
    },
    "DetachFromIndexRequest": {
      "properties": {
        "IndexReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the index object."
            }
          ]
        },
        "TargetReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object being detached from the index."
            }
          ]
        }
      },
      "required": [
        "IndexReference",
        "TargetReference"
      ],
      "title": "DetachFromIndexRequest",
      "type": "object"
    },
    "DetachFromIndexResponse": {
      "properties": {
        "DetachedObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the object that was detached from the index."
            }
          ]
        }
      },
      "type": "object"
    },
    "DetachObjectRequest": {
      "properties": {
        "LinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkName"
            },
            {
              "description": "The link name associated with the object that needs to be detached."
            }
          ]
        },
        "ParentReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The parent reference from which the object with the specified link name is detached."
            }
          ]
        }
      },
      "required": [
        "ParentReference",
        "LinkName"
      ],
      "title": "DetachObjectRequest",
      "type": "object"
    },
    "DetachObjectResponse": {
      "properties": {
        "DetachedObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> that was detached from the object."
            }
          ]
        }
      },
      "type": "object"
    },
    "DetachPolicyRequest": {
      "properties": {
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the object whose policy object will be detached."
            }
          ]
        },
        "PolicyReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the policy object."
            }
          ]
        }
      },
      "required": [
        "PolicyReference",
        "ObjectReference"
      ],
      "title": "DetachPolicyRequest",
      "type": "object"
    },
    "DetachPolicyResponse": {
      "properties": {},
      "type": "object"
    },
    "DetachTypedLinkRequest": {
      "properties": {
        "TypedLinkSpecifier": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifier"
            },
            {
              "description": "Used to accept a typed link specifier as input."
            }
          ]
        }
      },
      "required": [
        "TypedLinkSpecifier"
      ],
      "title": "DetachTypedLinkRequest",
      "type": "object"
    },
    "Directory": {
      "description": "Directory structure that includes the directory name and directory ARN.",
      "properties": {
        "CreationDateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time when the directory was created."
            }
          ]
        },
        "DirectoryArn": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryArn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that is associated with the directory. For more information, see <a>arns</a>."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryName"
            },
            {
              "description": "The name of the directory."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryState"
            },
            {
              "description": "The state of the directory. Can be either <code>Enabled</code>, <code>Disabled</code>, or <code>Deleted</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "DirectoryAlreadyExistsException": {},
    "DirectoryArn": {
      "type": "string"
    },
    "DirectoryDeletedException": {},
    "DirectoryList": {
      "items": {
        "$ref": "#/definitions/Directory"
      },
      "type": "array"
    },
    "DirectoryName": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9._-]*$",
      "type": "string"
    },
    "DirectoryNotDisabledException": {},
    "DirectoryNotEnabledException": {},
    "DirectoryState": {
      "enum": [
        "ENABLED",
        "DISABLED",
        "DELETED"
      ],
      "type": "string"
    },
    "DisableDirectoryRequest": {
      "properties": {},
      "title": "DisableDirectoryRequest",
      "type": "object"
    },
    "DisableDirectoryResponse": {
      "properties": {
        "DirectoryArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the directory that has been disabled."
            }
          ]
        }
      },
      "required": [
        "DirectoryArn"
      ],
      "type": "object"
    },
    "EnableDirectoryRequest": {
      "properties": {},
      "title": "EnableDirectoryRequest",
      "type": "object"
    },
    "EnableDirectoryResponse": {
      "properties": {
        "DirectoryArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the enabled directory."
            }
          ]
        }
      },
      "required": [
        "DirectoryArn"
      ],
      "type": "object"
    },
    "ExceptionMessage": {
      "type": "string"
    },
    "Facet": {
      "description": "A structure that contains <code>Name</code>, <code>ARN</code>, <code>Attributes</code>, <code> <a>Rule</a>s</code>, and <code>ObjectTypes</code>. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_whatarefacets.html\">Facets</a> for more information.",
      "properties": {
        "FacetStyle": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetStyle"
            },
            {
              "description": "There are two different styles that you can define on any given facet, <code>Static</code> and <code>Dynamic</code>. For static facets, all attributes must be defined in the schema. For dynamic facets, attributes can be defined during data plane operations."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetName"
            },
            {
              "description": "The name of the <a>Facet</a>."
            }
          ]
        },
        "ObjectType": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectType"
            },
            {
              "description": "The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details."
            }
          ]
        }
      },
      "type": "object"
    },
    "FacetAlreadyExistsException": {},
    "FacetAttribute": {
      "description": "An attribute that is associated with the <a>Facet</a>.",
      "properties": {
        "AttributeDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetAttributeDefinition"
            },
            {
              "description": "A facet attribute consists of either a definition or a reference. This structure contains the attribute definition. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html\">Attribute References</a> for more information."
            }
          ]
        },
        "AttributeReference": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetAttributeReference"
            },
            {
              "description": "An attribute reference that is associated with the attribute. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html\">Attribute References</a> for more information."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeName"
            },
            {
              "description": "The name of the facet attribute."
            }
          ]
        },
        "RequiredBehavior": {
          "allOf": [
            {
              "$ref": "#/definitions/RequiredAttributeBehavior"
            },
            {
              "description": "The required behavior of the <code>FacetAttribute</code>."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "FacetAttributeDefinition": {
      "description": "A facet attribute definition. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html\">Attribute References</a> for more information.",
      "properties": {
        "DefaultValue": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedAttributeValue"
            },
            {
              "description": "The default value of the attribute (if configured)."
            }
          ]
        },
        "IsImmutable": {
          "allOf": [
            {
              "$ref": "#/definitions/Bool"
            },
            {
              "description": "Whether the attribute is mutable or not."
            }
          ]
        },
        "Rules": {
          "allOf": [
            {
              "$ref": "#/definitions/RuleMap"
            },
            {
              "description": "Validation rules attached to the attribute definition."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetAttributeType"
            },
            {
              "description": "The type of the attribute."
            }
          ]
        }
      },
      "required": [
        "Type"
      ],
      "type": "object"
    },
    "FacetAttributeList": {
      "items": {
        "$ref": "#/definitions/FacetAttribute"
      },
      "type": "array"
    },
    "FacetAttributeReference": {
      "description": "The facet attribute reference that specifies the attribute definition that contains the attribute facet name and attribute name.",
      "properties": {
        "TargetAttributeName": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeName"
            },
            {
              "description": "The target attribute name that is associated with the facet reference. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html\">Attribute References</a> for more information."
            }
          ]
        },
        "TargetFacetName": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetName"
            },
            {
              "description": "The target facet name that is associated with the facet reference. See <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html\">Attribute References</a> for more information."
            }
          ]
        }
      },
      "required": [
        "TargetFacetName",
        "TargetAttributeName"
      ],
      "type": "object"
    },
    "FacetAttributeType": {
      "enum": [
        "STRING",
        "BINARY",
        "BOOLEAN",
        "NUMBER",
        "DATETIME",
        "VARIANT"
      ],
      "type": "string"
    },
    "FacetAttributeUpdate": {
      "description": "A structure that contains information used to update an attribute.",
      "properties": {
        "Action": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateActionType"
            },
            {
              "description": "The action to perform when updating the attribute."
            }
          ]
        },
        "Attribute": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetAttribute"
            },
            {
              "description": "The attribute to update."
            }
          ]
        }
      },
      "type": "object"
    },
    "FacetAttributeUpdateList": {
      "items": {
        "$ref": "#/definitions/FacetAttributeUpdate"
      },
      "type": "array"
    },
    "FacetInUseException": {},
    "FacetName": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9._-]*$",
      "type": "string"
    },
    "FacetNameList": {
      "items": {
        "$ref": "#/definitions/FacetName"
      },
      "type": "array"
    },
    "FacetNotFoundException": {},
    "FacetStyle": {
      "enum": [
        "STATIC",
        "DYNAMIC"
      ],
      "type": "string"
    },
    "FacetValidationException": {},
    "GetAppliedSchemaVersionRequest": {
      "properties": {
        "SchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the applied schema."
            }
          ]
        }
      },
      "required": [
        "SchemaArn"
      ],
      "title": "GetAppliedSchemaVersionRequest",
      "type": "object"
    },
    "GetAppliedSchemaVersionResponse": {
      "properties": {
        "AppliedSchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "Current applied schema ARN, including the minor version in use if one was provided."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetDirectoryRequest": {
      "properties": {},
      "title": "GetDirectoryRequest",
      "type": "object"
    },
    "GetDirectoryResponse": {
      "properties": {
        "Directory": {
          "allOf": [
            {
              "$ref": "#/definitions/Directory"
            },
            {
              "description": "Metadata about the directory."
            }
          ]
        }
      },
      "required": [
        "Directory"
      ],
      "type": "object"
    },
    "GetFacetRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetName"
            },
            {
              "description": "The name of the facet to retrieve."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "GetFacetRequest",
      "type": "object"
    },
    "GetFacetResponse": {
      "properties": {
        "Facet": {
          "allOf": [
            {
              "$ref": "#/definitions/Facet"
            },
            {
              "description": "The <a>Facet</a> structure that is associated with the facet."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetLinkAttributesRequest": {
      "properties": {
        "AttributeNames": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameList"
            },
            {
              "description": "A list of attribute names whose values will be retrieved."
            }
          ]
        },
        "ConsistencyLevel": {
          "allOf": [
            {
              "$ref": "#/definitions/ConsistencyLevel"
            },
            {
              "description": "The consistency level at which to retrieve the attributes on a typed link."
            }
          ]
        },
        "TypedLinkSpecifier": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifier"
            },
            {
              "description": "Allows a typed link specifier to be accepted as input."
            }
          ]
        }
      },
      "required": [
        "TypedLinkSpecifier",
        "AttributeNames"
      ],
      "title": "GetLinkAttributesRequest",
      "type": "object"
    },
    "GetLinkAttributesResponse": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "The attributes that are associated with the typed link."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetObjectAttributesRequest": {
      "properties": {
        "AttributeNames": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameList"
            },
            {
              "description": "List of attribute names whose values will be retrieved."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the object whose attributes will be retrieved."
            }
          ]
        },
        "SchemaFacet": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacet"
            },
            {
              "description": "Identifier for the facet whose attributes will be retrieved. See <a>SchemaFacet</a> for details."
            }
          ]
        }
      },
      "required": [
        "ObjectReference",
        "SchemaFacet",
        "AttributeNames"
      ],
      "title": "GetObjectAttributesRequest",
      "type": "object"
    },
    "GetObjectAttributesResponse": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "The attributes that are associated with the object."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetObjectInformationRequest": {
      "properties": {
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "title": "GetObjectInformationRequest",
      "type": "object"
    },
    "GetObjectInformationResponse": {
      "properties": {
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the specified object."
            }
          ]
        },
        "SchemaFacets": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacetList"
            },
            {
              "description": "The facets attached to the specified object. Although the response does not include minor version information, the most recently applied minor version of each Facet is in effect. See <a>GetAppliedSchemaVersion</a> for details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetSchemaAsJsonRequest": {
      "properties": {},
      "title": "GetSchemaAsJsonRequest",
      "type": "object"
    },
    "GetSchemaAsJsonResponse": {
      "properties": {
        "Document": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaJsonDocument"
            },
            {
              "description": "The JSON representation of the schema document."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaName"
            },
            {
              "description": "The name of the retrieved schema."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetTypedLinkFacetInformationRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkName"
            },
            {
              "description": "The unique name of the typed link facet."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "GetTypedLinkFacetInformationRequest",
      "type": "object"
    },
    "GetTypedLinkFacetInformationResponse": {
      "properties": {
        "IdentityAttributeOrder": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameList"
            },
            {
              "description": "The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "IncompatibleSchemaException": {},
    "IndexAttachment": {
      "description": "Represents an index and an attached object.",
      "properties": {
        "IndexedAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "The indexed attribute values."
            }
          ]
        },
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "In response to <a>ListIndex</a>, the <code>ObjectIdentifier</code> of the object attached to the index. In response to <a>ListAttachedIndices</a>, the <code>ObjectIdentifier</code> of the index attached to the object. This field will always contain the <code>ObjectIdentifier</code> of the object on the opposite side of the attachment specified in the query."
            }
          ]
        }
      },
      "type": "object"
    },
    "IndexAttachmentList": {
      "items": {
        "$ref": "#/definitions/IndexAttachment"
      },
      "type": "array"
    },
    "IndexedAttributeMissingException": {},
    "InternalServiceException": {},
    "InvalidArnException": {},
    "InvalidAttachmentException": {},
    "InvalidFacetUpdateException": {},
    "InvalidNextTokenException": {},
    "InvalidRuleException": {},
    "InvalidSchemaDocException": {},
    "InvalidTaggingRequestException": {},
    "LimitExceededException": {},
    "LinkAttributeAction": {
      "description": "The action to take on a typed link attribute value. Updates are only supported for attributes which don’t contribute to link identity.",
      "properties": {
        "AttributeActionType": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateActionType"
            },
            {
              "description": "A type that can be either <code>UPDATE_OR_CREATE</code> or <code>DELETE</code>."
            }
          ]
        },
        "AttributeUpdateValue": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedAttributeValue"
            },
            {
              "description": "The value that you want to update to."
            }
          ]
        }
      },
      "type": "object"
    },
    "LinkAttributeUpdate": {
      "description": "Structure that contains attribute update information.",
      "properties": {
        "AttributeAction": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkAttributeAction"
            },
            {
              "description": "The action to perform as part of the attribute update."
            }
          ]
        },
        "AttributeKey": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKey"
            },
            {
              "description": "The key of the attribute being updated."
            }
          ]
        }
      },
      "type": "object"
    },
    "LinkAttributeUpdateList": {
      "items": {
        "$ref": "#/definitions/LinkAttributeUpdate"
      },
      "type": "array"
    },
    "LinkName": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+",
      "type": "string"
    },
    "LinkNameAlreadyInUseException": {},
    "LinkNameToObjectIdentifierMap": {
      "additionalProperties": {
        "$ref": "#/definitions/ObjectIdentifier"
      },
      "type": "object"
    },
    "ListAppliedSchemaArnsRequest": {
      "properties": {
        "DirectoryArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the directory you are listing."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "SchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The response for <code>ListAppliedSchemaArns</code> when this parameter is used will list all minor version ARNs for a major version."
            }
          ]
        }
      },
      "required": [
        "DirectoryArn"
      ],
      "title": "ListAppliedSchemaArnsRequest",
      "type": "object"
    },
    "ListAppliedSchemaArnsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "SchemaArns": {
          "allOf": [
            {
              "$ref": "#/definitions/Arns"
            },
            {
              "description": "The ARNs of schemas that are applied to the directory."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListAttachedIndicesRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "TargetReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object that has indices attached."
            }
          ]
        }
      },
      "required": [
        "TargetReference"
      ],
      "title": "ListAttachedIndicesRequest",
      "type": "object"
    },
    "ListAttachedIndicesResponse": {
      "properties": {
        "IndexAttachments": {
          "allOf": [
            {
              "$ref": "#/definitions/IndexAttachmentList"
            },
            {
              "description": "The indices attached to the specified object."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListDevelopmentSchemaArnsRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "title": "ListDevelopmentSchemaArnsRequest",
      "type": "object"
    },
    "ListDevelopmentSchemaArnsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "SchemaArns": {
          "allOf": [
            {
              "$ref": "#/definitions/Arns"
            },
            {
              "description": "The ARNs of retrieved development schemas."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListDirectoriesRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "state": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryState"
            },
            {
              "description": "The state of the directories in the list. Can be either Enabled, Disabled, or Deleted."
            }
          ]
        }
      },
      "title": "ListDirectoriesRequest",
      "type": "object"
    },
    "ListDirectoriesResponse": {
      "properties": {
        "Directories": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryList"
            },
            {
              "description": "Lists all directories that are associated with your account in pagination fashion."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "required": [
        "Directories"
      ],
      "type": "object"
    },
    "ListFacetAttributesRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetName"
            },
            {
              "description": "The name of the facet whose attributes will be retrieved."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "ListFacetAttributesRequest",
      "type": "object"
    },
    "ListFacetAttributesResponse": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetAttributeList"
            },
            {
              "description": "The attributes attached to the facet."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListFacetNamesRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "title": "ListFacetNamesRequest",
      "type": "object"
    },
    "ListFacetNamesResponse": {
      "properties": {
        "FacetNames": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetNameList"
            },
            {
              "description": "The names of facets that exist within the schema."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListIncomingTypedLinksRequest": {
      "properties": {
        "ConsistencyLevel": {
          "allOf": [
            {
              "$ref": "#/definitions/ConsistencyLevel"
            },
            {
              "description": "The consistency level to execute the request at."
            }
          ]
        },
        "FilterAttributeRanges": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkAttributeRangeList"
            },
            {
              "description": "Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range."
            }
          ]
        },
        "FilterTypedLink": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSchemaAndFacetName"
            },
            {
              "description": "Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the object whose attributes will be listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "title": "ListIncomingTypedLinksRequest",
      "type": "object"
    },
    "ListIncomingTypedLinksResponse": {
      "properties": {
        "LinkSpecifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifierList"
            },
            {
              "description": "Returns one or more typed link specifiers as output."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListIndexRequest": {
      "properties": {
        "IndexReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference to the index to list."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of objects in a single page to retrieve from the index during a request. For more information, see <a href=\"http://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html\">Amazon Cloud Directory Limits</a>."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "RangesOnIndexedValues": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectAttributeRangeList"
            },
            {
              "description": "Specifies the ranges of indexed values that you want to query."
            }
          ]
        }
      },
      "required": [
        "IndexReference"
      ],
      "title": "ListIndexRequest",
      "type": "object"
    },
    "ListIndexResponse": {
      "properties": {
        "IndexAttachments": {
          "allOf": [
            {
              "$ref": "#/definitions/IndexAttachmentList"
            },
            {
              "description": "The objects and indexed values attached to the index."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListManagedSchemaArnsRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "SchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The response for ListManagedSchemaArns. When this parameter is used, all minor version ARNs for a major version are listed."
            }
          ]
        }
      },
      "title": "ListManagedSchemaArnsRequest",
      "type": "object"
    },
    "ListManagedSchemaArnsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "SchemaArns": {
          "allOf": [
            {
              "$ref": "#/definitions/Arns"
            },
            {
              "description": "The ARNs for all AWS managed schemas."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListObjectAttributesRequest": {
      "properties": {
        "FacetFilter": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacet"
            },
            {
              "description": "Used to filter the list of object attributes that are associated with a certain facet."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of items to be retrieved in a single call. This is an approximate number."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object whose attributes will be listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "title": "ListObjectAttributesRequest",
      "type": "object"
    },
    "ListObjectAttributesResponse": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKeyAndValueList"
            },
            {
              "description": "Attributes map that is associated with the object. <code>AttributeArn</code> is the key, and attribute value is the value."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListObjectChildrenRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of items to be retrieved in a single call. This is an approximate number."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object for which child objects are being listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "title": "ListObjectChildrenRequest",
      "type": "object"
    },
    "ListObjectChildrenResponse": {
      "properties": {
        "Children": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkNameToObjectIdentifierMap"
            },
            {
              "description": "Children structure, which is a map with key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListObjectParentPathsRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of items to be retrieved in a single call. This is an approximate number."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object whose parent paths are listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "title": "ListObjectParentPathsRequest",
      "type": "object"
    },
    "ListObjectParentPathsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "PathToObjectIdentifiersList": {
          "allOf": [
            {
              "$ref": "#/definitions/PathToObjectIdentifiersList"
            },
            {
              "description": "Returns the path to the <code>ObjectIdentifiers</code> that are associated with the directory."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListObjectParentsRequest": {
      "properties": {
        "IncludeAllLinksToEachParent": {
          "allOf": [
            {
              "$ref": "#/definitions/Bool"
            },
            {
              "description": "When set to True, returns all <a>ListObjectParentsResponse$ParentLinks</a>. There could be multiple links between a parent-child pair."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of items to be retrieved in a single call. This is an approximate number."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object for which parent objects are being listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "title": "ListObjectParentsRequest",
      "type": "object"
    },
    "ListObjectParentsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ParentLinks": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifierAndLinkNameList"
            },
            {
              "description": "Returns a list of parent reference and LinkName Tuples."
            }
          ]
        },
        "Parents": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifierToLinkNameMap"
            },
            {
              "description": "The parent structure, which is a map with key as the <code>ObjectIdentifier</code> and LinkName as the value."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListObjectPoliciesRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of items to be retrieved in a single call. This is an approximate number."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the object for which policies will be listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "title": "ListObjectPoliciesRequest",
      "type": "object"
    },
    "ListObjectPoliciesResponse": {
      "properties": {
        "AttachedPolicyIds": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifierList"
            },
            {
              "description": "A list of policy <code>ObjectIdentifiers</code>, that are attached to the object."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListOutgoingTypedLinksRequest": {
      "properties": {
        "ConsistencyLevel": {
          "allOf": [
            {
              "$ref": "#/definitions/ConsistencyLevel"
            },
            {
              "description": "The consistency level to execute the request at."
            }
          ]
        },
        "FilterAttributeRanges": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkAttributeRangeList"
            },
            {
              "description": "Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range."
            }
          ]
        },
        "FilterTypedLink": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSchemaAndFacetName"
            },
            {
              "description": "Filters are interpreted in the order of the attributes defined on the typed link facet, not the order they are supplied to any API calls."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference that identifies the object whose attributes will be listed."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "title": "ListOutgoingTypedLinksRequest",
      "type": "object"
    },
    "ListOutgoingTypedLinksResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "TypedLinkSpecifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifierList"
            },
            {
              "description": "Returns a typed link specifier as output."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListPolicyAttachmentsRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of items to be retrieved in a single call. This is an approximate number."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "PolicyReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the policy object."
            }
          ]
        }
      },
      "required": [
        "PolicyReference"
      ],
      "title": "ListPolicyAttachmentsRequest",
      "type": "object"
    },
    "ListPolicyAttachmentsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "ObjectIdentifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifierList"
            },
            {
              "description": "A list of <code>ObjectIdentifiers</code> to which the policy is attached."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListPublishedSchemaArnsRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "SchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The response for <code>ListPublishedSchemaArns</code> when this parameter is used will list all minor version ARNs for a major version."
            }
          ]
        }
      },
      "title": "ListPublishedSchemaArnsRequest",
      "type": "object"
    },
    "ListPublishedSchemaArnsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "SchemaArns": {
          "allOf": [
            {
              "$ref": "#/definitions/Arns"
            },
            {
              "description": "The ARNs of published schemas."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/TagsNumberResults"
            },
            {
              "description": "The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. This is for future use and is not supported currently."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token. This is for future use. Currently pagination is not supported for tagging."
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories."
            }
          ]
        }
      },
      "required": [
        "ResourceArn"
      ],
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token to use to retrieve the next page of results. This value is null when there are no more results to return."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "A list of tag key value pairs that are associated with the response."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTypedLinkFacetAttributesRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkName"
            },
            {
              "description": "The unique name of the typed link facet."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "ListTypedLinkFacetAttributesRequest",
      "type": "object"
    },
    "ListTypedLinkFacetAttributesResponse": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkAttributeDefinitionList"
            },
            {
              "description": "An ordered set of attributes associate with the typed link."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTypedLinkFacetNamesRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of results to retrieve."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "title": "ListTypedLinkFacetNamesRequest",
      "type": "object"
    },
    "ListTypedLinkFacetNamesResponse": {
      "properties": {
        "FacetNames": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkNameList"
            },
            {
              "description": "The names of typed link facets that exist within the schema."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        }
      },
      "type": "object"
    },
    "LookupPolicyRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberResults"
            },
            {
              "description": "The maximum number of items to be retrieved in a single call. This is an approximate number."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token to request the next page of results."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Reference that identifies the object whose policies will be looked up."
            }
          ]
        }
      },
      "required": [
        "ObjectReference"
      ],
      "title": "LookupPolicyRequest",
      "type": "object"
    },
    "LookupPolicyResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token."
            }
          ]
        },
        "PolicyToPathList": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyToPathList"
            },
            {
              "description": "Provides list of path to policies. Policies contain <code>PolicyId</code>, <code>ObjectIdentifier</code>, and <code>PolicyType</code>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\">Policies</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "NextToken": {
      "type": "string"
    },
    "NotIndexException": {},
    "NotNodeException": {},
    "NotPolicyException": {},
    "NumberAttributeValue": {
      "type": "string"
    },
    "NumberResults": {
      "minimum": 1,
      "type": "integer"
    },
    "ObjectAlreadyDetachedException": {},
    "ObjectAttributeAction": {
      "description": "The action to take on the object attribute.",
      "properties": {
        "ObjectAttributeActionType": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateActionType"
            },
            {
              "description": "A type that can be either <code>Update</code> or <code>Delete</code>."
            }
          ]
        },
        "ObjectAttributeUpdateValue": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedAttributeValue"
            },
            {
              "description": "The value that you want to update to."
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectAttributeRange": {
      "description": "A range of attributes.",
      "properties": {
        "AttributeKey": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKey"
            },
            {
              "description": "The key of the attribute that the attribute range covers."
            }
          ]
        },
        "Range": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedAttributeValueRange"
            },
            {
              "description": "The range of attribute values being selected."
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectAttributeRangeList": {
      "items": {
        "$ref": "#/definitions/ObjectAttributeRange"
      },
      "type": "array"
    },
    "ObjectAttributeUpdate": {
      "description": "Structure that contains attribute update information.",
      "properties": {
        "ObjectAttributeAction": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectAttributeAction"
            },
            {
              "description": "The action to perform as part of the attribute update."
            }
          ]
        },
        "ObjectAttributeKey": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeKey"
            },
            {
              "description": "The key of the attribute being updated."
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectAttributeUpdateList": {
      "items": {
        "$ref": "#/definitions/ObjectAttributeUpdate"
      },
      "type": "array"
    },
    "ObjectIdentifier": {
      "type": "string"
    },
    "ObjectIdentifierAndLinkNameList": {
      "items": {
        "$ref": "#/definitions/ObjectIdentifierAndLinkNameTuple"
      },
      "type": "array"
    },
    "ObjectIdentifierAndLinkNameTuple": {
      "description": "A pair of ObjectIdentifier and LinkName.",
      "properties": {
        "LinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkName"
            },
            {
              "description": "The name of the link between the parent and the child object."
            }
          ]
        },
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The ID that is associated with the object."
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectIdentifierList": {
      "items": {
        "$ref": "#/definitions/ObjectIdentifier"
      },
      "type": "array"
    },
    "ObjectIdentifierToLinkNameMap": {
      "additionalProperties": {
        "$ref": "#/definitions/LinkName"
      },
      "type": "object"
    },
    "ObjectNotDetachedException": {},
    "ObjectReference": {
      "description": "The reference that identifies an object.",
      "properties": {
        "Selector": {
          "allOf": [
            {
              "$ref": "#/definitions/SelectorObjectReference"
            },
            {
              "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectType": {
      "enum": [
        "NODE",
        "LEAF_NODE",
        "POLICY",
        "INDEX"
      ],
      "type": "string"
    },
    "PathString": {
      "type": "string"
    },
    "PathToObjectIdentifiers": {
      "description": "Returns the path to the <code>ObjectIdentifiers</code> that is associated with the directory.",
      "properties": {
        "ObjectIdentifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifierList"
            },
            {
              "description": "Lists <code>ObjectIdentifiers</code> starting from directory root to the object in the request."
            }
          ]
        },
        "Path": {
          "allOf": [
            {
              "$ref": "#/definitions/PathString"
            },
            {
              "description": "The path that is used to identify the object starting from directory root."
            }
          ]
        }
      },
      "type": "object"
    },
    "PathToObjectIdentifiersList": {
      "items": {
        "$ref": "#/definitions/PathToObjectIdentifiers"
      },
      "type": "array"
    },
    "PolicyAttachment": {
      "description": "Contains the <code>PolicyType</code>, <code>PolicyId</code>, and the <code>ObjectIdentifier</code> to which it is attached. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\">Policies</a>.",
      "properties": {
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> that is associated with <code>PolicyAttachment</code>."
            }
          ]
        },
        "PolicyId": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The ID of <code>PolicyAttachment</code>."
            }
          ]
        },
        "PolicyType": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyType"
            },
            {
              "description": "The type of policy that can be associated with <code>PolicyAttachment</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "PolicyAttachmentList": {
      "items": {
        "$ref": "#/definitions/PolicyAttachment"
      },
      "type": "array"
    },
    "PolicyToPath": {
      "description": "Used when a regular object exists in a <a>Directory</a> and you want to find all of the policies that are associated with that object and the parent to that object.",
      "properties": {
        "Path": {
          "allOf": [
            {
              "$ref": "#/definitions/PathString"
            },
            {
              "description": "The path that is referenced from the root."
            }
          ]
        },
        "Policies": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyAttachmentList"
            },
            {
              "description": "List of policy objects."
            }
          ]
        }
      },
      "type": "object"
    },
    "PolicyToPathList": {
      "items": {
        "$ref": "#/definitions/PolicyToPath"
      },
      "type": "array"
    },
    "PolicyType": {
      "type": "string"
    },
    "PublishSchemaRequest": {
      "properties": {
        "MinorVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/Version"
            },
            {
              "description": "The minor version under which the schema will be published. This parameter is recommended. Schemas have both a major and minor version associated with them."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaName"
            },
            {
              "description": "The new name under which the schema will be published. If this is not provided, the development schema is considered."
            }
          ]
        },
        "Version": {
          "allOf": [
            {
              "$ref": "#/definitions/Version"
            },
            {
              "description": "The major version under which the schema will be published. Schemas have both a major and minor version associated with them."
            }
          ]
        }
      },
      "required": [
        "Version"
      ],
      "title": "PublishSchemaRequest",
      "type": "object"
    },
    "PublishSchemaResponse": {
      "properties": {
        "PublishedSchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN that is associated with the published schema. For more information, see <a>arns</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutSchemaFromJsonRequest": {
      "properties": {
        "Document": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaJsonDocument"
            },
            {
              "description": "The replacement JSON schema."
            }
          ]
        }
      },
      "required": [
        "Document"
      ],
      "title": "PutSchemaFromJsonRequest",
      "type": "object"
    },
    "PutSchemaFromJsonResponse": {
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the schema to update."
            }
          ]
        }
      },
      "type": "object"
    },
    "RangeMode": {
      "enum": [
        "FIRST",
        "LAST",
        "LAST_BEFORE_MISSING_VALUES",
        "INCLUSIVE",
        "EXCLUSIVE"
      ],
      "type": "string"
    },
    "RemoveFacetFromObjectRequest": {
      "properties": {
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "A reference to the object to remove the facet from."
            }
          ]
        },
        "SchemaFacet": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaFacet"
            },
            {
              "description": "The facet to remove. See <a>SchemaFacet</a> for details."
            }
          ]
        }
      },
      "required": [
        "SchemaFacet",
        "ObjectReference"
      ],
      "title": "RemoveFacetFromObjectRequest",
      "type": "object"
    },
    "RemoveFacetFromObjectResponse": {
      "properties": {},
      "type": "object"
    },
    "RequiredAttributeBehavior": {
      "enum": [
        "REQUIRED_ALWAYS",
        "NOT_REQUIRED"
      ],
      "type": "string"
    },
    "ResourceNotFoundException": {},
    "RetryableConflictException": {},
    "Rule": {
      "description": "Contains an Amazon Resource Name (ARN) and parameters that are associated with the rule.",
      "properties": {
        "Parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/RuleParameterMap"
            },
            {
              "description": "The minimum and maximum parameters that are associated with the rule."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/RuleType"
            },
            {
              "description": "The type of attribute validation rule."
            }
          ]
        }
      },
      "type": "object"
    },
    "RuleKey": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9._-]*$",
      "type": "string"
    },
    "RuleMap": {
      "additionalProperties": {
        "$ref": "#/definitions/Rule"
      },
      "type": "object"
    },
    "RuleParameterKey": {
      "type": "string"
    },
    "RuleParameterMap": {
      "additionalProperties": {
        "$ref": "#/definitions/RuleParameterValue"
      },
      "type": "object"
    },
    "RuleParameterValue": {
      "type": "string"
    },
    "RuleType": {
      "enum": [
        "BINARY_LENGTH",
        "NUMBER_COMPARISON",
        "STRING_FROM_SET",
        "STRING_LENGTH"
      ],
      "type": "string"
    },
    "SchemaAlreadyExistsException": {},
    "SchemaAlreadyPublishedException": {},
    "SchemaFacet": {
      "description": "A facet.",
      "properties": {
        "FacetName": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetName"
            },
            {
              "description": "The name of the facet."
            }
          ]
        },
        "SchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_inplaceschemaupgrade.html\">In-Place Schema Upgrade</a> for a description of when to provide minor versions."
            }
          ]
        }
      },
      "type": "object"
    },
    "SchemaFacetList": {
      "items": {
        "$ref": "#/definitions/SchemaFacet"
      },
      "type": "array"
    },
    "SchemaJsonDocument": {
      "type": "string"
    },
    "SchemaName": {
      "maxLength": 32,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9._-]*$",
      "type": "string"
    },
    "SelectorObjectReference": {
      "type": "string"
    },
    "StillContainsLinksException": {},
    "StringAttributeValue": {
      "type": "string"
    },
    "Tag": {
      "description": "The tag structure that contains a tag key and value.",
      "properties": {
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKey"
            },
            {
              "description": "The key that is associated with the tag."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/TagValue"
            },
            {
              "description": "The value that is associated with the tag."
            }
          ]
        }
      },
      "type": "object"
    },
    "TagKey": {
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "type": "array"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TagResourceRequest": {
      "properties": {
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "A list of tag key-value pairs."
            }
          ]
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "TagValue": {
      "type": "string"
    },
    "TagsNumberResults": {
      "minimum": 50,
      "type": "integer"
    },
    "TypedAttributeValue": {
      "description": "Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value.",
      "properties": {
        "BinaryValue": {
          "allOf": [
            {
              "$ref": "#/definitions/BinaryAttributeValue"
            },
            {
              "description": "A binary data value."
            }
          ]
        },
        "BooleanValue": {
          "allOf": [
            {
              "$ref": "#/definitions/BooleanAttributeValue"
            },
            {
              "description": "A Boolean data value."
            }
          ]
        },
        "DatetimeValue": {
          "allOf": [
            {
              "$ref": "#/definitions/DatetimeAttributeValue"
            },
            {
              "description": "A date and time value."
            }
          ]
        },
        "NumberValue": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberAttributeValue"
            },
            {
              "description": "A number data value."
            }
          ]
        },
        "StringValue": {
          "allOf": [
            {
              "$ref": "#/definitions/StringAttributeValue"
            },
            {
              "description": "A string data value."
            }
          ]
        }
      },
      "type": "object"
    },
    "TypedAttributeValueRange": {
      "description": "A range of attribute values. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_range_filters.html\">Range Filters</a>.",
      "properties": {
        "EndMode": {
          "allOf": [
            {
              "$ref": "#/definitions/RangeMode"
            },
            {
              "description": "The inclusive or exclusive range end."
            }
          ]
        },
        "EndValue": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedAttributeValue"
            },
            {
              "description": "The attribute value to terminate the range at."
            }
          ]
        },
        "StartMode": {
          "allOf": [
            {
              "$ref": "#/definitions/RangeMode"
            },
            {
              "description": "The inclusive or exclusive range start."
            }
          ]
        },
        "StartValue": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedAttributeValue"
            },
            {
              "description": "The value to start the range at."
            }
          ]
        }
      },
      "required": [
        "StartMode",
        "EndMode"
      ],
      "type": "object"
    },
    "TypedLinkAttributeDefinition": {
      "description": "A typed link attribute definition.",
      "properties": {
        "DefaultValue": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedAttributeValue"
            },
            {
              "description": "The default value of the attribute (if configured)."
            }
          ]
        },
        "IsImmutable": {
          "allOf": [
            {
              "$ref": "#/definitions/Bool"
            },
            {
              "description": "Whether the attribute is mutable or not."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeName"
            },
            {
              "description": "The unique name of the typed link attribute."
            }
          ]
        },
        "RequiredBehavior": {
          "allOf": [
            {
              "$ref": "#/definitions/RequiredAttributeBehavior"
            },
            {
              "description": "The required behavior of the <code>TypedLinkAttributeDefinition</code>."
            }
          ]
        },
        "Rules": {
          "allOf": [
            {
              "$ref": "#/definitions/RuleMap"
            },
            {
              "description": "Validation rules that are attached to the attribute definition."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetAttributeType"
            },
            {
              "description": "The type of the attribute."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Type",
        "RequiredBehavior"
      ],
      "type": "object"
    },
    "TypedLinkAttributeDefinitionList": {
      "items": {
        "$ref": "#/definitions/TypedLinkAttributeDefinition"
      },
      "type": "array"
    },
    "TypedLinkAttributeRange": {
      "description": "Identifies the range of attributes that are used by a specified filter.",
      "properties": {
        "AttributeName": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeName"
            },
            {
              "description": "The unique name of the typed link attribute."
            }
          ]
        },
        "Range": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedAttributeValueRange"
            },
            {
              "description": "The range of attribute values that are being selected."
            }
          ]
        }
      },
      "required": [
        "Range"
      ],
      "type": "object"
    },
    "TypedLinkAttributeRangeList": {
      "items": {
        "$ref": "#/definitions/TypedLinkAttributeRange"
      },
      "type": "array"
    },
    "TypedLinkFacet": {
      "description": "Defines the typed links structure and its attributes. To create a typed link facet, use the <a>CreateTypedLinkFacet</a> API.",
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkAttributeDefinitionList"
            },
            {
              "description": "A set of key-value pairs associated with the typed link. Typed link attributes are used when you have data values that are related to the link itself, and not to one of the two objects being linked. Identity attributes also serve to distinguish the link from others of the same type between the same objects."
            }
          ]
        },
        "IdentityAttributeOrder": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameList"
            },
            {
              "description": "The set of attributes that distinguish links made from this facet from each other, in the order of significance. Listing typed links can filter on the values of these attributes. See <a>ListOutgoingTypedLinks</a> and <a>ListIncomingTypedLinks</a> for details."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkName"
            },
            {
              "description": "The unique name of the typed link facet."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Attributes",
        "IdentityAttributeOrder"
      ],
      "type": "object"
    },
    "TypedLinkFacetAttributeUpdate": {
      "description": "A typed link facet attribute update.",
      "properties": {
        "Action": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateActionType"
            },
            {
              "description": "The action to perform when updating the attribute."
            }
          ]
        },
        "Attribute": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkAttributeDefinition"
            },
            {
              "description": "The attribute to update."
            }
          ]
        }
      },
      "required": [
        "Attribute",
        "Action"
      ],
      "type": "object"
    },
    "TypedLinkFacetAttributeUpdateList": {
      "items": {
        "$ref": "#/definitions/TypedLinkFacetAttributeUpdate"
      },
      "type": "array"
    },
    "TypedLinkName": {
      "pattern": "^[a-zA-Z0-9._-]*$",
      "type": "string"
    },
    "TypedLinkNameList": {
      "items": {
        "$ref": "#/definitions/TypedLinkName"
      },
      "type": "array"
    },
    "TypedLinkSchemaAndFacetName": {
      "description": "Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.",
      "properties": {
        "SchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
            }
          ]
        },
        "TypedLinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkName"
            },
            {
              "description": "The unique name of the typed link facet."
            }
          ]
        }
      },
      "required": [
        "SchemaArn",
        "TypedLinkName"
      ],
      "type": "object"
    },
    "TypedLinkSpecifier": {
      "description": "Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.",
      "properties": {
        "IdentityAttributeValues": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameAndValueList"
            },
            {
              "description": "Identifies the attribute value to update."
            }
          ]
        },
        "SourceObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Identifies the source object that the typed link will attach to."
            }
          ]
        },
        "TargetObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "Identifies the target object that the typed link will attach to."
            }
          ]
        },
        "TypedLinkFacet": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSchemaAndFacetName"
            },
            {
              "description": "Identifies the typed link facet that is associated with the typed link."
            }
          ]
        }
      },
      "required": [
        "TypedLinkFacet",
        "SourceObjectReference",
        "TargetObjectReference",
        "IdentityAttributeValues"
      ],
      "type": "object"
    },
    "TypedLinkSpecifierList": {
      "items": {
        "$ref": "#/definitions/TypedLinkSpecifier"
      },
      "type": "array"
    },
    "UnsupportedIndexTypeException": {},
    "UntagResourceRequest": {
      "properties": {
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories."
            }
          ]
        },
        "TagKeys": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKeyList"
            },
            {
              "description": "Keys of the tag that need to be removed from the resource."
            }
          ]
        }
      },
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UntagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateActionType": {
      "enum": [
        "CREATE_OR_UPDATE",
        "DELETE"
      ],
      "type": "string"
    },
    "UpdateFacetRequest": {
      "properties": {
        "AttributeUpdates": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetAttributeUpdateList"
            },
            {
              "description": "List of attributes that need to be updated in a given schema <a>Facet</a>. Each attribute is followed by <code>AttributeAction</code>, which specifies the type of update operation to perform. "
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/FacetName"
            },
            {
              "description": "The name of the facet."
            }
          ]
        },
        "ObjectType": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectType"
            },
            {
              "description": "The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "UpdateFacetRequest",
      "type": "object"
    },
    "UpdateFacetResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateLinkAttributesRequest": {
      "properties": {
        "AttributeUpdates": {
          "allOf": [
            {
              "$ref": "#/definitions/LinkAttributeUpdateList"
            },
            {
              "description": "The attributes update structure."
            }
          ]
        },
        "TypedLinkSpecifier": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkSpecifier"
            },
            {
              "description": "Allows a typed link specifier to be accepted as input."
            }
          ]
        }
      },
      "required": [
        "TypedLinkSpecifier",
        "AttributeUpdates"
      ],
      "title": "UpdateLinkAttributesRequest",
      "type": "object"
    },
    "UpdateLinkAttributesResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateObjectAttributesRequest": {
      "properties": {
        "AttributeUpdates": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectAttributeUpdateList"
            },
            {
              "description": "The attributes update structure."
            }
          ]
        },
        "ObjectReference": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectReference"
            },
            {
              "description": "The reference that identifies the object."
            }
          ]
        }
      },
      "required": [
        "ObjectReference",
        "AttributeUpdates"
      ],
      "title": "UpdateObjectAttributesRequest",
      "type": "object"
    },
    "UpdateObjectAttributesResponse": {
      "properties": {
        "ObjectIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectIdentifier"
            },
            {
              "description": "The <code>ObjectIdentifier</code> of the updated object."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateSchemaRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SchemaName"
            },
            {
              "description": "The name of the schema."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "UpdateSchemaRequest",
      "type": "object"
    },
    "UpdateSchemaResponse": {
      "properties": {
        "SchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN that is associated with the updated schema. For more information, see <a>arns</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateTypedLinkFacetRequest": {
      "properties": {
        "AttributeUpdates": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkFacetAttributeUpdateList"
            },
            {
              "description": "Attributes update structure."
            }
          ]
        },
        "IdentityAttributeOrder": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributeNameList"
            },
            {
              "description": "The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to a typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedLinkName"
            },
            {
              "description": "The unique name of the typed link facet."
            }
          ]
        }
      },
      "required": [
        "Name",
        "AttributeUpdates",
        "IdentityAttributeOrder"
      ],
      "title": "UpdateTypedLinkFacetRequest",
      "type": "object"
    },
    "UpdateTypedLinkFacetResponse": {
      "properties": {},
      "type": "object"
    },
    "UpgradeAppliedSchemaRequest": {
      "properties": {
        "DirectoryArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN for the directory to which the upgraded schema will be applied."
            }
          ]
        },
        "DryRun": {
          "allOf": [
            {
              "$ref": "#/definitions/Bool"
            },
            {
              "description": "Used for testing whether the major version schemas are backward compatible or not. If schema compatibility fails, an exception would be thrown else the call would succeed but no changes will be saved. This parameter is optional."
            }
          ]
        },
        "PublishedSchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The revision of the published schema to upgrade the directory to."
            }
          ]
        }
      },
      "required": [
        "PublishedSchemaArn",
        "DirectoryArn"
      ],
      "title": "UpgradeAppliedSchemaRequest",
      "type": "object"
    },
    "UpgradeAppliedSchemaResponse": {
      "properties": {
        "DirectoryArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the directory that is returned as part of the response."
            }
          ]
        },
        "UpgradedSchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the upgraded schema that is returned as part of the response."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpgradePublishedSchemaRequest": {
      "properties": {
        "DevelopmentSchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the development schema with the changes used for the upgrade."
            }
          ]
        },
        "DryRun": {
          "allOf": [
            {
              "$ref": "#/definitions/Bool"
            },
            {
              "description": "Used for testing whether the Development schema provided is backwards compatible, or not, with the publish schema provided by the user to be upgraded. If schema compatibility fails, an exception would be thrown else the call would succeed. This parameter is optional and defaults to false."
            }
          ]
        },
        "MinorVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/Version"
            },
            {
              "description": "Identifies the minor version of the published schema that will be created. This parameter is NOT optional."
            }
          ]
        },
        "PublishedSchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the published schema to be upgraded."
            }
          ]
        }
      },
      "required": [
        "DevelopmentSchemaArn",
        "PublishedSchemaArn",
        "MinorVersion"
      ],
      "title": "UpgradePublishedSchemaRequest",
      "type": "object"
    },
    "UpgradePublishedSchemaResponse": {
      "properties": {
        "UpgradedSchemaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the upgraded schema that is returned as part of the response."
            }
          ]
        }
      },
      "type": "object"
    },
    "ValidationException": {},
    "Version": {
      "maxLength": 10,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9._-]*$",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/clouddirectory/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  }
}