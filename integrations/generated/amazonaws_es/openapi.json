{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Elasticsearch Service",
    "version": "2015-01-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/es-2015-01-01.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "es",
    "x-datafire": {
      "name": "amazonaws_es",
      "type": "openapi"
    }
  },
  "host": "es.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/2015-01-01/domain": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDomainNamesResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Returns the name of all Elasticsearch domains owned by the current user's account. ",
        "operationId": "ListDomainNames"
      }
    },
    "/2015-01-01/domain/{DomainName}/packages": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the domain for which you want to list associated packages.",
            "in": "path",
            "maxLength": 28,
            "minLength": 3,
            "name": "DomainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": true,
            "type": "string"
          },
          {
            "description": "Limits results to a maximum number of packages.",
            "in": "query",
            "maximum": 100,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListPackagesForDomainResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Lists all packages associated with the Amazon ES domain.",
        "operationId": "ListPackagesForDomain"
      }
    },
    "/2015-01-01/es/ccs/inboundConnection/search": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Filters": {
                  "description": " A list of filters used to match properties for inbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>source-domain-info.domain-name</li> <li>source-domain-info.owner-id</li> <li>source-domain-info.region</li> <li>destination-domain-info.domain-name</li> </ul> ",
                  "items": {
                    "$ref": "#/definitions/Filter"
                  },
                  "type": "array"
                },
                "MaxResults": {
                  "description": " Set this value to limit the number of results returned. ",
                  "maximum": 100,
                  "type": "integer"
                },
                "NextToken": {
                  "description": " Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeInboundCrossClusterSearchConnectionsResponse"
            }
          },
          "480": {
            "description": "InvalidPaginationTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidPaginationTokenException"
            }
          },
          "481": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          }
        },
        "description": "Lists all the inbound cross-cluster search connections for a destination domain.",
        "operationId": "DescribeInboundCrossClusterSearchConnections"
      }
    },
    "/2015-01-01/es/ccs/inboundConnection/{ConnectionId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The id of the inbound connection that you want to permanently delete.",
            "in": "path",
            "name": "ConnectionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteInboundCrossClusterSearchConnectionResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          }
        },
        "description": "Allows the destination domain owner to delete an existing inbound cross-cluster search connection.",
        "operationId": "DeleteInboundCrossClusterSearchConnection"
      }
    },
    "/2015-01-01/es/ccs/inboundConnection/{ConnectionId}/accept": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The id of the inbound connection that you want to accept.",
            "in": "path",
            "name": "ConnectionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AcceptInboundCrossClusterSearchConnectionResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          }
        },
        "description": "Allows the destination domain owner to accept an inbound cross-cluster search connection request.",
        "operationId": "AcceptInboundCrossClusterSearchConnection"
      }
    },
    "/2015-01-01/es/ccs/inboundConnection/{ConnectionId}/reject": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The id of the inbound connection that you want to reject.",
            "in": "path",
            "name": "ConnectionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RejectInboundCrossClusterSearchConnectionResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          }
        },
        "description": "Allows the destination domain owner to reject an inbound cross-cluster search connection request.",
        "operationId": "RejectInboundCrossClusterSearchConnection"
      }
    },
    "/2015-01-01/es/ccs/outboundConnection": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ConnectionAlias": {
                  "description": "Specifies the connection alias that will be used by the customer for this connection.",
                  "maxLength": 20,
                  "type": "string"
                },
                "DestinationDomainInfo": {
                  "description": "Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain.",
                  "properties": {
                    "DomainName": {
                      "$ref": "#/definitions/DomainName"
                    },
                    "OwnerId": {
                      "$ref": "#/definitions/OwnerId"
                    },
                    "Region": {
                      "$ref": "#/definitions/Region"
                    }
                  },
                  "type": "object"
                },
                "SourceDomainInfo": {
                  "description": "Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain.",
                  "properties": {
                    "DomainName": {
                      "$ref": "#/definitions/DomainName"
                    },
                    "OwnerId": {
                      "$ref": "#/definitions/OwnerId"
                    },
                    "Region": {
                      "$ref": "#/definitions/Region"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "SourceDomainInfo",
                "DestinationDomainInfo",
                "ConnectionAlias"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateOutboundCrossClusterSearchConnectionResponse"
            }
          },
          "480": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsException"
            }
          },
          "483": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          }
        },
        "description": "Creates a new cross-cluster search connection from a source domain to a destination domain.",
        "operationId": "CreateOutboundCrossClusterSearchConnection"
      }
    },
    "/2015-01-01/es/ccs/outboundConnection/search": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Filters": {
                  "description": " A list of filters used to match properties for outbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>destination-domain-info.domain-name</li> <li>destination-domain-info.owner-id</li> <li>destination-domain-info.region</li> <li>source-domain-info.domain-name</li> </ul> ",
                  "items": {
                    "$ref": "#/definitions/Filter"
                  },
                  "type": "array"
                },
                "MaxResults": {
                  "description": " Set this value to limit the number of results returned. ",
                  "maximum": 100,
                  "type": "integer"
                },
                "NextToken": {
                  "description": " Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeOutboundCrossClusterSearchConnectionsResponse"
            }
          },
          "480": {
            "description": "InvalidPaginationTokenException",
            "schema": {
              "$ref": "#/definitions/InvalidPaginationTokenException"
            }
          },
          "481": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          }
        },
        "description": "Lists all the outbound cross-cluster search connections for a source domain.",
        "operationId": "DescribeOutboundCrossClusterSearchConnections"
      }
    },
    "/2015-01-01/es/ccs/outboundConnection/{ConnectionId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The id of the outbound connection that you want to permanently delete.",
            "in": "path",
            "name": "ConnectionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteOutboundCrossClusterSearchConnectionResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          }
        },
        "description": "Allows the source domain owner to delete an existing outbound cross-cluster search connection.",
        "operationId": "DeleteOutboundCrossClusterSearchConnection"
      }
    },
    "/2015-01-01/es/compatibleVersions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).",
            "in": "query",
            "maxLength": 28,
            "minLength": 3,
            "name": "domainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetCompatibleElasticsearchVersionsResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          }
        },
        "description": " Returns a list of upgrade compatible Elastisearch versions. You can optionally pass a <code> <a>DomainName</a> </code> to get all upgrade compatible Elasticsearch versions for that specific domain. ",
        "operationId": "GetCompatibleElasticsearchVersions"
      }
    },
    "/2015-01-01/es/domain": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccessPolicies": {
                  "description": "Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies\" target=\"_blank\">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.",
                  "type": "string"
                },
                "AdvancedOptions": {
                  "additionalProperties": {
                    "$ref": "#/definitions/String"
                  },
                  "description": "<p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\" target=\"_blank\">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\">Configuring Advanced Options</a>.</p>",
                  "type": "object"
                },
                "AdvancedSecurityOptions": {
                  "description": "Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).",
                  "properties": {
                    "Enabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "True if advanced security is enabled."
                        }
                      ]
                    },
                    "InternalUserDatabaseEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "True if the internal user database is enabled."
                        }
                      ]
                    },
                    "MasterUserOptions": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MasterUserOptions"
                        },
                        {
                          "description": "Credentials for the master user: username and password, ARN, or both."
                        }
                      ]
                    },
                    "SAMLOptions": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SAMLOptionsInput"
                        },
                        {
                          "description": "Specifies the SAML application configuration for the domain."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "CognitoOptions": {
                  "description": "Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html\" target=\"_blank\">Amazon Cognito Authentication for Kibana</a>.",
                  "properties": {
                    "Enabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Specifies the option to enable Cognito for Kibana authentication."
                        }
                      ]
                    },
                    "IdentityPoolId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IdentityPoolId"
                        },
                        {
                          "description": "Specifies the Cognito identity pool ID for Kibana authentication."
                        }
                      ]
                    },
                    "RoleArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/RoleArn"
                        },
                        {
                          "description": "Specifies the role ARN that provides Elasticsearch permissions for accessing Cognito resources."
                        }
                      ]
                    },
                    "UserPoolId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/UserPoolId"
                        },
                        {
                          "description": "Specifies the Cognito user pool ID for Kibana authentication."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "DomainEndpointOptions": {
                  "description": "Options to configure endpoint for the Elasticsearch domain.",
                  "properties": {
                    "CustomEndpoint": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DomainNameFqdn"
                        },
                        {
                          "description": "Specify the fully qualified domain for your custom endpoint."
                        }
                      ]
                    },
                    "CustomEndpointCertificateArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ARN"
                        },
                        {
                          "description": "Specify ACM certificate ARN for your custom endpoint."
                        }
                      ]
                    },
                    "CustomEndpointEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Specify if custom endpoint should be enabled for the Elasticsearch domain."
                        }
                      ]
                    },
                    "EnforceHTTPS": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Specify if only HTTPS endpoint should be enabled for the Elasticsearch domain."
                        }
                      ]
                    },
                    "TLSSecurityPolicy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TLSSecurityPolicy"
                        },
                        {
                          "description": "Specify the TLS security policy that needs to be applied to the HTTPS endpoint of Elasticsearch domain. <br/> It can be one of the following values: <ul> <li><b>Policy-Min-TLS-1-0-2019-07: </b> TLS security policy which supports TLSv1.0 and higher.</li> <li><b>Policy-Min-TLS-1-2-2019-07: </b> TLS security policy which supports only TLSv1.2</li> </ul> "
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "DomainName": {
                  "description": "The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).",
                  "maxLength": 28,
                  "minLength": 3,
                  "pattern": "[a-z][a-z0-9\\-]+",
                  "type": "string"
                },
                "EBSOptions": {
                  "description": "Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs\" target=\"_blank\"> Configuring EBS-based Storage</a>.",
                  "properties": {
                    "EBSEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Specifies whether EBS-based storage is enabled."
                        }
                      ]
                    },
                    "Iops": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": "Specifies the IOPD for a Provisioned IOPS EBS volume (SSD)."
                        }
                      ]
                    },
                    "VolumeSize": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": " Integer to specify the size of an EBS volume."
                        }
                      ]
                    },
                    "VolumeType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/VolumeType"
                        },
                        {
                          "description": " Specifies the volume type for EBS-based storage."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "ElasticsearchClusterConfig": {
                  "description": "Specifies the configuration for the domain cluster, such as the type and number of instances.",
                  "properties": {
                    "DedicatedMasterCount": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": "Total number of dedicated master nodes, active and on standby, for the cluster."
                        }
                      ]
                    },
                    "DedicatedMasterEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "A boolean value to indicate whether a dedicated master node is enabled. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-dedicatedmasternodes\" target=\"_blank\">About Dedicated Master Nodes</a> for more information."
                        }
                      ]
                    },
                    "DedicatedMasterType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ESPartitionInstanceType"
                        },
                        {
                          "description": "The instance type for a dedicated master node."
                        }
                      ]
                    },
                    "InstanceCount": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": "The number of instances in the specified domain cluster."
                        }
                      ]
                    },
                    "InstanceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ESPartitionInstanceType"
                        },
                        {
                          "description": "The instance type for an Elasticsearch cluster. UltraWarm instance types are not supported for data instances."
                        }
                      ]
                    },
                    "WarmCount": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": "The number of warm nodes in the cluster."
                        }
                      ]
                    },
                    "WarmEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "True to enable warm storage."
                        }
                      ]
                    },
                    "WarmType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ESWarmPartitionInstanceType"
                        },
                        {
                          "description": "The instance type for the Elasticsearch cluster's warm nodes."
                        }
                      ]
                    },
                    "ZoneAwarenessConfig": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ZoneAwarenessConfig"
                        },
                        {
                          "description": "Specifies the zone awareness configuration for a domain when zone awareness is enabled."
                        }
                      ]
                    },
                    "ZoneAwarenessEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "A boolean value to indicate whether zone awareness is enabled. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-zoneawareness\" target=\"_blank\">About Zone Awareness</a> for more information."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "ElasticsearchVersion": {
                  "description": "String of format X.Y to specify version for the Elasticsearch domain eg. \"1.5\" or \"2.3\". For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains\" target=\"_blank\">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.",
                  "type": "string"
                },
                "EncryptionAtRestOptions": {
                  "description": "Specifies the Encryption At Rest Options.",
                  "properties": {
                    "Enabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Specifies the option to enable Encryption At Rest."
                        }
                      ]
                    },
                    "KmsKeyId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KmsKeyId"
                        },
                        {
                          "description": " Specifies the KMS Key ID for Encryption At Rest options."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "LogPublishingOptions": {
                  "additionalProperties": {
                    "$ref": "#/definitions/LogPublishingOption"
                  },
                  "description": "Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.",
                  "type": "object"
                },
                "NodeToNodeEncryptionOptions": {
                  "description": "Specifies the node-to-node encryption options.",
                  "properties": {
                    "Enabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Specify true to enable node-to-node encryption."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "SnapshotOptions": {
                  "description": "Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.",
                  "properties": {
                    "AutomatedSnapshotStartHour": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": "Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "VPCOptions": {
                  "description": "Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html\" target=\"_blank\"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.",
                  "properties": {
                    "SecurityGroupIds": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringList"
                        },
                        {
                          "description": "Specifies the security groups for VPC endpoint."
                        }
                      ]
                    },
                    "SubnetIds": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringList"
                        },
                        {
                          "description": "Specifies the subnets for VPC endpoint."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "DomainName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateElasticsearchDomainResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          },
          "482": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "483": {
            "description": "InvalidTypeException",
            "schema": {
              "$ref": "#/definitions/InvalidTypeException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "ResourceAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsException"
            }
          },
          "486": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Creates a new Elasticsearch domain. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains\" target=\"_blank\">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.",
        "operationId": "CreateElasticsearchDomain"
      }
    },
    "/2015-01-01/es/domain-info": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DomainNames": {
                  "description": "A list of Elasticsearch domain names.",
                  "items": {
                    "$ref": "#/definitions/DomainName"
                  },
                  "type": "array"
                }
              },
              "required": [
                "DomainNames"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeElasticsearchDomainsResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Returns domain configuration information about the specified Elasticsearch domains, including the domain ID, domain endpoint, and domain ARN.",
        "operationId": "DescribeElasticsearchDomains"
      }
    },
    "/2015-01-01/es/domain/{DomainName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the Elasticsearch domain that you want to permanently delete.",
            "in": "path",
            "maxLength": 28,
            "minLength": 3,
            "name": "DomainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteElasticsearchDomainResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Permanently deletes the specified Elasticsearch domain and all of its data. Once a domain is deleted, it cannot be recovered.",
        "operationId": "DeleteElasticsearchDomain"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the Elasticsearch domain for which you want information.",
            "in": "path",
            "maxLength": 28,
            "minLength": 3,
            "name": "DomainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeElasticsearchDomainResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Returns domain configuration information about the specified Elasticsearch domain, including the domain ID, domain endpoint, and domain ARN.",
        "operationId": "DescribeElasticsearchDomain"
      }
    },
    "/2015-01-01/es/domain/{DomainName}/config": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Elasticsearch domain that you want to get information about.",
            "in": "path",
            "maxLength": 28,
            "minLength": 3,
            "name": "DomainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeElasticsearchDomainConfigResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Provides cluster configuration information about the specified Elasticsearch domain, such as the state, creation date, update version, and update date for cluster options.",
        "operationId": "DescribeElasticsearchDomainConfig"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the Elasticsearch domain that you are updating. ",
            "in": "path",
            "maxLength": 28,
            "minLength": 3,
            "name": "DomainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccessPolicies": {
                  "description": "Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies\" target=\"_blank\">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.",
                  "type": "string"
                },
                "AdvancedOptions": {
                  "additionalProperties": {
                    "$ref": "#/definitions/String"
                  },
                  "description": "<p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\" target=\"_blank\">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\">Configuring Advanced Options</a>.</p>",
                  "type": "object"
                },
                "AdvancedSecurityOptions": {
                  "description": "Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).",
                  "properties": {
                    "Enabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "True if advanced security is enabled."
                        }
                      ]
                    },
                    "InternalUserDatabaseEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "True if the internal user database is enabled."
                        }
                      ]
                    },
                    "MasterUserOptions": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MasterUserOptions"
                        },
                        {
                          "description": "Credentials for the master user: username and password, ARN, or both."
                        }
                      ]
                    },
                    "SAMLOptions": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SAMLOptionsInput"
                        },
                        {
                          "description": "Specifies the SAML application configuration for the domain."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "CognitoOptions": {
                  "description": "Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html\" target=\"_blank\">Amazon Cognito Authentication for Kibana</a>.",
                  "properties": {
                    "Enabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Specifies the option to enable Cognito for Kibana authentication."
                        }
                      ]
                    },
                    "IdentityPoolId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IdentityPoolId"
                        },
                        {
                          "description": "Specifies the Cognito identity pool ID for Kibana authentication."
                        }
                      ]
                    },
                    "RoleArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/RoleArn"
                        },
                        {
                          "description": "Specifies the role ARN that provides Elasticsearch permissions for accessing Cognito resources."
                        }
                      ]
                    },
                    "UserPoolId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/UserPoolId"
                        },
                        {
                          "description": "Specifies the Cognito user pool ID for Kibana authentication."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "DomainEndpointOptions": {
                  "description": "Options to configure endpoint for the Elasticsearch domain.",
                  "properties": {
                    "CustomEndpoint": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DomainNameFqdn"
                        },
                        {
                          "description": "Specify the fully qualified domain for your custom endpoint."
                        }
                      ]
                    },
                    "CustomEndpointCertificateArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ARN"
                        },
                        {
                          "description": "Specify ACM certificate ARN for your custom endpoint."
                        }
                      ]
                    },
                    "CustomEndpointEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Specify if custom endpoint should be enabled for the Elasticsearch domain."
                        }
                      ]
                    },
                    "EnforceHTTPS": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Specify if only HTTPS endpoint should be enabled for the Elasticsearch domain."
                        }
                      ]
                    },
                    "TLSSecurityPolicy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TLSSecurityPolicy"
                        },
                        {
                          "description": "Specify the TLS security policy that needs to be applied to the HTTPS endpoint of Elasticsearch domain. <br/> It can be one of the following values: <ul> <li><b>Policy-Min-TLS-1-0-2019-07: </b> TLS security policy which supports TLSv1.0 and higher.</li> <li><b>Policy-Min-TLS-1-2-2019-07: </b> TLS security policy which supports only TLSv1.2</li> </ul> "
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "EBSOptions": {
                  "description": "Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs\" target=\"_blank\"> Configuring EBS-based Storage</a>.",
                  "properties": {
                    "EBSEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Specifies whether EBS-based storage is enabled."
                        }
                      ]
                    },
                    "Iops": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": "Specifies the IOPD for a Provisioned IOPS EBS volume (SSD)."
                        }
                      ]
                    },
                    "VolumeSize": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": " Integer to specify the size of an EBS volume."
                        }
                      ]
                    },
                    "VolumeType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/VolumeType"
                        },
                        {
                          "description": " Specifies the volume type for EBS-based storage."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "ElasticsearchClusterConfig": {
                  "description": "Specifies the configuration for the domain cluster, such as the type and number of instances.",
                  "properties": {
                    "DedicatedMasterCount": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": "Total number of dedicated master nodes, active and on standby, for the cluster."
                        }
                      ]
                    },
                    "DedicatedMasterEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "A boolean value to indicate whether a dedicated master node is enabled. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-dedicatedmasternodes\" target=\"_blank\">About Dedicated Master Nodes</a> for more information."
                        }
                      ]
                    },
                    "DedicatedMasterType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ESPartitionInstanceType"
                        },
                        {
                          "description": "The instance type for a dedicated master node."
                        }
                      ]
                    },
                    "InstanceCount": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": "The number of instances in the specified domain cluster."
                        }
                      ]
                    },
                    "InstanceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ESPartitionInstanceType"
                        },
                        {
                          "description": "The instance type for an Elasticsearch cluster. UltraWarm instance types are not supported for data instances."
                        }
                      ]
                    },
                    "WarmCount": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": "The number of warm nodes in the cluster."
                        }
                      ]
                    },
                    "WarmEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "True to enable warm storage."
                        }
                      ]
                    },
                    "WarmType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ESWarmPartitionInstanceType"
                        },
                        {
                          "description": "The instance type for the Elasticsearch cluster's warm nodes."
                        }
                      ]
                    },
                    "ZoneAwarenessConfig": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ZoneAwarenessConfig"
                        },
                        {
                          "description": "Specifies the zone awareness configuration for a domain when zone awareness is enabled."
                        }
                      ]
                    },
                    "ZoneAwarenessEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "A boolean value to indicate whether zone awareness is enabled. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-zoneawareness\" target=\"_blank\">About Zone Awareness</a> for more information."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "LogPublishingOptions": {
                  "additionalProperties": {
                    "$ref": "#/definitions/LogPublishingOption"
                  },
                  "description": "Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.",
                  "type": "object"
                },
                "SnapshotOptions": {
                  "description": "Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.",
                  "properties": {
                    "AutomatedSnapshotStartHour": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IntegerClass"
                        },
                        {
                          "description": "Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "VPCOptions": {
                  "description": "Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html\" target=\"_blank\"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.",
                  "properties": {
                    "SecurityGroupIds": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringList"
                        },
                        {
                          "description": "Specifies the security groups for VPC endpoint."
                        }
                      ]
                    },
                    "SubnetIds": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringList"
                        },
                        {
                          "description": "Specifies the subnets for VPC endpoint."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateElasticsearchDomainConfigResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "InvalidTypeException",
            "schema": {
              "$ref": "#/definitions/InvalidTypeException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Modifies the cluster configuration of the specified Elasticsearch domain, setting as setting the instance type and the number of instances. ",
        "operationId": "UpdateElasticsearchDomainConfig"
      }
    },
    "/2015-01-01/es/instanceTypeLimits/{ElasticsearchVersion}/{InstanceType}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " DomainName represents the name of the Domain that we are trying to modify. This should be present only if we are querying for Elasticsearch <code> <a>Limits</a> </code> for existing domain. ",
            "in": "query",
            "maxLength": 28,
            "minLength": 3,
            "name": "domainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": false,
            "type": "string"
          },
          {
            "description": " The instance type for an Elasticsearch cluster for which Elasticsearch <code> <a>Limits</a> </code> are needed. ",
            "enum": [
              "m3.medium.elasticsearch",
              "m3.large.elasticsearch",
              "m3.xlarge.elasticsearch",
              "m3.2xlarge.elasticsearch",
              "m4.large.elasticsearch",
              "m4.xlarge.elasticsearch",
              "m4.2xlarge.elasticsearch",
              "m4.4xlarge.elasticsearch",
              "m4.10xlarge.elasticsearch",
              "m5.large.elasticsearch",
              "m5.xlarge.elasticsearch",
              "m5.2xlarge.elasticsearch",
              "m5.4xlarge.elasticsearch",
              "m5.12xlarge.elasticsearch",
              "r5.large.elasticsearch",
              "r5.xlarge.elasticsearch",
              "r5.2xlarge.elasticsearch",
              "r5.4xlarge.elasticsearch",
              "r5.12xlarge.elasticsearch",
              "c5.large.elasticsearch",
              "c5.xlarge.elasticsearch",
              "c5.2xlarge.elasticsearch",
              "c5.4xlarge.elasticsearch",
              "c5.9xlarge.elasticsearch",
              "c5.18xlarge.elasticsearch",
              "ultrawarm1.medium.elasticsearch",
              "ultrawarm1.large.elasticsearch",
              "t2.micro.elasticsearch",
              "t2.small.elasticsearch",
              "t2.medium.elasticsearch",
              "r3.large.elasticsearch",
              "r3.xlarge.elasticsearch",
              "r3.2xlarge.elasticsearch",
              "r3.4xlarge.elasticsearch",
              "r3.8xlarge.elasticsearch",
              "i2.xlarge.elasticsearch",
              "i2.2xlarge.elasticsearch",
              "d2.xlarge.elasticsearch",
              "d2.2xlarge.elasticsearch",
              "d2.4xlarge.elasticsearch",
              "d2.8xlarge.elasticsearch",
              "c4.large.elasticsearch",
              "c4.xlarge.elasticsearch",
              "c4.2xlarge.elasticsearch",
              "c4.4xlarge.elasticsearch",
              "c4.8xlarge.elasticsearch",
              "r4.large.elasticsearch",
              "r4.xlarge.elasticsearch",
              "r4.2xlarge.elasticsearch",
              "r4.4xlarge.elasticsearch",
              "r4.8xlarge.elasticsearch",
              "r4.16xlarge.elasticsearch",
              "i3.large.elasticsearch",
              "i3.xlarge.elasticsearch",
              "i3.2xlarge.elasticsearch",
              "i3.4xlarge.elasticsearch",
              "i3.8xlarge.elasticsearch",
              "i3.16xlarge.elasticsearch"
            ],
            "in": "path",
            "name": "InstanceType",
            "required": true,
            "type": "string"
          },
          {
            "description": " Version of Elasticsearch for which <code> <a>Limits</a> </code> are needed. ",
            "in": "path",
            "name": "ElasticsearchVersion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeElasticsearchInstanceTypeLimitsResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "InvalidTypeException",
            "schema": {
              "$ref": "#/definitions/InvalidTypeException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": " Describe Elasticsearch Limits for a given InstanceType and ElasticsearchVersion. When modifying existing Domain, specify the <code> <a>DomainName</a> </code> to know what Limits are supported for modifying. ",
        "operationId": "DescribeElasticsearchInstanceTypeLimits"
      }
    },
    "/2015-01-01/es/instanceTypes/{ElasticsearchVersion}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Version of Elasticsearch for which list of supported elasticsearch instance types are needed. ",
            "in": "path",
            "name": "ElasticsearchVersion",
            "required": true,
            "type": "string"
          },
          {
            "description": "DomainName represents the name of the Domain that we are trying to modify. This should be present only if we are querying for list of available Elasticsearch instance types when modifying existing domain. ",
            "in": "query",
            "maxLength": 28,
            "minLength": 3,
            "name": "domainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": false,
            "type": "string"
          },
          {
            "description": " Set this value to limit the number of results returned. Value provided must be greater than 30 else it wont be honored. ",
            "in": "query",
            "maximum": 100,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination. ",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListElasticsearchInstanceTypesResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "List all Elasticsearch instance types that are supported for given ElasticsearchVersion",
        "operationId": "ListElasticsearchInstanceTypes"
      }
    },
    "/2015-01-01/es/purchaseReservedInstanceOffering": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "InstanceCount": {
                  "description": "Specifies the number of EC2 instances in the Elasticsearch domain.",
                  "minimum": 1,
                  "type": "integer"
                },
                "ReservationName": {
                  "description": "A customer-specified identifier to track this reservation.",
                  "maxLength": 64,
                  "minLength": 5,
                  "type": "string"
                },
                "ReservedElasticsearchInstanceOfferingId": {
                  "description": "The ID of the reserved Elasticsearch instance offering to purchase.",
                  "pattern": "\\p{XDigit}{8}-\\p{XDigit}{4}-\\p{XDigit}{4}-\\p{XDigit}{4}-\\p{XDigit}{12}",
                  "type": "string"
                }
              },
              "required": [
                "ReservedElasticsearchInstanceOfferingId",
                "ReservationName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PurchaseReservedElasticsearchInstanceOfferingResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ResourceAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          },
          "484": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "485": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          }
        },
        "description": "Allows you to purchase reserved Elasticsearch instances.",
        "operationId": "PurchaseReservedElasticsearchInstanceOffering"
      }
    },
    "/2015-01-01/es/reservedInstanceOfferings": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier.",
            "in": "query",
            "name": "offeringId",
            "pattern": "\\p{XDigit}{8}-\\p{XDigit}{4}-\\p{XDigit}{4}-\\p{XDigit}{4}-\\p{XDigit}{12}",
            "required": false,
            "type": "string"
          },
          {
            "description": "Set this value to limit the number of results returned. If not specified, defaults to 100.",
            "in": "query",
            "maximum": 100,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeReservedElasticsearchInstanceOfferingsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          },
          "483": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          }
        },
        "description": "Lists available reserved Elasticsearch instance offerings.",
        "operationId": "DescribeReservedElasticsearchInstanceOfferings"
      }
    },
    "/2015-01-01/es/reservedInstances": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The reserved instance identifier filter value. Use this parameter to show only the reservation that matches the specified reserved Elasticsearch instance ID.",
            "in": "query",
            "name": "reservationId",
            "pattern": "\\p{XDigit}{8}-\\p{XDigit}{4}-\\p{XDigit}{4}-\\p{XDigit}{4}-\\p{XDigit}{12}",
            "required": false,
            "type": "string"
          },
          {
            "description": "Set this value to limit the number of results returned. If not specified, defaults to 100.",
            "in": "query",
            "maximum": 100,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeReservedElasticsearchInstancesResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "483": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          }
        },
        "description": "Returns information about reserved Elasticsearch instances for this account.",
        "operationId": "DescribeReservedElasticsearchInstances"
      }
    },
    "/2015-01-01/es/role": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Deletes the service-linked role that Elasticsearch Service uses to manage and maintain VPC domains. Role deletion will fail if any existing VPC domains use the role. You must delete any such Elasticsearch domains before deleting the role. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-enabling-slr\" target=\"_blank\">Deleting Elasticsearch Service Role</a> in <i>VPC Endpoints for Amazon Elasticsearch Service Domains</i>.",
        "operationId": "DeleteElasticsearchServiceRole"
      }
    },
    "/2015-01-01/es/serviceSoftwareUpdate/cancel": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DomainName": {
                  "description": "The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).",
                  "maxLength": 28,
                  "minLength": 3,
                  "pattern": "[a-z][a-z0-9\\-]+",
                  "type": "string"
                }
              },
              "required": [
                "DomainName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CancelElasticsearchServiceSoftwareUpdateResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Cancels a scheduled service software update for an Amazon ES domain. You can only perform this operation before the <code>AutomatedUpdateDate</code> and when the <code>UpdateStatus</code> is in the <code>PENDING_UPDATE</code> state.",
        "operationId": "CancelElasticsearchServiceSoftwareUpdate"
      }
    },
    "/2015-01-01/es/serviceSoftwareUpdate/start": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DomainName": {
                  "description": "The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).",
                  "maxLength": 28,
                  "minLength": 3,
                  "pattern": "[a-z][a-z0-9\\-]+",
                  "type": "string"
                }
              },
              "required": [
                "DomainName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartElasticsearchServiceSoftwareUpdateResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Schedules a service software update for an Amazon ES domain.",
        "operationId": "StartElasticsearchServiceSoftwareUpdate"
      }
    },
    "/2015-01-01/es/upgradeDomain": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DomainName": {
                  "description": "The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).",
                  "maxLength": 28,
                  "minLength": 3,
                  "pattern": "[a-z][a-z0-9\\-]+",
                  "type": "string"
                },
                "PerformCheckOnly": {
                  "description": " This flag, when set to True, indicates that an Upgrade Eligibility Check needs to be performed. This will not actually perform the Upgrade. ",
                  "type": "boolean"
                },
                "TargetVersion": {
                  "description": "The version of Elasticsearch that you intend to upgrade the domain to.",
                  "type": "string"
                }
              },
              "required": [
                "DomainName",
                "TargetVersion"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpgradeElasticsearchDomainResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ResourceAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsException"
            }
          },
          "483": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          },
          "484": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "485": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          }
        },
        "description": "Allows you to either upgrade your domain or perform an Upgrade eligibility check to a compatible Elasticsearch version.",
        "operationId": "UpgradeElasticsearchDomain"
      }
    },
    "/2015-01-01/es/upgradeDomain/{DomainName}/history": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).",
            "in": "path",
            "maxLength": 28,
            "minLength": 3,
            "name": "DomainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": true,
            "type": "string"
          },
          {
            "description": " Set this value to limit the number of results returned. ",
            "in": "query",
            "maximum": 100,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": " Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetUpgradeHistoryResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          }
        },
        "description": "Retrieves the complete history of the last 10 upgrades that were performed on the domain.",
        "operationId": "GetUpgradeHistory"
      }
    },
    "/2015-01-01/es/upgradeDomain/{DomainName}/status": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).",
            "in": "path",
            "maxLength": 28,
            "minLength": 3,
            "name": "DomainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetUpgradeStatusResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "DisabledOperationException",
            "schema": {
              "$ref": "#/definitions/DisabledOperationException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "484": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          }
        },
        "description": "Retrieves the latest status of the last upgrade or upgrade eligibility check that was performed on the domain.",
        "operationId": "GetUpgradeStatus"
      }
    },
    "/2015-01-01/es/versions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " Set this value to limit the number of results returned. Value provided must be greater than 10 else it wont be honored. ",
            "in": "query",
            "maximum": 100,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": " Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListElasticsearchVersionsResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "List all supported Elasticsearch versions",
        "operationId": "ListElasticsearchVersions"
      }
    },
    "/2015-01-01/packages": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "PackageDescription": {
                  "description": "Description of the package.",
                  "maxLength": 1024,
                  "type": "string"
                },
                "PackageName": {
                  "description": "Unique identifier for the package.",
                  "maxLength": 28,
                  "minLength": 3,
                  "pattern": "[a-z][a-z0-9\\-]+",
                  "type": "string"
                },
                "PackageSource": {
                  "description": "The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>",
                  "properties": {
                    "S3BucketName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3BucketName"
                        },
                        {
                          "description": "Name of the bucket containing the package."
                        }
                      ]
                    },
                    "S3Key": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Key"
                        },
                        {
                          "description": "Key (file name) of the package."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "PackageType": {
                  "description": "Type of package. Currently supports only TXT-DICTIONARY.",
                  "enum": [
                    "TXT-DICTIONARY"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "PackageName",
                "PackageType",
                "PackageSource"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreatePackageResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "InvalidTypeException",
            "schema": {
              "$ref": "#/definitions/InvalidTypeException"
            }
          },
          "484": {
            "description": "ResourceAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ResourceAlreadyExistsException"
            }
          },
          "485": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "486": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Create a package for use with Amazon ES domains.",
        "operationId": "CreatePackage"
      }
    },
    "/2015-01-01/packages/associate/{PackageID}/{DomainName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Internal ID of the package that you want to associate with a domain. Use <code>DescribePackages</code> to find this value.",
            "in": "path",
            "name": "PackageID",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the domain that you want to associate the package with.",
            "in": "path",
            "maxLength": 28,
            "minLength": 3,
            "name": "DomainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociatePackageResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "485": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Associates a package with an Amazon ES domain.",
        "operationId": "AssociatePackage"
      }
    },
    "/2015-01-01/packages/describe": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Filters": {
                  "description": "A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.",
                  "items": {
                    "$ref": "#/definitions/DescribePackagesFilter"
                  },
                  "type": "array"
                },
                "MaxResults": {
                  "description": " Set this value to limit the number of results returned. ",
                  "maximum": 100,
                  "type": "integer"
                },
                "NextToken": {
                  "description": " Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribePackagesResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Describes all packages available to Amazon ES. Includes options for filtering, limiting the number of results, and pagination.",
        "operationId": "DescribePackages"
      }
    },
    "/2015-01-01/packages/dissociate/{PackageID}/{DomainName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Internal ID of the package that you want to associate with a domain. Use <code>DescribePackages</code> to find this value.",
            "in": "path",
            "name": "PackageID",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the domain that you want to associate the package with.",
            "in": "path",
            "maxLength": 28,
            "minLength": 3,
            "name": "DomainName",
            "pattern": "[a-z][a-z0-9\\-]+",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DissociatePackageResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "485": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Dissociates a package from the Amazon ES domain.",
        "operationId": "DissociatePackage"
      }
    },
    "/2015-01-01/packages/update": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "CommitMessage": {
                  "description": "An info message for the new version which will be shown as part of <code>GetPackageVersionHistoryResponse</code>.",
                  "maxLength": 160,
                  "type": "string"
                },
                "PackageDescription": {
                  "description": "New description of the package.",
                  "maxLength": 1024,
                  "type": "string"
                },
                "PackageID": {
                  "description": "Unique identifier for the package.",
                  "type": "string"
                },
                "PackageSource": {
                  "description": "The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>",
                  "properties": {
                    "S3BucketName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3BucketName"
                        },
                        {
                          "description": "Name of the bucket containing the package."
                        }
                      ]
                    },
                    "S3Key": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Key"
                        },
                        {
                          "description": "Key (file name) of the package."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "PackageID",
                "PackageSource"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdatePackageResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "485": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Updates a package for use with Amazon ES domains.",
        "operationId": "UpdatePackage"
      }
    },
    "/2015-01-01/packages/{PackageID}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Internal ID of the package that you want to delete. Use <code>DescribePackages</code> to find this value.",
            "in": "path",
            "name": "PackageID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeletePackageResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "485": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Delete the package.",
        "operationId": "DeletePackage"
      }
    },
    "/2015-01-01/packages/{PackageID}/domains": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The package for which to list domains.",
            "in": "path",
            "name": "PackageID",
            "required": true,
            "type": "string"
          },
          {
            "description": "Limits results to a maximum number of domains.",
            "in": "query",
            "maximum": 100,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDomainsForPackageResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Lists all Amazon ES domains associated with the package.",
        "operationId": "ListDomainsForPackage"
      }
    },
    "/2015-01-01/packages/{PackageID}/history": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Returns an audit history of versions of the package.",
            "in": "path",
            "name": "PackageID",
            "required": true,
            "type": "string"
          },
          {
            "description": "Limits results to a maximum number of versions.",
            "in": "query",
            "maximum": 100,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetPackageVersionHistoryResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Returns a list of versions of the package, along with their creation time and commit message.",
        "operationId": "GetPackageVersionHistory"
      }
    },
    "/2015-01-01/tags": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ARN": {
                  "description": "The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.",
                  "type": "string"
                },
                "TagList": {
                  "description": "A list of <code>Tag</code> ",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  },
                  "type": "array"
                }
              },
              "required": [
                "ARN",
                "TagList"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "483": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          }
        },
        "description": "Attaches tags to an existing Elasticsearch domain. Tags are a set of case-sensitive key value pairs. An Elasticsearch domain may have up to 10 tags. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-awsresorcetagging\" target=\"_blank\"> Tagging Amazon Elasticsearch Service Domains for more information.</a>",
        "operationId": "AddTags"
      }
    },
    "/2015-01-01/tags-removal": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ARN": {
                  "description": "The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.",
                  "type": "string"
                },
                "TagKeys": {
                  "description": "Specifies the <code>TagKey</code> list which you want to remove from the Elasticsearch domain.",
                  "items": {
                    "$ref": "#/definitions/String"
                  },
                  "type": "array"
                }
              },
              "required": [
                "ARN",
                "TagKeys"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          }
        },
        "description": "Removes the specified set of tags from the specified Elasticsearch domain.",
        "operationId": "RemoveTags"
      }
    },
    "/2015-01-01/tags/#arn": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " Specify the <code>ARN</code> for the Elasticsearch domain to which the tags are attached that you want to view.",
            "in": "query",
            "name": "arn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsResponse"
            }
          },
          "480": {
            "description": "BaseException",
            "schema": {
              "$ref": "#/definitions/BaseException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "483": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          }
        },
        "description": "Returns all tags for the given Elasticsearch domain.",
        "operationId": "ListTags"
      }
    }
  },
  "definitions": {
    "ARN": {
      "description": "The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.",
      "type": "string"
    },
    "AcceptInboundCrossClusterSearchConnectionRequest": {
      "description": "Container for the parameters to the <code><a>AcceptInboundCrossClusterSearchConnection</a></code> operation.",
      "properties": {},
      "title": "AcceptInboundCrossClusterSearchConnectionRequest",
      "type": "object"
    },
    "AcceptInboundCrossClusterSearchConnectionResponse": {
      "description": "The result of a <code><a>AcceptInboundCrossClusterSearchConnection</a></code> operation. Contains details of accepted inbound connection.",
      "properties": {
        "CrossClusterSearchConnection": {
          "allOf": [
            {
              "$ref": "#/definitions/InboundCrossClusterSearchConnection"
            },
            {
              "description": "Specifies the <code><a>InboundCrossClusterSearchConnection</a></code> of accepted inbound connection. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AccessDeniedException": {},
    "AccessPoliciesStatus": {
      "description": "The configured access rules for the domain's document and search endpoints, and the current status of those rules.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyDocument"
            },
            {
              "description": "The access policy configured for the Elasticsearch domain. Access policies may be resource-based, IP-based, or IAM-based. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies\" target=\"_blank\"> Configuring Access Policies</a>for more information."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": "The status of the access policy for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that's included. "
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "AddTagsRequest": {
      "description": "Container for the parameters to the <code><a>AddTags</a></code> operation. Specify the tags that you want to attach to the Elasticsearch domain.",
      "properties": {
        "ARN": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": " Specify the <code>ARN</code> for which you want to add the tags."
            }
          ]
        },
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": " List of <code>Tag</code> that need to be added for the Elasticsearch domain. "
            }
          ]
        }
      },
      "required": [
        "ARN",
        "TagList"
      ],
      "title": "AddTagsRequest",
      "type": "object"
    },
    "AdditionalLimit": {
      "description": " List of limits that are specific to a given InstanceType and for each of it's <code> <a>InstanceRole</a> </code> . ",
      "properties": {
        "LimitName": {
          "allOf": [
            {
              "$ref": "#/definitions/LimitName"
            },
            {
              "description": " Name of Additional Limit is specific to a given InstanceType and for each of it's <code> <a>InstanceRole</a> </code> etc. <br/> Attributes and their details: <br/> <ul> <li>MaximumNumberOfDataNodesSupported</li> This attribute will be present in Master node only to specify how much data nodes upto which given <code> <a>ESPartitionInstanceType</a> </code> can support as master node. <li>MaximumNumberOfDataNodesWithoutMasterNode</li> This attribute will be present in Data node only to specify how much data nodes of given <code> <a>ESPartitionInstanceType</a> </code> upto which you don't need any master nodes to govern them. </ul> "
            }
          ]
        },
        "LimitValues": {
          "allOf": [
            {
              "$ref": "#/definitions/LimitValueList"
            },
            {
              "description": " Value for given <code> <a>AdditionalLimit$LimitName</a> </code> . "
            }
          ]
        }
      },
      "type": "object"
    },
    "AdditionalLimitList": {
      "items": {
        "$ref": "#/definitions/AdditionalLimit"
      },
      "type": "array"
    },
    "AdvancedOptions": {
      "additionalProperties": {
        "$ref": "#/definitions/String"
      },
      "description": "<p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\" target=\"_blank\">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\">Configuring Advanced Options</a>.</p>",
      "type": "object"
    },
    "AdvancedOptionsStatus": {
      "description": "<p> Status of the advanced options for the specified Elasticsearch domain. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\" target=\"_blank\">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\">Configuring Advanced Options</a>.</p>",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/AdvancedOptions"
            },
            {
              "description": " Specifies the status of advanced options for the specified Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": " Specifies the status of <code>OptionStatus</code> for advanced options for the specified Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "AdvancedSecurityOptions": {
      "description": "Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled.",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "True if advanced security is enabled."
            }
          ]
        },
        "InternalUserDatabaseEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "True if the internal user database is enabled."
            }
          ]
        },
        "SAMLOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/SAMLOptionsOutput"
            },
            {
              "description": "Describes the SAML application configured for a domain."
            }
          ]
        }
      },
      "type": "object"
    },
    "AdvancedSecurityOptionsInput": {
      "description": "Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "True if advanced security is enabled."
            }
          ]
        },
        "InternalUserDatabaseEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "True if the internal user database is enabled."
            }
          ]
        },
        "MasterUserOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/MasterUserOptions"
            },
            {
              "description": "Credentials for the master user: username and password, ARN, or both."
            }
          ]
        },
        "SAMLOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/SAMLOptionsInput"
            },
            {
              "description": "Specifies the SAML application configuration for the domain."
            }
          ]
        }
      },
      "type": "object"
    },
    "AdvancedSecurityOptionsStatus": {
      "description": " Specifies the status of advanced security options for the specified Elasticsearch domain.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/AdvancedSecurityOptions"
            },
            {
              "description": " Specifies advanced security options for the specified Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": " Status of the advanced security options for the specified Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "AssociatePackageRequest": {
      "description": " Container for request parameters to <code> <a>AssociatePackage</a> </code> operation. ",
      "properties": {},
      "title": "AssociatePackageRequest",
      "type": "object"
    },
    "AssociatePackageResponse": {
      "description": " Container for response returned by <code> <a>AssociatePackage</a> </code> operation. ",
      "properties": {
        "DomainPackageDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainPackageDetails"
            },
            {
              "description": "<code>DomainPackageDetails</code>"
            }
          ]
        }
      },
      "type": "object"
    },
    "BackendRole": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "BaseException": {},
    "Boolean": {
      "type": "boolean"
    },
    "CancelElasticsearchServiceSoftwareUpdateRequest": {
      "description": "Container for the parameters to the <code><a>CancelElasticsearchServiceSoftwareUpdate</a></code> operation. Specifies the name of the Elasticsearch domain that you wish to cancel a service software update on.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to stop the latest service software update on."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "CancelElasticsearchServiceSoftwareUpdateRequest",
      "type": "object"
    },
    "CancelElasticsearchServiceSoftwareUpdateResponse": {
      "description": "The result of a <code>CancelElasticsearchServiceSoftwareUpdate</code> operation. Contains the status of the update.",
      "properties": {
        "ServiceSoftwareOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/ServiceSoftwareOptions"
            },
            {
              "description": "The current status of the Elasticsearch service software update."
            }
          ]
        }
      },
      "type": "object"
    },
    "CloudWatchLogsLogGroupArn": {
      "description": "ARN of the Cloudwatch log group to which log needs to be published.",
      "type": "string"
    },
    "CognitoOptions": {
      "description": "Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html\" target=\"_blank\">Amazon Cognito Authentication for Kibana</a>.",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies the option to enable Cognito for Kibana authentication."
            }
          ]
        },
        "IdentityPoolId": {
          "allOf": [
            {
              "$ref": "#/definitions/IdentityPoolId"
            },
            {
              "description": "Specifies the Cognito identity pool ID for Kibana authentication."
            }
          ]
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleArn"
            },
            {
              "description": "Specifies the role ARN that provides Elasticsearch permissions for accessing Cognito resources."
            }
          ]
        },
        "UserPoolId": {
          "allOf": [
            {
              "$ref": "#/definitions/UserPoolId"
            },
            {
              "description": "Specifies the Cognito user pool ID for Kibana authentication."
            }
          ]
        }
      },
      "type": "object"
    },
    "CognitoOptionsStatus": {
      "description": "Status of the Cognito options for the specified Elasticsearch domain.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/CognitoOptions"
            },
            {
              "description": "Specifies the Cognito options for the specified Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": "Specifies the status of the Cognito options for the specified Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "CommitMessage": {
      "maxLength": 160,
      "type": "string"
    },
    "CompatibleElasticsearchVersionsList": {
      "items": {
        "$ref": "#/definitions/CompatibleVersionsMap"
      },
      "type": "array"
    },
    "CompatibleVersionsMap": {
      "description": " A map from an <code> <a>ElasticsearchVersion</a> </code> to a list of compatible <code> <a>ElasticsearchVersion</a> </code> s to which the domain can be upgraded. ",
      "properties": {
        "SourceVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchVersionString"
            },
            {
              "description": "The current version of Elasticsearch on which a domain is."
            }
          ]
        },
        "TargetVersions": {
          "$ref": "#/definitions/ElasticsearchVersionList"
        }
      },
      "type": "object"
    },
    "ConflictException": {},
    "ConnectionAlias": {
      "maxLength": 20,
      "type": "string"
    },
    "CreateElasticsearchDomainRequest": {
      "properties": {
        "AccessPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyDocument"
            },
            {
              "description": " IAM access policy as a JSON-formatted string."
            }
          ]
        },
        "AdvancedOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AdvancedOptions"
            },
            {
              "description": " Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\" target=\"_blank\">Configuration Advanced Options</a> for more information."
            }
          ]
        },
        "AdvancedSecurityOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AdvancedSecurityOptionsInput"
            },
            {
              "description": "Specifies advanced security options."
            }
          ]
        },
        "CognitoOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/CognitoOptions"
            },
            {
              "description": "Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html\" target=\"_blank\">Amazon Cognito Authentication for Kibana</a>."
            }
          ]
        },
        "DomainEndpointOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainEndpointOptions"
            },
            {
              "description": "Options to specify configuration that will be applied to the domain endpoint."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the Elasticsearch domain that you are creating. Domain names are unique across the domains owned by an account within an AWS region. Domain names must start with a lowercase letter and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen)."
            }
          ]
        },
        "EBSOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/EBSOptions"
            },
            {
              "description": "Options to enable, disable and specify the type and size of EBS storage volumes. "
            }
          ]
        },
        "ElasticsearchClusterConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchClusterConfig"
            },
            {
              "description": "Configuration options for an Elasticsearch domain. Specifies the instance type and number of instances in the domain cluster. "
            }
          ]
        },
        "ElasticsearchVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchVersionString"
            },
            {
              "description": "String of format X.Y to specify version for the Elasticsearch domain eg. \"1.5\" or \"2.3\". For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains\" target=\"_blank\">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>."
            }
          ]
        },
        "EncryptionAtRestOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionAtRestOptions"
            },
            {
              "description": "Specifies the Encryption At Rest Options."
            }
          ]
        },
        "LogPublishingOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/LogPublishingOptions"
            },
            {
              "description": "Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log."
            }
          ]
        },
        "NodeToNodeEncryptionOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/NodeToNodeEncryptionOptions"
            },
            {
              "description": "Specifies the NodeToNodeEncryptionOptions."
            }
          ]
        },
        "SnapshotOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/SnapshotOptions"
            },
            {
              "description": "Option to set time, in UTC format, of the daily automated snapshot. Default value is 0 hours. "
            }
          ]
        },
        "VPCOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/VPCOptions"
            },
            {
              "description": "Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-creating-vpc\" target=\"_blank\">Creating a VPC</a> in <i>VPC Endpoints for Amazon Elasticsearch Service Domains</i>"
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "CreateElasticsearchDomainRequest",
      "type": "object"
    },
    "CreateElasticsearchDomainResponse": {
      "description": "The result of a <code>CreateElasticsearchDomain</code> operation. Contains the status of the newly created Elasticsearch domain.",
      "properties": {
        "DomainStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchDomainStatus"
            },
            {
              "description": "The status of the newly created Elasticsearch domain. "
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateOutboundCrossClusterSearchConnectionRequest": {
      "description": "Container for the parameters to the <code><a>CreateOutboundCrossClusterSearchConnection</a></code> operation.",
      "properties": {
        "ConnectionAlias": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAlias"
            },
            {
              "description": "Specifies the connection alias that will be used by the customer for this connection."
            }
          ]
        },
        "DestinationDomainInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainInformation"
            },
            {
              "description": "Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain."
            }
          ]
        },
        "SourceDomainInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainInformation"
            },
            {
              "description": "Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "SourceDomainInfo",
        "DestinationDomainInfo",
        "ConnectionAlias"
      ],
      "title": "CreateOutboundCrossClusterSearchConnectionRequest",
      "type": "object"
    },
    "CreateOutboundCrossClusterSearchConnectionResponse": {
      "description": "The result of a <code><a>CreateOutboundCrossClusterSearchConnection</a></code> request. Contains the details of the newly created cross-cluster search connection.",
      "properties": {
        "ConnectionAlias": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAlias"
            },
            {
              "description": "Specifies the connection alias provided during the create connection request."
            }
          ]
        },
        "ConnectionStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/OutboundCrossClusterSearchConnectionStatus"
            },
            {
              "description": "Specifies the <code><a>OutboundCrossClusterSearchConnectionStatus</a></code> for the newly created connection."
            }
          ]
        },
        "CrossClusterSearchConnectionId": {
          "allOf": [
            {
              "$ref": "#/definitions/CrossClusterSearchConnectionId"
            },
            {
              "description": "Unique id for the created outbound connection, which is used for subsequent operations on connection."
            }
          ]
        },
        "DestinationDomainInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainInformation"
            },
            {
              "description": "Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain."
            }
          ]
        },
        "SourceDomainInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainInformation"
            },
            {
              "description": "Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreatePackageRequest": {
      "description": " Container for request parameters to <code> <a>CreatePackage</a> </code> operation. ",
      "properties": {
        "PackageDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageDescription"
            },
            {
              "description": "Description of the package."
            }
          ]
        },
        "PackageName": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageName"
            },
            {
              "description": "Unique identifier for the package."
            }
          ]
        },
        "PackageSource": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageSource"
            },
            {
              "description": "The customer S3 location <code>PackageSource</code> for importing the package."
            }
          ]
        },
        "PackageType": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageType"
            },
            {
              "description": "Type of package. Currently supports only TXT-DICTIONARY."
            }
          ]
        }
      },
      "required": [
        "PackageName",
        "PackageType",
        "PackageSource"
      ],
      "title": "CreatePackageRequest",
      "type": "object"
    },
    "CreatePackageResponse": {
      "description": " Container for response returned by <code> <a>CreatePackage</a> </code> operation. ",
      "properties": {
        "PackageDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageDetails"
            },
            {
              "description": "Information about the package <code>PackageDetails</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreatedAt": {
      "format": "date-time",
      "type": "string"
    },
    "CrossClusterSearchConnectionId": {
      "type": "string"
    },
    "CrossClusterSearchConnectionStatusMessage": {
      "type": "string"
    },
    "DeleteElasticsearchDomainRequest": {
      "description": "Container for the parameters to the <code><a>DeleteElasticsearchDomain</a></code> operation. Specifies the name of the Elasticsearch domain that you want to delete.",
      "properties": {},
      "title": "DeleteElasticsearchDomainRequest",
      "type": "object"
    },
    "DeleteElasticsearchDomainResponse": {
      "description": "The result of a <code>DeleteElasticsearchDomain</code> request. Contains the status of the pending deletion, or no status if the domain and all of its resources have been deleted.",
      "properties": {
        "DomainStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchDomainStatus"
            },
            {
              "description": "The status of the Elasticsearch domain being deleted."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteInboundCrossClusterSearchConnectionRequest": {
      "description": "Container for the parameters to the <code><a>DeleteInboundCrossClusterSearchConnection</a></code> operation.",
      "properties": {},
      "title": "DeleteInboundCrossClusterSearchConnectionRequest",
      "type": "object"
    },
    "DeleteInboundCrossClusterSearchConnectionResponse": {
      "description": "The result of a <code><a>DeleteInboundCrossClusterSearchConnection</a></code> operation. Contains details of deleted inbound connection.",
      "properties": {
        "CrossClusterSearchConnection": {
          "allOf": [
            {
              "$ref": "#/definitions/InboundCrossClusterSearchConnection"
            },
            {
              "description": "Specifies the <code><a>InboundCrossClusterSearchConnection</a></code> of deleted inbound connection. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteOutboundCrossClusterSearchConnectionRequest": {
      "description": "Container for the parameters to the <code><a>DeleteOutboundCrossClusterSearchConnection</a></code> operation.",
      "properties": {},
      "title": "DeleteOutboundCrossClusterSearchConnectionRequest",
      "type": "object"
    },
    "DeleteOutboundCrossClusterSearchConnectionResponse": {
      "description": "The result of a <code><a>DeleteOutboundCrossClusterSearchConnection</a></code> operation. Contains details of deleted outbound connection.",
      "properties": {
        "CrossClusterSearchConnection": {
          "allOf": [
            {
              "$ref": "#/definitions/OutboundCrossClusterSearchConnection"
            },
            {
              "description": "Specifies the <code><a>OutboundCrossClusterSearchConnection</a></code> of deleted outbound connection. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DeletePackageRequest": {
      "description": " Container for request parameters to <code> <a>DeletePackage</a> </code> operation. ",
      "properties": {},
      "title": "DeletePackageRequest",
      "type": "object"
    },
    "DeletePackageResponse": {
      "description": " Container for response parameters to <code> <a>DeletePackage</a> </code> operation. ",
      "properties": {
        "PackageDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageDetails"
            },
            {
              "description": "<code>PackageDetails</code>"
            }
          ]
        }
      },
      "type": "object"
    },
    "DeploymentCloseDateTimeStamp": {
      "format": "date-time",
      "type": "string"
    },
    "DeploymentStatus": {
      "enum": [
        "PENDING_UPDATE",
        "IN_PROGRESS",
        "COMPLETED",
        "NOT_ELIGIBLE",
        "ELIGIBLE"
      ],
      "type": "string"
    },
    "DescribeElasticsearchDomainConfigRequest": {
      "description": " Container for the parameters to the <code>DescribeElasticsearchDomainConfig</code> operation. Specifies the domain name for which you want configuration information.",
      "properties": {},
      "title": "DescribeElasticsearchDomainConfigRequest",
      "type": "object"
    },
    "DescribeElasticsearchDomainConfigResponse": {
      "description": "The result of a <code>DescribeElasticsearchDomainConfig</code> request. Contains the configuration information of the requested domain.",
      "properties": {
        "DomainConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchDomainConfig"
            },
            {
              "description": "The configuration information of the domain requested in the <code>DescribeElasticsearchDomainConfig</code> request."
            }
          ]
        }
      },
      "required": [
        "DomainConfig"
      ],
      "type": "object"
    },
    "DescribeElasticsearchDomainRequest": {
      "description": "Container for the parameters to the <code><a>DescribeElasticsearchDomain</a></code> operation.",
      "properties": {},
      "title": "DescribeElasticsearchDomainRequest",
      "type": "object"
    },
    "DescribeElasticsearchDomainResponse": {
      "description": "The result of a <code>DescribeElasticsearchDomain</code> request. Contains the status of the domain specified in the request.",
      "properties": {
        "DomainStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchDomainStatus"
            },
            {
              "description": "The current status of the Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "DomainStatus"
      ],
      "type": "object"
    },
    "DescribeElasticsearchDomainsRequest": {
      "description": "Container for the parameters to the <code><a>DescribeElasticsearchDomains</a></code> operation. By default, the API returns the status of all Elasticsearch domains.",
      "properties": {
        "DomainNames": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainNameList"
            },
            {
              "description": "The Elasticsearch domains for which you want information."
            }
          ]
        }
      },
      "required": [
        "DomainNames"
      ],
      "title": "DescribeElasticsearchDomainsRequest",
      "type": "object"
    },
    "DescribeElasticsearchDomainsResponse": {
      "description": "The result of a <code>DescribeElasticsearchDomains</code> request. Contains the status of the specified domains or all domains owned by the account.",
      "properties": {
        "DomainStatusList": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchDomainStatusList"
            },
            {
              "description": "The status of the domains requested in the <code>DescribeElasticsearchDomains</code> request."
            }
          ]
        }
      },
      "required": [
        "DomainStatusList"
      ],
      "type": "object"
    },
    "DescribeElasticsearchInstanceTypeLimitsRequest": {
      "description": " Container for the parameters to <code> <a>DescribeElasticsearchInstanceTypeLimits</a> </code> operation. ",
      "properties": {},
      "title": "DescribeElasticsearchInstanceTypeLimitsRequest",
      "type": "object"
    },
    "DescribeElasticsearchInstanceTypeLimitsResponse": {
      "description": " Container for the parameters received from <code> <a>DescribeElasticsearchInstanceTypeLimits</a> </code> operation. ",
      "properties": {
        "LimitsByRole": {
          "$ref": "#/definitions/LimitsByRole"
        }
      },
      "type": "object"
    },
    "DescribeInboundCrossClusterSearchConnectionsRequest": {
      "description": "Container for the parameters to the <code><a>DescribeInboundCrossClusterSearchConnections</a></code> operation.",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": " A list of filters used to match properties for inbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>source-domain-info.domain-name</li> <li>source-domain-info.owner-id</li> <li>source-domain-info.region</li> <li>destination-domain-info.domain-name</li> </ul> "
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "Set this value to limit the number of results returned. If not specified, defaults to 100."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": " NextToken is sent in case the earlier API call results contain the NextToken. It is used for pagination."
            }
          ]
        }
      },
      "title": "DescribeInboundCrossClusterSearchConnectionsRequest",
      "type": "object"
    },
    "DescribeInboundCrossClusterSearchConnectionsResponse": {
      "description": "The result of a <code><a>DescribeInboundCrossClusterSearchConnections</a></code> request. Contains the list of connections matching the filter criteria.",
      "properties": {
        "CrossClusterSearchConnections": {
          "allOf": [
            {
              "$ref": "#/definitions/InboundCrossClusterSearchConnections"
            },
            {
              "description": "Consists of list of <code><a>InboundCrossClusterSearchConnection</a></code> matching the specified filter criteria."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If more results are available and NextToken is present, make the next request to the same API with the received NextToken to paginate the remaining results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeOutboundCrossClusterSearchConnectionsRequest": {
      "description": "Container for the parameters to the <code><a>DescribeOutboundCrossClusterSearchConnections</a></code> operation.",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/FilterList"
            },
            {
              "description": " A list of filters used to match properties for outbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>destination-domain-info.domain-name</li> <li>destination-domain-info.owner-id</li> <li>destination-domain-info.region</li> <li>source-domain-info.domain-name</li> </ul> "
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "Set this value to limit the number of results returned. If not specified, defaults to 100."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": " NextToken is sent in case the earlier API call results contain the NextToken. It is used for pagination."
            }
          ]
        }
      },
      "title": "DescribeOutboundCrossClusterSearchConnectionsRequest",
      "type": "object"
    },
    "DescribeOutboundCrossClusterSearchConnectionsResponse": {
      "description": "The result of a <code><a>DescribeOutboundCrossClusterSearchConnections</a></code> request. Contains the list of connections matching the filter criteria.",
      "properties": {
        "CrossClusterSearchConnections": {
          "allOf": [
            {
              "$ref": "#/definitions/OutboundCrossClusterSearchConnections"
            },
            {
              "description": "Consists of list of <code><a>OutboundCrossClusterSearchConnection</a></code> matching the specified filter criteria."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If more results are available and NextToken is present, make the next request to the same API with the received NextToken to paginate the remaining results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribePackagesFilter": {
      "description": "Filter to apply in <code>DescribePackage</code> response.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/DescribePackagesFilterName"
            },
            {
              "description": "Any field from <code>PackageDetails</code>."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/DescribePackagesFilterValues"
            },
            {
              "description": "A list of values for the specified field."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribePackagesFilterList": {
      "description": "A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.",
      "items": {
        "$ref": "#/definitions/DescribePackagesFilter"
      },
      "type": "array"
    },
    "DescribePackagesFilterName": {
      "enum": [
        "PackageID",
        "PackageName",
        "PackageStatus"
      ],
      "type": "string"
    },
    "DescribePackagesFilterValue": {
      "pattern": "^[0-9a-zA-Z\\*\\.\\\\/\\?-]*$",
      "type": "string"
    },
    "DescribePackagesFilterValues": {
      "items": {
        "$ref": "#/definitions/DescribePackagesFilterValue"
      },
      "type": "array"
    },
    "DescribePackagesRequest": {
      "description": " Container for request parameters to <code> <a>DescribePackage</a> </code> operation. ",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/DescribePackagesFilterList"
            },
            {
              "description": "Only returns packages that match the <code>DescribePackagesFilterList</code> values."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "Limits results to a maximum number of packages."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page."
            }
          ]
        }
      },
      "title": "DescribePackagesRequest",
      "type": "object"
    },
    "DescribePackagesResponse": {
      "description": " Container for response returned by <code> <a>DescribePackages</a> </code> operation. ",
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/String"
        },
        "PackageDetailsList": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageDetailsList"
            },
            {
              "description": "List of <code>PackageDetails</code> objects."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeReservedElasticsearchInstanceOfferingsRequest": {
      "description": "Container for parameters to <code>DescribeReservedElasticsearchInstanceOfferings</code>",
      "properties": {},
      "title": "DescribeReservedElasticsearchInstanceOfferingsRequest",
      "type": "object"
    },
    "DescribeReservedElasticsearchInstanceOfferingsResponse": {
      "description": "Container for results from <code>DescribeReservedElasticsearchInstanceOfferings</code>",
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "Provides an identifier to allow retrieval of paginated results."
            }
          ]
        },
        "ReservedElasticsearchInstanceOfferings": {
          "allOf": [
            {
              "$ref": "#/definitions/ReservedElasticsearchInstanceOfferingList"
            },
            {
              "description": "List of reserved Elasticsearch instance offerings"
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeReservedElasticsearchInstancesRequest": {
      "description": "Container for parameters to <code>DescribeReservedElasticsearchInstances</code>",
      "properties": {},
      "title": "DescribeReservedElasticsearchInstancesRequest",
      "type": "object"
    },
    "DescribeReservedElasticsearchInstancesResponse": {
      "description": "Container for results from <code>DescribeReservedElasticsearchInstances</code>",
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Provides an identifier to allow retrieval of paginated results."
            }
          ]
        },
        "ReservedElasticsearchInstances": {
          "allOf": [
            {
              "$ref": "#/definitions/ReservedElasticsearchInstanceList"
            },
            {
              "description": "List of reserved Elasticsearch instances."
            }
          ]
        }
      },
      "type": "object"
    },
    "DisabledOperationException": {},
    "DissociatePackageRequest": {
      "description": " Container for request parameters to <code> <a>DissociatePackage</a> </code> operation. ",
      "properties": {},
      "title": "DissociatePackageRequest",
      "type": "object"
    },
    "DissociatePackageResponse": {
      "description": " Container for response returned by <code> <a>DissociatePackage</a> </code> operation. ",
      "properties": {
        "DomainPackageDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainPackageDetails"
            },
            {
              "description": "<code>DomainPackageDetails</code>"
            }
          ]
        }
      },
      "type": "object"
    },
    "DomainEndpointOptions": {
      "description": "Options to configure endpoint for the Elasticsearch domain.",
      "properties": {
        "CustomEndpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainNameFqdn"
            },
            {
              "description": "Specify the fully qualified domain for your custom endpoint."
            }
          ]
        },
        "CustomEndpointCertificateArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "Specify ACM certificate ARN for your custom endpoint."
            }
          ]
        },
        "CustomEndpointEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specify if custom endpoint should be enabled for the Elasticsearch domain."
            }
          ]
        },
        "EnforceHTTPS": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specify if only HTTPS endpoint should be enabled for the Elasticsearch domain."
            }
          ]
        },
        "TLSSecurityPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/TLSSecurityPolicy"
            },
            {
              "description": "Specify the TLS security policy that needs to be applied to the HTTPS endpoint of Elasticsearch domain. <br/> It can be one of the following values: <ul> <li><b>Policy-Min-TLS-1-0-2019-07: </b> TLS security policy which supports TLSv1.0 and higher.</li> <li><b>Policy-Min-TLS-1-2-2019-07: </b> TLS security policy which supports only TLSv1.2</li> </ul> "
            }
          ]
        }
      },
      "type": "object"
    },
    "DomainEndpointOptionsStatus": {
      "description": "The configured endpoint options for the domain and their current status.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainEndpointOptions"
            },
            {
              "description": "Options to configure endpoint for the Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": "The status of the endpoint options for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that's included. "
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "DomainId": {
      "description": "Unique identifier for an Elasticsearch domain.",
      "maxLength": 64,
      "minLength": 1,
      "type": "string"
    },
    "DomainInfo": {
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": " Specifies the <code>DomainName</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "DomainInfoList": {
      "description": " Contains the list of Elasticsearch domain information.",
      "items": {
        "$ref": "#/definitions/DomainInfo"
      },
      "type": "array"
    },
    "DomainInformation": {
      "properties": {
        "DomainName": {
          "$ref": "#/definitions/DomainName"
        },
        "OwnerId": {
          "$ref": "#/definitions/OwnerId"
        },
        "Region": {
          "$ref": "#/definitions/Region"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "object"
    },
    "DomainName": {
      "description": "The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).",
      "maxLength": 28,
      "minLength": 3,
      "pattern": "[a-z][a-z0-9\\-]+",
      "type": "string"
    },
    "DomainNameFqdn": {
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
      "type": "string"
    },
    "DomainNameList": {
      "description": "A list of Elasticsearch domain names.",
      "items": {
        "$ref": "#/definitions/DomainName"
      },
      "type": "array"
    },
    "DomainPackageDetails": {
      "description": "Information on a package that is associated with a domain.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "Name of the domain you've associated a package with."
            }
          ]
        },
        "DomainPackageStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainPackageStatus"
            },
            {
              "description": "State of the association. Values are ASSOCIATING/ASSOCIATION_FAILED/ACTIVE/DISSOCIATING/DISSOCIATION_FAILED."
            }
          ]
        },
        "ErrorDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorDetails"
            },
            {
              "description": "Additional information if the package is in an error state. Null otherwise."
            }
          ]
        },
        "LastUpdated": {
          "allOf": [
            {
              "$ref": "#/definitions/LastUpdated"
            },
            {
              "description": "Timestamp of the most-recent update to the association status."
            }
          ]
        },
        "PackageID": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageID"
            },
            {
              "description": "Internal ID of the package."
            }
          ]
        },
        "PackageName": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageName"
            },
            {
              "description": "User specified name of the package."
            }
          ]
        },
        "PackageType": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageType"
            },
            {
              "description": "Currently supports only TXT-DICTIONARY."
            }
          ]
        },
        "PackageVersion": {
          "$ref": "#/definitions/PackageVersion"
        },
        "ReferencePath": {
          "allOf": [
            {
              "$ref": "#/definitions/ReferencePath"
            },
            {
              "description": "The relative path on Amazon ES nodes, which can be used as synonym_path when the package is synonym file."
            }
          ]
        }
      },
      "type": "object"
    },
    "DomainPackageDetailsList": {
      "items": {
        "$ref": "#/definitions/DomainPackageDetails"
      },
      "type": "array"
    },
    "DomainPackageStatus": {
      "enum": [
        "ASSOCIATING",
        "ASSOCIATION_FAILED",
        "ACTIVE",
        "DISSOCIATING",
        "DISSOCIATION_FAILED"
      ],
      "type": "string"
    },
    "Double": {
      "format": "double",
      "type": "number"
    },
    "EBSOptions": {
      "description": "Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs\" target=\"_blank\"> Configuring EBS-based Storage</a>.",
      "properties": {
        "EBSEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies whether EBS-based storage is enabled."
            }
          ]
        },
        "Iops": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerClass"
            },
            {
              "description": "Specifies the IOPD for a Provisioned IOPS EBS volume (SSD)."
            }
          ]
        },
        "VolumeSize": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerClass"
            },
            {
              "description": " Integer to specify the size of an EBS volume."
            }
          ]
        },
        "VolumeType": {
          "allOf": [
            {
              "$ref": "#/definitions/VolumeType"
            },
            {
              "description": " Specifies the volume type for EBS-based storage."
            }
          ]
        }
      },
      "type": "object"
    },
    "EBSOptionsStatus": {
      "description": " Status of the EBS options for the specified Elasticsearch domain.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/EBSOptions"
            },
            {
              "description": " Specifies the EBS options for the specified Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": " Specifies the status of the EBS options for the specified Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "ESPartitionInstanceType": {
      "enum": [
        "m3.medium.elasticsearch",
        "m3.large.elasticsearch",
        "m3.xlarge.elasticsearch",
        "m3.2xlarge.elasticsearch",
        "m4.large.elasticsearch",
        "m4.xlarge.elasticsearch",
        "m4.2xlarge.elasticsearch",
        "m4.4xlarge.elasticsearch",
        "m4.10xlarge.elasticsearch",
        "m5.large.elasticsearch",
        "m5.xlarge.elasticsearch",
        "m5.2xlarge.elasticsearch",
        "m5.4xlarge.elasticsearch",
        "m5.12xlarge.elasticsearch",
        "r5.large.elasticsearch",
        "r5.xlarge.elasticsearch",
        "r5.2xlarge.elasticsearch",
        "r5.4xlarge.elasticsearch",
        "r5.12xlarge.elasticsearch",
        "c5.large.elasticsearch",
        "c5.xlarge.elasticsearch",
        "c5.2xlarge.elasticsearch",
        "c5.4xlarge.elasticsearch",
        "c5.9xlarge.elasticsearch",
        "c5.18xlarge.elasticsearch",
        "ultrawarm1.medium.elasticsearch",
        "ultrawarm1.large.elasticsearch",
        "t2.micro.elasticsearch",
        "t2.small.elasticsearch",
        "t2.medium.elasticsearch",
        "r3.large.elasticsearch",
        "r3.xlarge.elasticsearch",
        "r3.2xlarge.elasticsearch",
        "r3.4xlarge.elasticsearch",
        "r3.8xlarge.elasticsearch",
        "i2.xlarge.elasticsearch",
        "i2.2xlarge.elasticsearch",
        "d2.xlarge.elasticsearch",
        "d2.2xlarge.elasticsearch",
        "d2.4xlarge.elasticsearch",
        "d2.8xlarge.elasticsearch",
        "c4.large.elasticsearch",
        "c4.xlarge.elasticsearch",
        "c4.2xlarge.elasticsearch",
        "c4.4xlarge.elasticsearch",
        "c4.8xlarge.elasticsearch",
        "r4.large.elasticsearch",
        "r4.xlarge.elasticsearch",
        "r4.2xlarge.elasticsearch",
        "r4.4xlarge.elasticsearch",
        "r4.8xlarge.elasticsearch",
        "r4.16xlarge.elasticsearch",
        "i3.large.elasticsearch",
        "i3.xlarge.elasticsearch",
        "i3.2xlarge.elasticsearch",
        "i3.4xlarge.elasticsearch",
        "i3.8xlarge.elasticsearch",
        "i3.16xlarge.elasticsearch"
      ],
      "type": "string"
    },
    "ESWarmPartitionInstanceType": {
      "enum": [
        "ultrawarm1.medium.elasticsearch",
        "ultrawarm1.large.elasticsearch"
      ],
      "type": "string"
    },
    "ElasticsearchClusterConfig": {
      "description": "Specifies the configuration for the domain cluster, such as the type and number of instances.",
      "properties": {
        "DedicatedMasterCount": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerClass"
            },
            {
              "description": "Total number of dedicated master nodes, active and on standby, for the cluster."
            }
          ]
        },
        "DedicatedMasterEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "A boolean value to indicate whether a dedicated master node is enabled. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-dedicatedmasternodes\" target=\"_blank\">About Dedicated Master Nodes</a> for more information."
            }
          ]
        },
        "DedicatedMasterType": {
          "allOf": [
            {
              "$ref": "#/definitions/ESPartitionInstanceType"
            },
            {
              "description": "The instance type for a dedicated master node."
            }
          ]
        },
        "InstanceCount": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerClass"
            },
            {
              "description": "The number of instances in the specified domain cluster."
            }
          ]
        },
        "InstanceType": {
          "allOf": [
            {
              "$ref": "#/definitions/ESPartitionInstanceType"
            },
            {
              "description": "The instance type for an Elasticsearch cluster. UltraWarm instance types are not supported for data instances."
            }
          ]
        },
        "WarmCount": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerClass"
            },
            {
              "description": "The number of warm nodes in the cluster."
            }
          ]
        },
        "WarmEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "True to enable warm storage."
            }
          ]
        },
        "WarmType": {
          "allOf": [
            {
              "$ref": "#/definitions/ESWarmPartitionInstanceType"
            },
            {
              "description": "The instance type for the Elasticsearch cluster's warm nodes."
            }
          ]
        },
        "ZoneAwarenessConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/ZoneAwarenessConfig"
            },
            {
              "description": "Specifies the zone awareness configuration for a domain when zone awareness is enabled."
            }
          ]
        },
        "ZoneAwarenessEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "A boolean value to indicate whether zone awareness is enabled. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-zoneawareness\" target=\"_blank\">About Zone Awareness</a> for more information."
            }
          ]
        }
      },
      "type": "object"
    },
    "ElasticsearchClusterConfigStatus": {
      "description": " Specifies the configuration status for the specified Elasticsearch domain.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchClusterConfig"
            },
            {
              "description": " Specifies the cluster configuration for the specified Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": " Specifies the status of the configuration for the specified Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "ElasticsearchDomainConfig": {
      "description": "The configuration of an Elasticsearch domain.",
      "properties": {
        "AccessPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessPoliciesStatus"
            },
            {
              "description": "IAM access policy as a JSON-formatted string."
            }
          ]
        },
        "AdvancedOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AdvancedOptionsStatus"
            },
            {
              "description": "Specifies the <code>AdvancedOptions</code> for the domain. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\" target=\"_blank\">Configuring Advanced Options</a> for more information."
            }
          ]
        },
        "AdvancedSecurityOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AdvancedSecurityOptionsStatus"
            },
            {
              "description": "Specifies <code>AdvancedSecurityOptions</code> for the domain. "
            }
          ]
        },
        "CognitoOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/CognitoOptionsStatus"
            },
            {
              "description": "The <code>CognitoOptions</code> for the specified domain. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html\" target=\"_blank\">Amazon Cognito Authentication for Kibana</a>."
            }
          ]
        },
        "DomainEndpointOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainEndpointOptionsStatus"
            },
            {
              "description": "Specifies the <code>DomainEndpointOptions</code> for the Elasticsearch domain."
            }
          ]
        },
        "EBSOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/EBSOptionsStatus"
            },
            {
              "description": "Specifies the <code>EBSOptions</code> for the Elasticsearch domain."
            }
          ]
        },
        "ElasticsearchClusterConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchClusterConfigStatus"
            },
            {
              "description": "Specifies the <code>ElasticsearchClusterConfig</code> for the Elasticsearch domain."
            }
          ]
        },
        "ElasticsearchVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchVersionStatus"
            },
            {
              "description": "String of format X.Y to specify version for the Elasticsearch domain."
            }
          ]
        },
        "EncryptionAtRestOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionAtRestOptionsStatus"
            },
            {
              "description": "Specifies the <code>EncryptionAtRestOptions</code> for the Elasticsearch domain."
            }
          ]
        },
        "LogPublishingOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/LogPublishingOptionsStatus"
            },
            {
              "description": "Log publishing options for the given domain."
            }
          ]
        },
        "NodeToNodeEncryptionOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/NodeToNodeEncryptionOptionsStatus"
            },
            {
              "description": "Specifies the <code>NodeToNodeEncryptionOptions</code> for the Elasticsearch domain."
            }
          ]
        },
        "SnapshotOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/SnapshotOptionsStatus"
            },
            {
              "description": "Specifies the <code>SnapshotOptions</code> for the Elasticsearch domain."
            }
          ]
        },
        "VPCOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/VPCDerivedInfoStatus"
            },
            {
              "description": "The <code>VPCOptions</code> for the specified domain. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html\" target=\"_blank\">VPC Endpoints for Amazon Elasticsearch Service Domains</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "ElasticsearchDomainStatus": {
      "description": "The current status of an Elasticsearch domain.",
      "properties": {
        "ARN": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon resource name (ARN) of an Elasticsearch domain. See <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information."
            }
          ]
        },
        "AccessPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyDocument"
            },
            {
              "description": " IAM access policy as a JSON-formatted string."
            }
          ]
        },
        "AdvancedOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AdvancedOptions"
            },
            {
              "description": "Specifies the status of the <code>AdvancedOptions</code>"
            }
          ]
        },
        "AdvancedSecurityOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AdvancedSecurityOptions"
            },
            {
              "description": "The current status of the Elasticsearch domain's advanced security options."
            }
          ]
        },
        "CognitoOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/CognitoOptions"
            },
            {
              "description": "The <code>CognitoOptions</code> for the specified domain. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html\" target=\"_blank\">Amazon Cognito Authentication for Kibana</a>."
            }
          ]
        },
        "Created": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "The domain creation status. <code>True</code> if the creation of an Elasticsearch domain is complete. <code>False</code> if domain creation is still in progress."
            }
          ]
        },
        "Deleted": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "The domain deletion status. <code>True</code> if a delete request has been received for the domain but resource cleanup is still in progress. <code>False</code> if the domain has not been deleted. Once domain deletion is complete, the status of the domain is no longer returned."
            }
          ]
        },
        "DomainEndpointOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainEndpointOptions"
            },
            {
              "description": "The current status of the Elasticsearch domain's endpoint options."
            }
          ]
        },
        "DomainId": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainId"
            },
            {
              "description": "The unique identifier for the specified Elasticsearch domain."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen)."
            }
          ]
        },
        "EBSOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/EBSOptions"
            },
            {
              "description": "The <code>EBSOptions</code> for the specified domain. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs\" target=\"_blank\">Configuring EBS-based Storage</a> for more information."
            }
          ]
        },
        "ElasticsearchClusterConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchClusterConfig"
            },
            {
              "description": "The type and number of instances in the domain cluster."
            }
          ]
        },
        "ElasticsearchVersion": {
          "$ref": "#/definitions/ElasticsearchVersionString"
        },
        "EncryptionAtRestOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionAtRestOptions"
            },
            {
              "description": " Specifies the status of the <code>EncryptionAtRestOptions</code>."
            }
          ]
        },
        "Endpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/ServiceUrl"
            },
            {
              "description": "The Elasticsearch domain endpoint that you use to submit index and search requests."
            }
          ]
        },
        "Endpoints": {
          "allOf": [
            {
              "$ref": "#/definitions/EndpointsMap"
            },
            {
              "description": "Map containing the Elasticsearch domain endpoints used to submit index and search requests. Example <code>key, value</code>: <code>'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'</code>."
            }
          ]
        },
        "LogPublishingOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/LogPublishingOptions"
            },
            {
              "description": "Log publishing options for the given domain."
            }
          ]
        },
        "NodeToNodeEncryptionOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/NodeToNodeEncryptionOptions"
            },
            {
              "description": "Specifies the status of the <code>NodeToNodeEncryptionOptions</code>."
            }
          ]
        },
        "Processing": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "The status of the Elasticsearch domain configuration. <code>True</code> if Amazon Elasticsearch Service is processing configuration changes. <code>False</code> if the configuration is active."
            }
          ]
        },
        "ServiceSoftwareOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/ServiceSoftwareOptions"
            },
            {
              "description": "The current status of the Elasticsearch domain's service software."
            }
          ]
        },
        "SnapshotOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/SnapshotOptions"
            },
            {
              "description": "Specifies the status of the <code>SnapshotOptions</code>"
            }
          ]
        },
        "UpgradeProcessing": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "The status of an Elasticsearch domain version upgrade. <code>True</code> if Amazon Elasticsearch Service is undergoing a version upgrade. <code>False</code> if the configuration is active."
            }
          ]
        },
        "VPCOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/VPCDerivedInfo"
            },
            {
              "description": "The <code>VPCOptions</code> for the specified domain. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html\" target=\"_blank\">VPC Endpoints for Amazon Elasticsearch Service Domains</a>."
            }
          ]
        }
      },
      "required": [
        "DomainId",
        "DomainName",
        "ARN",
        "ElasticsearchClusterConfig"
      ],
      "type": "object"
    },
    "ElasticsearchDomainStatusList": {
      "description": "A list that contains the status of each requested Elasticsearch domain.",
      "items": {
        "$ref": "#/definitions/ElasticsearchDomainStatus"
      },
      "type": "array"
    },
    "ElasticsearchInstanceTypeList": {
      "description": " List of instance types supported by Amazon Elasticsearch service. ",
      "items": {
        "$ref": "#/definitions/ESPartitionInstanceType"
      },
      "type": "array"
    },
    "ElasticsearchVersionList": {
      "description": "List of supported elastic search versions. ",
      "items": {
        "$ref": "#/definitions/ElasticsearchVersionString"
      },
      "type": "array"
    },
    "ElasticsearchVersionStatus": {
      "description": " Status of the Elasticsearch version options for the specified Elasticsearch domain.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchVersionString"
            },
            {
              "description": " Specifies the Elasticsearch version for the specified Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": " Specifies the status of the Elasticsearch version options for the specified Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "ElasticsearchVersionString": {
      "type": "string"
    },
    "EncryptionAtRestOptions": {
      "description": "Specifies the Encryption At Rest Options.",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies the option to enable Encryption At Rest."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/KmsKeyId"
            },
            {
              "description": " Specifies the KMS Key ID for Encryption At Rest options."
            }
          ]
        }
      },
      "type": "object"
    },
    "EncryptionAtRestOptionsStatus": {
      "description": " Status of the Encryption At Rest options for the specified Elasticsearch domain.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionAtRestOptions"
            },
            {
              "description": " Specifies the Encryption At Rest options for the specified Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": " Specifies the status of the Encryption At Rest options for the specified Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "EndpointsMap": {
      "additionalProperties": {
        "$ref": "#/definitions/ServiceUrl"
      },
      "type": "object"
    },
    "ErrorDetails": {
      "properties": {
        "ErrorMessage": {
          "$ref": "#/definitions/ErrorMessage"
        },
        "ErrorType": {
          "$ref": "#/definitions/ErrorType"
        }
      },
      "type": "object"
    },
    "ErrorMessage": {
      "type": "string"
    },
    "ErrorType": {
      "type": "string"
    },
    "Filter": {
      "description": " A filter used to limit results when describing inbound or outbound cross-cluster search connections. Multiple values can be specified per filter. A cross-cluster search connection must match at least one of the specified values for it to be returned from an operation. ",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": " Specifies the name of the filter. "
            }
          ]
        },
        "Values": {
          "allOf": [
            {
              "$ref": "#/definitions/ValueStringList"
            },
            {
              "description": " Contains one or more values for the filter. "
            }
          ]
        }
      },
      "type": "object"
    },
    "FilterList": {
      "items": {
        "$ref": "#/definitions/Filter"
      },
      "type": "array"
    },
    "GUID": {
      "pattern": "\\p{XDigit}{8}-\\p{XDigit}{4}-\\p{XDigit}{4}-\\p{XDigit}{4}-\\p{XDigit}{12}",
      "type": "string"
    },
    "GetCompatibleElasticsearchVersionsRequest": {
      "description": " Container for request parameters to <code> <a>GetCompatibleElasticsearchVersions</a> </code> operation. ",
      "properties": {},
      "title": "GetCompatibleElasticsearchVersionsRequest",
      "type": "object"
    },
    "GetCompatibleElasticsearchVersionsResponse": {
      "description": " Container for response returned by <code> <a>GetCompatibleElasticsearchVersions</a> </code> operation. ",
      "properties": {
        "CompatibleElasticsearchVersions": {
          "allOf": [
            {
              "$ref": "#/definitions/CompatibleElasticsearchVersionsList"
            },
            {
              "description": " A map of compatible Elasticsearch versions returned as part of the <code> <a>GetCompatibleElasticsearchVersions</a> </code> operation. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetPackageVersionHistoryRequest": {
      "description": " Container for request parameters to <code> <a>GetPackageVersionHistory</a> </code> operation. ",
      "properties": {},
      "title": "GetPackageVersionHistoryRequest",
      "type": "object"
    },
    "GetPackageVersionHistoryResponse": {
      "description": " Container for response returned by <code> <a>GetPackageVersionHistory</a> </code> operation. ",
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/String"
        },
        "PackageID": {
          "$ref": "#/definitions/PackageID"
        },
        "PackageVersionHistoryList": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageVersionHistoryList"
            },
            {
              "description": "List of <code>PackageVersionHistory</code> objects."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetUpgradeHistoryRequest": {
      "description": " Container for request parameters to <code> <a>GetUpgradeHistory</a> </code> operation. ",
      "properties": {},
      "title": "GetUpgradeHistoryRequest",
      "type": "object"
    },
    "GetUpgradeHistoryResponse": {
      "description": " Container for response returned by <code> <a>GetUpgradeHistory</a> </code> operation. ",
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Pagination token that needs to be supplied to the next call to get the next page of results"
            }
          ]
        },
        "UpgradeHistories": {
          "allOf": [
            {
              "$ref": "#/definitions/UpgradeHistoryList"
            },
            {
              "description": " A list of <code> <a>UpgradeHistory</a> </code> objects corresponding to each Upgrade or Upgrade Eligibility Check performed on a domain returned as part of <code> <a>GetUpgradeHistoryResponse</a> </code> object. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetUpgradeStatusRequest": {
      "description": " Container for request parameters to <code> <a>GetUpgradeStatus</a> </code> operation. ",
      "properties": {},
      "title": "GetUpgradeStatusRequest",
      "type": "object"
    },
    "GetUpgradeStatusResponse": {
      "description": " Container for response returned by <code> <a>GetUpgradeStatus</a> </code> operation. ",
      "properties": {
        "StepStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/UpgradeStatus"
            },
            {
              "description": " One of 4 statuses that a step can go through returned as part of the <code> <a>GetUpgradeStatusResponse</a> </code> object. The status can take one of the following values: <ul> <li>In Progress</li> <li>Succeeded</li> <li>Succeeded with Issues</li> <li>Failed</li> </ul> "
            }
          ]
        },
        "UpgradeName": {
          "allOf": [
            {
              "$ref": "#/definitions/UpgradeName"
            },
            {
              "description": "A string that describes the update briefly"
            }
          ]
        },
        "UpgradeStep": {
          "allOf": [
            {
              "$ref": "#/definitions/UpgradeStep"
            },
            {
              "description": " Represents one of 3 steps that an Upgrade or Upgrade Eligibility Check does through: <ul> <li>PreUpgradeCheck</li> <li>Snapshot</li> <li>Upgrade</li> </ul> "
            }
          ]
        }
      },
      "type": "object"
    },
    "IdentityPoolId": {
      "maxLength": 55,
      "minLength": 1,
      "pattern": "[\\w-]+:[0-9a-f-]+",
      "type": "string"
    },
    "InboundCrossClusterSearchConnection": {
      "description": "Specifies details of an inbound connection.",
      "properties": {
        "ConnectionStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/InboundCrossClusterSearchConnectionStatus"
            },
            {
              "description": "Specifies the <code><a>InboundCrossClusterSearchConnectionStatus</a></code> for the outbound connection."
            }
          ]
        },
        "CrossClusterSearchConnectionId": {
          "allOf": [
            {
              "$ref": "#/definitions/CrossClusterSearchConnectionId"
            },
            {
              "description": "Specifies the connection id for the inbound cross-cluster search connection."
            }
          ]
        },
        "DestinationDomainInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainInformation"
            },
            {
              "description": "Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain."
            }
          ]
        },
        "SourceDomainInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainInformation"
            },
            {
              "description": "Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain."
            }
          ]
        }
      },
      "type": "object"
    },
    "InboundCrossClusterSearchConnectionStatus": {
      "description": "Specifies the coonection status of an inbound cross-cluster search connection.",
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/CrossClusterSearchConnectionStatusMessage"
            },
            {
              "description": "Specifies verbose information for the inbound connection status."
            }
          ]
        },
        "StatusCode": {
          "allOf": [
            {
              "$ref": "#/definitions/InboundCrossClusterSearchConnectionStatusCode"
            },
            {
              "description": "<p>The state code for inbound connection. This can be one of the following:</p> <ul> <li>PENDING_ACCEPTANCE: Inbound connection is not yet accepted by destination domain owner.</li> <li>APPROVED: Inbound connection is pending acceptance by destination domain owner.</li> <li>REJECTING: Inbound connection rejection is in process.</li> <li>REJECTED: Inbound connection is rejected.</li> <li>DELETING: Inbound connection deletion is in progress.</li> <li>DELETED: Inbound connection is deleted and cannot be used further.</li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "InboundCrossClusterSearchConnectionStatusCode": {
      "enum": [
        "PENDING_ACCEPTANCE",
        "APPROVED",
        "REJECTING",
        "REJECTED",
        "DELETING",
        "DELETED"
      ],
      "type": "string"
    },
    "InboundCrossClusterSearchConnections": {
      "items": {
        "$ref": "#/definitions/InboundCrossClusterSearchConnection"
      },
      "type": "array"
    },
    "InstanceCount": {
      "description": "Specifies the number of EC2 instances in the Elasticsearch domain.",
      "minimum": 1,
      "type": "integer"
    },
    "InstanceCountLimits": {
      "description": " InstanceCountLimits represents the limits on number of instances that be created in Amazon Elasticsearch for given InstanceType. ",
      "properties": {
        "MaximumInstanceCount": {
          "$ref": "#/definitions/MaximumInstanceCount"
        },
        "MinimumInstanceCount": {
          "$ref": "#/definitions/MinimumInstanceCount"
        }
      },
      "type": "object"
    },
    "InstanceLimits": {
      "description": "InstanceLimits represents the list of instance related attributes that are available for given InstanceType. ",
      "properties": {
        "InstanceCountLimits": {
          "$ref": "#/definitions/InstanceCountLimits"
        }
      },
      "type": "object"
    },
    "InstanceRole": {
      "type": "string"
    },
    "Integer": {
      "type": "integer"
    },
    "IntegerClass": {
      "type": "integer"
    },
    "InternalException": {},
    "InvalidPaginationTokenException": {},
    "InvalidTypeException": {},
    "Issue": {
      "type": "string"
    },
    "Issues": {
      "items": {
        "$ref": "#/definitions/Issue"
      },
      "type": "array"
    },
    "KmsKeyId": {
      "maxLength": 500,
      "minLength": 1,
      "type": "string"
    },
    "LastUpdated": {
      "format": "date-time",
      "type": "string"
    },
    "LimitExceededException": {},
    "LimitName": {
      "type": "string"
    },
    "LimitValue": {
      "type": "string"
    },
    "LimitValueList": {
      "items": {
        "$ref": "#/definitions/LimitValue"
      },
      "type": "array"
    },
    "Limits": {
      "description": " Limits for given InstanceType and for each of it's role. <br/> Limits contains following <code> <a>StorageTypes,</a> </code> <code> <a>InstanceLimits</a> </code> and <code> <a>AdditionalLimits</a> </code> ",
      "properties": {
        "AdditionalLimits": {
          "allOf": [
            {
              "$ref": "#/definitions/AdditionalLimitList"
            },
            {
              "description": " List of additional limits that are specific to a given InstanceType and for each of it's <code> <a>InstanceRole</a> </code> . "
            }
          ]
        },
        "InstanceLimits": {
          "$ref": "#/definitions/InstanceLimits"
        },
        "StorageTypes": {
          "allOf": [
            {
              "$ref": "#/definitions/StorageTypeList"
            },
            {
              "description": "StorageType represents the list of storage related types and attributes that are available for given InstanceType. "
            }
          ]
        }
      },
      "type": "object"
    },
    "LimitsByRole": {
      "additionalProperties": {
        "$ref": "#/definitions/Limits"
      },
      "description": " Map of Role of the Instance and Limits that are applicable. Role performed by given Instance in Elasticsearch can be one of the following: <ul> <li>data: If the given InstanceType is used as data node</li> <li>master: If the given InstanceType is used as master node</li> <li>ultra_warm: If the given InstanceType is used as warm node</li> </ul> ",
      "type": "object"
    },
    "ListDomainNamesResponse": {
      "description": "The result of a <code>ListDomainNames</code> operation. Contains the names of all Elasticsearch domains owned by this account.",
      "properties": {
        "DomainNames": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainInfoList"
            },
            {
              "description": "List of Elasticsearch domain names."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListDomainsForPackageRequest": {
      "description": " Container for request parameters to <code> <a>ListDomainsForPackage</a> </code> operation. ",
      "properties": {},
      "title": "ListDomainsForPackageRequest",
      "type": "object"
    },
    "ListDomainsForPackageResponse": {
      "description": " Container for response parameters to <code> <a>ListDomainsForPackage</a> </code> operation. ",
      "properties": {
        "DomainPackageDetailsList": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainPackageDetailsList"
            },
            {
              "description": "List of <code>DomainPackageDetails</code> objects."
            }
          ]
        },
        "NextToken": {
          "$ref": "#/definitions/String"
        }
      },
      "type": "object"
    },
    "ListElasticsearchInstanceTypesRequest": {
      "description": " Container for the parameters to the <code> <a>ListElasticsearchInstanceTypes</a> </code> operation. ",
      "properties": {},
      "title": "ListElasticsearchInstanceTypesRequest",
      "type": "object"
    },
    "ListElasticsearchInstanceTypesResponse": {
      "description": " Container for the parameters returned by <code> <a>ListElasticsearchInstanceTypes</a> </code> operation. ",
      "properties": {
        "ElasticsearchInstanceTypes": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchInstanceTypeList"
            },
            {
              "description": " List of instance types supported by Amazon Elasticsearch service for given <code> <a>ElasticsearchVersion</a> </code> "
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "In case if there are more results available NextToken would be present, make further request to the same API with received NextToken to paginate remaining results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ListElasticsearchVersionsRequest": {
      "description": "<p> Container for the parameters to the <code> <a>ListElasticsearchVersions</a> </code> operation. <p> Use <code> <a>MaxResults</a> </code> to control the maximum number of results to retrieve in a single call. </p> <p> Use <code> <a>NextToken</a> </code> in response to retrieve more results. If the received response does not contain a NextToken, then there are no more results to retrieve. </p> </p>",
      "properties": {},
      "title": "ListElasticsearchVersionsRequest",
      "type": "object"
    },
    "ListElasticsearchVersionsResponse": {
      "description": " Container for the parameters for response received from <code> <a>ListElasticsearchVersions</a> </code> operation. ",
      "properties": {
        "ElasticsearchVersions": {
          "$ref": "#/definitions/ElasticsearchVersionList"
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken"
        }
      },
      "type": "object"
    },
    "ListPackagesForDomainRequest": {
      "description": " Container for request parameters to <code> <a>ListPackagesForDomain</a> </code> operation. ",
      "properties": {},
      "title": "ListPackagesForDomainRequest",
      "type": "object"
    },
    "ListPackagesForDomainResponse": {
      "description": " Container for response parameters to <code> <a>ListPackagesForDomain</a> </code> operation. ",
      "properties": {
        "DomainPackageDetailsList": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainPackageDetailsList"
            },
            {
              "description": "List of <code>DomainPackageDetails</code> objects."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Pagination token that needs to be supplied to the next call to get the next page of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsRequest": {
      "description": "Container for the parameters to the <code><a>ListTags</a></code> operation. Specify the <code>ARN</code> for the Elasticsearch domain to which the tags are attached that you want to view are attached.",
      "properties": {},
      "title": "ListTagsRequest",
      "type": "object"
    },
    "ListTagsResponse": {
      "description": "The result of a <code>ListTags</code> operation. Contains tags for all requested Elasticsearch domains.",
      "properties": {
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": " List of <code>Tag</code> for the requested Elasticsearch domain."
            }
          ]
        }
      },
      "type": "object"
    },
    "LogPublishingOption": {
      "description": "Log Publishing option that is set for given domain. <br/>Attributes and their details: <ul> <li>CloudWatchLogsLogGroupArn: ARN of the Cloudwatch log group to which log needs to be published.</li> <li>Enabled: Whether the log publishing for given log type is enabled or not</li> </ul> ",
      "properties": {
        "CloudWatchLogsLogGroupArn": {
          "$ref": "#/definitions/CloudWatchLogsLogGroupArn"
        },
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": " Specifies whether given log publishing option is enabled or not."
            }
          ]
        }
      },
      "type": "object"
    },
    "LogPublishingOptions": {
      "additionalProperties": {
        "$ref": "#/definitions/LogPublishingOption"
      },
      "type": "object"
    },
    "LogPublishingOptionsStatus": {
      "description": "The configured log publishing options for the domain and their current status.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/LogPublishingOptions"
            },
            {
              "description": "The log publishing options configured for the Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": "The status of the log publishing options for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that's included. "
            }
          ]
        }
      },
      "type": "object"
    },
    "LogType": {
      "description": "Type of Log File, it can be one of the following: <ul> <li>INDEX_SLOW_LOGS: Index slow logs contain insert requests that took more time than configured index query log threshold to execute.</li> <li>SEARCH_SLOW_LOGS: Search slow logs contain search queries that took more time than configured search query log threshold to execute.</li> <li>ES_APPLICATION_LOGS: Elasticsearch application logs contain information about errors and warnings raised during the operation of the service and can be useful for troubleshooting.</li> <li>AUDIT_LOGS: Audit logs contain records of user requests for access from the domain.</li> </ul> ",
      "enum": [
        "INDEX_SLOW_LOGS",
        "SEARCH_SLOW_LOGS",
        "ES_APPLICATION_LOGS",
        "AUDIT_LOGS"
      ],
      "type": "string"
    },
    "MasterUserOptions": {
      "description": "Credentials for the master user: username and password, ARN, or both.",
      "properties": {
        "MasterUserARN": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "ARN for the master user (if IAM is enabled)."
            }
          ]
        },
        "MasterUserName": {
          "allOf": [
            {
              "$ref": "#/definitions/Username"
            },
            {
              "description": "The master user's username, which is stored in the Amazon Elasticsearch Service domain's internal database."
            }
          ]
        },
        "MasterUserPassword": {
          "allOf": [
            {
              "$ref": "#/definitions/Password"
            },
            {
              "description": "The master user's password, which is stored in the Amazon Elasticsearch Service domain's internal database."
            }
          ]
        }
      },
      "type": "object"
    },
    "MaxResults": {
      "description": " Set this value to limit the number of results returned. ",
      "maximum": 100,
      "type": "integer"
    },
    "MaximumInstanceCount": {
      "description": " Maximum number of Instances that can be instantiated for given InstanceType. ",
      "type": "integer"
    },
    "MinimumInstanceCount": {
      "description": " Minimum number of Instances that can be instantiated for given InstanceType. ",
      "type": "integer"
    },
    "NextToken": {
      "description": " Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. ",
      "type": "string"
    },
    "NodeToNodeEncryptionOptions": {
      "description": "Specifies the node-to-node encryption options.",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specify true to enable node-to-node encryption."
            }
          ]
        }
      },
      "type": "object"
    },
    "NodeToNodeEncryptionOptionsStatus": {
      "description": "Status of the node-to-node encryption options for the specified Elasticsearch domain.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/NodeToNodeEncryptionOptions"
            },
            {
              "description": "Specifies the node-to-node encryption options for the specified Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": "Specifies the status of the node-to-node encryption options for the specified Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "NonEmptyString": {
      "minLength": 1,
      "type": "string"
    },
    "OptionState": {
      "description": "<p>The state of a requested change. One of the following:</p> <ul> <li>Processing: The request change is still in-process.</li> <li>Active: The request change is processed and deployed to the Elasticsearch domain.</li> </ul>",
      "enum": [
        "RequiresIndexDocuments",
        "Processing",
        "Active"
      ],
      "type": "string"
    },
    "OptionStatus": {
      "description": "Provides the current status of the entity.",
      "properties": {
        "CreationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateTimestamp"
            },
            {
              "description": "Timestamp which tells the creation date for the entity."
            }
          ]
        },
        "PendingDeletion": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the Elasticsearch domain is being deleted."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionState"
            },
            {
              "description": "Provides the <code>OptionState</code> for the Elasticsearch domain."
            }
          ]
        },
        "UpdateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateTimestamp"
            },
            {
              "description": "Timestamp which tells the last updated time for the entity."
            }
          ]
        },
        "UpdateVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/UIntValue"
            },
            {
              "description": "Specifies the latest version for the entity."
            }
          ]
        }
      },
      "required": [
        "CreationDate",
        "UpdateDate",
        "State"
      ],
      "type": "object"
    },
    "OutboundCrossClusterSearchConnection": {
      "description": "Specifies details of an outbound connection.",
      "properties": {
        "ConnectionAlias": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectionAlias"
            },
            {
              "description": "Specifies the connection alias for the outbound cross-cluster search connection."
            }
          ]
        },
        "ConnectionStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/OutboundCrossClusterSearchConnectionStatus"
            },
            {
              "description": "Specifies the <code><a>OutboundCrossClusterSearchConnectionStatus</a></code> for the outbound connection."
            }
          ]
        },
        "CrossClusterSearchConnectionId": {
          "allOf": [
            {
              "$ref": "#/definitions/CrossClusterSearchConnectionId"
            },
            {
              "description": "Specifies the connection id for the outbound cross-cluster search connection."
            }
          ]
        },
        "DestinationDomainInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainInformation"
            },
            {
              "description": "Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain."
            }
          ]
        },
        "SourceDomainInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainInformation"
            },
            {
              "description": "Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain."
            }
          ]
        }
      },
      "type": "object"
    },
    "OutboundCrossClusterSearchConnectionStatus": {
      "description": "Specifies the connection status of an outbound cross-cluster search connection.",
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/CrossClusterSearchConnectionStatusMessage"
            },
            {
              "description": "Specifies verbose information for the outbound connection status."
            }
          ]
        },
        "StatusCode": {
          "allOf": [
            {
              "$ref": "#/definitions/OutboundCrossClusterSearchConnectionStatusCode"
            },
            {
              "description": "<p>The state code for outbound connection. This can be one of the following:</p> <ul> <li>VALIDATING: The outbound connection request is being validated.</li> <li>VALIDATION_FAILED: Validation failed for the connection request.</li> <li>PENDING_ACCEPTANCE: Outbound connection request is validated and is not yet accepted by destination domain owner.</li> <li>PROVISIONING: Outbound connection request is in process.</li> <li>ACTIVE: Outbound connection is active and ready to use.</li> <li>REJECTED: Outbound connection request is rejected by destination domain owner.</li> <li>DELETING: Outbound connection deletion is in progress.</li> <li>DELETED: Outbound connection is deleted and cannot be used further.</li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "OutboundCrossClusterSearchConnectionStatusCode": {
      "enum": [
        "PENDING_ACCEPTANCE",
        "VALIDATING",
        "VALIDATION_FAILED",
        "PROVISIONING",
        "ACTIVE",
        "REJECTED",
        "DELETING",
        "DELETED"
      ],
      "type": "string"
    },
    "OutboundCrossClusterSearchConnections": {
      "items": {
        "$ref": "#/definitions/OutboundCrossClusterSearchConnection"
      },
      "type": "array"
    },
    "OwnerId": {
      "maxLength": 12,
      "minLength": 12,
      "type": "string"
    },
    "PackageDescription": {
      "maxLength": 1024,
      "type": "string"
    },
    "PackageDetails": {
      "description": "Basic information about a package.",
      "properties": {
        "AvailablePackageVersion": {
          "$ref": "#/definitions/PackageVersion"
        },
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedAt"
            },
            {
              "description": "Timestamp which tells creation date of the package."
            }
          ]
        },
        "ErrorDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorDetails"
            },
            {
              "description": "Additional information if the package is in an error state. Null otherwise."
            }
          ]
        },
        "LastUpdatedAt": {
          "$ref": "#/definitions/LastUpdated"
        },
        "PackageDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageDescription"
            },
            {
              "description": "User-specified description of the package."
            }
          ]
        },
        "PackageID": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageID"
            },
            {
              "description": "Internal ID of the package."
            }
          ]
        },
        "PackageName": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageName"
            },
            {
              "description": "User specified name of the package."
            }
          ]
        },
        "PackageStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageStatus"
            },
            {
              "description": "Current state of the package. Values are COPYING/COPY_FAILED/AVAILABLE/DELETING/DELETE_FAILED"
            }
          ]
        },
        "PackageType": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageType"
            },
            {
              "description": "Currently supports only TXT-DICTIONARY."
            }
          ]
        }
      },
      "type": "object"
    },
    "PackageDetailsList": {
      "items": {
        "$ref": "#/definitions/PackageDetails"
      },
      "type": "array"
    },
    "PackageID": {
      "type": "string"
    },
    "PackageName": {
      "maxLength": 28,
      "minLength": 3,
      "pattern": "[a-z][a-z0-9\\-]+",
      "type": "string"
    },
    "PackageSource": {
      "description": "The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>",
      "properties": {
        "S3BucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/S3BucketName"
            },
            {
              "description": "Name of the bucket containing the package."
            }
          ]
        },
        "S3Key": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Key"
            },
            {
              "description": "Key (file name) of the package."
            }
          ]
        }
      },
      "type": "object"
    },
    "PackageStatus": {
      "enum": [
        "COPYING",
        "COPY_FAILED",
        "VALIDATING",
        "VALIDATION_FAILED",
        "AVAILABLE",
        "DELETING",
        "DELETED",
        "DELETE_FAILED"
      ],
      "type": "string"
    },
    "PackageType": {
      "enum": [
        "TXT-DICTIONARY"
      ],
      "type": "string"
    },
    "PackageVersion": {
      "type": "string"
    },
    "PackageVersionHistory": {
      "description": "Details of a package version.",
      "properties": {
        "CommitMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/CommitMessage"
            },
            {
              "description": "A message associated with the version."
            }
          ]
        },
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedAt"
            },
            {
              "description": "Timestamp which tells creation time of the package version."
            }
          ]
        },
        "PackageVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageVersion"
            },
            {
              "description": "Version of the package."
            }
          ]
        }
      },
      "type": "object"
    },
    "PackageVersionHistoryList": {
      "items": {
        "$ref": "#/definitions/PackageVersionHistory"
      },
      "type": "array"
    },
    "Password": {
      "format": "password",
      "minLength": 8,
      "type": "string"
    },
    "PolicyDocument": {
      "description": "Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies\" target=\"_blank\">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.",
      "type": "string"
    },
    "PurchaseReservedElasticsearchInstanceOfferingRequest": {
      "description": "Container for parameters to <code>PurchaseReservedElasticsearchInstanceOffering</code>",
      "properties": {
        "InstanceCount": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceCount"
            },
            {
              "description": "The number of Elasticsearch instances to reserve."
            }
          ]
        },
        "ReservationName": {
          "allOf": [
            {
              "$ref": "#/definitions/ReservationToken"
            },
            {
              "description": "A customer-specified identifier to track this reservation."
            }
          ]
        },
        "ReservedElasticsearchInstanceOfferingId": {
          "allOf": [
            {
              "$ref": "#/definitions/GUID"
            },
            {
              "description": "The ID of the reserved Elasticsearch instance offering to purchase."
            }
          ]
        }
      },
      "required": [
        "ReservedElasticsearchInstanceOfferingId",
        "ReservationName"
      ],
      "title": "PurchaseReservedElasticsearchInstanceOfferingRequest",
      "type": "object"
    },
    "PurchaseReservedElasticsearchInstanceOfferingResponse": {
      "description": "Represents the output of a <code>PurchaseReservedElasticsearchInstanceOffering</code> operation.",
      "properties": {
        "ReservationName": {
          "allOf": [
            {
              "$ref": "#/definitions/ReservationToken"
            },
            {
              "description": "The customer-specified identifier used to track this reservation."
            }
          ]
        },
        "ReservedElasticsearchInstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/GUID"
            },
            {
              "description": "Details of the reserved Elasticsearch instance which was purchased."
            }
          ]
        }
      },
      "type": "object"
    },
    "RecurringCharge": {
      "description": "Contains the specific price and frequency of a recurring charges for a reserved Elasticsearch instance, or for a reserved Elasticsearch instance offering.",
      "properties": {
        "RecurringChargeAmount": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The monetary amount of the recurring charge."
            }
          ]
        },
        "RecurringChargeFrequency": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The frequency of the recurring charge."
            }
          ]
        }
      },
      "type": "object"
    },
    "RecurringChargeList": {
      "items": {
        "$ref": "#/definitions/RecurringCharge"
      },
      "type": "array"
    },
    "ReferencePath": {
      "type": "string"
    },
    "Region": {
      "type": "string"
    },
    "RejectInboundCrossClusterSearchConnectionRequest": {
      "description": "Container for the parameters to the <code><a>RejectInboundCrossClusterSearchConnection</a></code> operation.",
      "properties": {},
      "title": "RejectInboundCrossClusterSearchConnectionRequest",
      "type": "object"
    },
    "RejectInboundCrossClusterSearchConnectionResponse": {
      "description": "The result of a <code><a>RejectInboundCrossClusterSearchConnection</a></code> operation. Contains details of rejected inbound connection.",
      "properties": {
        "CrossClusterSearchConnection": {
          "allOf": [
            {
              "$ref": "#/definitions/InboundCrossClusterSearchConnection"
            },
            {
              "description": "Specifies the <code><a>InboundCrossClusterSearchConnection</a></code> of rejected inbound connection. "
            }
          ]
        }
      },
      "type": "object"
    },
    "RemoveTagsRequest": {
      "description": "Container for the parameters to the <code><a>RemoveTags</a></code> operation. Specify the <code>ARN</code> for the Elasticsearch domain from which you want to remove the specified <code>TagKey</code>.",
      "properties": {
        "ARN": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "Specifies the <code>ARN</code> for the Elasticsearch domain from which you want to delete the specified tags."
            }
          ]
        },
        "TagKeys": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "Specifies the <code>TagKey</code> list which you want to remove from the Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "ARN",
        "TagKeys"
      ],
      "title": "RemoveTagsRequest",
      "type": "object"
    },
    "ReservationToken": {
      "maxLength": 64,
      "minLength": 5,
      "type": "string"
    },
    "ReservedElasticsearchInstance": {
      "description": "Details of a reserved Elasticsearch instance.",
      "properties": {
        "CurrencyCode": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The currency code for the reserved Elasticsearch instance offering."
            }
          ]
        },
        "Duration": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The duration, in seconds, for which the Elasticsearch instance is reserved."
            }
          ]
        },
        "ElasticsearchInstanceCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of Elasticsearch instances that have been reserved."
            }
          ]
        },
        "ElasticsearchInstanceType": {
          "allOf": [
            {
              "$ref": "#/definitions/ESPartitionInstanceType"
            },
            {
              "description": "The Elasticsearch instance type offered by the reserved instance offering."
            }
          ]
        },
        "FixedPrice": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The upfront fixed charge you will paid to purchase the specific reserved Elasticsearch instance offering. "
            }
          ]
        },
        "PaymentOption": {
          "allOf": [
            {
              "$ref": "#/definitions/ReservedElasticsearchInstancePaymentOption"
            },
            {
              "description": "The payment option as defined in the reserved Elasticsearch instance offering."
            }
          ]
        },
        "RecurringCharges": {
          "allOf": [
            {
              "$ref": "#/definitions/RecurringChargeList"
            },
            {
              "description": "The charge to your account regardless of whether you are creating any domains using the instance offering."
            }
          ]
        },
        "ReservationName": {
          "allOf": [
            {
              "$ref": "#/definitions/ReservationToken"
            },
            {
              "description": "The customer-specified identifier to track this reservation."
            }
          ]
        },
        "ReservedElasticsearchInstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/GUID"
            },
            {
              "description": "The unique identifier for the reservation."
            }
          ]
        },
        "ReservedElasticsearchInstanceOfferingId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The offering identifier."
            }
          ]
        },
        "StartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateTimestamp"
            },
            {
              "description": "The time the reservation started."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The state of the reserved Elasticsearch instance."
            }
          ]
        },
        "UsagePrice": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The rate you are charged for each hour for the domain that is using this reserved instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "ReservedElasticsearchInstanceList": {
      "items": {
        "$ref": "#/definitions/ReservedElasticsearchInstance"
      },
      "type": "array"
    },
    "ReservedElasticsearchInstanceOffering": {
      "description": "Details of a reserved Elasticsearch instance offering.",
      "properties": {
        "CurrencyCode": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The currency code for the reserved Elasticsearch instance offering."
            }
          ]
        },
        "Duration": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The duration, in seconds, for which the offering will reserve the Elasticsearch instance."
            }
          ]
        },
        "ElasticsearchInstanceType": {
          "allOf": [
            {
              "$ref": "#/definitions/ESPartitionInstanceType"
            },
            {
              "description": "The Elasticsearch instance type offered by the reserved instance offering."
            }
          ]
        },
        "FixedPrice": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The upfront fixed charge you will pay to purchase the specific reserved Elasticsearch instance offering. "
            }
          ]
        },
        "PaymentOption": {
          "allOf": [
            {
              "$ref": "#/definitions/ReservedElasticsearchInstancePaymentOption"
            },
            {
              "description": "Payment option for the reserved Elasticsearch instance offering"
            }
          ]
        },
        "RecurringCharges": {
          "allOf": [
            {
              "$ref": "#/definitions/RecurringChargeList"
            },
            {
              "description": "The charge to your account regardless of whether you are creating any domains using the instance offering."
            }
          ]
        },
        "ReservedElasticsearchInstanceOfferingId": {
          "allOf": [
            {
              "$ref": "#/definitions/GUID"
            },
            {
              "description": "The Elasticsearch reserved instance offering identifier."
            }
          ]
        },
        "UsagePrice": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The rate you are charged for each hour the domain that is using the offering is running."
            }
          ]
        }
      },
      "type": "object"
    },
    "ReservedElasticsearchInstanceOfferingList": {
      "items": {
        "$ref": "#/definitions/ReservedElasticsearchInstanceOffering"
      },
      "type": "array"
    },
    "ReservedElasticsearchInstancePaymentOption": {
      "enum": [
        "ALL_UPFRONT",
        "PARTIAL_UPFRONT",
        "NO_UPFRONT"
      ],
      "type": "string"
    },
    "ResourceAlreadyExistsException": {},
    "ResourceNotFoundException": {},
    "RoleArn": {
      "maxLength": 2048,
      "minLength": 20,
      "type": "string"
    },
    "S3BucketName": {
      "maxLength": 63,
      "minLength": 3,
      "type": "string"
    },
    "S3Key": {
      "type": "string"
    },
    "SAMLEntityId": {
      "maxLength": 512,
      "minLength": 8,
      "type": "string"
    },
    "SAMLIdp": {
      "description": "Specifies the SAML Identity Provider's information.",
      "properties": {
        "EntityId": {
          "allOf": [
            {
              "$ref": "#/definitions/SAMLEntityId"
            },
            {
              "description": "The unique Entity ID of the application in SAML Identity Provider."
            }
          ]
        },
        "MetadataContent": {
          "allOf": [
            {
              "$ref": "#/definitions/SAMLMetadata"
            },
            {
              "description": "The Metadata of the SAML application in xml format."
            }
          ]
        }
      },
      "required": [
        "MetadataContent",
        "EntityId"
      ],
      "type": "object"
    },
    "SAMLMetadata": {
      "maxLength": 1048576,
      "minLength": 1,
      "type": "string"
    },
    "SAMLOptionsInput": {
      "description": "Specifies the SAML application configuration for the domain.",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "True if SAML is enabled."
            }
          ]
        },
        "Idp": {
          "allOf": [
            {
              "$ref": "#/definitions/SAMLIdp"
            },
            {
              "description": "Specifies the SAML Identity Provider's information."
            }
          ]
        },
        "MasterBackendRole": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendRole"
            },
            {
              "description": "The backend role to which the SAML master user is mapped to."
            }
          ]
        },
        "MasterUserName": {
          "allOf": [
            {
              "$ref": "#/definitions/Username"
            },
            {
              "description": "The SAML master username, which is stored in the Amazon Elasticsearch Service domain's internal database."
            }
          ]
        },
        "RolesKey": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The key to use for matching the SAML Roles attribute."
            }
          ]
        },
        "SessionTimeoutMinutes": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerClass"
            },
            {
              "description": "The duration, in minutes, after which a user session becomes inactive. Acceptable values are between 1 and 1440, and the default value is 60."
            }
          ]
        },
        "SubjectKey": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The key to use for matching the SAML Subject attribute."
            }
          ]
        }
      },
      "type": "object"
    },
    "SAMLOptionsOutput": {
      "description": "Describes the SAML application configured for the domain.",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "True if SAML is enabled."
            }
          ]
        },
        "Idp": {
          "allOf": [
            {
              "$ref": "#/definitions/SAMLIdp"
            },
            {
              "description": "Describes the SAML Identity Provider's information."
            }
          ]
        },
        "RolesKey": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The key used for matching the SAML Roles attribute."
            }
          ]
        },
        "SessionTimeoutMinutes": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerClass"
            },
            {
              "description": "The duration, in minutes, after which a user session becomes inactive."
            }
          ]
        },
        "SubjectKey": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The key used for matching the SAML Subject attribute."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServiceSoftwareOptions": {
      "description": "The current options of an Elasticsearch domain service software options.",
      "properties": {
        "AutomatedUpdateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/DeploymentCloseDateTimeStamp"
            },
            {
              "description": "Timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software."
            }
          ]
        },
        "Cancellable": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<code>True</code> if you are able to cancel your service software version update. <code>False</code> if you are not able to cancel your service software version. "
            }
          ]
        },
        "CurrentVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The current service software version that is present on the domain."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The description of the <code>UpdateStatus</code>."
            }
          ]
        },
        "NewVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The new service software version if one is available."
            }
          ]
        },
        "OptionalDeployment": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<code>True</code> if a service software is never automatically updated. <code>False</code> if a service software is automatically updated after <code>AutomatedUpdateDate</code>. "
            }
          ]
        },
        "UpdateAvailable": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<code>True</code> if you are able to update you service software version. <code>False</code> if you are not able to update your service software version. "
            }
          ]
        },
        "UpdateStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/DeploymentStatus"
            },
            {
              "description": "The status of your service software update. This field can take the following values: <code>ELIGIBLE</code>, <code>PENDING_UPDATE</code>, <code>IN_PROGRESS</code>, <code>COMPLETED</code>, and <code>NOT_ELIGIBLE</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServiceUrl": {
      "description": "The endpoint to which service requests are submitted. For example, <code>search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com</code>.",
      "type": "string"
    },
    "SnapshotOptions": {
      "description": "Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.",
      "properties": {
        "AutomatedSnapshotStartHour": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerClass"
            },
            {
              "description": "Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours."
            }
          ]
        }
      },
      "type": "object"
    },
    "SnapshotOptionsStatus": {
      "description": "Status of a daily automated snapshot.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/SnapshotOptions"
            },
            {
              "description": "Specifies the daily snapshot options specified for the Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": "Specifies the status of a daily automated snapshot."
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "StartElasticsearchServiceSoftwareUpdateRequest": {
      "description": "Container for the parameters to the <code><a>StartElasticsearchServiceSoftwareUpdate</a></code> operation. Specifies the name of the Elasticsearch domain that you wish to schedule a service software update on.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to update to the latest service software."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "StartElasticsearchServiceSoftwareUpdateRequest",
      "type": "object"
    },
    "StartElasticsearchServiceSoftwareUpdateResponse": {
      "description": "The result of a <code>StartElasticsearchServiceSoftwareUpdate</code> operation. Contains the status of the update.",
      "properties": {
        "ServiceSoftwareOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/ServiceSoftwareOptions"
            },
            {
              "description": "The current status of the Elasticsearch service software update."
            }
          ]
        }
      },
      "type": "object"
    },
    "StartTimestamp": {
      "format": "date-time",
      "type": "string"
    },
    "StorageSubTypeName": {
      "description": " SubType of the given storage type. List of available sub-storage options: For \"instance\" storageType we wont have any storageSubType, in case of \"ebs\" storageType we will have following valid storageSubTypes <ol> <li>standard</li> <li>gp2</li> <li>io1</li> </ol> Refer <code><a>VolumeType</a></code> for more information regarding above EBS storage options. ",
      "type": "string"
    },
    "StorageType": {
      "description": "StorageTypes represents the list of storage related types and their attributes that are available for given InstanceType. ",
      "properties": {
        "StorageSubTypeName": {
          "$ref": "#/definitions/StorageSubTypeName"
        },
        "StorageTypeLimits": {
          "allOf": [
            {
              "$ref": "#/definitions/StorageTypeLimitList"
            },
            {
              "description": "List of limits that are applicable for given storage type. "
            }
          ]
        },
        "StorageTypeName": {
          "$ref": "#/definitions/StorageTypeName"
        }
      },
      "type": "object"
    },
    "StorageTypeLimit": {
      "description": "Limits that are applicable for given storage type. ",
      "properties": {
        "LimitName": {
          "allOf": [
            {
              "$ref": "#/definitions/LimitName"
            },
            {
              "description": " Name of storage limits that are applicable for given storage type. If <code> <a>StorageType</a> </code> is ebs, following storage options are applicable <ol> <li>MinimumVolumeSize</li> Minimum amount of volume size that is applicable for given storage type.It can be empty if it is not applicable. <li>MaximumVolumeSize</li> Maximum amount of volume size that is applicable for given storage type.It can be empty if it is not applicable. <li>MaximumIops</li> Maximum amount of Iops that is applicable for given storage type.It can be empty if it is not applicable. <li>MinimumIops</li> Minimum amount of Iops that is applicable for given storage type.It can be empty if it is not applicable. </ol> "
            }
          ]
        },
        "LimitValues": {
          "allOf": [
            {
              "$ref": "#/definitions/LimitValueList"
            },
            {
              "description": " Values for the <code> <a>StorageTypeLimit$LimitName</a> </code> . "
            }
          ]
        }
      },
      "type": "object"
    },
    "StorageTypeLimitList": {
      "items": {
        "$ref": "#/definitions/StorageTypeLimit"
      },
      "type": "array"
    },
    "StorageTypeList": {
      "items": {
        "$ref": "#/definitions/StorageType"
      },
      "type": "array"
    },
    "StorageTypeName": {
      "description": " Type of the storage. List of available storage options: <ol> <li>instance</li> Inbuilt storage available for the given Instance <li>ebs</li> Elastic block storage that would be attached to the given Instance </ol> ",
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "StringList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "TLSSecurityPolicy": {
      "enum": [
        "Policy-Min-TLS-1-0-2019-07",
        "Policy-Min-TLS-1-2-2019-07"
      ],
      "type": "string"
    },
    "Tag": {
      "description": "Specifies a key value pair for a resource tag.",
      "properties": {
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKey"
            },
            {
              "description": "Specifies the <code>TagKey</code>, the name of the tag. Tag keys must be unique for the Elasticsearch domain to which they are attached."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/TagValue"
            },
            {
              "description": "Specifies the <code>TagValue</code>, the value assigned to the corresponding tag key. Tag values can be null and do not have to be unique in a tag set. For example, you can have a key value pair in a tag set of <code>project : Trinity</code> and <code>cost-center : Trinity</code>"
            }
          ]
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "object"
    },
    "TagKey": {
      "description": "A string of length from 1 to 128 characters that specifies the key for a Tag. Tag keys must be unique for the Elasticsearch domain to which they are attached.",
      "maxLength": 128,
      "minLength": 1,
      "type": "string"
    },
    "TagList": {
      "description": "A list of <code>Tag</code> ",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TagValue": {
      "description": "A string of length from 0 to 256 characters that specifies the value for a Tag. Tag values can be null and do not have to be unique in a tag set.",
      "maxLength": 256,
      "minLength": 0,
      "type": "string"
    },
    "UIntValue": {
      "minimum": 0,
      "type": "integer"
    },
    "UpdateElasticsearchDomainConfigRequest": {
      "description": "Container for the parameters to the <code><a>UpdateElasticsearchDomain</a></code> operation. Specifies the type and number of instances in the domain cluster.",
      "properties": {
        "AccessPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyDocument"
            },
            {
              "description": "IAM access policy as a JSON-formatted string."
            }
          ]
        },
        "AdvancedOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AdvancedOptions"
            },
            {
              "description": "Modifies the advanced option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\" target=\"_blank\">Configuration Advanced Options</a> for more information."
            }
          ]
        },
        "AdvancedSecurityOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AdvancedSecurityOptionsInput"
            },
            {
              "description": "Specifies advanced security options."
            }
          ]
        },
        "CognitoOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/CognitoOptions"
            },
            {
              "description": "Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html\" target=\"_blank\">Amazon Cognito Authentication for Kibana</a>."
            }
          ]
        },
        "DomainEndpointOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainEndpointOptions"
            },
            {
              "description": "Options to specify configuration that will be applied to the domain endpoint."
            }
          ]
        },
        "EBSOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/EBSOptions"
            },
            {
              "description": "Specify the type and size of the EBS volume that you want to use. "
            }
          ]
        },
        "ElasticsearchClusterConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchClusterConfig"
            },
            {
              "description": "The type and number of instances to instantiate for the domain cluster."
            }
          ]
        },
        "LogPublishingOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/LogPublishingOptions"
            },
            {
              "description": "Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log."
            }
          ]
        },
        "SnapshotOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/SnapshotOptions"
            },
            {
              "description": "Option to set the time, in UTC format, for the daily automated snapshot. Default value is <code>0</code> hours. "
            }
          ]
        },
        "VPCOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/VPCOptions"
            },
            {
              "description": "Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-creating-vpc\" target=\"_blank\">Creating a VPC</a> in <i>VPC Endpoints for Amazon Elasticsearch Service Domains</i>"
            }
          ]
        }
      },
      "title": "UpdateElasticsearchDomainConfigRequest",
      "type": "object"
    },
    "UpdateElasticsearchDomainConfigResponse": {
      "description": "The result of an <code>UpdateElasticsearchDomain</code> request. Contains the status of the Elasticsearch domain being updated.",
      "properties": {
        "DomainConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchDomainConfig"
            },
            {
              "description": "The status of the updated Elasticsearch domain. "
            }
          ]
        }
      },
      "required": [
        "DomainConfig"
      ],
      "type": "object"
    },
    "UpdatePackageRequest": {
      "description": " Container for request parameters to <code> <a>UpdatePackage</a> </code> operation. ",
      "properties": {
        "CommitMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/CommitMessage"
            },
            {
              "description": "An info message for the new version which will be shown as part of <code>GetPackageVersionHistoryResponse</code>."
            }
          ]
        },
        "PackageDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageDescription"
            },
            {
              "description": "New description of the package."
            }
          ]
        },
        "PackageID": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageID"
            },
            {
              "description": "Unique identifier for the package."
            }
          ]
        },
        "PackageSource": {
          "$ref": "#/definitions/PackageSource"
        }
      },
      "required": [
        "PackageID",
        "PackageSource"
      ],
      "title": "UpdatePackageRequest",
      "type": "object"
    },
    "UpdatePackageResponse": {
      "description": " Container for response returned by <code> <a>UpdatePackage</a> </code> operation. ",
      "properties": {
        "PackageDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/PackageDetails"
            },
            {
              "description": "Information about the package <code>PackageDetails</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateTimestamp": {
      "format": "date-time",
      "type": "string"
    },
    "UpgradeElasticsearchDomainRequest": {
      "description": " Container for request parameters to <code> <a>UpgradeElasticsearchDomain</a> </code> operation. ",
      "properties": {
        "DomainName": {
          "$ref": "#/definitions/DomainName"
        },
        "PerformCheckOnly": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": " This flag, when set to True, indicates that an Upgrade Eligibility Check needs to be performed. This will not actually perform the Upgrade. "
            }
          ]
        },
        "TargetVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchVersionString"
            },
            {
              "description": "The version of Elasticsearch that you intend to upgrade the domain to."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "TargetVersion"
      ],
      "title": "UpgradeElasticsearchDomainRequest",
      "type": "object"
    },
    "UpgradeElasticsearchDomainResponse": {
      "description": " Container for response returned by <code> <a>UpgradeElasticsearchDomain</a> </code> operation. ",
      "properties": {
        "DomainName": {
          "$ref": "#/definitions/DomainName"
        },
        "PerformCheckOnly": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": " This flag, when set to True, indicates that an Upgrade Eligibility Check needs to be performed. This will not actually perform the Upgrade. "
            }
          ]
        },
        "TargetVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ElasticsearchVersionString"
            },
            {
              "description": "The version of Elasticsearch that you intend to upgrade the domain to."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpgradeHistory": {
      "description": "History of the last 10 Upgrades and Upgrade Eligibility Checks.",
      "properties": {
        "StartTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/StartTimestamp"
            },
            {
              "description": "UTC Timestamp at which the Upgrade API call was made in \"yyyy-MM-ddTHH:mm:ssZ\" format."
            }
          ]
        },
        "StepsList": {
          "allOf": [
            {
              "$ref": "#/definitions/UpgradeStepsList"
            },
            {
              "description": " A list of <code> <a>UpgradeStepItem</a> </code> s representing information about each step performed as pard of a specific Upgrade or Upgrade Eligibility Check. "
            }
          ]
        },
        "UpgradeName": {
          "allOf": [
            {
              "$ref": "#/definitions/UpgradeName"
            },
            {
              "description": "A string that describes the update briefly"
            }
          ]
        },
        "UpgradeStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/UpgradeStatus"
            },
            {
              "description": " The overall status of the update. The status can take one of the following values: <ul> <li>In Progress</li> <li>Succeeded</li> <li>Succeeded with Issues</li> <li>Failed</li> </ul> "
            }
          ]
        }
      },
      "type": "object"
    },
    "UpgradeHistoryList": {
      "items": {
        "$ref": "#/definitions/UpgradeHistory"
      },
      "type": "array"
    },
    "UpgradeName": {
      "type": "string"
    },
    "UpgradeStatus": {
      "enum": [
        "IN_PROGRESS",
        "SUCCEEDED",
        "SUCCEEDED_WITH_ISSUES",
        "FAILED"
      ],
      "type": "string"
    },
    "UpgradeStep": {
      "enum": [
        "PRE_UPGRADE_CHECK",
        "SNAPSHOT",
        "UPGRADE"
      ],
      "type": "string"
    },
    "UpgradeStepItem": {
      "description": "Represents a single step of the Upgrade or Upgrade Eligibility Check workflow.",
      "properties": {
        "Issues": {
          "allOf": [
            {
              "$ref": "#/definitions/Issues"
            },
            {
              "description": "A list of strings containing detailed information about the errors encountered in a particular step."
            }
          ]
        },
        "ProgressPercent": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The Floating point value representing progress percentage of a particular step."
            }
          ]
        },
        "UpgradeStep": {
          "allOf": [
            {
              "$ref": "#/definitions/UpgradeStep"
            },
            {
              "description": " Represents one of 3 steps that an Upgrade or Upgrade Eligibility Check does through: <ul> <li>PreUpgradeCheck</li> <li>Snapshot</li> <li>Upgrade</li> </ul> "
            }
          ]
        },
        "UpgradeStepStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/UpgradeStatus"
            },
            {
              "description": " The status of a particular step during an upgrade. The status can take one of the following values: <ul> <li>In Progress</li> <li>Succeeded</li> <li>Succeeded with Issues</li> <li>Failed</li> </ul> "
            }
          ]
        }
      },
      "type": "object"
    },
    "UpgradeStepsList": {
      "items": {
        "$ref": "#/definitions/UpgradeStepItem"
      },
      "type": "array"
    },
    "UserPoolId": {
      "maxLength": 55,
      "minLength": 1,
      "pattern": "[\\w-]+_[0-9a-zA-Z]+",
      "type": "string"
    },
    "Username": {
      "format": "password",
      "minLength": 1,
      "type": "string"
    },
    "VPCDerivedInfo": {
      "description": "Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html\" target=\"_blank\"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.",
      "properties": {
        "AvailabilityZones": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The availability zones for the Elasticsearch domain. Exists only if the domain was created with VPCOptions."
            }
          ]
        },
        "SecurityGroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "Specifies the security groups for VPC endpoint."
            }
          ]
        },
        "SubnetIds": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "Specifies the subnets for VPC endpoint."
            }
          ]
        },
        "VPCId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The VPC Id for the Elasticsearch domain. Exists only if the domain was created with VPCOptions."
            }
          ]
        }
      },
      "type": "object"
    },
    "VPCDerivedInfoStatus": {
      "description": " Status of the VPC options for the specified Elasticsearch domain.",
      "properties": {
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/VPCDerivedInfo"
            },
            {
              "description": " Specifies the VPC options for the specified Elasticsearch domain."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OptionStatus"
            },
            {
              "description": " Specifies the status of the VPC options for the specified Elasticsearch domain."
            }
          ]
        }
      },
      "required": [
        "Options",
        "Status"
      ],
      "type": "object"
    },
    "VPCOptions": {
      "description": "Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html\" target=\"_blank\"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.",
      "properties": {
        "SecurityGroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "Specifies the security groups for VPC endpoint."
            }
          ]
        },
        "SubnetIds": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "Specifies the subnets for VPC endpoint."
            }
          ]
        }
      },
      "type": "object"
    },
    "ValidationException": {},
    "ValueStringList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "minItems": 1,
      "type": "array"
    },
    "VolumeType": {
      "description": " The type of EBS volume, standard, gp2, or io1. See <a href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs\" target=\"_blank\">Configuring EBS-based Storage</a>for more information.",
      "enum": [
        "standard",
        "gp2",
        "io1"
      ],
      "type": "string"
    },
    "ZoneAwarenessConfig": {
      "description": "Specifies the zone awareness configuration for the domain cluster, such as the number of availability zones.",
      "properties": {
        "AvailabilityZoneCount": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegerClass"
            },
            {
              "description": "An integer value to indicate the number of availability zones for a domain when zone awareness is enabled. This should be equal to number of subnets if VPC endpoints is enabled"
            }
          ]
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/es/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  }
}