{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "opensource@shinesolutions.com",
      "name": "Shine Solutions",
      "url": "http://shinesolutions.com",
      "x-twitter": "Adobe"
    },
    "description": "Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API",
    "title": "Adobe Experience Manager (AEM) API",
    "version": "3.5.0-pre.0",
    "x-apisguru-categories": [
      "marketing"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_Adobe_profile_image.jpeg"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://raw.githubusercontent.com/shinesolutions/swagger-aem/master/conf/api.yml",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "adobe.com",
    "x-serviceName": "aem",
    "x-unofficialSpec": true,
    "x-datafire": {
      "name": "adobe_aem",
      "type": "openapi"
    }
  },
  "basePath": "/",
  "paths": {
    "/.cqactions.html": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "authorizableId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "changelog",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "cq"
        ],
        "operationId": "postCqActions"
      }
    },
    "/apps/system/config/com.adobe.granite.auth.saml.SamlAuthenticationHandler.config": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "keyStorePassword",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "keyStorePassword@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "service.ranking",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "service.ranking@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "idpHttpRedirect",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "idpHttpRedirect@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "createUser",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "createUser@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "defaultRedirectUrl",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "defaultRedirectUrl@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userIDAttribute",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userIDAttribute@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "defaultGroups",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "defaultGroups@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "idpCertAlias",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "idpCertAlias@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "addGroupMemberships",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "addGroupMemberships@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "path",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "path@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "synchronizeAttributes",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "synchronizeAttributes@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clockTolerance",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "clockTolerance@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "groupMembershipAttribute",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "groupMembershipAttribute@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "idpUrl",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "idpUrl@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "logoutUrl",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "logoutUrl@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "serviceProviderEntityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "serviceProviderEntityId@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "assertionConsumerServiceURL",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "assertionConsumerServiceURL@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "handleLogout",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "handleLogout@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "spPrivateKeyAlias",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "spPrivateKeyAlias@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "useEncryption",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "useEncryption@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "nameIdFormat",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "nameIdFormat@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "digestMethod",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "digestMethod@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "signatureMethod",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "signatureMethod@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userIntermediatePath",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userIntermediatePath@TypeHint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postConfigAdobeGraniteSamlAuthenticationHandler"
      }
    },
    "/apps/system/config/com.shinesolutions.aem.passwordreset.Activator": {
      "post": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "pwdreset.authorizables",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "pwdreset.authorizables@TypeHint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "custom"
        ],
        "operationId": "postConfigAemPasswordReset"
      }
    },
    "/apps/system/config/com.shinesolutions.healthcheck.hc.impl.ActiveBundleHealthCheck": {
      "post": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "bundles.ignored",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "bundles.ignored@TypeHint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "custom"
        ],
        "operationId": "postConfigAemHealthCheckServlet"
      }
    },
    "/apps/system/config/org.apache.felix.http": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "org.apache.felix.https.nio",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.nio@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.keystore",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.keystore@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.keystore.password",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.keystore.password@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.keystore.key",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.keystore.key@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.keystore.key.password",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.keystore.key.password@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.truststore",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.truststore@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.truststore.password",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.truststore.password@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.clientcertificate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.clientcertificate@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.enable",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "org.apache.felix.https.enable@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.osgi.service.http.port.secure",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "org.osgi.service.http.port.secure@TypeHint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postConfigApacheFelixJettyBasedHttpService"
      }
    },
    "/apps/system/config/org.apache.http.proxyconfigurator.config": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "proxy.host",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "proxy.host@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "proxy.port",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "proxy.port@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "proxy.exceptions",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "proxy.exceptions@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "proxy.enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "proxy.enabled@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "proxy.user",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "proxy.user@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "proxy.password",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "proxy.password@TypeHint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postConfigApacheHttpComponentsProxyConfiguration"
      }
    },
    "/apps/system/config/org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "alias",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "alias@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dav.create-absolute-uri",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "dav.create-absolute-uri@TypeHint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postConfigApacheSlingDavExServlet"
      }
    },
    "/apps/system/config/org.apache.sling.security.impl.ReferrerFilter": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "allow.empty",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "allow.empty@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "allow.hosts",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "allow.hosts@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "allow.hosts.regexp",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "allow.hosts.regexp@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter.methods",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter.methods@TypeHint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postConfigApacheSlingReferrerFilter"
      }
    },
    "/apps/system/config/org.apache.sling.servlets.get.DefaultGetServlet": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "json.maximumresults",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "json.maximumresults@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "enable.html",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "enable.html@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "enable.txt",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "enable.txt@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "enable.xml",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "enable.xml@TypeHint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postConfigApacheSlingGetServlet"
      }
    },
    "/apps/system/config/{configNodeName}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "configNodeName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postConfigProperty"
      }
    },
    "/bin/querybuilder.json": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "p.limit",
            "required": true,
            "type": "number"
          },
          {
            "in": "query",
            "name": "1_property",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "1_property.value",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "getQuery"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "p.limit",
            "required": true,
            "type": "number"
          },
          {
            "in": "query",
            "name": "1_property",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "1_property.value",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postQuery"
      }
    },
    "/crx/explorer/ui/setpassword.jsp": {
      "post": {
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "old",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "plain",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "verify",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "crx"
        ],
        "operationId": "postSetPassword"
      }
    },
    "/crx/packmgr/installstatus.jsp": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved CRX package manager install status",
            "schema": {
              "$ref": "#/definitions/InstallStatus"
            }
          },
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "crx"
        ],
        "operationId": "getInstallStatus"
      }
    },
    "/crx/packmgr/service.jsp": {
      "post": {
        "produces": [
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cmd",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "crx"
        ],
        "operationId": "postPackageService"
      }
    },
    "/crx/packmgr/service/.json/{path}": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cmd",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "groupName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "packageName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "packageVersion",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "_charset_",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "recursive",
            "required": false,
            "type": "boolean"
          },
          {
            "format": "binary",
            "in": "formData",
            "name": "package",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "crx"
        ],
        "operationId": "postPackageServiceJson"
      }
    },
    "/crx/packmgr/service/script.html": {
      "get": {
        "produces": [
          "text/html"
        ],
        "parameters": [],
        "responses": {
          "404": {
            "description": "Package Manager Servlet is disabled",
            "schema": {
              "type": "string"
            }
          },
          "405": {
            "description": "Package Manager Servlet is active",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "crx"
        ],
        "operationId": "getPackageManagerServlet"
      }
    },
    "/crx/packmgr/update.jsp": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "groupName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "packageName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "_charset_",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "crx"
        ],
        "operationId": "postPackageUpdate"
      }
    },
    "/crx/server/crx.default/jcr:root/.1.json": {
      "get": {
        "produces": [
          "plain/text"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "CRXDE is enabled",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "CRXDE is disabled",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "crx"
        ],
        "operationId": "getCrxdeStatus"
      }
    },
    "/etc/packages/{group}/{name}-{version}.zip": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "getPackage"
      }
    },
    "/etc/packages/{group}/{name}-{version}.zip/jcr:content/vlt:definition/filter.tidy.2.json": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "getPackageFilter"
      }
    },
    "/etc/replication/agents.{runmode}.-1.json": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "runmode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "getAgents"
      }
    },
    "/etc/replication/agents.{runmode}/{name}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "runmode",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "deleteAgent"
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "runmode",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "getAgent"
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "runmode",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/cq:distribute",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/cq:distribute@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/cq:name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/cq:template",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/jcr:description",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/jcr:lastModified",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/jcr:lastModifiedBy",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/jcr:mixinTypes",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/jcr:title",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/logLevel",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/noStatusUpdate",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/noVersioning",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/protocolConnectTimeout",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "name": "jcr:content/protocolHTTPConnectionClosed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/protocolHTTPExpired",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "jcr:content/protocolHTTPHeaders",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "jcr:content/protocolHTTPHeaders@TypeHint",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/protocolHTTPMethod",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/protocolHTTPSRelaxed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/protocolInterface",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/protocolSocketTimeout",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "name": "jcr:content/protocolVersion",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/proxyNTLMDomain",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/proxyNTLMHost",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/proxyHost",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/proxyPassword",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/proxyPort",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "name": "jcr:content/proxyUser",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/queueBatchMaxSize",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "name": "jcr:content/queueBatchMode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/queueBatchWaitTime",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "name": "jcr:content/retryDelay",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/reverseReplication",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/serializationType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/sling:resourceType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/ssl",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/transportNTLMDomain",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/transportNTLMHost",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/transportPassword",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/transportUri",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/transportUser",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:content/triggerDistribute",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/triggerModified",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/triggerOnOffTime",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/triggerReceive",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/triggerSpecific",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "jcr:content/userId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:primaryType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": ":operation",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postAgent"
      }
    },
    "/etc/replication/treeactivation.html": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "ignoredeactivated",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "onlymodified",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postTreeActivation"
      }
    },
    "/etc/truststore": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "format": "binary",
            "in": "formData",
            "name": "truststore.p12",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postTruststorePKCS12"
      }
    },
    "/etc/truststore/truststore.p12": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "getTruststore"
      }
    },
    "/libs/granite/core/content/login.html": {
      "get": {
        "produces": [
          "text/html"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [],
        "tags": [
          "cq"
        ],
        "operationId": "getLoginPage"
      }
    },
    "/libs/granite/security/post/authorizables": {
      "post": {
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "authorizableId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "intermediatePath",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "createUser",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "createGroup",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "rep:password",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "profile/givenName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postAuthorizables"
      }
    },
    "/libs/granite/security/post/sslSetup.html": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "keystorePassword",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "keystorePasswordConfirm",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "truststorePassword",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "truststorePasswordConfirm",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "httpsHostname",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "httpsPort",
            "required": true,
            "type": "string"
          },
          {
            "format": "binary",
            "in": "formData",
            "name": "certificateFile",
            "type": "string"
          },
          {
            "format": "binary",
            "in": "formData",
            "name": "privatekeyFile",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "granite"
        ],
        "operationId": "sslSetup"
      }
    },
    "/libs/granite/security/post/truststore": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": ":operation",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPassword",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "rePassword",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "keyStoreType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "removeAlias",
            "required": false,
            "type": "string"
          },
          {
            "format": "binary",
            "in": "formData",
            "name": "certificate",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postTruststore"
      }
    },
    "/libs/granite/security/truststore.json": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved AEM Truststore info",
            "schema": {
              "$ref": "#/definitions/TruststoreInfo"
            }
          },
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "getTruststoreInfo"
      }
    },
    "/system/console/bundles/{name}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "action",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "console"
        ],
        "operationId": "postBundle"
      }
    },
    "/system/console/configMgr": {
      "get": {
        "produces": [
          "text/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "5XX": {
            "description": "Unexpected error."
          }
        },
        "tags": [
          "console"
        ],
        "operationId": "getConfigMgr"
      }
    },
    "/system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler": {
      "post": {
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "post",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "apply",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "delete",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "action",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$location",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "path",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "service.ranking",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "idpUrl",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "idpCertAlias",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "idpHttpRedirect",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "serviceProviderEntityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "assertionConsumerServiceURL",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "spPrivateKeyAlias",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "keyStorePassword",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "defaultRedirectUrl",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userIDAttribute",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "useEncryption",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "createUser",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "addGroupMemberships",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "groupMembershipAttribute",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "defaultGroups",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "nameIdFormat",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "synchronizeAttributes",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "handleLogout",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "logoutUrl",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clockTolerance",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "digestMethod",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "signatureMethod",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userIntermediatePath",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "propertylist",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved AEM SAML Configuration",
            "schema": {
              "$ref": "#/definitions/SamlConfigurationInfo"
            }
          },
          "302": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "console"
        ],
        "operationId": "postSamlConfiguration"
      }
    },
    "/system/console/jmx/com.adobe.granite:type=Repository/op/{action}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "action",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "console"
        ],
        "operationId": "postJmxRepository"
      }
    },
    "/system/console/status-productinfo.json": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "console"
        ],
        "operationId": "getAemProductInfo"
      }
    },
    "/system/health": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "combineTagsOr",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "custom"
        ],
        "operationId": "getAemHealthCheck"
      }
    },
    "/{intermediatePath}/{authorizableId}.ks.html": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "intermediatePath",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "authorizableId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": ":operation",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "currentPassword",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newPassword",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "rePassword",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "keyPassword",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "keyStorePass",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "alias",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "newAlias",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "removeAlias",
            "required": false,
            "type": "string"
          },
          {
            "format": "binary",
            "in": "formData",
            "name": "cert-chain",
            "type": "string"
          },
          {
            "format": "binary",
            "in": "formData",
            "name": "keyStore",
            "type": "string"
          },
          {
            "format": "binary",
            "in": "formData",
            "name": "pk",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved Authorizable Keystore info",
            "schema": {
              "$ref": "#/definitions/KeystoreInfo"
            }
          },
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postAuthorizableKeystore"
      }
    },
    "/{intermediatePath}/{authorizableId}.ks.json": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "intermediatePath",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "authorizableId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved Authorizable Keystore info",
            "schema": {
              "$ref": "#/definitions/KeystoreInfo"
            }
          },
          "default": {
            "description": "Default response",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "getAuthorizableKeystore"
      }
    },
    "/{intermediatePath}/{authorizableId}/keystore/store.p12": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "intermediatePath",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "authorizableId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "getKeystore"
      }
    },
    "/{path}/": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "jcr:primaryType",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": ":name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postPath"
      }
    },
    "/{path}/{name}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "deleteNode"
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "getNode"
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": ":operation",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "deleteAuthorizable",
            "required": false,
            "type": "string"
          },
          {
            "format": "binary",
            "in": "formData",
            "name": "file",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postNode"
      }
    },
    "/{path}/{name}.rw.html": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "addMembers",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response"
          }
        },
        "tags": [
          "sling"
        ],
        "operationId": "postNodeRw"
      }
    }
  },
  "definitions": {
    "InstallStatus": {
      "properties": {
        "status": {
          "properties": {
            "finished": {
              "type": "boolean"
            },
            "itemCount": {
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "KeystoreChainItems": {
      "properties": {
        "issuer": {
          "description": "e.g. \"CN=Admin\"",
          "type": "string"
        },
        "notAfter": {
          "description": "e.g. \"Sun Jun 30 23:59:50 AEST 2019\"",
          "type": "string"
        },
        "notBefore": {
          "description": "e.g. \"Sun Jul 01 12:00:00 AEST 2018\"",
          "type": "string"
        },
        "serialNumber": {
          "description": "18165099476682912368",
          "type": "integer"
        },
        "subject": {
          "description": "e.g. \"CN=localhost\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "KeystoreInfo": {
      "properties": {
        "aliases": {
          "items": {
            "$ref": "#/definitions/KeystoreItems"
          },
          "type": "array"
        },
        "exists": {
          "description": "False if truststore don't exist",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "KeystoreItems": {
      "properties": {
        "algorithm": {
          "description": "e.g. \"RSA\"",
          "type": "string"
        },
        "alias": {
          "description": "Keystore alias name",
          "type": "string"
        },
        "chain": {
          "items": {
            "$ref": "#/definitions/KeystoreChainItems"
          },
          "type": "array"
        },
        "entryType": {
          "description": "e.g. \"privateKey\"",
          "type": "string"
        },
        "format": {
          "description": "e.g. \"PKCS#8\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SamlConfigurationInfo": {
      "properties": {
        "bundle_location": {
          "description": "needed for configuration binding",
          "type": "string"
        },
        "description": {
          "description": "Title",
          "type": "string"
        },
        "pid": {
          "description": "Persistent Identity (PID)",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SamlConfigurationProperties"
        },
        "service_location": {
          "description": "needed for configuraiton binding",
          "type": "string"
        },
        "title": {
          "description": "Title",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SamlConfigurationProperties": {
      "properties": {
        "addGroupMemberships": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsBoolean",
          "description": "Whether or not a user should be automatically added to CRX groups after successful authentication."
        },
        "assertionConsumerServiceURL": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "The (optional) AssertionConsumerServiceURL attribute of an Authn request specifies the location to which a  message MUST be sent to the requester."
        },
        "clockTolerance": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsLong",
          "description": "Time tolerance in seconds to compensate clock skew between IDP and SP when validating Assertions."
        },
        "createUser": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsBoolean",
          "description": "Whether or not to autocreate nonexisting users in the repository."
        },
        "defaultGroups": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsArray",
          "description": "A list of default CRX groups users are added to after successful authentication."
        },
        "defaultRedirectUrl": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "The default location to redirect to after successful authentication."
        },
        "digestMethod": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "The digest algorithm to use when signing a SAML message."
        },
        "groupMembershipAttribute": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "The name of the attribute containing a list of CRX groups this user should be added to."
        },
        "handleLogout": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsBoolean",
          "description": "Whether or not logout (dropCredentials) requests will be processed by this handler."
        },
        "idpCertAlias": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "The alias of the IdP's certificate in the global truststore. If this property is empty the authentication handler is disabled."
        },
        "idpHttpRedirect": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsBoolean",
          "description": "Use an HTTP Redirect to the IDP URL instead of sending an AuthnRequest-message to request credentials. Use this for IDP initiated authentication."
        },
        "idpUrl": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "URL of the IDP where the SAML Authentication Request should be sent to. If this property is empty the authentication handler is disabled. (idpUrl)"
        },
        "keyStorePassword": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "The password of the key-store of the 'authentication-service' system user."
        },
        "logoutUrl": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "URL of the IDP where the SAML Logout Request should be sent to. If this property is empty the authentication handler won't handle logouts."
        },
        "nameIdFormat": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "The value of the NameIDPolicy format parameter to send in the AuthnRequest message."
        },
        "path": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsArray",
          "description": "Repository path for which this authentication handler should be used by Sling. If this is empty, the authentication handler will be disabled."
        },
        "service.ranking": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsLong",
          "description": "OSGi Framework Service Ranking value to indicate the order in which to call this service. This is an int value where higher values designate higher precedence. Default value is 0."
        },
        "serviceProviderEntityId": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "ID which uniquely identifies this service provider with the identity provider. If this property is empty the authentication handler is disabled."
        },
        "signatureMethod": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "The signature algorithm to use when signing a SAML message."
        },
        "spPrivateKeyAlias": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "The alias of the SP's private key in the key-store of the 'authentication-service' system user. If this property is empty the handler will not be able to sign or decrypt messages."
        },
        "synchronizeAttributes": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsArray",
          "description": "A list of attribute mappings (in the format \\attributename=path/relative/to/user/node\\) which should be stored in the repository on user-synchronization."
        },
        "useEncryption": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsBoolean",
          "description": "Whether or not this authentication handler expects encrypted SAML assertions. If this is enabled the SP's private key must be provided in the key-store of the 'authentication-service' system user (see SP Private Key Alias above)."
        },
        "userIDAttribute": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "The name of the attribute containing the user ID used to authenticate and create the user in the CRX repository. Leave empty to use the Subject:NameId."
        },
        "userIntermediatePath": {
          "$ref": "#/definitions/SamlConfigurationPropertyItemsString",
          "description": "User intermediate path to store created users."
        }
      },
      "type": "object"
    },
    "SamlConfigurationPropertyItemsArray": {
      "properties": {
        "description": {
          "description": "Property description",
          "type": "string"
        },
        "is_set": {
          "description": "True if property is set",
          "type": "boolean"
        },
        "name": {
          "description": "property name",
          "type": "string"
        },
        "optional": {
          "description": "True if optional",
          "type": "boolean"
        },
        "type": {
          "description": "Property type, 1=String, 3=long, 11=boolean, 12=Password",
          "type": "integer"
        },
        "values": {
          "description": "Property value",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SamlConfigurationPropertyItemsBoolean": {
      "properties": {
        "description": {
          "description": "Property description",
          "type": "string"
        },
        "is_set": {
          "description": "True if property is set",
          "type": "boolean"
        },
        "name": {
          "description": "property name",
          "type": "string"
        },
        "optional": {
          "description": "True if optional",
          "type": "boolean"
        },
        "type": {
          "description": "Property type, 1=String, 3=long, 11=boolean, 12=Password",
          "type": "integer"
        },
        "value": {
          "description": "Property value",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SamlConfigurationPropertyItemsLong": {
      "properties": {
        "description": {
          "description": "Property description",
          "type": "string"
        },
        "is_set": {
          "description": "True if property is set",
          "type": "boolean"
        },
        "name": {
          "description": "property name",
          "type": "string"
        },
        "optional": {
          "description": "True if optional",
          "type": "boolean"
        },
        "type": {
          "description": "Property type, 1=String, 3=long, 11=boolean, 12=Password",
          "type": "integer"
        },
        "value": {
          "description": "Property value",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SamlConfigurationPropertyItemsString": {
      "properties": {
        "description": {
          "description": "Property description",
          "type": "string"
        },
        "is_set": {
          "description": "True if property is set",
          "type": "boolean"
        },
        "name": {
          "description": "property name",
          "type": "string"
        },
        "optional": {
          "description": "True if optional",
          "type": "boolean"
        },
        "type": {
          "description": "Property type, 1=String, 3=long, 11=boolean, 12=Password",
          "type": "integer"
        },
        "value": {
          "description": "Property value",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TruststoreInfo": {
      "properties": {
        "aliases": {
          "items": {
            "$ref": "#/definitions/TruststoreItems"
          },
          "type": "array"
        },
        "exists": {
          "description": "False if truststore don't exist",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TruststoreItems": {
      "properties": {
        "alias": {
          "description": "Truststore alias name",
          "type": "string"
        },
        "entryType": {
          "type": "string"
        },
        "issuer": {
          "description": "e.g. \"CN=Admin\"",
          "type": "string"
        },
        "notAfter": {
          "description": "e.g. \"Sun Jun 30 23:59:50 AEST 2019\"",
          "type": "string"
        },
        "notBefore": {
          "description": "e.g. \"Sun Jul 01 12:00:00 AEST 2018\"",
          "type": "string"
        },
        "serialNumber": {
          "description": "18165099476682912368",
          "type": "integer"
        },
        "subject": {
          "description": "e.g. \"CN=localhost\"",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "aemAuth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "aemAuth": []
    }
  ],
  "x-components": {}
}