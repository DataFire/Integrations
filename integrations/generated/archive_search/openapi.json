{
  "swagger": "2.0",
  "info": {
    "contact": {
      "x-twitter": "internetarchive"
    },
    "description": "API for Internet Archive's Search-related services\n",
    "title": "Search Services",
    "version": "1.0.0",
    "x-apisguru-categories": [
      "search"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_internetarchive_profile_image.jpeg"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://raw.githubusercontent.com/ArchiveLabs/api.archive.org/master/swagger/search.yaml",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "archive.org",
    "x-serviceName": "search",
    "x-datafire": {
      "name": "archive_search",
      "type": "openapi"
    }
  },
  "host": "api.archive.org",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/search/v1/fields": {
      "get": {
        "produces": [
          "application/javascript",
          "application/json"
        ],
        "parameters": [
          {
            "description": "Specifies a JavaScript function func, for a JSON-P response. When provided, results are wrapped as `callback(data)`, and the returned MIME type is application/javascript. This causes the caller to automatically run the func with the JSON results as its argument.",
            "in": "query",
            "name": "callback",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fields that can be requested",
            "schema": {
              "items": {
                "$ref": "#/definitions/Field"
              },
              "type": "array"
            }
          }
        },
        "description": "Fields that can be requested"
      }
    },
    "/search/v1/organic": {
      "get": {
        "produces": [
          "application/javascript",
          "application/json"
        ],
        "parameters": [
          {
            "description": "Lucene-type search query",
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "default": "identifier",
            "description": "Metadata field",
            "in": "query",
            "maxLength": 250,
            "minLength": 1,
            "name": "field",
            "required": false,
            "type": "string"
          },
          {
            "default": 1000,
            "description": "Number of query results to return",
            "in": "query",
            "maximum": 10000,
            "minimum": 10,
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "default": false,
            "description": "Request total only; do not return hits",
            "in": "query",
            "name": "total_only",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Specifies a JavaScript function func, for a JSON-P response. When provided, results are wrapped as `callback(data)`, and the returned MIME type is application/javascript. This causes the caller to automatically run the func with the JSON results as its argument.",
            "in": "query",
            "name": "callback",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Organic Search API. Returns results in descending relevance order",
            "schema": {
              "$ref": "#/definitions/OrganicResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "Return relevance-based results from search queries\n"
      }
    },
    "/search/v1/scrape": {
      "get": {
        "produces": [
          "application/javascript",
          "application/json"
        ],
        "parameters": [
          {
            "description": "Lucene-type search query",
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "default": "identifier",
            "description": "Metadata field",
            "in": "query",
            "maxLength": 250,
            "minLength": 1,
            "name": "field",
            "required": false,
            "type": "string"
          },
          {
            "description": "sort collations",
            "in": "query",
            "maxLength": 250,
            "minLength": 5,
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": 1000,
            "description": "Number of query results to return",
            "in": "query",
            "maximum": 10000,
            "minimum": 10,
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Cursor for scrolling (used for subsequent calls)",
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "Request total only; do not return hits",
            "in": "query",
            "name": "total_only",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Specifies a JavaScript function func, for a JSON-P response. When provided, results are wrapped as `callback(data)`, and the returned MIME type is application/javascript. This causes the caller to automatically run the func with the JSON results as its argument.",
            "in": "query",
            "name": "callback",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Scaping API",
            "schema": {
              "$ref": "#/definitions/ScrapeResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "description": "Scrape search results from Internet Archive, allowing a scrolling cursor\n"
      }
    }
  },
  "definitions": {
    "Cursor": {
      "description": "A scroll handle",
      "type": "string"
    },
    "Error": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Field": {
      "description": "The name of a field",
      "type": "string"
    },
    "Hit": {
      "description": "One item returned (object of fields and values)",
      "type": "object"
    },
    "OrganicResult": {
      "description": "The result of a organic search request",
      "properties": {
        "count": {
          "description": "Number of results returned",
          "maximum": 10000,
          "minimum": 0,
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/Hit"
          },
          "type": "array"
        },
        "total": {
          "description": "Approximate number of results meeting query",
          "minimum": 0,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ScrapeResult": {
      "description": "The result of a scrape request",
      "properties": {
        "count": {
          "description": "Number of results returned",
          "maximum": 10000,
          "minimum": 0,
          "type": "integer"
        },
        "cursor": {
          "$ref": "#/definitions/Cursor"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/Hit"
          },
          "type": "array"
        },
        "previous": {
          "$ref": "#/definitions/Cursor"
        },
        "total": {
          "description": "Total number of results from this cursor point",
          "minimum": 0,
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "x-components": {
    "parameters": {
      "callback": {
        "description": "Specifies a JavaScript function func, for a JSON-P response. When provided, results are wrapped as `callback(data)`, and the returned MIME type is application/javascript. This causes the caller to automatically run the func with the JSON results as its argument.",
        "in": "query",
        "name": "callback",
        "required": false,
        "type": "string"
      },
      "cursor": {
        "description": "Cursor for scrolling (used for subsequent calls)",
        "in": "query",
        "name": "cursor",
        "required": false,
        "type": "string"
      },
      "field": {
        "default": "identifier",
        "description": "Metadata field",
        "in": "query",
        "maxLength": 250,
        "minLength": 1,
        "name": "field",
        "required": false,
        "type": "string"
      },
      "query": {
        "description": "Lucene-type search query",
        "in": "query",
        "name": "q",
        "type": "string"
      },
      "size": {
        "default": 1000,
        "description": "Number of query results to return",
        "in": "query",
        "maximum": 10000,
        "minimum": 10,
        "name": "size",
        "required": false,
        "type": "integer"
      },
      "sort": {
        "description": "sort collations",
        "in": "query",
        "maxLength": 250,
        "minLength": 5,
        "name": "sort",
        "required": false,
        "type": "string"
      },
      "total_only": {
        "default": false,
        "description": "Request total only; do not return hits",
        "in": "query",
        "name": "total_only",
        "required": false,
        "type": "boolean"
      }
    }
  }
}