{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com",
      "x-twitter": "youtube"
    },
    "description": "The Firebase Realtime Database Management API enables programmatic provisioning and management of Realtime Database instances.",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/",
    "title": "Firebase Realtime Database Management API",
    "version": "v1beta",
    "x-apisguru-categories": [
      "analytics",
      "media"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_(2013-2017).svg"
    },
    "x-origin": [
      {
        "format": "google",
        "url": "https://firebasedatabase.googleapis.com/$discovery/rest?version=v1beta",
        "version": "v1"
      }
    ],
    "x-preferred": true,
    "x-providerName": "googleapis.com",
    "x-serviceName": "firebasedatabase",
    "x-datafire": {
      "name": "google_firebasedatabase",
      "type": "openapi"
    }
  },
  "host": "firebasedatabase.googleapis.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1beta/{name}": {
      "parameters": [
        {
          "description": "V1 error format.",
          "enum": [
            "1",
            "2"
          ],
          "in": "query",
          "name": "$.xgafv",
          "type": "string"
        },
        {
          "description": "OAuth access token.",
          "in": "query",
          "name": "access_token",
          "type": "string"
        },
        {
          "description": "Data format for response.",
          "enum": [
            "json",
            "media",
            "proto"
          ],
          "in": "query",
          "name": "alt",
          "type": "string"
        },
        {
          "description": "JSONP",
          "in": "query",
          "name": "callback",
          "type": "string"
        },
        {
          "description": "Selector specifying which fields to include in a partial response.",
          "in": "query",
          "name": "fields",
          "type": "string"
        },
        {
          "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
          "in": "query",
          "name": "key",
          "type": "string"
        },
        {
          "description": "OAuth 2.0 token for the current user.",
          "in": "query",
          "name": "oauth_token",
          "type": "string"
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "in": "query",
          "name": "prettyPrint",
          "type": "boolean"
        },
        {
          "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
          "in": "query",
          "name": "quotaUser",
          "type": "string"
        },
        {
          "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
          "in": "query",
          "name": "upload_protocol",
          "type": "string"
        },
        {
          "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
          "in": "query",
          "name": "uploadType",
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DatabaseInstance"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Marks a DatabaseInstance to be deleted. The DatabaseInstance will be purged within 30 days. The default database cannot be deleted. IDs for deleted database instances may never be recovered or re-used. The Database may only be deleted if it is already in a DISABLED state.",
        "operationId": "firebasedatabase.projects.locations.instances.delete"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`. `database-id` is a globally unique identifier across all parent collections. For convenience, this method allows you to supply `-` as a wildcard character in place of specific collections under `projects` and `locations`. The resulting wildcarding form of the method is: `projects/-/locations/-/instances/{database-id}`.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DatabaseInstance"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform.read-only"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform.read-only"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase.readonly"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Gets the DatabaseInstance identified by the specified resource name.",
        "operationId": "firebasedatabase.projects.locations.instances.get"
      }
    },
    "/v1beta/{name}:disable": {
      "parameters": [
        {
          "description": "V1 error format.",
          "enum": [
            "1",
            "2"
          ],
          "in": "query",
          "name": "$.xgafv",
          "type": "string"
        },
        {
          "description": "OAuth access token.",
          "in": "query",
          "name": "access_token",
          "type": "string"
        },
        {
          "description": "Data format for response.",
          "enum": [
            "json",
            "media",
            "proto"
          ],
          "in": "query",
          "name": "alt",
          "type": "string"
        },
        {
          "description": "JSONP",
          "in": "query",
          "name": "callback",
          "type": "string"
        },
        {
          "description": "Selector specifying which fields to include in a partial response.",
          "in": "query",
          "name": "fields",
          "type": "string"
        },
        {
          "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
          "in": "query",
          "name": "key",
          "type": "string"
        },
        {
          "description": "OAuth 2.0 token for the current user.",
          "in": "query",
          "name": "oauth_token",
          "type": "string"
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "in": "query",
          "name": "prettyPrint",
          "type": "boolean"
        },
        {
          "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
          "in": "query",
          "name": "quotaUser",
          "type": "string"
        },
        {
          "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
          "in": "query",
          "name": "upload_protocol",
          "type": "string"
        },
        {
          "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
          "in": "query",
          "name": "uploadType",
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DisableDatabaseInstanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DatabaseInstance"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Disables a DatabaseInstance. The database can be re-enabled later using ReenableDatabaseInstance. When a database is disabled, all reads and writes are denied, including view access in the Firebase console.",
        "operationId": "firebasedatabase.projects.locations.instances.disable"
      }
    },
    "/v1beta/{name}:reenable": {
      "parameters": [
        {
          "description": "V1 error format.",
          "enum": [
            "1",
            "2"
          ],
          "in": "query",
          "name": "$.xgafv",
          "type": "string"
        },
        {
          "description": "OAuth access token.",
          "in": "query",
          "name": "access_token",
          "type": "string"
        },
        {
          "description": "Data format for response.",
          "enum": [
            "json",
            "media",
            "proto"
          ],
          "in": "query",
          "name": "alt",
          "type": "string"
        },
        {
          "description": "JSONP",
          "in": "query",
          "name": "callback",
          "type": "string"
        },
        {
          "description": "Selector specifying which fields to include in a partial response.",
          "in": "query",
          "name": "fields",
          "type": "string"
        },
        {
          "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
          "in": "query",
          "name": "key",
          "type": "string"
        },
        {
          "description": "OAuth 2.0 token for the current user.",
          "in": "query",
          "name": "oauth_token",
          "type": "string"
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "in": "query",
          "name": "prettyPrint",
          "type": "boolean"
        },
        {
          "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
          "in": "query",
          "name": "quotaUser",
          "type": "string"
        },
        {
          "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
          "in": "query",
          "name": "upload_protocol",
          "type": "string"
        },
        {
          "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
          "in": "query",
          "name": "uploadType",
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReenableDatabaseInstanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DatabaseInstance"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Enables a DatabaseInstance. The database must have been disabled previously using DisableDatabaseInstance. The state of a successfully reenabled DatabaseInstance is ACTIVE.",
        "operationId": "firebasedatabase.projects.locations.instances.reenable"
      }
    },
    "/v1beta/{parent}/instances": {
      "parameters": [
        {
          "description": "V1 error format.",
          "enum": [
            "1",
            "2"
          ],
          "in": "query",
          "name": "$.xgafv",
          "type": "string"
        },
        {
          "description": "OAuth access token.",
          "in": "query",
          "name": "access_token",
          "type": "string"
        },
        {
          "description": "Data format for response.",
          "enum": [
            "json",
            "media",
            "proto"
          ],
          "in": "query",
          "name": "alt",
          "type": "string"
        },
        {
          "description": "JSONP",
          "in": "query",
          "name": "callback",
          "type": "string"
        },
        {
          "description": "Selector specifying which fields to include in a partial response.",
          "in": "query",
          "name": "fields",
          "type": "string"
        },
        {
          "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
          "in": "query",
          "name": "key",
          "type": "string"
        },
        {
          "description": "OAuth 2.0 token for the current user.",
          "in": "query",
          "name": "oauth_token",
          "type": "string"
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "in": "query",
          "name": "prettyPrint",
          "type": "boolean"
        },
        {
          "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
          "in": "query",
          "name": "quotaUser",
          "type": "string"
        },
        {
          "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
          "in": "query",
          "name": "upload_protocol",
          "type": "string"
        },
        {
          "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
          "in": "query",
          "name": "uploadType",
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The parent project for which to list database instances, in the form: `projects/{project-number}/locations/{location-id}` To list across all locations, use a parent in the form: `projects/{project-number}/locations/-`",
            "in": "path",
            "name": "parent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of database instances to return in the response. The server may return fewer than this at its discretion. If no value is specified (or too large a value is specified), then the server will impose its own limit.",
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "description": "Token returned from a previous call to `ListDatabaseInstances` indicating where in the set of database instances to resume listing.",
            "in": "query",
            "name": "pageToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListDatabaseInstancesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform.read-only"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform.read-only"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase.readonly"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Lists each DatabaseInstance associated with the specified parent project. The list items are returned in no particular order, but will be a consistent view of the database instances when additional requests are made with a `pageToken`. The resulting list contains instances in any STATE. The list results may be stale by a few seconds. Use GetDatabaseInstance for consistent reads.",
        "operationId": "firebasedatabase.projects.locations.instances.list"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The parent project for which to create a database instance, in the form: `projects/{project-number}/locations/{location-id}`.",
            "in": "path",
            "name": "parent",
            "required": true,
            "type": "string"
          },
          {
            "description": "The globally unique identifier of the database instance.",
            "in": "query",
            "name": "databaseId",
            "type": "string"
          },
          {
            "description": "When set to true, the request will be validated but not submitted.",
            "in": "query",
            "name": "validateOnly",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DatabaseInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DatabaseInstance"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/firebase"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/firebase"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Requests that a new DatabaseInstance be created. The state of a successfully created DatabaseInstance is ACTIVE. Only available for projects on the Blaze plan. Projects can be upgraded using the Cloud Billing API https://cloud.google.com/billing/reference/rest/v1/projects/updateBillingInfo. Note that it might take a few minutes for billing enablement state to propagate to Firebase systems.",
        "operationId": "firebasedatabase.projects.locations.instances.create"
      }
    }
  },
  "definitions": {
    "DatabaseInstance": {
      "description": "Representation of a Realtime Database instance. Details on interacting with contents of a DatabaseInstance can be found at: https://firebase.google.com/docs/database/rest/start.",
      "properties": {
        "databaseUrl": {
          "description": "Immutable. The globally unique hostname of the database.",
          "type": "string"
        },
        "name": {
          "description": "The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`. Currently the only supported location is 'us-central1'.",
          "type": "string"
        },
        "project": {
          "description": "The resource name of the project this instance belongs to. For example: `projects/{project-number}`.",
          "type": "string"
        },
        "state": {
          "description": "The database's lifecycle state. Read-only.",
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "ACTIVE",
            "DISABLED",
            "DELETED"
          ],
          "type": "string"
        },
        "type": {
          "description": "The database instance type. On creation only USER_DATABASE is allowed, which is also the default when omitted.",
          "enum": [
            "DATABASE_INSTANCE_TYPE_UNSPECIFIED",
            "DEFAULT_DATABASE",
            "USER_DATABASE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DisableDatabaseInstanceRequest": {
      "description": "The request sent to the DisableDatabaseInstance method.",
      "properties": {},
      "type": "object"
    },
    "ListDatabaseInstancesResponse": {
      "description": "The response from the ListDatabaseInstances method.",
      "properties": {
        "instances": {
          "description": "List of each DatabaseInstance that is in the parent Firebase project.",
          "items": {
            "$ref": "#/definitions/DatabaseInstance"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListDatabaseInstances` to find the next group of database instances. Page tokens are short-lived and should not be persisted.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReenableDatabaseInstanceRequest": {
      "description": "The request sent to the ReenableDatabaseInstance method.",
      "properties": {},
      "type": "object"
    }
  },
  "securityDefinitions": {
    "Oauth2": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "description": "Oauth 2.0 implicit authentication",
      "flow": "implicit",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
        "https://www.googleapis.com/auth/cloud-platform.read-only": "View your data across Google Cloud Platform services",
        "https://www.googleapis.com/auth/firebase": "View and administer all your Firebase data and settings",
        "https://www.googleapis.com/auth/firebase.readonly": "View all your Firebase data and settings"
      },
      "type": "oauth2"
    },
    "Oauth2c": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "description": "Oauth 2.0 authorizationCode authentication",
      "flow": "accessCode",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
        "https://www.googleapis.com/auth/cloud-platform.read-only": "View your data across Google Cloud Platform services",
        "https://www.googleapis.com/auth/firebase": "View and administer all your Firebase data and settings",
        "https://www.googleapis.com/auth/firebase.readonly": "View all your Firebase data and settings"
      },
      "tokenUrl": "https://accounts.google.com/o/oauth2/token",
      "type": "oauth2"
    }
  },
  "tags": [
    {
      "name": "projects"
    }
  ],
  "externalDocs": {
    "url": "https://firebase.google.com/docs/reference/rest/database/database-management/rest/"
  },
  "x-components": {
    "parameters": {
      "_.xgafv": {
        "description": "V1 error format.",
        "enum": [
          "1",
          "2"
        ],
        "in": "query",
        "name": "$.xgafv",
        "type": "string"
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "type": "string"
      },
      "alt": {
        "description": "Data format for response.",
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "in": "query",
        "name": "alt",
        "type": "string"
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "type": "string"
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "type": "string"
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "type": "string"
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "type": "string"
      },
      "prettyPrint": {
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "type": "boolean"
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "type": "string"
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "type": "string"
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "type": "string"
      }
    }
  }
}