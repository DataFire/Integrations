{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>AWS Signer is a fully managed code signing service to help you ensure the trust and integrity of your code. </p> <p>AWS Signer supports the following applications:</p> <p>With <i>code signing for AWS Lambda</i>, you can sign AWS Lambda deployment packages. Integrated support is provided for Amazon S3, Amazon CloudWatch, and AWS CloudTrail. In order to sign code, you create a signing profile and then use Signer to sign Lambda zip files in S3. </p> <p>With <i>code signing for IoT</i>, you can sign code for any IoT device that is supported by AWS. IoT code signing is available for <a href=\"http://docs.aws.amazon.com/freertos/latest/userguide/\">Amazon FreeRTOS</a> and <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/\">AWS IoT Device Management</a>, and is integrated with <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/\">AWS Certificate Manager (ACM)</a>. In order to sign code, you import a third-party code signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS and AWS IoT Device Management. </p> <p>For more information about AWS Signer, see the <a href=\"http://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html\">AWS Signer Developer Guide</a>.</p> <p/>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Signer",
    "version": "2017-08-25",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/signer-2017-08-25.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "signer",
    "x-datafire": {
      "name": "amazonaws_signer",
      "type": "openapi"
    }
  },
  "host": "signer.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/signing-jobs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A status value with which to filter your results.",
            "enum": [
              "InProgress",
              "Failed",
              "Succeeded"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "The ID of microcontroller platform that you specified for the distribution of your code image.",
            "in": "query",
            "name": "platformId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The IAM principal that requested the signing job.",
            "in": "query",
            "name": "requestedBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies the maximum number of items to return in the response. Use this parameter when paginating results. If additional items exist beyond the number you specify, the <code>nextToken</code> element is set in the response. Use the <code>nextToken</code> value in a subsequent request to retrieve additional items. ",
            "in": "query",
            "maximum": 25,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "String for specifying the next set of paginated results to return. After you receive a response with truncated results, use this parameter in a subsequent request. Set it to the value of <code>nextToken</code> from the response that you just received.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filters results to return only signing jobs with revoked signatures.",
            "in": "query",
            "name": "isRevoked",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Filters results to return only signing jobs with signatures expiring before a specified timestamp.",
            "format": "date-time",
            "in": "query",
            "name": "signatureExpiresBefore",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filters results to return only signing jobs with signatures expiring after a specified timestamp.",
            "format": "date-time",
            "in": "query",
            "name": "signatureExpiresAfter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filters results to return only signing jobs initiated by a specified IAM entity.",
            "in": "query",
            "maxLength": 12,
            "minLength": 12,
            "name": "jobInvoker",
            "pattern": "^[0-9]{12}$",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSigningJobsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Lists all your signing jobs. You can use the <code>maxResults</code> parameter to limit the number of signing jobs that are returned in the response. If additional jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code> parameter and with new values that code signing returns in the <code>nextToken</code> parameter until all of your signing jobs have been returned. ",
        "operationId": "ListSigningJobs"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "clientRequestToken": {
                  "description": "String that identifies the signing request. All calls after the first that use this token return the same response as the first call.",
                  "type": "string"
                },
                "destination": {
                  "description": "Points to an <code>S3Destination</code> object that contains information about your S3 bucket.",
                  "properties": {
                    "s3": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Destination"
                        },
                        {
                          "description": "The <code>S3Destination</code> object."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "profileName": {
                  "description": "The name of the signing profile.",
                  "maxLength": 64,
                  "minLength": 2,
                  "pattern": "^[a-zA-Z0-9_]{2,}",
                  "type": "string"
                },
                "profileOwner": {
                  "description": "The AWS account ID of the signing profile owner.",
                  "maxLength": 12,
                  "minLength": 12,
                  "pattern": "^[0-9]{12}$",
                  "type": "string"
                },
                "source": {
                  "description": "An <code>S3Source</code> object that contains information about the S3 bucket where you saved your unsigned code.",
                  "properties": {
                    "s3": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Source"
                        },
                        {
                          "description": "The <code>S3Source</code> object."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "source",
                "destination",
                "profileName",
                "clientRequestToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartSigningJobResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "485": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "<p>Initiates a signing job to be performed on the code provided. Signing jobs are viewable by the <code>ListSigningJobs</code> operation for two years after they are performed. Note the following requirements: </p> <ul> <li> <p> You must create an Amazon S3 source bucket. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html\">Create a Bucket</a> in the <i>Amazon S3 Getting Started Guide</i>. </p> </li> <li> <p>Your S3 source bucket must be version enabled.</p> </li> <li> <p>You must create an S3 destination bucket. Code signing uses your S3 destination bucket to write your signed code.</p> </li> <li> <p>You specify the name of the source and destination buckets when calling the <code>StartSigningJob</code> operation.</p> </li> <li> <p>You must also specify a request token that identifies your request to code signing.</p> </li> </ul> <p>You can call the <a>DescribeSigningJob</a> and the <a>ListSigningJobs</a> actions after you call <code>StartSigningJob</code>.</p> <p>For a Java example that shows how to use this action, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/\">http://docs.aws.amazon.com/acm/latest/userguide/</a> </p>",
        "operationId": "StartSigningJob"
      }
    },
    "/signing-jobs/{jobId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the signing job on input.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeSigningJobResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Returns information about a specific code signing job. You specify the job by using the <code>jobId</code> value that is returned by the <a>StartSigningJob</a> operation. ",
        "operationId": "DescribeSigningJob"
      }
    },
    "/signing-jobs/{jobId}/revoke": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ID of the signing job to be revoked.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "jobOwner": {
                  "description": "AWS account ID of the job owner.",
                  "maxLength": 12,
                  "minLength": 12,
                  "pattern": "^[0-9]{12}$",
                  "type": "string"
                },
                "reason": {
                  "description": "The reason for revoking the signing job.",
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "reason"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "484": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Changes the state of a signing job to REVOKED. This indicates that the signature is no longer valid.",
        "operationId": "RevokeSignature"
      }
    },
    "/signing-platforms": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The category type of a signing platform.",
            "in": "query",
            "name": "category",
            "required": false,
            "type": "string"
          },
          {
            "description": "Any partner entities connected to a signing platform.",
            "in": "query",
            "name": "partner",
            "required": false,
            "type": "string"
          },
          {
            "description": "The validation template that is used by the target signing platform.",
            "in": "query",
            "name": "target",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to be returned by this operation.",
            "in": "query",
            "maximum": 25,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Value for specifying the next set of paginated results to return. After you receive a response with truncated results, use this parameter in a subsequent request. Set it to the value of <code>nextToken</code> from the response that you just received.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSigningPlatformsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Lists all signing platforms available in code signing that match the request parameters. If additional jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code> parameter and with new values that code signing returns in the <code>nextToken</code> parameter until all of your signing jobs have been returned.",
        "operationId": "ListSigningPlatforms"
      }
    },
    "/signing-platforms/{platformId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the target signing platform.",
            "in": "path",
            "name": "platformId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSigningPlatformResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Returns information on a specific signing platform.",
        "operationId": "GetSigningPlatform"
      }
    },
    "/signing-profiles": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Designates whether to include profiles with the status of <code>CANCELED</code>.",
            "in": "query",
            "name": "includeCanceled",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The maximum number of profiles to be returned.",
            "in": "query",
            "maximum": 25,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Value for specifying the next set of paginated results to return. After you receive a response with truncated results, use this parameter in a subsequent request. Set it to the value of <code>nextToken</code> from the response that you just received.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filters results to return only signing jobs initiated for a specified signing platform.",
            "in": "query",
            "name": "platformId",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filters results to return only signing jobs with statuses in the specified list.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/SigningProfileStatus"
            },
            "name": "statuses",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSigningProfilesResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "482": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Lists all available signing profiles in your AWS account. Returns only profiles with an <code>ACTIVE</code> status unless the <code>includeCanceled</code> request field is set to <code>true</code>. If additional jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code> parameter and with new values that code signing returns in the <code>nextToken</code> parameter until all of your signing jobs have been returned.",
        "operationId": "ListSigningProfiles"
      }
    },
    "/signing-profiles/{profileName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the signing profile to be canceled.",
            "in": "path",
            "maxLength": 64,
            "minLength": 2,
            "name": "profileName",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Changes the state of an <code>ACTIVE</code> signing profile to <code>CANCELED</code>. A canceled profile is still viewable with the <code>ListSigningProfiles</code> operation, but it cannot perform new signing jobs, and is deleted two years after cancelation.",
        "operationId": "CancelSigningProfile"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the target signing profile.",
            "in": "path",
            "maxLength": 64,
            "minLength": 2,
            "name": "profileName",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The AWS account ID of the profile owner.",
            "in": "query",
            "maxLength": 12,
            "minLength": 12,
            "name": "profileOwner",
            "pattern": "^[0-9]{12}$",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSigningProfileResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Returns information on a specific signing profile.",
        "operationId": "GetSigningProfile"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the signing profile to be created.",
            "in": "path",
            "maxLength": 64,
            "minLength": 2,
            "name": "profileName",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "Tags to be associated with the signing profile that is being created.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                },
                "overrides": {
                  "description": "Any overrides that are applied to the signing configuration of a code signing platform.",
                  "properties": {
                    "signingConfiguration": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SigningConfigurationOverrides"
                        },
                        {
                          "description": "A signing configuration that overrides the default encryption or hash algorithm of a signing job."
                        }
                      ]
                    },
                    "signingImageFormat": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ImageFormat"
                        },
                        {
                          "description": "A signed image is a JSON object. When overriding the default signing platform configuration, a customer can select either of two signing formats, <code>JSONEmbedded</code> or <code>JSONDetached</code>. (A third format value, <code>JSON</code>, is reserved for future use.) With <code>JSONEmbedded</code>, the signing image has the payload embedded in it. With <code>JSONDetached</code>, the payload is not be embedded in the signing image."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "platformId": {
                  "description": "The ID of the signing platform to be created.",
                  "type": "string"
                },
                "signatureValidityPeriod": {
                  "description": "The validity period for a signing job.",
                  "properties": {
                    "type": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ValidityType"
                        },
                        {
                          "description": "The time unit for signature validity."
                        }
                      ]
                    },
                    "value": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Integer"
                        },
                        {
                          "description": "The numerical value of the time unit for signature validity."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "signingMaterial": {
                  "description": "The ACM certificate that is used to sign your code.",
                  "properties": {
                    "certificateArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/CertificateArn"
                        },
                        {
                          "description": "The Amazon Resource Name (ARN) of the certificates that is used to sign your code."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "signingParameters": {
                  "additionalProperties": {
                    "$ref": "#/definitions/SigningParameterValue"
                  },
                  "description": "Map of key-value pairs for signing. These can include any information that you want to use during signing.",
                  "type": "object"
                }
              },
              "required": [
                "platformId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutSigningProfileResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "483": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "484": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Creates a signing profile. A signing profile is a code signing template that can be used to carry out a pre-defined signing job. For more information, see <a href=\"http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html\">http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html</a> ",
        "operationId": "PutSigningProfile"
      }
    },
    "/signing-profiles/{profileName}/permissions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Name of the signing profile containing the cross-account permissions.",
            "in": "path",
            "maxLength": 64,
            "minLength": 2,
            "name": "profileName",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "required": true,
            "type": "string"
          },
          {
            "description": "String for specifying the next set of paginated results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListProfilePermissionsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "484": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Lists the cross-account permissions associated with a signing profile.",
        "operationId": "ListProfilePermissions"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The human-readable name of the signing profile.",
            "in": "path",
            "maxLength": 64,
            "minLength": 2,
            "name": "profileName",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "action": {
                  "description": "The AWS Signer action permitted as part of cross-account permissions.",
                  "type": "string"
                },
                "principal": {
                  "description": "The AWS principal receiving cross-account permissions. This may be an IAM role or another AWS account ID.",
                  "type": "string"
                },
                "profileVersion": {
                  "description": "The version of the signing profile.",
                  "maxLength": 10,
                  "minLength": 10,
                  "pattern": "^[a-zA-Z0-9]{10}$",
                  "type": "string"
                },
                "revisionId": {
                  "description": "A unique identifier for the current profile revision.",
                  "type": "string"
                },
                "statementId": {
                  "description": "A unique identifier for the cross-account permission statement.",
                  "type": "string"
                }
              },
              "required": [
                "action",
                "principal",
                "statementId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AddProfilePermissionResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ServiceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceLimitExceededException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "486": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Adds cross-account permissions to a signing profile.",
        "operationId": "AddProfilePermission"
      }
    },
    "/signing-profiles/{profileName}/permissions/{statementId}#revisionId": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A human-readable name for the signing profile with permissions to be removed.",
            "in": "path",
            "maxLength": 64,
            "minLength": 2,
            "name": "profileName",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "required": true,
            "type": "string"
          },
          {
            "description": "An identifier for the current revision of the signing profile permissions.",
            "in": "query",
            "name": "revisionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A unique identifier for the cross-account permissions statement.",
            "in": "path",
            "name": "statementId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RemoveProfilePermissionResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "484": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "485": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Removes cross-account permissions from a signing profile.",
        "operationId": "RemoveProfilePermission"
      }
    },
    "/signing-profiles/{profileName}/revoke": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the signing profile to be revoked.",
            "in": "path",
            "maxLength": 64,
            "minLength": 2,
            "name": "profileName",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "effectiveTime": {
                  "description": "A timestamp for when revocation of a Signing Profile should become effective. Signatures generated using the signing profile after this timestamp are not trusted.",
                  "format": "date-time",
                  "type": "string"
                },
                "profileVersion": {
                  "description": "The version of the signing profile to be revoked.",
                  "maxLength": 10,
                  "minLength": 10,
                  "pattern": "^[a-zA-Z0-9]{10}$",
                  "type": "string"
                },
                "reason": {
                  "description": "The reason for revoking a signing profile.",
                  "maxLength": 500,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "profileVersion",
                "reason",
                "effectiveTime"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "484": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          }
        },
        "description": "Changes the state of a signing profile to REVOKED. This indicates that signatures generated using the signing profile after an effective start date are no longer valid.",
        "operationId": "RevokeSigningProfile"
      }
    },
    "/tags/{resourceArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) for the signing profile.",
            "in": "path",
            "name": "resourceArn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          }
        },
        "description": "Returns a list of the tags associated with a signing profile resource.",
        "operationId": "ListTagsForResource"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) for the signing profile.",
            "in": "path",
            "name": "resourceArn",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "One or more tags to be associated with the signing profile.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceResponse"
            }
          },
          "480": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          }
        },
        "description": "Adds one or more tags to a signing profile. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a key and an optional value. To specify the signing profile, use its Amazon Resource Name (ARN). To specify the tag, use a key-value pair.",
        "operationId": "TagResource"
      }
    },
    "/tags/{resourceArn}#tagKeys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) for the signing profile.",
            "in": "path",
            "name": "resourceArn",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of tag keys to be removed from the signing profile.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/TagKey"
            },
            "maxItems": 200,
            "minItems": 1,
            "name": "tagKeys",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceResponse"
            }
          },
          "480": {
            "description": "InternalServiceErrorException",
            "schema": {
              "$ref": "#/definitions/InternalServiceErrorException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          }
        },
        "description": "Removes one or more tags from a signing profile. To remove the tags, specify a list of tag keys.",
        "operationId": "UntagResource"
      }
    }
  },
  "definitions": {
    "AccessDeniedException": {},
    "AccountId": {
      "maxLength": 12,
      "minLength": 12,
      "pattern": "^[0-9]{12}$",
      "type": "string"
    },
    "AddProfilePermissionRequest": {
      "properties": {
        "action": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The AWS Signer action permitted as part of cross-account permissions."
            }
          ]
        },
        "principal": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The AWS principal receiving cross-account permissions. This may be an IAM role or another AWS account ID."
            }
          ]
        },
        "profileVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileVersion"
            },
            {
              "description": "The version of the signing profile."
            }
          ]
        },
        "revisionId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A unique identifier for the current profile revision."
            }
          ]
        },
        "statementId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A unique identifier for the cross-account permission statement."
            }
          ]
        }
      },
      "required": [
        "action",
        "principal",
        "statementId"
      ],
      "title": "AddProfilePermissionRequest",
      "type": "object"
    },
    "AddProfilePermissionResponse": {
      "properties": {
        "revisionId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A unique identifier for the current profile revision."
            }
          ]
        }
      },
      "type": "object"
    },
    "Arn": {
      "maxLength": 2048,
      "minLength": 20,
      "type": "string"
    },
    "BadRequestException": {},
    "BucketName": {
      "type": "string"
    },
    "CancelSigningProfileRequest": {
      "properties": {},
      "title": "CancelSigningProfileRequest",
      "type": "object"
    },
    "Category": {
      "enum": [
        "AWSIoT"
      ],
      "type": "string"
    },
    "CertificateArn": {
      "type": "string"
    },
    "ClientRequestToken": {
      "type": "string"
    },
    "ConflictException": {},
    "DescribeSigningJobRequest": {
      "properties": {},
      "title": "DescribeSigningJobRequest",
      "type": "object"
    },
    "DescribeSigningJobResponse": {
      "properties": {
        "completedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "Date and time that the signing job was completed."
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "Date and time that the signing job was created."
            }
          ]
        },
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/JobId"
            },
            {
              "description": "The ID of the signing job on output."
            }
          ]
        },
        "jobInvoker": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The IAM entity that initiated the signing job."
            }
          ]
        },
        "jobOwner": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The AWS account ID of the job owner."
            }
          ]
        },
        "overrides": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningPlatformOverrides"
            },
            {
              "description": "A list of any overrides that were applied to the signing operation."
            }
          ]
        },
        "platformDisplayName": {
          "allOf": [
            {
              "$ref": "#/definitions/DisplayName"
            },
            {
              "description": "A human-readable name for the signing platform associated with the signing job."
            }
          ]
        },
        "platformId": {
          "allOf": [
            {
              "$ref": "#/definitions/PlatformId"
            },
            {
              "description": "The microcontroller platform to which your signed code image will be distributed."
            }
          ]
        },
        "profileName": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileName"
            },
            {
              "description": "The name of the profile that initiated the signing operation."
            }
          ]
        },
        "profileVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileVersion"
            },
            {
              "description": "The version of the signing profile used to initiate the signing job."
            }
          ]
        },
        "requestedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/RequestedBy"
            },
            {
              "description": "The IAM principal that requested the signing job."
            }
          ]
        },
        "revocationRecord": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningJobRevocationRecord"
            },
            {
              "description": "A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature."
            }
          ]
        },
        "signatureExpiresAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "Thr expiration timestamp for the signature generated by the signing job."
            }
          ]
        },
        "signedObject": {
          "allOf": [
            {
              "$ref": "#/definitions/SignedObject"
            },
            {
              "description": "Name of the S3 bucket where the signed code image is saved by code signing."
            }
          ]
        },
        "signingMaterial": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningMaterial"
            },
            {
              "description": "The Amazon Resource Name (ARN) of your code signing certificate."
            }
          ]
        },
        "signingParameters": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningParameters"
            },
            {
              "description": "Map of user-assigned key-value pairs used during signing. These values contain any information that you specified for use in your signing job. "
            }
          ]
        },
        "source": {
          "allOf": [
            {
              "$ref": "#/definitions/Source"
            },
            {
              "description": "The object that contains the name of your S3 bucket or your raw code."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningStatus"
            },
            {
              "description": "Status of the signing job."
            }
          ]
        },
        "statusReason": {
          "allOf": [
            {
              "$ref": "#/definitions/StatusReason"
            },
            {
              "description": "String value that contains the status reason."
            }
          ]
        }
      },
      "type": "object"
    },
    "Destination": {
      "description": "Points to an <code>S3Destination</code> object that contains information about your S3 bucket.",
      "properties": {
        "s3": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Destination"
            },
            {
              "description": "The <code>S3Destination</code> object."
            }
          ]
        }
      },
      "type": "object"
    },
    "DisplayName": {
      "type": "string"
    },
    "EncryptionAlgorithm": {
      "enum": [
        "RSA",
        "ECDSA"
      ],
      "type": "string"
    },
    "EncryptionAlgorithmOptions": {
      "description": "The encryption algorithm options that are available to a code signing job.",
      "properties": {
        "allowedValues": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionAlgorithms"
            },
            {
              "description": "The set of accepted encryption algorithms that are allowed in a code signing job."
            }
          ]
        },
        "defaultValue": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionAlgorithm"
            },
            {
              "description": "The default encryption algorithm that is used by a code signing job."
            }
          ]
        }
      },
      "required": [
        "allowedValues",
        "defaultValue"
      ],
      "type": "object"
    },
    "EncryptionAlgorithms": {
      "items": {
        "$ref": "#/definitions/EncryptionAlgorithm"
      },
      "type": "array"
    },
    "GetSigningPlatformRequest": {
      "properties": {},
      "title": "GetSigningPlatformRequest",
      "type": "object"
    },
    "GetSigningPlatformResponse": {
      "properties": {
        "category": {
          "allOf": [
            {
              "$ref": "#/definitions/Category"
            },
            {
              "description": "The category type of the target signing platform."
            }
          ]
        },
        "displayName": {
          "allOf": [
            {
              "$ref": "#/definitions/DisplayName"
            },
            {
              "description": "The display name of the target signing platform."
            }
          ]
        },
        "maxSizeInMB": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxSizeInMB"
            },
            {
              "description": "The maximum size (in MB) of the payload that can be signed by the target platform."
            }
          ]
        },
        "partner": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A list of partner entities that use the target signing platform."
            }
          ]
        },
        "platformId": {
          "allOf": [
            {
              "$ref": "#/definitions/PlatformId"
            },
            {
              "description": "The ID of the target signing platform."
            }
          ]
        },
        "revocationSupported": {
          "allOf": [
            {
              "$ref": "#/definitions/bool"
            },
            {
              "description": "A flag indicating whether signatures generated for the signing platform can be revoked."
            }
          ]
        },
        "signingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningConfiguration"
            },
            {
              "description": "A list of configurations applied to the target platform at signing."
            }
          ]
        },
        "signingImageFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningImageFormat"
            },
            {
              "description": "The format of the target platform's signing image."
            }
          ]
        },
        "target": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The validation template that is used by the target signing platform."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetSigningProfileRequest": {
      "properties": {},
      "title": "GetSigningProfileRequest",
      "type": "object"
    },
    "GetSigningProfileResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A list of tags associated with the signing profile."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/string"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the signing profile."
            }
          ]
        },
        "overrides": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningPlatformOverrides"
            },
            {
              "description": "A list of overrides applied by the target signing profile for signing operations."
            }
          ]
        },
        "platformDisplayName": {
          "allOf": [
            {
              "$ref": "#/definitions/DisplayName"
            },
            {
              "description": "A human-readable name for the signing platform associated with the signing profile."
            }
          ]
        },
        "platformId": {
          "allOf": [
            {
              "$ref": "#/definitions/PlatformId"
            },
            {
              "description": "The ID of the platform that is used by the target signing profile."
            }
          ]
        },
        "profileName": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileName"
            },
            {
              "description": "The name of the target signing profile."
            }
          ]
        },
        "profileVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileVersion"
            },
            {
              "description": "The current version of the signing profile."
            }
          ]
        },
        "profileVersionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The signing profile ARN, including the profile version."
            }
          ]
        },
        "revocationRecord": {
          "$ref": "#/definitions/SigningProfileRevocationRecord"
        },
        "signatureValidityPeriod": {
          "$ref": "#/definitions/SignatureValidityPeriod"
        },
        "signingMaterial": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningMaterial"
            },
            {
              "description": "The ARN of the certificate that the target profile uses for signing operations."
            }
          ]
        },
        "signingParameters": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningParameters"
            },
            {
              "description": "A map of key-value pairs for signing operations that is attached to the target signing profile."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningProfileStatus"
            },
            {
              "description": "The status of the target signing profile."
            }
          ]
        },
        "statusReason": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Reason for the status of the target signing profile."
            }
          ]
        }
      },
      "type": "object"
    },
    "HashAlgorithm": {
      "enum": [
        "SHA1",
        "SHA256"
      ],
      "type": "string"
    },
    "HashAlgorithmOptions": {
      "description": "The hash algorithms that are available to a code signing job.",
      "properties": {
        "allowedValues": {
          "allOf": [
            {
              "$ref": "#/definitions/HashAlgorithms"
            },
            {
              "description": "The set of accepted hash algorithms allowed in a code signing job."
            }
          ]
        },
        "defaultValue": {
          "allOf": [
            {
              "$ref": "#/definitions/HashAlgorithm"
            },
            {
              "description": "The default hash algorithm that is used in a code signing job."
            }
          ]
        }
      },
      "required": [
        "allowedValues",
        "defaultValue"
      ],
      "type": "object"
    },
    "HashAlgorithms": {
      "items": {
        "$ref": "#/definitions/HashAlgorithm"
      },
      "type": "array"
    },
    "ImageFormat": {
      "enum": [
        "JSON",
        "JSONEmbedded",
        "JSONDetached"
      ],
      "type": "string"
    },
    "ImageFormats": {
      "items": {
        "$ref": "#/definitions/ImageFormat"
      },
      "type": "array"
    },
    "Integer": {
      "type": "integer"
    },
    "InternalServiceErrorException": {},
    "JobId": {
      "type": "string"
    },
    "Key": {
      "type": "string"
    },
    "ListProfilePermissionsRequest": {
      "properties": {},
      "title": "ListProfilePermissionsRequest",
      "type": "object"
    },
    "ListProfilePermissionsResponse": {
      "properties": {
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "String for specifying the next set of paginated results."
            }
          ]
        },
        "permissions": {
          "allOf": [
            {
              "$ref": "#/definitions/Permissions"
            },
            {
              "description": "List of permissions associated with the Signing Profile."
            }
          ]
        },
        "policySizeBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicySizeBytes"
            },
            {
              "description": "Total size of the policy associated with the Signing Profile in bytes."
            }
          ]
        },
        "revisionId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The identifier for the current revision of profile permissions."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListSigningJobsRequest": {
      "properties": {},
      "title": "ListSigningJobsRequest",
      "type": "object"
    },
    "ListSigningJobsResponse": {
      "properties": {
        "jobs": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningJobs"
            },
            {
              "description": "A list of your signing jobs."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "String for specifying the next set of paginated results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListSigningPlatformsRequest": {
      "properties": {},
      "title": "ListSigningPlatformsRequest",
      "type": "object"
    },
    "ListSigningPlatformsResponse": {
      "properties": {
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Value for specifying the next set of paginated results to return."
            }
          ]
        },
        "platforms": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningPlatforms"
            },
            {
              "description": "A list of all platforms that match the request parameters."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListSigningProfilesRequest": {
      "properties": {},
      "title": "ListSigningProfilesRequest",
      "type": "object"
    },
    "ListSigningProfilesResponse": {
      "properties": {
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "Value for specifying the next set of paginated results to return."
            }
          ]
        },
        "profiles": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningProfiles"
            },
            {
              "description": "A list of profiles that are available in the AWS account. This includes profiles with the status of <code>CANCELED</code> if the <code>includeCanceled</code> parameter is set to <code>true</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "properties": {},
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A list of tags associated with the signing profile."
            }
          ]
        }
      },
      "type": "object"
    },
    "MaxResults": {
      "maximum": 25,
      "minimum": 1,
      "type": "integer"
    },
    "MaxSizeInMB": {
      "type": "integer"
    },
    "NextToken": {
      "type": "string"
    },
    "NotFoundException": {},
    "Permission": {
      "description": "A cross-account permission for a signing profile.",
      "properties": {
        "action": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "An AWS Signer action permitted as part of cross-account permissions."
            }
          ]
        },
        "principal": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The AWS principal that has been granted a cross-account permission."
            }
          ]
        },
        "profileVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileVersion"
            },
            {
              "description": "The signing profile version that a permission applies to."
            }
          ]
        },
        "statementId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A unique identifier for a cross-account permission statement."
            }
          ]
        }
      },
      "type": "object"
    },
    "Permissions": {
      "items": {
        "$ref": "#/definitions/Permission"
      },
      "type": "array"
    },
    "PlatformId": {
      "type": "string"
    },
    "PolicySizeBytes": {
      "type": "integer"
    },
    "Prefix": {
      "type": "string"
    },
    "ProfileName": {
      "maxLength": 64,
      "minLength": 2,
      "pattern": "^[a-zA-Z0-9_]{2,}",
      "type": "string"
    },
    "ProfileVersion": {
      "maxLength": 10,
      "minLength": 10,
      "pattern": "^[a-zA-Z0-9]{10}$",
      "type": "string"
    },
    "PutSigningProfileRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Tags to be associated with the signing profile that is being created."
            }
          ]
        },
        "overrides": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningPlatformOverrides"
            },
            {
              "description": "A subfield of <code>platform</code>. This specifies any different configuration options that you want to apply to the chosen platform (such as a different <code>hash-algorithm</code> or <code>signing-algorithm</code>)."
            }
          ]
        },
        "platformId": {
          "allOf": [
            {
              "$ref": "#/definitions/PlatformId"
            },
            {
              "description": "The ID of the signing platform to be created."
            }
          ]
        },
        "signatureValidityPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/SignatureValidityPeriod"
            },
            {
              "description": "The default validity period override for any signature generated using this signing profile. If unspecified, the default is 135 months."
            }
          ]
        },
        "signingMaterial": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningMaterial"
            },
            {
              "description": "The AWS Certificate Manager certificate that will be used to sign code with the new signing profile."
            }
          ]
        },
        "signingParameters": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningParameters"
            },
            {
              "description": "Map of key-value pairs for signing. These can include any information that you want to use during signing."
            }
          ]
        }
      },
      "required": [
        "platformId"
      ],
      "title": "PutSigningProfileRequest",
      "type": "object"
    },
    "PutSigningProfileResponse": {
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the signing profile created."
            }
          ]
        },
        "profileVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileVersion"
            },
            {
              "description": "The version of the signing profile being created."
            }
          ]
        },
        "profileVersionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The signing profile ARN, including the profile version."
            }
          ]
        }
      },
      "type": "object"
    },
    "RemoveProfilePermissionRequest": {
      "properties": {},
      "title": "RemoveProfilePermissionRequest",
      "type": "object"
    },
    "RemoveProfilePermissionResponse": {
      "properties": {
        "revisionId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "An identifier for the current revision of the profile permissions."
            }
          ]
        }
      },
      "type": "object"
    },
    "RequestedBy": {
      "type": "string"
    },
    "ResourceNotFoundException": {},
    "RevocationReasonString": {
      "maxLength": 500,
      "minLength": 1,
      "type": "string"
    },
    "RevokeSignatureRequest": {
      "properties": {
        "jobOwner": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "AWS account ID of the job owner."
            }
          ]
        },
        "reason": {
          "allOf": [
            {
              "$ref": "#/definitions/RevocationReasonString"
            },
            {
              "description": "The reason for revoking the signing job."
            }
          ]
        }
      },
      "required": [
        "reason"
      ],
      "title": "RevokeSignatureRequest",
      "type": "object"
    },
    "RevokeSigningProfileRequest": {
      "properties": {
        "effectiveTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "A timestamp for when revocation of a Signing Profile should become effective. Signatures generated using the signing profile after this timestamp are not trusted."
            }
          ]
        },
        "profileVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileVersion"
            },
            {
              "description": "The version of the signing profile to be revoked."
            }
          ]
        },
        "reason": {
          "allOf": [
            {
              "$ref": "#/definitions/RevocationReasonString"
            },
            {
              "description": "The reason for revoking a signing profile."
            }
          ]
        }
      },
      "required": [
        "profileVersion",
        "reason",
        "effectiveTime"
      ],
      "title": "RevokeSigningProfileRequest",
      "type": "object"
    },
    "S3Destination": {
      "description": "The name and prefix of the S3 bucket where code signing saves your signed objects.",
      "properties": {
        "bucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketName"
            },
            {
              "description": "Name of the S3 bucket."
            }
          ]
        },
        "prefix": {
          "allOf": [
            {
              "$ref": "#/definitions/Prefix"
            },
            {
              "description": "An Amazon S3 prefix that you can use to limit responses to those that begin with the specified prefix."
            }
          ]
        }
      },
      "type": "object"
    },
    "S3SignedObject": {
      "description": "The S3 bucket name and key where code signing saved your signed code image.",
      "properties": {
        "bucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketName"
            },
            {
              "description": "Name of the S3 bucket."
            }
          ]
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/Key"
            },
            {
              "description": "Key name that uniquely identifies a signed code image in your bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "S3Source": {
      "description": "Information about the S3 bucket where you saved your unsigned code.",
      "properties": {
        "bucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketName"
            },
            {
              "description": "Name of the S3 bucket."
            }
          ]
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/Key"
            },
            {
              "description": "Key name of the bucket object that contains your unsigned code."
            }
          ]
        },
        "version": {
          "allOf": [
            {
              "$ref": "#/definitions/Version"
            },
            {
              "description": "Version of your source image in your version enabled S3 bucket."
            }
          ]
        }
      },
      "required": [
        "bucketName",
        "key",
        "version"
      ],
      "type": "object"
    },
    "ServiceLimitExceededException": {},
    "SignatureValidityPeriod": {
      "description": "The validity period for a signing job.",
      "properties": {
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidityType"
            },
            {
              "description": "The time unit for signature validity."
            }
          ]
        },
        "value": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The numerical value of the time unit for signature validity."
            }
          ]
        }
      },
      "type": "object"
    },
    "SignedObject": {
      "description": "Points to an <code>S3SignedObject</code> object that contains information about your signed code image.",
      "properties": {
        "s3": {
          "allOf": [
            {
              "$ref": "#/definitions/S3SignedObject"
            },
            {
              "description": "The <code>S3SignedObject</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "SigningConfiguration": {
      "description": "The configuration of a code signing operation.",
      "properties": {
        "encryptionAlgorithmOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionAlgorithmOptions"
            },
            {
              "description": "The encryption algorithm options that are available for a code signing job."
            }
          ]
        },
        "hashAlgorithmOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/HashAlgorithmOptions"
            },
            {
              "description": "The hash algorithm options that are available for a code signing job."
            }
          ]
        }
      },
      "required": [
        "encryptionAlgorithmOptions",
        "hashAlgorithmOptions"
      ],
      "type": "object"
    },
    "SigningConfigurationOverrides": {
      "description": "A signing configuration that overrides the default encryption or hash algorithm of a signing job.",
      "properties": {
        "encryptionAlgorithm": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionAlgorithm"
            },
            {
              "description": "A specified override of the default encryption algorithm that is used in a code signing job."
            }
          ]
        },
        "hashAlgorithm": {
          "allOf": [
            {
              "$ref": "#/definitions/HashAlgorithm"
            },
            {
              "description": "A specified override of the default hash algorithm that is used in a code signing job."
            }
          ]
        }
      },
      "type": "object"
    },
    "SigningImageFormat": {
      "description": "The image format of a code signing platform or profile.",
      "properties": {
        "defaultFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/ImageFormat"
            },
            {
              "description": "The default format of a code signing image."
            }
          ]
        },
        "supportedFormats": {
          "allOf": [
            {
              "$ref": "#/definitions/ImageFormats"
            },
            {
              "description": "The supported formats of a code signing image."
            }
          ]
        }
      },
      "required": [
        "supportedFormats",
        "defaultFormat"
      ],
      "type": "object"
    },
    "SigningJob": {
      "description": "Contains information about a signing job.",
      "properties": {
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date and time that the signing job was created."
            }
          ]
        },
        "isRevoked": {
          "allOf": [
            {
              "$ref": "#/definitions/bool"
            },
            {
              "description": "Indicates whether the signing job is revoked."
            }
          ]
        },
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/JobId"
            },
            {
              "description": "The ID of the signing job."
            }
          ]
        },
        "jobInvoker": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The AWS account ID of the job invoker."
            }
          ]
        },
        "jobOwner": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The AWS account ID of the job owner."
            }
          ]
        },
        "platformDisplayName": {
          "allOf": [
            {
              "$ref": "#/definitions/DisplayName"
            },
            {
              "description": "The name of a signing platform."
            }
          ]
        },
        "platformId": {
          "allOf": [
            {
              "$ref": "#/definitions/PlatformId"
            },
            {
              "description": "The unique identifier for a signing platform."
            }
          ]
        },
        "profileName": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileName"
            },
            {
              "description": "The name of the signing profile that created a signing job."
            }
          ]
        },
        "profileVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileVersion"
            },
            {
              "description": "The version of the signing profile that created a signing job."
            }
          ]
        },
        "signatureExpiresAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time when the signature of a signing job expires."
            }
          ]
        },
        "signedObject": {
          "allOf": [
            {
              "$ref": "#/definitions/SignedObject"
            },
            {
              "description": "A <code>SignedObject</code> structure that contains information about a signing job's signed code image."
            }
          ]
        },
        "signingMaterial": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningMaterial"
            },
            {
              "description": "A <code>SigningMaterial</code> object that contains the Amazon Resource Name (ARN) of the certificate used for the signing job."
            }
          ]
        },
        "source": {
          "allOf": [
            {
              "$ref": "#/definitions/Source"
            },
            {
              "description": "A <code>Source</code> that contains information about a signing job's code image source."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningStatus"
            },
            {
              "description": "The status of the signing job."
            }
          ]
        }
      },
      "type": "object"
    },
    "SigningJobRevocationRecord": {
      "description": "Revocation information for a signing job.",
      "properties": {
        "reason": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A caller-supplied reason for revocation."
            }
          ]
        },
        "revokedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time of revocation."
            }
          ]
        },
        "revokedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The identity of the revoker."
            }
          ]
        }
      },
      "type": "object"
    },
    "SigningJobs": {
      "items": {
        "$ref": "#/definitions/SigningJob"
      },
      "type": "array"
    },
    "SigningMaterial": {
      "description": "The ACM certificate that is used to sign your code.",
      "properties": {
        "certificateArn": {
          "allOf": [
            {
              "$ref": "#/definitions/CertificateArn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the certificates that is used to sign your code."
            }
          ]
        }
      },
      "required": [
        "certificateArn"
      ],
      "type": "object"
    },
    "SigningParameterKey": {
      "type": "string"
    },
    "SigningParameterValue": {
      "type": "string"
    },
    "SigningParameters": {
      "additionalProperties": {
        "$ref": "#/definitions/SigningParameterValue"
      },
      "type": "object"
    },
    "SigningPlatform": {
      "description": "Contains information about the signing configurations and parameters that are used to perform a code signing job.",
      "properties": {
        "category": {
          "allOf": [
            {
              "$ref": "#/definitions/Category"
            },
            {
              "description": "The category of a code signing platform."
            }
          ]
        },
        "displayName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The display name of a code signing platform."
            }
          ]
        },
        "maxSizeInMB": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxSizeInMB"
            },
            {
              "description": "The maximum size (in MB) of code that can be signed by a code signing platform."
            }
          ]
        },
        "partner": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Any partner entities linked to a code signing platform."
            }
          ]
        },
        "platformId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The ID of a code signing; platform."
            }
          ]
        },
        "revocationSupported": {
          "allOf": [
            {
              "$ref": "#/definitions/bool"
            },
            {
              "description": "Indicates whether revocation is supported for the platform."
            }
          ]
        },
        "signingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningConfiguration"
            },
            {
              "description": "The configuration of a code signing platform. This includes the designated hash algorithm and encryption algorithm of a signing platform."
            }
          ]
        },
        "signingImageFormat": {
          "$ref": "#/definitions/SigningImageFormat"
        },
        "target": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The types of targets that can be signed by a code signing platform."
            }
          ]
        }
      },
      "type": "object"
    },
    "SigningPlatformOverrides": {
      "description": "Any overrides that are applied to the signing configuration of a code signing platform.",
      "properties": {
        "signingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningConfigurationOverrides"
            },
            {
              "description": "A signing configuration that overrides the default encryption or hash algorithm of a signing job."
            }
          ]
        },
        "signingImageFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/ImageFormat"
            },
            {
              "description": "A signed image is a JSON object. When overriding the default signing platform configuration, a customer can select either of two signing formats, <code>JSONEmbedded</code> or <code>JSONDetached</code>. (A third format value, <code>JSON</code>, is reserved for future use.) With <code>JSONEmbedded</code>, the signing image has the payload embedded in it. With <code>JSONDetached</code>, the payload is not be embedded in the signing image."
            }
          ]
        }
      },
      "type": "object"
    },
    "SigningPlatforms": {
      "items": {
        "$ref": "#/definitions/SigningPlatform"
      },
      "type": "array"
    },
    "SigningProfile": {
      "description": "Contains information about the ACM certificates and code signing configuration parameters that can be used by a given code signing user.",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A list of tags associated with the signing profile."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/string"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the signing profile."
            }
          ]
        },
        "platformDisplayName": {
          "allOf": [
            {
              "$ref": "#/definitions/DisplayName"
            },
            {
              "description": "The name of the signing platform."
            }
          ]
        },
        "platformId": {
          "allOf": [
            {
              "$ref": "#/definitions/PlatformId"
            },
            {
              "description": "The ID of a platform that is available for use by a signing profile."
            }
          ]
        },
        "profileName": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileName"
            },
            {
              "description": "The name of the signing profile."
            }
          ]
        },
        "profileVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileVersion"
            },
            {
              "description": "The version of a signing profile."
            }
          ]
        },
        "profileVersionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of a signing profile, including the profile version."
            }
          ]
        },
        "signatureValidityPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/SignatureValidityPeriod"
            },
            {
              "description": "The validity period for a signing job created using this signing profile."
            }
          ]
        },
        "signingMaterial": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningMaterial"
            },
            {
              "description": "The ACM certificate that is available for use by a signing profile."
            }
          ]
        },
        "signingParameters": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningParameters"
            },
            {
              "description": "The parameters that are available for use by a code signing user."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/SigningProfileStatus"
            },
            {
              "description": "The status of a code signing profile."
            }
          ]
        }
      },
      "type": "object"
    },
    "SigningProfileRevocationRecord": {
      "description": "Revocation information for a signing profile.",
      "properties": {
        "revocationEffectiveFrom": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time when revocation becomes effective."
            }
          ]
        },
        "revokedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time when the signing profile was revoked."
            }
          ]
        },
        "revokedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The identity of the revoker."
            }
          ]
        }
      },
      "type": "object"
    },
    "SigningProfileStatus": {
      "enum": [
        "Active",
        "Canceled",
        "Revoked"
      ],
      "type": "string"
    },
    "SigningProfiles": {
      "items": {
        "$ref": "#/definitions/SigningProfile"
      },
      "type": "array"
    },
    "SigningStatus": {
      "enum": [
        "InProgress",
        "Failed",
        "Succeeded"
      ],
      "type": "string"
    },
    "Source": {
      "description": "An <code>S3Source</code> object that contains information about the S3 bucket where you saved your unsigned code.",
      "properties": {
        "s3": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Source"
            },
            {
              "description": "The <code>S3Source</code> object."
            }
          ]
        }
      },
      "type": "object"
    },
    "StartSigningJobRequest": {
      "properties": {
        "clientRequestToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientRequestToken"
            },
            {
              "description": "String that identifies the signing request. All calls after the first that use this token return the same response as the first call."
            }
          ]
        },
        "destination": {
          "allOf": [
            {
              "$ref": "#/definitions/Destination"
            },
            {
              "description": "The S3 bucket in which to save your signed object. The destination contains the name of your bucket and an optional prefix."
            }
          ]
        },
        "profileName": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileName"
            },
            {
              "description": "The name of the signing profile."
            }
          ]
        },
        "profileOwner": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The AWS account ID of the signing profile owner."
            }
          ]
        },
        "source": {
          "allOf": [
            {
              "$ref": "#/definitions/Source"
            },
            {
              "description": "The S3 bucket that contains the object to sign or a BLOB that contains your raw code."
            }
          ]
        }
      },
      "required": [
        "source",
        "destination",
        "profileName",
        "clientRequestToken"
      ],
      "title": "StartSigningJobRequest",
      "type": "object"
    },
    "StartSigningJobResponse": {
      "properties": {
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/JobId"
            },
            {
              "description": "The ID of your signing job."
            }
          ]
        },
        "jobOwner": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The AWS account ID of the signing job owner."
            }
          ]
        }
      },
      "type": "object"
    },
    "StatusReason": {
      "type": "string"
    },
    "Statuses": {
      "items": {
        "$ref": "#/definitions/SigningProfileStatus"
      },
      "type": "array"
    },
    "String": {
      "type": "string"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 200,
      "minItems": 1,
      "type": "array"
    },
    "TagMap": {
      "additionalProperties": {
        "$ref": "#/definitions/TagValue"
      },
      "maxProperties": 200,
      "minProperties": 1,
      "type": "object"
    },
    "TagResourceRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "One or more tags to be associated with the signing profile."
            }
          ]
        }
      },
      "required": [
        "tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "TagValue": {
      "maxLength": 256,
      "type": "string"
    },
    "ThrottlingException": {},
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "TooManyRequestsException": {},
    "UntagResourceRequest": {
      "properties": {},
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UntagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "ValidationException": {},
    "ValidityType": {
      "enum": [
        "DAYS",
        "MONTHS",
        "YEARS"
      ],
      "type": "string"
    },
    "Version": {
      "type": "string"
    },
    "bool": {
      "type": "boolean"
    },
    "string": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/signer/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}