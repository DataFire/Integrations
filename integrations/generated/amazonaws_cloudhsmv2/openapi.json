{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "For more information about AWS CloudHSM, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a> and the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>.",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS CloudHSM V2",
    "version": "2017-04-28",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cloudhsmv2-2017-04-28.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "cloudhsmv2",
    "x-datafire": {
      "name": "amazonaws_cloudhsmv2",
      "type": "openapi"
    }
  },
  "host": "cloudhsmv2.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/#X-Amz-Target=BaldrApiService.CopyBackupToRegion": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.CopyBackupToRegion"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyBackupToRegionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CopyBackupToRegionResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          },
          "485": {
            "description": "CloudHsmTagException",
            "schema": {
              "$ref": "#/definitions/CloudHsmTagException"
            }
          }
        },
        "description": "Copy an AWS CloudHSM cluster backup to a different region.",
        "operationId": "CopyBackupToRegion"
      }
    },
    "/#X-Amz-Target=BaldrApiService.CreateCluster": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.CreateCluster"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateClusterResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          },
          "485": {
            "description": "CloudHsmTagException",
            "schema": {
              "$ref": "#/definitions/CloudHsmTagException"
            }
          }
        },
        "description": "Creates a new AWS CloudHSM cluster.",
        "operationId": "CreateCluster"
      }
    },
    "/#X-Amz-Target=BaldrApiService.CreateHsm": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.CreateHsm"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateHsmRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateHsmResponse"
            }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          }
        },
        "description": "Creates a new hardware security module (HSM) in the specified AWS CloudHSM cluster.",
        "operationId": "CreateHsm"
      }
    },
    "/#X-Amz-Target=BaldrApiService.DeleteBackup": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.DeleteBackup"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteBackupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBackupResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          }
        },
        "description": "Deletes a specified AWS CloudHSM backup. A backup can be restored up to 7 days after the DeleteBackup request is made. For more information on restoring a backup, see <a>RestoreBackup</a>.",
        "operationId": "DeleteBackup"
      }
    },
    "/#X-Amz-Target=BaldrApiService.DeleteCluster": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.DeleteCluster"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteClusterResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          },
          "485": {
            "description": "CloudHsmTagException",
            "schema": {
              "$ref": "#/definitions/CloudHsmTagException"
            }
          }
        },
        "description": "Deletes the specified AWS CloudHSM cluster. Before you can delete a cluster, you must delete all HSMs in the cluster. To see if the cluster contains any HSMs, use <a>DescribeClusters</a>. To delete an HSM, use <a>DeleteHsm</a>.",
        "operationId": "DeleteCluster"
      }
    },
    "/#X-Amz-Target=BaldrApiService.DeleteHsm": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.DeleteHsm"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteHsmRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteHsmResponse"
            }
          },
          "480": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "481": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          },
          "482": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "483": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "484": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          }
        },
        "description": "Deletes the specified HSM. To specify an HSM, you can use its identifier (ID), the IP address of the HSM's elastic network interface (ENI), or the ID of the HSM's ENI. You need to specify only one of these values. To find these values, use <a>DescribeClusters</a>.",
        "operationId": "DeleteHsm"
      }
    },
    "/#X-Amz-Target=BaldrApiService.DescribeBackups": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "BaldrApiService.DescribeBackups"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeBackupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeBackupsResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          },
          "485": {
            "description": "CloudHsmTagException",
            "schema": {
              "$ref": "#/definitions/CloudHsmTagException"
            }
          }
        },
        "description": "<p>Gets information about backups of AWS CloudHSM clusters.</p> <p>This is a paginated operation, which means that each response might contain only a subset of all the backups. When the response contains only a subset of backups, it includes a <code>NextToken</code> value. Use this value in a subsequent <code>DescribeBackups</code> request to get more backups. When you receive a response with no <code>NextToken</code> (or an empty or null value), that means there are no more backups to get.</p>",
        "operationId": "DescribeBackups"
      }
    },
    "/#X-Amz-Target=BaldrApiService.DescribeClusters": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "BaldrApiService.DescribeClusters"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeClustersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeClustersResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          },
          "484": {
            "description": "CloudHsmTagException",
            "schema": {
              "$ref": "#/definitions/CloudHsmTagException"
            }
          }
        },
        "description": "<p>Gets information about AWS CloudHSM clusters.</p> <p>This is a paginated operation, which means that each response might contain only a subset of all the clusters. When the response contains only a subset of clusters, it includes a <code>NextToken</code> value. Use this value in a subsequent <code>DescribeClusters</code> request to get more clusters. When you receive a response with no <code>NextToken</code> (or an empty or null value), that means there are no more clusters to get.</p>",
        "operationId": "DescribeClusters"
      }
    },
    "/#X-Amz-Target=BaldrApiService.InitializeCluster": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.InitializeCluster"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InitializeClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InitializeClusterResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          }
        },
        "description": "Claims an AWS CloudHSM cluster by submitting the cluster certificate issued by your issuing certificate authority (CA) and the CA's root certificate. Before you can claim a cluster, you must sign the cluster's certificate signing request (CSR) with your issuing CA. To get the cluster's CSR, use <a>DescribeClusters</a>.",
        "operationId": "InitializeCluster"
      }
    },
    "/#X-Amz-Target=BaldrApiService.ListTags": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "BaldrApiService.ListTags"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          },
          "485": {
            "description": "CloudHsmTagException",
            "schema": {
              "$ref": "#/definitions/CloudHsmTagException"
            }
          }
        },
        "description": "<p>Gets a list of tags for the specified AWS CloudHSM cluster.</p> <p>This is a paginated operation, which means that each response might contain only a subset of all the tags. When the response contains only a subset of tags, it includes a <code>NextToken</code> value. Use this value in a subsequent <code>ListTags</code> request to get more tags. When you receive a response with no <code>NextToken</code> (or an empty or null value), that means there are no more tags to get.</p>",
        "operationId": "ListTags"
      }
    },
    "/#X-Amz-Target=BaldrApiService.ModifyBackupAttributes": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.ModifyBackupAttributes"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyBackupAttributesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyBackupAttributesResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          }
        },
        "description": "Modifies attributes for AWS CloudHSM backup.",
        "operationId": "ModifyBackupAttributes"
      }
    },
    "/#X-Amz-Target=BaldrApiService.ModifyCluster": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.ModifyCluster"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyClusterResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          }
        },
        "description": "Modifies AWS CloudHSM cluster.",
        "operationId": "ModifyCluster"
      }
    },
    "/#X-Amz-Target=BaldrApiService.RestoreBackup": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.RestoreBackup"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreBackupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RestoreBackupResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          }
        },
        "description": "Restores a specified AWS CloudHSM backup that is in the <code>PENDING_DELETION</code> state. For mor information on deleting a backup, see <a>DeleteBackup</a>.",
        "operationId": "RestoreBackup"
      }
    },
    "/#X-Amz-Target=BaldrApiService.TagResource": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.TagResource"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagResourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          },
          "485": {
            "description": "CloudHsmTagException",
            "schema": {
              "$ref": "#/definitions/CloudHsmTagException"
            }
          }
        },
        "description": "Adds or overwrites one or more tags for the specified AWS CloudHSM cluster.",
        "operationId": "TagResource"
      }
    },
    "/#X-Amz-Target=BaldrApiService.UntagResource": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "BaldrApiService.UntagResource"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UntagResourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceResponse"
            }
          },
          "480": {
            "description": "CloudHsmAccessDeniedException",
            "schema": {
              "$ref": "#/definitions/CloudHsmAccessDeniedException"
            }
          },
          "481": {
            "description": "CloudHsmInternalFailureException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInternalFailureException"
            }
          },
          "482": {
            "description": "CloudHsmInvalidRequestException",
            "schema": {
              "$ref": "#/definitions/CloudHsmInvalidRequestException"
            }
          },
          "483": {
            "description": "CloudHsmResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/CloudHsmResourceNotFoundException"
            }
          },
          "484": {
            "description": "CloudHsmServiceException",
            "schema": {
              "$ref": "#/definitions/CloudHsmServiceException"
            }
          },
          "485": {
            "description": "CloudHsmTagException",
            "schema": {
              "$ref": "#/definitions/CloudHsmTagException"
            }
          }
        },
        "description": "Removes the specified tag or tags from the specified AWS CloudHSM cluster.",
        "operationId": "UntagResource"
      }
    }
  },
  "definitions": {
    "Backup": {
      "description": "Contains information about a backup of an AWS CloudHSM cluster. All backup objects contain the <code>BackupId</code>, <code>BackupState</code>, <code>ClusterId</code>, and <code>CreateTimestamp</code> parameters. Backups that were copied into a destination region additionally contain the <code>CopyTimestamp</code>, <code>SourceBackup</code>, <code>SourceCluster</code>, and <code>SourceRegion</code> parameters. A backup that is pending deletion will include the <code>DeleteTimestamp</code> parameter.",
      "properties": {
        "BackupId": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupId"
            },
            {
              "description": "The identifier (ID) of the backup."
            }
          ]
        },
        "BackupState": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupState"
            },
            {
              "description": "The state of the backup."
            }
          ]
        },
        "ClusterId": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterId"
            },
            {
              "description": "The identifier (ID) of the cluster that was backed up."
            }
          ]
        },
        "CopyTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date and time when the backup was copied from a source backup."
            }
          ]
        },
        "CreateTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date and time when the backup was created."
            }
          ]
        },
        "DeleteTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date and time when the backup will be permanently deleted."
            }
          ]
        },
        "NeverExpires": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies whether the service should exempt a backup from the retention policy for the cluster. <code>True</code> exempts a backup from the retention policy. <code>False</code> means the service applies the backup retention policy defined at the cluster."
            }
          ]
        },
        "SourceBackup": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupId"
            },
            {
              "description": "The identifier (ID) of the source backup from which the new backup was copied."
            }
          ]
        },
        "SourceCluster": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterId"
            },
            {
              "description": "The identifier (ID) of the cluster containing the source backup from which the new backup was copied."
            }
          ]
        },
        "SourceRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/Region"
            },
            {
              "description": "The AWS Region that contains the source backup from which the new backup was copied."
            }
          ]
        },
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The list of tags for the backup."
            }
          ]
        }
      },
      "required": [
        "BackupId"
      ],
      "type": "object"
    },
    "BackupId": {
      "pattern": "backup-[2-7a-zA-Z]{11,16}",
      "type": "string"
    },
    "BackupPolicy": {
      "enum": [
        "DEFAULT"
      ],
      "type": "string"
    },
    "BackupRetentionPolicy": {
      "description": "A policy that defines the number of days to retain backups.",
      "properties": {
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupRetentionType"
            },
            {
              "description": "The type of backup retention policy. For the <code>DAYS</code> type, the value is the number of days to retain backups."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupRetentionValue"
            },
            {
              "description": "Use a value between 7 - 379."
            }
          ]
        }
      },
      "type": "object"
    },
    "BackupRetentionType": {
      "enum": [
        "DAYS"
      ],
      "type": "string"
    },
    "BackupRetentionValue": {
      "maxLength": 3,
      "minLength": 1,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "BackupState": {
      "enum": [
        "CREATE_IN_PROGRESS",
        "READY",
        "DELETED",
        "PENDING_DELETION"
      ],
      "type": "string"
    },
    "Backups": {
      "items": {
        "$ref": "#/definitions/Backup"
      },
      "type": "array"
    },
    "BackupsMaxSize": {
      "maximum": 50,
      "minimum": 1,
      "type": "integer"
    },
    "Boolean": {
      "type": "boolean"
    },
    "Cert": {
      "maxLength": 5000,
      "pattern": "[a-zA-Z0-9+-/=\\s]*",
      "type": "string"
    },
    "Certificates": {
      "description": "Contains one or more certificates or a certificate signing request (CSR).",
      "properties": {
        "AwsHardwareCertificate": {
          "allOf": [
            {
              "$ref": "#/definitions/Cert"
            },
            {
              "description": "The HSM hardware certificate issued (signed) by AWS CloudHSM."
            }
          ]
        },
        "ClusterCertificate": {
          "allOf": [
            {
              "$ref": "#/definitions/Cert"
            },
            {
              "description": "The cluster certificate issued (signed) by the issuing certificate authority (CA) of the cluster's owner."
            }
          ]
        },
        "ClusterCsr": {
          "allOf": [
            {
              "$ref": "#/definitions/Cert"
            },
            {
              "description": "The cluster's certificate signing request (CSR). The CSR exists only when the cluster's state is <code>UNINITIALIZED</code>."
            }
          ]
        },
        "HsmCertificate": {
          "allOf": [
            {
              "$ref": "#/definitions/Cert"
            },
            {
              "description": "The HSM certificate issued (signed) by the HSM hardware."
            }
          ]
        },
        "ManufacturerHardwareCertificate": {
          "allOf": [
            {
              "$ref": "#/definitions/Cert"
            },
            {
              "description": "The HSM hardware certificate issued (signed) by the hardware manufacturer."
            }
          ]
        }
      },
      "type": "object"
    },
    "CloudHsmAccessDeniedException": {},
    "CloudHsmInternalFailureException": {},
    "CloudHsmInvalidRequestException": {},
    "CloudHsmResourceNotFoundException": {},
    "CloudHsmServiceException": {},
    "CloudHsmTagException": {},
    "Cluster": {
      "description": "Contains information about an AWS CloudHSM cluster.",
      "properties": {
        "BackupPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupPolicy"
            },
            {
              "description": "The cluster's backup policy."
            }
          ]
        },
        "BackupRetentionPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupRetentionPolicy"
            },
            {
              "description": "A policy that defines how the service retains backups."
            }
          ]
        },
        "Certificates": {
          "allOf": [
            {
              "$ref": "#/definitions/Certificates"
            },
            {
              "description": "Contains one or more certificates or a certificate signing request (CSR)."
            }
          ]
        },
        "ClusterId": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterId"
            },
            {
              "description": "The cluster's identifier (ID)."
            }
          ]
        },
        "CreateTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date and time when the cluster was created."
            }
          ]
        },
        "HsmType": {
          "allOf": [
            {
              "$ref": "#/definitions/HsmType"
            },
            {
              "description": "The type of HSM that the cluster contains."
            }
          ]
        },
        "Hsms": {
          "allOf": [
            {
              "$ref": "#/definitions/Hsms"
            },
            {
              "description": "Contains information about the HSMs in the cluster."
            }
          ]
        },
        "PreCoPassword": {
          "allOf": [
            {
              "$ref": "#/definitions/PreCoPassword"
            },
            {
              "description": "The default password for the cluster's Pre-Crypto Officer (PRECO) user."
            }
          ]
        },
        "SecurityGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityGroup"
            },
            {
              "description": "The identifier (ID) of the cluster's security group."
            }
          ]
        },
        "SourceBackupId": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupId"
            },
            {
              "description": "The identifier (ID) of the backup used to create the cluster. This value exists only when the cluster was created from a backup."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterState"
            },
            {
              "description": "The cluster's state."
            }
          ]
        },
        "StateMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/StateMessage"
            },
            {
              "description": "A description of the cluster's state."
            }
          ]
        },
        "SubnetMapping": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalSubnetMapping"
            },
            {
              "description": "A map from availability zone to the cluster’s subnet in that availability zone."
            }
          ]
        },
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The list of tags for the cluster."
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/VpcId"
            },
            {
              "description": "The identifier (ID) of the virtual private cloud (VPC) that contains the cluster."
            }
          ]
        }
      },
      "type": "object"
    },
    "ClusterId": {
      "pattern": "cluster-[2-7a-zA-Z]{11,16}",
      "type": "string"
    },
    "ClusterState": {
      "enum": [
        "CREATE_IN_PROGRESS",
        "UNINITIALIZED",
        "INITIALIZE_IN_PROGRESS",
        "INITIALIZED",
        "ACTIVE",
        "UPDATE_IN_PROGRESS",
        "DELETE_IN_PROGRESS",
        "DELETED",
        "DEGRADED"
      ],
      "type": "string"
    },
    "Clusters": {
      "items": {
        "$ref": "#/definitions/Cluster"
      },
      "type": "array"
    },
    "ClustersMaxSize": {
      "maximum": 25,
      "minimum": 1,
      "type": "integer"
    },
    "CopyBackupToRegionRequest": {
      "properties": {
        "BackupId": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupId"
            },
            {
              "description": "The ID of the backup that will be copied to the destination region. "
            }
          ]
        },
        "DestinationRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/Region"
            },
            {
              "description": "The AWS region that will contain your copied CloudHSM cluster backup."
            }
          ]
        },
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "Tags to apply to the destination backup during creation. If you specify tags, only these tags will be applied to the destination backup. If you do not specify tags, the service copies tags from the source backup to the destination backup."
            }
          ]
        }
      },
      "required": [
        "DestinationRegion",
        "BackupId"
      ],
      "title": "CopyBackupToRegionRequest",
      "type": "object"
    },
    "CopyBackupToRegionResponse": {
      "properties": {
        "DestinationBackup": {
          "allOf": [
            {
              "$ref": "#/definitions/DestinationBackup"
            },
            {
              "description": "<p>Information on the backup that will be copied to the destination region, including CreateTimestamp, SourceBackup, SourceCluster, and Source Region. CreateTimestamp of the destination backup will be the same as that of the source backup.</p> <p>You will need to use the <code>sourceBackupID</code> returned in this operation to use the <a>DescribeBackups</a> operation on the backup that will be copied to the destination region.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateClusterRequest": {
      "properties": {
        "BackupRetentionPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupRetentionPolicy"
            },
            {
              "description": "A policy that defines how the service retains backups."
            }
          ]
        },
        "HsmType": {
          "allOf": [
            {
              "$ref": "#/definitions/HsmType"
            },
            {
              "description": "The type of HSM to use in the cluster. Currently the only allowed value is <code>hsm1.medium</code>."
            }
          ]
        },
        "SourceBackupId": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupId"
            },
            {
              "description": "The identifier (ID) of the cluster backup to restore. Use this value to restore the cluster from a backup instead of creating a new cluster. To find the backup ID, use <a>DescribeBackups</a>."
            }
          ]
        },
        "SubnetIds": {
          "allOf": [
            {
              "$ref": "#/definitions/SubnetIds"
            },
            {
              "description": "<p>The identifiers (IDs) of the subnets where you are creating the cluster. You must specify at least one subnet. If you specify multiple subnets, they must meet the following criteria:</p> <ul> <li> <p>All subnets must be in the same virtual private cloud (VPC).</p> </li> <li> <p>You can specify only one subnet per Availability Zone.</p> </li> </ul>"
            }
          ]
        },
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "Tags to apply to the CloudHSM cluster during creation."
            }
          ]
        }
      },
      "required": [
        "HsmType",
        "SubnetIds"
      ],
      "title": "CreateClusterRequest",
      "type": "object"
    },
    "CreateClusterResponse": {
      "properties": {
        "Cluster": {
          "allOf": [
            {
              "$ref": "#/definitions/Cluster"
            },
            {
              "description": "Information about the cluster that was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateHsmRequest": {
      "properties": {
        "AvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalAz"
            },
            {
              "description": "The Availability Zone where you are creating the HSM. To find the cluster's Availability Zones, use <a>DescribeClusters</a>."
            }
          ]
        },
        "ClusterId": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterId"
            },
            {
              "description": "The identifier (ID) of the HSM's cluster. To find the cluster ID, use <a>DescribeClusters</a>."
            }
          ]
        },
        "IpAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/IpAddress"
            },
            {
              "description": "The HSM's IP address. If you specify an IP address, use an available address from the subnet that maps to the Availability Zone where you are creating the HSM. If you don't specify an IP address, one is chosen for you from that subnet."
            }
          ]
        }
      },
      "required": [
        "ClusterId",
        "AvailabilityZone"
      ],
      "title": "CreateHsmRequest",
      "type": "object"
    },
    "CreateHsmResponse": {
      "properties": {
        "Hsm": {
          "allOf": [
            {
              "$ref": "#/definitions/Hsm"
            },
            {
              "description": "Information about the HSM that was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteBackupRequest": {
      "properties": {
        "BackupId": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupId"
            },
            {
              "description": "The ID of the backup to be deleted. To find the ID of a backup, use the <a>DescribeBackups</a> operation."
            }
          ]
        }
      },
      "required": [
        "BackupId"
      ],
      "title": "DeleteBackupRequest",
      "type": "object"
    },
    "DeleteBackupResponse": {
      "properties": {
        "Backup": {
          "allOf": [
            {
              "$ref": "#/definitions/Backup"
            },
            {
              "description": "Information on the <code>Backup</code> object deleted."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteClusterRequest": {
      "properties": {
        "ClusterId": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterId"
            },
            {
              "description": "The identifier (ID) of the cluster that you are deleting. To find the cluster ID, use <a>DescribeClusters</a>."
            }
          ]
        }
      },
      "required": [
        "ClusterId"
      ],
      "title": "DeleteClusterRequest",
      "type": "object"
    },
    "DeleteClusterResponse": {
      "properties": {
        "Cluster": {
          "allOf": [
            {
              "$ref": "#/definitions/Cluster"
            },
            {
              "description": "Information about the cluster that was deleted."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteHsmRequest": {
      "properties": {
        "ClusterId": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterId"
            },
            {
              "description": "The identifier (ID) of the cluster that contains the HSM that you are deleting."
            }
          ]
        },
        "EniId": {
          "allOf": [
            {
              "$ref": "#/definitions/EniId"
            },
            {
              "description": "The identifier (ID) of the elastic network interface (ENI) of the HSM that you are deleting."
            }
          ]
        },
        "EniIp": {
          "allOf": [
            {
              "$ref": "#/definitions/IpAddress"
            },
            {
              "description": "The IP address of the elastic network interface (ENI) of the HSM that you are deleting."
            }
          ]
        },
        "HsmId": {
          "allOf": [
            {
              "$ref": "#/definitions/HsmId"
            },
            {
              "description": "The identifier (ID) of the HSM that you are deleting."
            }
          ]
        }
      },
      "required": [
        "ClusterId"
      ],
      "title": "DeleteHsmRequest",
      "type": "object"
    },
    "DeleteHsmResponse": {
      "properties": {
        "HsmId": {
          "allOf": [
            {
              "$ref": "#/definitions/HsmId"
            },
            {
              "description": "The identifier (ID) of the HSM that was deleted."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeBackupsRequest": {
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/Filters"
            },
            {
              "description": "<p>One or more filters to limit the items returned in the response.</p> <p>Use the <code>backupIds</code> filter to return only the specified backups. Specify backups by their backup identifier (ID).</p> <p>Use the <code>sourceBackupIds</code> filter to return only the backups created from a source backup. The <code>sourceBackupID</code> of a source backup is returned by the <a>CopyBackupToRegion</a> operation.</p> <p>Use the <code>clusterIds</code> filter to return only the backups for the specified clusters. Specify clusters by their cluster identifier (ID).</p> <p>Use the <code>states</code> filter to return only backups that match the specified state.</p> <p>Use the <code>neverExpires</code> filter to return backups filtered by the value in the <code>neverExpires</code> parameter. <code>True</code> returns all backups exempt from the backup retention policy. <code>False</code> returns all backups with a backup retention policy defined at the cluster.</p>"
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupsMaxSize"
            },
            {
              "description": "The maximum number of backups to return in the response. When there are more backups than the number you specify, the response contains a <code>NextToken</code> value."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The <code>NextToken</code> value that you received in the previous response. Use this value to get more backups."
            }
          ]
        },
        "SortAscending": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Designates whether or not to sort the return backups by ascending chronological order of generation."
            }
          ]
        }
      },
      "title": "DescribeBackupsRequest",
      "type": "object"
    },
    "DescribeBackupsResponse": {
      "properties": {
        "Backups": {
          "allOf": [
            {
              "$ref": "#/definitions/Backups"
            },
            {
              "description": "A list of backups."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "An opaque string that indicates that the response contains only a subset of backups. Use this value in a subsequent <code>DescribeBackups</code> request to get more backups."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeClustersRequest": {
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/Filters"
            },
            {
              "description": "<p>One or more filters to limit the items returned in the response.</p> <p>Use the <code>clusterIds</code> filter to return only the specified clusters. Specify clusters by their cluster identifier (ID).</p> <p>Use the <code>vpcIds</code> filter to return only the clusters in the specified virtual private clouds (VPCs). Specify VPCs by their VPC identifier (ID).</p> <p>Use the <code>states</code> filter to return only clusters that match the specified state.</p>"
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/ClustersMaxSize"
            },
            {
              "description": "The maximum number of clusters to return in the response. When there are more clusters than the number you specify, the response contains a <code>NextToken</code> value."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The <code>NextToken</code> value that you received in the previous response. Use this value to get more clusters."
            }
          ]
        }
      },
      "title": "DescribeClustersRequest",
      "type": "object"
    },
    "DescribeClustersResponse": {
      "properties": {
        "Clusters": {
          "allOf": [
            {
              "$ref": "#/definitions/Clusters"
            },
            {
              "description": "A list of clusters."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "An opaque string that indicates that the response contains only a subset of clusters. Use this value in a subsequent <code>DescribeClusters</code> request to get more clusters."
            }
          ]
        }
      },
      "type": "object"
    },
    "DestinationBackup": {
      "description": "Contains information about the backup that will be copied and created by the <a>CopyBackupToRegion</a> operation.",
      "properties": {
        "CreateTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date and time when both the source backup was created."
            }
          ]
        },
        "SourceBackup": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupId"
            },
            {
              "description": "The identifier (ID) of the source backup from which the new backup was copied."
            }
          ]
        },
        "SourceCluster": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterId"
            },
            {
              "description": "The identifier (ID) of the cluster containing the source backup from which the new backup was copied."
            }
          ]
        },
        "SourceRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/Region"
            },
            {
              "description": "The AWS region that contains the source backup from which the new backup was copied."
            }
          ]
        }
      },
      "type": "object"
    },
    "EniId": {
      "pattern": "eni-[0-9a-fA-F]{8,17}",
      "type": "string"
    },
    "ExternalAz": {
      "pattern": "[a-z]{2}(-(gov))?-(east|west|north|south|central){1,2}-\\d[a-z]",
      "type": "string"
    },
    "ExternalSubnetMapping": {
      "additionalProperties": {
        "$ref": "#/definitions/SubnetId"
      },
      "type": "object"
    },
    "Field": {
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "Filters": {
      "additionalProperties": {
        "$ref": "#/definitions/Strings"
      },
      "type": "object"
    },
    "Hsm": {
      "description": "Contains information about a hardware security module (HSM) in an AWS CloudHSM cluster.",
      "properties": {
        "AvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalAz"
            },
            {
              "description": "The Availability Zone that contains the HSM."
            }
          ]
        },
        "ClusterId": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterId"
            },
            {
              "description": "The identifier (ID) of the cluster that contains the HSM."
            }
          ]
        },
        "EniId": {
          "allOf": [
            {
              "$ref": "#/definitions/EniId"
            },
            {
              "description": "The identifier (ID) of the HSM's elastic network interface (ENI)."
            }
          ]
        },
        "EniIp": {
          "allOf": [
            {
              "$ref": "#/definitions/IpAddress"
            },
            {
              "description": "The IP address of the HSM's elastic network interface (ENI)."
            }
          ]
        },
        "HsmId": {
          "allOf": [
            {
              "$ref": "#/definitions/HsmId"
            },
            {
              "description": "The HSM's identifier (ID)."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/HsmState"
            },
            {
              "description": "The HSM's state."
            }
          ]
        },
        "StateMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "A description of the HSM's state."
            }
          ]
        },
        "SubnetId": {
          "allOf": [
            {
              "$ref": "#/definitions/SubnetId"
            },
            {
              "description": "The subnet that contains the HSM's elastic network interface (ENI)."
            }
          ]
        }
      },
      "required": [
        "HsmId"
      ],
      "type": "object"
    },
    "HsmId": {
      "pattern": "hsm-[2-7a-zA-Z]{11,16}",
      "type": "string"
    },
    "HsmState": {
      "enum": [
        "CREATE_IN_PROGRESS",
        "ACTIVE",
        "DEGRADED",
        "DELETE_IN_PROGRESS",
        "DELETED"
      ],
      "type": "string"
    },
    "HsmType": {
      "pattern": "(hsm1\\.medium)",
      "type": "string"
    },
    "Hsms": {
      "items": {
        "$ref": "#/definitions/Hsm"
      },
      "type": "array"
    },
    "InitializeClusterRequest": {
      "properties": {
        "ClusterId": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterId"
            },
            {
              "description": "The identifier (ID) of the cluster that you are claiming. To find the cluster ID, use <a>DescribeClusters</a>."
            }
          ]
        },
        "SignedCert": {
          "allOf": [
            {
              "$ref": "#/definitions/Cert"
            },
            {
              "description": "The cluster certificate issued (signed) by your issuing certificate authority (CA). The certificate must be in PEM format and can contain a maximum of 5000 characters."
            }
          ]
        },
        "TrustAnchor": {
          "allOf": [
            {
              "$ref": "#/definitions/Cert"
            },
            {
              "description": "The issuing certificate of the issuing certificate authority (CA) that issued (signed) the cluster certificate. You must use a self-signed certificate. The certificate used to sign the HSM CSR must be directly available, and thus must be the root certificate. The certificate must be in PEM format and can contain a maximum of 5000 characters."
            }
          ]
        }
      },
      "required": [
        "ClusterId",
        "SignedCert",
        "TrustAnchor"
      ],
      "title": "InitializeClusterRequest",
      "type": "object"
    },
    "InitializeClusterResponse": {
      "properties": {
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterState"
            },
            {
              "description": "The cluster's state."
            }
          ]
        },
        "StateMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/StateMessage"
            },
            {
              "description": "A description of the cluster's state."
            }
          ]
        }
      },
      "type": "object"
    },
    "IpAddress": {
      "pattern": "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
      "type": "string"
    },
    "ListTagsRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxSize"
            },
            {
              "description": "The maximum number of tags to return in the response. When there are more tags than the number you specify, the response contains a <code>NextToken</code> value."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The <code>NextToken</code> value that you received in the previous response. Use this value to get more tags."
            }
          ]
        },
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceId"
            },
            {
              "description": "The cluster identifier (ID) for the cluster whose tags you are getting. To find the cluster ID, use <a>DescribeClusters</a>."
            }
          ]
        }
      },
      "required": [
        "ResourceId"
      ],
      "title": "ListTagsRequest",
      "type": "object"
    },
    "ListTagsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "An opaque string that indicates that the response contains only a subset of tags. Use this value in a subsequent <code>ListTags</code> request to get more tags."
            }
          ]
        },
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "A list of tags."
            }
          ]
        }
      },
      "required": [
        "TagList"
      ],
      "type": "object"
    },
    "MaxSize": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "ModifyBackupAttributesRequest": {
      "properties": {
        "BackupId": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupId"
            },
            {
              "description": "The identifier (ID) of the backup to modify. To find the ID of a backup, use the <a>DescribeBackups</a> operation."
            }
          ]
        },
        "NeverExpires": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies whether the service should exempt a backup from the retention policy for the cluster. <code>True</code> exempts a backup from the retention policy. <code>False</code> means the service applies the backup retention policy defined at the cluster."
            }
          ]
        }
      },
      "required": [
        "BackupId",
        "NeverExpires"
      ],
      "title": "ModifyBackupAttributesRequest",
      "type": "object"
    },
    "ModifyBackupAttributesResponse": {
      "properties": {
        "Backup": {
          "$ref": "#/definitions/Backup"
        }
      },
      "type": "object"
    },
    "ModifyClusterRequest": {
      "properties": {
        "BackupRetentionPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupRetentionPolicy"
            },
            {
              "description": "A policy that defines how the service retains backups."
            }
          ]
        },
        "ClusterId": {
          "allOf": [
            {
              "$ref": "#/definitions/ClusterId"
            },
            {
              "description": "The identifier (ID) of the cluster that you want to modify. To find the cluster ID, use <a>DescribeClusters</a>."
            }
          ]
        }
      },
      "required": [
        "BackupRetentionPolicy",
        "ClusterId"
      ],
      "title": "ModifyClusterRequest",
      "type": "object"
    },
    "ModifyClusterResponse": {
      "properties": {
        "Cluster": {
          "$ref": "#/definitions/Cluster"
        }
      },
      "type": "object"
    },
    "NextToken": {
      "maxLength": 256,
      "pattern": ".*",
      "type": "string"
    },
    "PreCoPassword": {
      "maxLength": 32,
      "minLength": 7,
      "type": "string"
    },
    "Region": {
      "pattern": "[a-z]{2}(-(gov))?-(east|west|north|south|central){1,2}-\\d",
      "type": "string"
    },
    "ResourceId": {
      "pattern": "(?:cluster|backup)-[2-7a-zA-Z]{11,16}",
      "type": "string"
    },
    "RestoreBackupRequest": {
      "properties": {
        "BackupId": {
          "allOf": [
            {
              "$ref": "#/definitions/BackupId"
            },
            {
              "description": "The ID of the backup to be restored. To find the ID of a backup, use the <a>DescribeBackups</a> operation."
            }
          ]
        }
      },
      "required": [
        "BackupId"
      ],
      "title": "RestoreBackupRequest",
      "type": "object"
    },
    "RestoreBackupResponse": {
      "properties": {
        "Backup": {
          "allOf": [
            {
              "$ref": "#/definitions/Backup"
            },
            {
              "description": "Information on the <code>Backup</code> object created."
            }
          ]
        }
      },
      "type": "object"
    },
    "SecurityGroup": {
      "pattern": "sg-[0-9a-fA-F]{8,17}",
      "type": "string"
    },
    "StateMessage": {
      "maxLength": 300,
      "pattern": ".*",
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "Strings": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "SubnetId": {
      "pattern": "subnet-[0-9a-fA-F]{8,17}",
      "type": "string"
    },
    "SubnetIds": {
      "items": {
        "$ref": "#/definitions/SubnetId"
      },
      "maxItems": 10,
      "minItems": 1,
      "type": "array"
    },
    "Tag": {
      "description": "Contains a tag. A tag is a key-value pair.",
      "properties": {
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKey"
            },
            {
              "description": "The key of the tag."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/TagValue"
            },
            {
              "description": "The value of the tag."
            }
          ]
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "object"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "TagResourceRequest": {
      "properties": {
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceId"
            },
            {
              "description": "The cluster identifier (ID) for the cluster that you are tagging. To find the cluster ID, use <a>DescribeClusters</a>."
            }
          ]
        },
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "A list of one or more tags."
            }
          ]
        }
      },
      "required": [
        "ResourceId",
        "TagList"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "TagValue": {
      "maxLength": 256,
      "minLength": 0,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "UntagResourceRequest": {
      "properties": {
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceId"
            },
            {
              "description": "The cluster identifier (ID) for the cluster whose tags you are removing. To find the cluster ID, use <a>DescribeClusters</a>."
            }
          ]
        },
        "TagKeyList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKeyList"
            },
            {
              "description": "A list of one or more tag keys for the tags that you are removing. Specify only the tag keys, not the tag values."
            }
          ]
        }
      },
      "required": [
        "ResourceId",
        "TagKeyList"
      ],
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UntagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "VpcId": {
      "pattern": "vpc-[0-9a-fA-F]",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/cloudhsmv2/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}