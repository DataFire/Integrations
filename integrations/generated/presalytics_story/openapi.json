{
  "swagger": "2.0",
  "info": {
    "description": "This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API",
    "title": "Story",
    "version": "0.3.1",
    "x-apisguru-categories": [
      "analytics"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_presalytics.io_static_img_Logo_Logos_Orange-White_navbar.png"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://api.presalytics.io/story/openapi.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "presalytics.io",
    "x-serviceName": "story",
    "x-datafire": {
      "name": "presalytics_story",
      "type": "openapi"
    }
  },
  "basePath": "/story",
  "paths": {
    "/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Indicate whether the returned object should include child relationships",
            "in": "query",
            "name": "include_relationships",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Determines whether a repsonse including story objects should include the story outline.  Defaults to true. Useful for speeding up processing times.",
            "in": "query",
            "name": "include_outline",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "List of stories for this user",
            "schema": {
              "items": {
                "$ref": "#/definitions/story"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Returns a list of stories for this user identifie via the access token presentated to the api",
        "operationId": "story_get",
        "summary": "Story: Get List of User Stories",
        "x-operationName": "list"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Determines whether a repsonse including story objects should include the story outline.  Defaults to true. Useful for speeding up processing times.",
            "in": "query",
            "name": "include_outline",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A story outline json object",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/outline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success responses with story object",
            "schema": {
              "$ref": "#/definitions/story"
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Upload new story to presalytics api",
        "operationId": "story_post",
        "summary": "Story: Upload"
      }
    },
    "/cache": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "parameters to identify an update a collaborator across multiple stories",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cache_post_request"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Cache"
        ],
        "description": "An endpoint for Presalytics Renderers to cache html subdocuments for subsequent retrieval by the browser.  Documents Are retrieved via token expire after 1 minute.",
        "operationId": "cache_post",
        "summary": "Cache: Store Subdocument"
      }
    },
    "/cache/{nonce}": {
      "get": {
        "produces": [
          "text/html",
          "application/json"
        ],
        "parameters": [
          {
            "description": "A one-time use token for retieving items in the users cache",
            "format": "uuid",
            "in": "path",
            "name": "nonce",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A cached html subdocument (typically loaded via iframe)",
            "schema": {
              "description": "html document with a link to the login page",
              "title": "Login Button",
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Cache"
        ],
        "description": "An endpoint for broswer retreive html documents that were cached durin the rendering process via a nonce (token)",
        "operationId": "cache_nonce_get",
        "summary": "Cache: Get Subdocument"
      }
    },
    "/collaborators": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "parameters to identify an update a collaborator across multiple stories",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/collaborator_bulk_update_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of all possible permission types",
            "schema": {
              "items": {
                "$ref": "#/definitions/permission_type"
              },
              "title": "List of Permission Types",
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Restricted"
        ],
        "description": "Allows for bulk updates on collaborator metadata.  Restricted to internal admins",
        "operationId": "collaborators_post",
        "summary": "Collborators: Bulk Update (Admin Only)"
      }
    },
    "/environment/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "description": "pass rendering metadata to the client-side scripts",
        "operationId": "get_environment",
        "summary": "Environment: Get"
      }
    },
    "/file": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Determines whether a repsonse including story objects should include the story outline.  Defaults to true. Useful for speeding up processing times.",
            "in": "query",
            "name": "include_outline",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A pptx or xlsx file upload or story outline json object",
            "in": "formData",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success responses with story object",
            "schema": {
              "$ref": "#/definitions/story"
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Upload new story to presalytics api via an Open Office Xml file",
        "operationId": "story_post_file",
        "summary": "Story: Upload a File",
        "x-operationName": "upload-file"
      }
    },
    "/file/json": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Determines whether a repsonse including story objects should include the story outline.  Defaults to true. Useful for speeding up processing times.",
            "in": "query",
            "name": "include_outline",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A json-formatted object that includes a base64 encoded file (file encoded utf-8)",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/file_upload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success responses with story object",
            "schema": {
              "$ref": "#/definitions/story"
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Upload new story to presalytics api via an Open Office Xml file",
        "operationId": "story_post_file_json",
        "summary": "Story: Upload a File (base64)",
        "x-operationName": "upload-file-json"
      }
    },
    "/no_tags_spec": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "description": "json-formatted version of this spec with the tags removed to help with codegen processes",
        "operationId": "spec_no_tags",
        "summary": "Specification: No tags"
      }
    },
    "/outline-schema/{schema_version}/story-outline.json": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The semanitic version of a schema (e.g. '0.3.1')",
            "in": "path",
            "name": "schema_version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Schemas"
        ],
        "description": "Json Schema for validating Story Outline objects",
        "operationId": "story_outline_schema",
        "summary": "Story Outline Schema"
      }
    },
    "/permission_types": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Array of all possible permission types",
            "schema": {
              "items": {
                "$ref": "#/definitions/permission_type"
              },
              "title": "List of Permission Types",
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Permissions"
        ],
        "description": "Returns a list of possible user permission types",
        "operationId": "story_permission_types_get",
        "summary": "Permissions: List Permission Types",
        "x-operationName": "list"
      }
    },
    "/sessions/{session_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The primary key for a view session",
            "format": "uuid",
            "in": "path",
            "name": "session_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Sessions"
        ],
        "description": "Remove a session and dependant data.",
        "operationId": "session_id_delete",
        "summary": "Sessions: Delete by Id"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The primary key for a view session",
            "format": "uuid",
            "in": "path",
            "name": "session_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Indicate whether the returned object should include child relationships",
            "in": "query",
            "name": "include_relationships",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A session object",
            "schema": {
              "$ref": "#/definitions/session"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Sessions"
        ],
        "description": "Get session metadata",
        "operationId": "session_id_get",
        "summary": "Sessions: Get",
        "x-operationName": "get-session-id"
      }
    },
    "/sessions/{session_id}/views": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The primary key for a view session",
            "format": "uuid",
            "in": "path",
            "name": "session_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A List of session views",
            "schema": {
              "items": {
                "$ref": "#/definitions/view"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Views"
        ],
        "description": "Get data for all views in a session",
        "operationId": "sessions_id_views_get",
        "summary": "Views: List Session Views",
        "x-operationName": "get-views"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The primary key for a view session",
            "format": "uuid",
            "in": "path",
            "name": "session_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Collaborator user id and permission type",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "description": "A page view required a page number from the story outline to be created",
              "properties": {
                "activeMSecs": {
                  "type": "integer"
                },
                "additional": {
                  "type": "string"
                },
                "endTime": {
                  "format": "date-time",
                  "type": "string"
                },
                "pageNumber": {
                  "type": "integer"
                },
                "startTime": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "pageNumber",
                "startTime",
                "endTime"
              ],
              "title": "Required parameters to create a view",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A new view object",
            "schema": {
              "$ref": "#/definitions/view"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Views"
        ],
        "description": "Create a page view object for a viewing session",
        "operationId": "sessions_id_views_post",
        "summary": "Views: Create A Session View",
        "x-operationName": "create-view"
      }
    },
    "/views/{view_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The primary key for a page view within a session",
            "format": "uuid",
            "in": "path",
            "name": "view_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Views"
        ],
        "description": "Remove a view and dependant data.",
        "operationId": "views_id_delete",
        "summary": "Views: Delete by Id"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The primary key for a page view within a session",
            "format": "uuid",
            "in": "path",
            "name": "view_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A List of session views",
            "schema": {
              "$ref": "#/definitions/view"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Views"
        ],
        "description": "Get view meta data",
        "operationId": "views_id_get",
        "summary": "Views: Get View",
        "x-operationName": "get-view-id"
      }
    },
    "/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Remove a story and dependant data.",
        "operationId": "story_id_delete",
        "summary": "Story: Delete by Id"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Indicate whether the returned object should include child relationships",
            "in": "query",
            "name": "include_relationships",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Determines whether a repsonse including story objects should include the story outline.  Defaults to true. Useful for speeding up processing times.",
            "in": "query",
            "name": "include_outline",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Pull a story object with associated collaborator user, permission, and session data(faster if cached from prior api call)",
            "in": "query",
            "name": "full",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Force the api reload the `Story full` object",
            "in": "query",
            "name": "refresh_cache",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success responses with story object",
            "schema": {
              "$ref": "#/definitions/story"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Returns story metadata, inlcuding json object with story outline",
        "operationId": "story_id_get",
        "summary": "Story: Get by Id"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Determines whether a repsonse including story objects should include the story outline.  Defaults to true. Useful for speeding up processing times.",
            "in": "query",
            "name": "include_outline",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The updated story object",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/story"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success responses with story object",
            "schema": {
              "$ref": "#/definitions/story"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Update story metadata, including story outline",
        "operationId": "story_id_put",
        "summary": "Story: Modify"
      }
    },
    "/{id}/analytics": {
      "get": {
        "produces": [
          "application/json",
          "text/html"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An html document containing session analytics for the story",
            "schema": {
              "description": "html document with reveal.js presenation of story",
              "title": "reveal.js presenation with analytics data",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "An html document containing a login button",
            "schema": {
              "description": "html document with a link to the login page",
              "title": "Login Button",
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "returns an html document containing session and event metrics for the story",
        "operationId": "story_id_analytics",
        "summary": "Story: View Analytics",
        "x-operationName": "getAnalytics"
      }
    },
    "/{id}/collaborators": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of collaborators on the story",
            "schema": {
              "items": {
                "$ref": "#/definitions/story_collaborator"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story Collaborators"
        ],
        "description": "Gets a list users that can read or edit this story",
        "operationId": "story_id_collaborators_get",
        "summary": "Story Collaborators: List",
        "x-operationName": "list"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Collaborator user id and permission type",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/add_new_collaborator_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collaborator data",
            "schema": {
              "$ref": "#/definitions/story_collaborator"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story Collaborators"
        ],
        "description": "Add a colloborator to this story",
        "operationId": "story_id_collaborators_post",
        "summary": "Story Collaborators: Add New User"
      }
    },
    "/{id}/collaborators/authorize/{story_collaborator_userid}/{permissiontype}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The presalytics userid (NOT the Id of the story_collaborator object)",
            "format": "uuid",
            "in": "path",
            "name": "story_collaborator_userid",
            "required": true,
            "type": "string"
          },
          {
            "description": "the type of permission requested.  can be a permission_type object name (e.g., owner, editor, create, viewer, admin) or a permission type field (e.g., can_edit, can_view, can_add_collaborators, can_delete)",
            "in": "path",
            "name": "permissiontype",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Permissions"
        ],
        "description": "Check whether user have certain types of permissions.  Use http status codes to understand if permission is granted - 204 = Granted, 403 = Forbidden",
        "operationId": "story_id_collaborators_userid_permissiontype_get",
        "summary": "Permissions: Story Authorization for a User",
        "x-operationName": "check-auth"
      }
    },
    "/{id}/collaborators/inactive": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Collaborator user id and permission type",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modify_inactive_collaborator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collaborator data",
            "schema": {
              "$ref": "#/definitions/story_collaborator"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story Collaborators"
        ],
        "description": "Edit story permissions for inactive users.  Requires admin rights.",
        "operationId": "story_id_collaborators_inactive_post",
        "summary": "Story Collaborators: Edit Inactive User Permission"
      }
    },
    "/{id}/collaborators/{story_collaborator_userid}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The presalytics userid (NOT the Id of the story_collaborator object)",
            "format": "uuid",
            "in": "path",
            "name": "story_collaborator_userid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story Collaborators"
        ],
        "description": "Remove a collaborator from this story",
        "operationId": "story_id_collaborators_userid_delete",
        "summary": "Story Collaborators: Remove User"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The presalytics userid (NOT the Id of the story_collaborator object)",
            "format": "uuid",
            "in": "path",
            "name": "story_collaborator_userid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Collaborator data",
            "schema": {
              "$ref": "#/definitions/story_collaborator"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story Collaborators"
        ],
        "description": "Data to help you understand the access rights of a particular collaborator on this story",
        "operationId": "story_id_collaborators_userid_get",
        "summary": "Story Collaborators: Access Permissions"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The presalytics userid (NOT the Id of the story_collaborator object)",
            "format": "uuid",
            "in": "path",
            "name": "story_collaborator_userid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Collaborator user id (presalytics userid) and permission type",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/story_collaborator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collaborator data",
            "schema": {
              "$ref": "#/definitions/story_collaborator"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story Collaborators"
        ],
        "description": "Modify a user's access right to this story (e.g., grant edit permissions)",
        "operationId": "story_id_collaborators_userid_put",
        "summary": "Story Collaborators: Edit Access Rights"
      }
    },
    "/{id}/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An Array of events",
            "schema": {
              "items": {
                "$ref": "#/definitions/event"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Get a list of Events available to users of this story",
        "operationId": "story_id_events_get",
        "summary": "Events: List Events",
        "x-operationName": "get-events"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Collaborator user id and permission type",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/manage_event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A repsonse to the requested action",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Add a message to the Story's conversation",
        "operationId": "story_id_events_post",
        "summary": "Events: Manage Events",
        "x-operationName": "post-events"
      }
    },
    "/{id}/file": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Indicates whether a put or post method would replace the existing contents",
            "in": "query",
            "name": "replace_existing",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A primary key pointing to an obsolete item in the story. Item type is context-dependent",
            "format": "uuid",
            "in": "query",
            "name": "obsolete_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Determines whether a repsonse including story objects should include the story outline.  Defaults to true. Useful for speeding up processing times.",
            "in": "query",
            "name": "include_outline",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "A pptx or xlsx file upload or story outline json object",
            "in": "formData",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success responses with story object",
            "schema": {
              "$ref": "#/definitions/story"
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Upload a file to an existing story",
        "operationId": "story_id_file_post",
        "summary": "Story: Upload a File To Existing Story",
        "x-operationName": "update"
      }
    },
    "/{id}/file/{ooxml_automation_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the id of the ooxml_automation object",
            "format": "uuid",
            "in": "path",
            "name": "ooxml_automation_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Deletes a subdcoument of this story (e.g., .pptx, .docx, .xlsx)",
        "operationId": "story_id_file_ooxmlautomationid_delete",
        "summary": "Story: Delete Subdocument",
        "x-operationName": "download"
      },
      "get": {
        "produces": [
          "application/vnd.openxmlformats-officedocument.presentationml.presentation",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the id of the ooxml_automation object",
            "format": "uuid",
            "in": "path",
            "name": "ooxml_automation_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The latest versiono of the story, in its orginal file format",
            "schema": {
              "format": "binary",
              "title": "Powerpoint presentation",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Redtreives updated story as open office xml file (e.g., .pptx, .docx, .xlsx)",
        "operationId": "story_id_file_ooxmlautomationid_get",
        "summary": "Story: Download Updated File",
        "x-operationName": "download"
      }
    },
    "/{id}/messages": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An Array of conversation messages",
            "schema": {
              "items": {
                "$ref": "#/definitions/message"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Conversation"
        ],
        "description": "Get a list of messages that have been send in this story",
        "operationId": "story_id_messages_get",
        "summary": "Conversation: List Conversation Messages",
        "x-operationName": "get-messages"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The message text",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Conversation"
        ],
        "description": "Add a message to the Story's conversation",
        "operationId": "story_id_messages_post",
        "summary": "Conversation: Send a Message",
        "x-operationName": "post-messages"
      }
    },
    "/{id}/outline": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Stringified Story outline",
            "schema": {
              "type": "string"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "410": {
            "description": "Gone"
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Returns Story's outline",
        "operationId": "story_id_outline_get",
        "summary": "Story: Get Story Outline",
        "x-operationName": "getOutline"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "A story outline object",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Update a story outline.",
        "operationId": "story_id_outline_post",
        "summary": "Story: Post Story Outline",
        "x-operationName": "postOutline"
      }
    },
    "/{id}/public/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An html document containing a reveal.js represenation of the story",
            "schema": {
              "description": "html document with reveal.js presenation of story",
              "title": "reveal.js presenation",
              "type": "string"
            }
          },
          "302": {
            "description": "Not Found redirect"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "returns an html document containing a reveal.js epresentation of the story, if the story if set to is_public = True",
        "operationId": "story_id_public",
        "summary": "Story: Public Link to Story Reveal.js Document",
        "x-operationName": "getPublic"
      }
    },
    "/{id}/reveal": {
      "get": {
        "produces": [
          "application/json",
          "text/html"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An html document containing a reveal.js represenation of the story",
            "schema": {
              "description": "html document with reveal.js presenation of story",
              "title": "reveal.js presenation",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "An html document containing a login button",
            "schema": {
              "description": "html document with a link to the login page",
              "title": "Login Button",
              "type": "string"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "returns an html document containing a reveal.js epresentation of the story",
        "operationId": "story_id_reveal",
        "summary": "Story: Get Story at Reveal.js Document",
        "x-operationName": "getHtml"
      }
    },
    "/{id}/sessions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Indicate whether the returned object should include child relationships",
            "in": "query",
            "name": "include_relationships",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of session objects",
            "schema": {
              "items": {
                "$ref": "#/definitions/session"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Sessions"
        ],
        "description": "Get a list of sessions asscoaited with this story",
        "operationId": "story_id_sessions_get",
        "summary": "Sessions: List Story Sessions",
        "x-operationName": "get-sessions"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Collaborator user id and permission type",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create_session_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A new session object",
            "schema": {
              "$ref": "#/definitions/session"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Sessions"
        ],
        "description": "Create a new session",
        "operationId": "story_id_session_post",
        "summary": "Sessions: Create a Session",
        "x-operationName": "create-session"
      }
    },
    "/{id}/status": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "the id from the story object",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "tags": [
          "Story"
        ],
        "description": "Returns code indicating whether story has active running background and is healthy (e.g., the latest outline is valid)",
        "operationId": "story_id_status_get",
        "summary": "Story: Get Story Status",
        "x-operationName": "getStatus"
      }
    }
  },
  "definitions": {
    "add_new_collaborator_request": {
      "description": "required subset of collaborator data to get a permission",
      "properties": {
        "collaborator_type": {
          "type": "string"
        },
        "user_email": {
          "type": "string"
        },
        "user_id": {
          "format": "uuid",
          "type": "string"
        }
      },
      "title": "Collaborator permission data"
    },
    "base_model": {
      "description": "Base model for all types",
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "created_by": {
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "updated_by": {
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "BaseModel"
    },
    "cache_post_request": {
      "properties": {
        "current_user_id": {
          "format": "uuid",
          "type": "string"
        },
        "nonce": {
          "format": "uuid",
          "type": "string"
        },
        "subdocument": {
          "type": "string"
        }
      },
      "title": "Cache Post Request body",
      "type": "object"
    },
    "collaborator_bulk_update_request": {
      "description": "allows for bulk updating of user_ids and active status based on a lead id or user_id",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "lead_id": {
          "format": "int32",
          "type": "integer"
        },
        "user_id": {
          "format": "uuid",
          "type": "string"
        }
      },
      "title": "Collaborator data to change"
    },
    "create_session_request": {
      "description": "Request body for creating a session",
      "properties": {
        "host": {
          "type": "string"
        },
        "collaboratorUserId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "title": "session-create"
    },
    "event": {
      "allOf": [
        {
          "$ref": "#/definitions/base_model"
        },
        {
          "properties": {
            "attributes": {
              "type": "string"
            },
            "chat_prompt": {
              "type": "string"
            },
            "conversation_id": {
              "type": "string"
            },
            "dom_selectors": {
              "type": "string"
            },
            "is_chat_hidden": {
              "type": "boolean"
            },
            "is_notify_enabled": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "An Story Event object",
      "title": "Event"
    },
    "file_upload": {
      "description": "A Base64 encoded file object",
      "properties": {
        "content_length": {
          "type": "integer"
        },
        "file": {
          "type": "string"
        },
        "file_name": {
          "type": "string"
        },
        "mimetype": {
          "type": "string"
        }
      },
      "title": "File Upload"
    },
    "manage_event": {
      "properties": {
        "action": {
          "enum": [
            "create",
            "fire",
            "change",
            "delete"
          ],
          "type": "string"
        },
        "action_params": {
          "additionalProperties": true,
          "type": "object"
        },
        "name": {
          "type": "string",
          "x-nullable": true
        }
      },
      "title": "Event Actions",
      "type": "object"
    },
    "message": {
      "description": "A conversation message",
      "properties": {
        "body": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "remote": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "userId": {
          "format": "uuid",
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "Message"
    },
    "modify_inactive_collaborator": {
      "description": "Action can be either \"delete\" or \"activate\".  Either lead_id or user_id is required.  user_id takes precedence.",
      "properties": {
        "action": {
          "type": "string"
        },
        "lead_id": {
          "format": "int32",
          "type": "integer"
        },
        "user_id": {
          "format": "uuid",
          "type": "string"
        }
      },
      "title": "Collaborator permission data"
    },
    "ooxml_document": {
      "allOf": [
        {
          "$ref": "#/definitions/base_model"
        },
        {
          "properties": {
            "delete_target_on_story_delete": {
              "type": "boolean"
            },
            "ooxml_automation_id": {
              "format": "uuid",
              "type": "string"
            },
            "story_id": {
              "format": "uuid",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "A reference to an Ooxml Automation Document from the Presalytics Ooxml Automation API",
      "title": "Ooxml Document"
    },
    "outline": {
      "description": "story_outline (json object)",
      "properties": {
        "outline": {
          "type": "string"
        }
      },
      "title": "Story Outline"
    },
    "permission_type": {
      "allOf": [
        {
          "$ref": "#/definitions/base_model"
        },
        {
          "properties": {
            "can_add_collaborators": {
              "type": "boolean"
            },
            "can_delete": {
              "type": "boolean"
            },
            "can_edit": {
              "type": "boolean"
            },
            "can_view": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "A permission type that can be applied to story collaborator",
      "title": "Permission Type"
    },
    "problem_detail": {
      "description": "Error reponse model",
      "properties": {
        "detail": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "Problem Detail"
    },
    "session": {
      "allOf": [
        {
          "$ref": "#/definitions/base_model"
        },
        {
          "properties": {
            "host": {
              "type": "string"
            },
            "collaborator": {
              "$ref": "#/definitions/story_collaborator"
            },
            "collaborator_id": {
              "format": "uuid",
              "type": "string"
            },
            "outline_revision": {
              "type": "integer"
            },
            "views": {
              "items": {
                "$ref": "#/definitions/view"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "description": "A user session with an open story",
      "title": "Session"
    },
    "status": {
      "description": "Status response when returning 202s",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "title": "Status"
    },
    "story": {
      "allOf": [
        {
          "$ref": "#/definitions/base_model"
        },
        {
          "properties": {
            "collaborators": {
              "items": {
                "$ref": "#/definitions/story_collaborator"
              },
              "type": "array",
              "x-nullable": true
            },
            "is_public": {
              "type": "boolean",
              "x-nullable": true
            },
            "ooxml_documents": {
              "items": {
                "$ref": "#/definitions/ooxml_document"
              },
              "type": "array",
              "x-nullable": true
            },
            "outline": {
              "type": "string",
              "x-nullable": true
            },
            "outline_history": {
              "items": {
                "$ref": "#/definitions/story_outline_history"
              },
              "type": "array",
              "x-nullable": true
            },
            "revision": {
              "format": "Int32",
              "type": "integer",
              "x-nullable": true
            },
            "title": {
              "type": "string",
              "x-nullable": true
            }
          },
          "type": "object"
        }
      ],
      "description": "Model for story objects",
      "title": "Story"
    },
    "story_collaborator": {
      "allOf": [
        {
          "$ref": "#/definitions/base_model"
        },
        {
          "properties": {
            "active": {
              "type": "boolean",
              "x-nullable": true
            },
            "email": {
              "type": "string"
            },
            "lead_id": {
              "format": "int32",
              "type": "integer",
              "x-nullable": true
            },
            "name": {
              "type": "string"
            },
            "permission_type": {
              "$ref": "#/definitions/permission_type",
              "x-nullable": true
            },
            "permission_type_id": {
              "format": "uuid",
              "type": "string"
            },
            "story_id": {
              "format": "uuid",
              "type": "string"
            },
            "user_id": {
              "format": "uuid",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "Description of a user that can collaborate on a story",
      "title": "Story Collaborator"
    },
    "story_outline_history": {
      "allOf": [
        {
          "$ref": "#/definitions/base_model"
        },
        {
          "properties": {
            "collaborator_user_id": {
              "format": "uuid",
              "type": "string"
            },
            "outline": {
              "type": "string"
            },
            "revision_number": {
              "format": "Int32",
              "type": "integer"
            },
            "story_id": {
              "format": "uuid",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "A revision repository for story outlines",
      "title": "Story Outline History"
    },
    "view": {
      "allOf": [
        {
          "$ref": "#/definitions/base_model"
        },
        {
          "properties": {
            "active_msecs": {
              "type": "integer"
            },
            "additional": {
              "type": "string"
            },
            "end_time": {
              "format": "date-time",
              "type": "string"
            },
            "page_number": {
              "type": "integer"
            },
            "session_id": {
              "format": "uuid",
              "type": "string"
            },
            "start_time": {
              "format": "date-time",
              "type": "string"
            },
            "total_msecs": {
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "A Page view within a session-create",
      "title": "View"
    }
  },
  "securityDefinitions": {
    "jwt": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "tags": [
    {
      "description": "Story",
      "name": "Story"
    },
    {
      "description": "Story Collaborators",
      "name": "Story Collaborators"
    },
    {
      "description": "Permissions and Authorization",
      "name": "Permissions"
    }
  ],
  "x-components": {
    "parameters": {
      "d3_id": {
        "description": "A d3 figure id from a D3Widget instance in the Presaltyics Python Library",
        "in": "path",
        "name": "d3_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "figure_id": {
        "description": "A matplotlib figure id from a MatplotlibResponsiveFigure instance in the Presaltyics Python Library",
        "in": "path",
        "name": "figure_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "full": {
        "description": "Pull a story object with associated collaborator user, permission, and session data(faster if cached from prior api call)",
        "in": "query",
        "name": "full",
        "required": false,
        "type": "boolean"
      },
      "id": {
        "description": "the id from the story object",
        "format": "uuid",
        "in": "path",
        "name": "id",
        "required": true,
        "type": "string"
      },
      "include_outline": {
        "description": "Determines whether a repsonse including story objects should include the story outline.  Defaults to true. Useful for speeding up processing times.",
        "in": "query",
        "name": "include_outline",
        "required": false,
        "type": "boolean"
      },
      "include_relationships": {
        "description": "Indicate whether the returned object should include child relationships",
        "in": "query",
        "name": "include_relationships",
        "required": false,
        "type": "boolean"
      },
      "nonce": {
        "description": "A one-time use token for retieving items in the users cache",
        "format": "uuid",
        "in": "path",
        "name": "nonce",
        "required": true,
        "type": "string"
      },
      "obsolete_id": {
        "description": "A primary key pointing to an obsolete item in the story. Item type is context-dependent",
        "format": "uuid",
        "in": "query",
        "name": "obsolete_id",
        "required": false,
        "type": "string"
      },
      "ooxml_automation_id": {
        "description": "the id of the ooxml_automation object",
        "format": "uuid",
        "in": "path",
        "name": "ooxml_automation_id",
        "required": true,
        "type": "string"
      },
      "permissiontype": {
        "description": "The type of access required.  Must match - admin, owner, editor, viewer",
        "in": "path",
        "name": "permissiontype",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "refresh_cache": {
        "description": "Force the api reload the `Story full` object",
        "in": "query",
        "name": "refresh_cache",
        "required": false,
        "type": "boolean"
      },
      "replace_existing": {
        "description": "Indicates whether a put or post method would replace the existing contents",
        "in": "query",
        "name": "replace_existing",
        "required": false,
        "type": "boolean"
      },
      "schema_version": {
        "description": "The semanitic version of a schema (e.g. '0.3.1')",
        "in": "path",
        "name": "schema_version",
        "required": true,
        "type": "string"
      },
      "session_id": {
        "description": "The primary key for a view session",
        "format": "uuid",
        "in": "path",
        "name": "session_id",
        "required": true,
        "type": "string"
      },
      "story_collaborator_userid": {
        "description": "The presalytics userid (NOT the Id of the story_collaborator object)",
        "format": "uuid",
        "in": "path",
        "name": "story_collaborator_userid",
        "required": true,
        "type": "string"
      },
      "view_id": {
        "description": "The primary key for a page view within a session",
        "format": "uuid",
        "in": "path",
        "name": "view_id",
        "required": true,
        "type": "string"
      }
    },
    "responses": {
      "accepted": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/status"
            }
          }
        },
        "description": "Accepted"
      },
      "badrequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "description": "Bad Request"
      },
      "forbidden": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "description": "Forbidden"
      },
      "gone": {
        "description": "Gone"
      },
      "notfound": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "description": "Not found"
      },
      "outline": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/outline"
            }
          }
        },
        "description": "Success responses with story object"
      },
      "story": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/story"
            }
          }
        },
        "description": "Success responses with story object"
      },
      "success_response_no_content": {
        "description": "Success"
      },
      "unauthorized": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "description": "Unauthorized"
      },
      "unprocessable_entity": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "description": "Unprocessable Entity"
      },
      "unsupported_media_type": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/problem_detail"
            }
          }
        },
        "description": "Unsupported Media Type"
      }
    }
  }
}