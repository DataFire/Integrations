{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "Amazon Macie is a fully managed data security and data privacy service that uses machine learning and pattern matching to discover and protect your sensitive data in AWS. Macie automates the discovery of sensitive data, such as PII and intellectual property, to provide you with insight into the data that your organization stores in AWS. Macie also provides an inventory of your Amazon S3 buckets, which it continually monitors for you. If Macie detects sensitive data or potential data access issues, it generates detailed findings for you to review and act upon as necessary.",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Macie 2",
    "version": "2020-01-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/macie2-2020-01-01.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "macie2",
    "x-datafire": {
      "name": "amazonaws_macie2",
      "type": "openapi"
    }
  },
  "host": "macie2.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/admin": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of items to include in each page of a paginated response.",
            "in": "query",
            "maximum": 25,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The nextToken string that specifies which page of results to return in a paginated response.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListOrganizationAdminAccountsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves information about the delegated Amazon Macie administrator account for an AWS organization.",
        "operationId": "ListOrganizationAdminAccounts"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "adminAccountId": {
                  "description": "The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.",
                  "type": "string"
                },
                "clientToken": {
                  "description": "A unique, case-sensitive token that you provide to ensure the idempotency of the request.",
                  "type": "string"
                }
              },
              "required": [
                "adminAccountId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnableOrganizationAdminAccountResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Designates an account as the delegated Amazon Macie administrator account for an AWS organization.",
        "operationId": "EnableOrganizationAdminAccount"
      }
    },
    "/admin#adminAccountId": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The AWS account ID of the delegated administrator account.",
            "in": "query",
            "name": "adminAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisableOrganizationAdminAccountResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Disables an account as the delegated Amazon Macie administrator account for an AWS organization.",
        "operationId": "DisableOrganizationAdminAccount"
      }
    },
    "/admin/configuration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeOrganizationConfigurationResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves the Amazon Macie configuration settings for an AWS organization.",
        "operationId": "DescribeOrganizationConfiguration"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "autoEnable": {
                  "description": "Specifies whether Amazon Macie is enabled automatically for each account, when the account is added to the AWS organization.",
                  "type": "boolean"
                }
              },
              "required": [
                "autoEnable"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateOrganizationConfigurationResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Updates the Amazon Macie configuration settings for an AWS organization.",
        "operationId": "UpdateOrganizationConfiguration"
      }
    },
    "/classification-export-configuration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetClassificationExportConfigurationResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves the configuration settings for storing data classification results.",
        "operationId": "GetClassificationExportConfiguration"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "configuration": {
                  "description": "Specifies where to store data classification results, and the encryption settings to use when storing results in that location. Currently, you can store classification results only in an S3 bucket.",
                  "properties": {
                    "s3Destination": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Destination"
                        },
                        {
                          "description": "The S3 bucket to store data classification results in, and the encryption settings to use when storing results in that bucket."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "configuration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutClassificationExportConfigurationResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Creates or updates the configuration settings for storing data classification results.",
        "operationId": "PutClassificationExportConfiguration"
      }
    },
    "/custom-data-identifiers": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/__string"
                  },
                  "description": "A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.",
                  "type": "object"
                },
                "clientToken": {
                  "description": "A unique, case-sensitive token that you provide to ensure the idempotency of the request.",
                  "type": "string"
                },
                "description": {
                  "description": "<p>A custom description of the custom data identifier. The description can contain as many as 512 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a custom data identifier. Other users of your account might be able to see the identifier's description, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
                  "type": "string"
                },
                "ignoreWords": {
                  "description": "An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive.",
                  "items": {
                    "$ref": "#/definitions/__string"
                  },
                  "type": "array"
                },
                "keywords": {
                  "description": "An array that lists specific character sequences (keywords), one of which must be within proximity (maximumMatchDistance) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 4 - 90 characters. Keywords aren't case sensitive.",
                  "items": {
                    "$ref": "#/definitions/__string"
                  },
                  "type": "array"
                },
                "maximumMatchDistance": {
                  "description": "The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50.",
                  "type": "integer"
                },
                "name": {
                  "description": "<p>A custom name for the custom data identifier. The name can contain as many as 128 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a custom data identifier. Other users of your account might be able to see the identifier's name, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
                  "type": "string"
                },
                "regex": {
                  "description": "The regular expression (<i>regex</i>) that defines the pattern to match. The expression can contain as many as 512 characters.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCustomDataIdentifierResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Creates and defines the criteria and other settings for a custom data identifier.",
        "operationId": "CreateCustomDataIdentifier"
      }
    },
    "/custom-data-identifiers/get": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ids": {
                  "description": "An array of strings that lists the unique identifiers for the custom data identifiers to retrieve information about.",
                  "items": {
                    "$ref": "#/definitions/__string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchGetCustomDataIdentifiersResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves information about one or more custom data identifiers.",
        "operationId": "BatchGetCustomDataIdentifiers"
      }
    },
    "/custom-data-identifiers/list": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "maxResults": {
                  "description": "The maximum number of items to include in each page of the response.",
                  "type": "integer"
                },
                "nextToken": {
                  "description": "The nextToken string that specifies which page of results to return in a paginated response.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCustomDataIdentifiersResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves a subset of information about all the custom data identifiers for an account.",
        "operationId": "ListCustomDataIdentifiers"
      }
    },
    "/custom-data-identifiers/test": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ignoreWords": {
                  "description": "An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive.",
                  "items": {
                    "$ref": "#/definitions/__string"
                  },
                  "type": "array"
                },
                "keywords": {
                  "description": "An array that lists specific character sequences (keywords), one of which must be within proximity (maximumMatchDistance) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 4 - 90 characters. Keywords aren't case sensitive.",
                  "items": {
                    "$ref": "#/definitions/__string"
                  },
                  "type": "array"
                },
                "maximumMatchDistance": {
                  "description": "The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50.",
                  "type": "integer"
                },
                "regex": {
                  "description": "The regular expression (<i>regex</i>) that defines the pattern to match. The expression can contain as many as 512 characters.",
                  "type": "string"
                },
                "sampleText": {
                  "description": "The sample text to inspect by using the custom data identifier. The text can contain as many as 1,000 characters.",
                  "type": "string"
                }
              },
              "required": [
                "regex",
                "sampleText"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TestCustomDataIdentifierResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Tests a custom data identifier.",
        "operationId": "TestCustomDataIdentifier"
      }
    },
    "/custom-data-identifiers/{id}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the Amazon Macie resource or account that the request applies to.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCustomDataIdentifierResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Soft deletes a custom data identifier.",
        "operationId": "DeleteCustomDataIdentifier"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the Amazon Macie resource or account that the request applies to.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetCustomDataIdentifierResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves the criteria and other settings for a custom data identifier.",
        "operationId": "GetCustomDataIdentifier"
      }
    },
    "/datasources/s3": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "criteria": {
                  "additionalProperties": {
                    "$ref": "#/definitions/BucketCriteriaAdditionalProperties"
                  },
                  "description": "Specifies, as a map, one or more attribute-based conditions that filter the results of a query for information about S3 buckets.",
                  "type": "object"
                },
                "maxResults": {
                  "description": "The maximum number of items to include in each page of the response. The default value is 50.",
                  "type": "integer"
                },
                "nextToken": {
                  "description": "The nextToken string that specifies which page of results to return in a paginated response.",
                  "type": "string"
                },
                "sortCriteria": {
                  "description": "Specifies criteria for sorting the results of a query for information about S3 buckets.",
                  "properties": {
                    "attributeName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The name of the attribute to sort the results by. This value can be the name of any property that Amazon Macie defines as bucket metadata, such as bucketName or accountId."
                        }
                      ]
                    },
                    "orderBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/OrderBy"
                        },
                        {
                          "description": "The sort order to apply to the results, based on the value for the property specified by the attributeName property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeBucketsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": " <p>Retrieves (queries) statistical data and other information about one or more S3 buckets that Amazon Macie monitors and analyzes.</p>",
        "operationId": "DescribeBuckets"
      }
    },
    "/datasources/s3/statistics": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "accountId": {
                  "description": "The unique identifier for the AWS account.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBucketStatisticsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": " <p>Retrieves (queries) aggregated statistical data for all the S3 buckets that Amazon Macie monitors and analyzes.</p>",
        "operationId": "GetBucketStatistics"
      }
    },
    "/findings": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "findingCriteria": {
                  "description": "Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.",
                  "properties": {
                    "criterion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Criterion"
                        },
                        {
                          "description": "A condition that specifies the property, operator, and value to use to filter the results."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "maxResults": {
                  "description": "The maximum number of items to include in each page of the response.",
                  "type": "integer"
                },
                "nextToken": {
                  "description": "The nextToken string that specifies which page of results to return in a paginated response.",
                  "type": "string"
                },
                "sortCriteria": {
                  "description": "Specifies criteria for sorting the results of a request for findings.",
                  "properties": {
                    "attributeName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The name of the property to sort the results by. This value can be the name of any property that Amazon Macie defines for a finding."
                        }
                      ]
                    },
                    "orderBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/OrderBy"
                        },
                        {
                          "description": "The sort order to apply to the results, based on the value for the property specified by the attributeName property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFindingsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": " <p>Retrieves a subset of information about one or more findings.</p>",
        "operationId": "ListFindings"
      }
    },
    "/findings/describe": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "findingIds": {
                  "description": "An array of strings that lists the unique identifiers for the findings to retrieve.",
                  "items": {
                    "$ref": "#/definitions/__string"
                  },
                  "type": "array"
                },
                "sortCriteria": {
                  "description": "Specifies criteria for sorting the results of a request for findings.",
                  "properties": {
                    "attributeName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The name of the property to sort the results by. This value can be the name of any property that Amazon Macie defines for a finding."
                        }
                      ]
                    },
                    "orderBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/OrderBy"
                        },
                        {
                          "description": "The sort order to apply to the results, based on the value for the property specified by the attributeName property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "findingIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetFindingsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves the details of one or more findings.",
        "operationId": "GetFindings"
      }
    },
    "/findings/sample": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "findingTypes": {
                  "description": "<p>An array that lists one or more types of findings to include in the set of sample findings. Currently, the only supported value is Policy:IAMUser/S3BucketEncryptionDisabled.</p> ",
                  "items": {
                    "$ref": "#/definitions/FindingType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateSampleFindingsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": " <p>Creates sample findings.</p>",
        "operationId": "CreateSampleFindings"
      }
    },
    "/findings/statistics": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "findingCriteria": {
                  "description": "Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.",
                  "properties": {
                    "criterion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Criterion"
                        },
                        {
                          "description": "A condition that specifies the property, operator, and value to use to filter the results."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "groupBy": {
                  "description": "<p>The finding property to use to group the query results. Valid values are:</p> <ul><li><p>classificationDetails.jobId - The unique identifier for the classification job that produced the finding.</p></li> <li><p>resourcesAffected.s3Bucket.name - The name of the S3 bucket that the finding applies to.</p></li> <li><p>severity.description - The severity level of the finding, such as High or Medium.</p></li> <li><p>type - The type of finding, such as Policy:IAMUser/S3BucketPublic and SensitiveData:S3Object/Personal.</p></li></ul>",
                  "enum": [
                    "resourcesAffected.s3Bucket.name",
                    "type",
                    "classificationDetails.jobId",
                    "severity.description"
                  ],
                  "type": "string"
                },
                "size": {
                  "description": "The maximum number of items to include in each page of the response.",
                  "type": "integer"
                },
                "sortCriteria": {
                  "description": "Specifies criteria for sorting the results of a query that retrieves aggregated statistical data about findings.",
                  "properties": {
                    "attributeName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/FindingStatisticsSortAttributeName"
                        },
                        {
                          "description": "The grouping to sort the results by. Valid values are: count, sort the results by the number of findings in each group of results; and, groupKey, sort the results by the name of each group of results."
                        }
                      ]
                    },
                    "orderBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/OrderBy"
                        },
                        {
                          "description": "The sort order to apply to the results, based on the value for the property specified by the attributeName property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "groupBy"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetFindingStatisticsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": " <p>Retrieves (queries) aggregated statistical data about findings.</p>",
        "operationId": "GetFindingStatistics"
      }
    },
    "/findingsfilters": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of items to include in each page of a paginated response.",
            "in": "query",
            "maximum": 25,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The nextToken string that specifies which page of results to return in a paginated response.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFindingsFiltersResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves a subset of information about all the findings filters for an account.",
        "operationId": "ListFindingsFilters"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/__string"
                  },
                  "description": "A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.",
                  "type": "object"
                },
                "action": {
                  "description": "The action to perform on findings that meet the filter criteria. To suppress (automatically archive) findings that meet the criteria, set this value to ARCHIVE. Valid values are:",
                  "enum": [
                    "ARCHIVE",
                    "NOOP"
                  ],
                  "type": "string"
                },
                "clientToken": {
                  "description": "A unique, case-sensitive token that you provide to ensure the idempotency of the request.",
                  "type": "string"
                },
                "description": {
                  "description": "<p>A custom description of the filter. The description can contain as many as 512 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a filter. Other users of your account might be able to see the filter's description, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
                  "type": "string"
                },
                "findingCriteria": {
                  "description": "Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.",
                  "properties": {
                    "criterion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Criterion"
                        },
                        {
                          "description": "A condition that specifies the property, operator, and value to use to filter the results."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "description": "<p>A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a filter. Other users of your account might be able to see the filter's name, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
                  "type": "string"
                },
                "position": {
                  "description": "The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.",
                  "type": "integer"
                }
              },
              "required": [
                "action",
                "findingCriteria",
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateFindingsFilterResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Creates and defines the criteria and other settings for a findings filter.",
        "operationId": "CreateFindingsFilter"
      }
    },
    "/findingsfilters/{id}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the Amazon Macie resource or account that the request applies to.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteFindingsFilterResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Deletes a findings filter.",
        "operationId": "DeleteFindingsFilter"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the Amazon Macie resource or account that the request applies to.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetFindingsFilterResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves the criteria and other settings for a findings filter.",
        "operationId": "GetFindingsFilter"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the Amazon Macie resource or account that the request applies to.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "action": {
                  "description": "The action to perform on findings that meet the filter criteria. To suppress (automatically archive) findings that meet the criteria, set this value to ARCHIVE. Valid values are:",
                  "enum": [
                    "ARCHIVE",
                    "NOOP"
                  ],
                  "type": "string"
                },
                "description": {
                  "description": "<p>A custom description of the filter. The description can contain as many as 512 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a filter. Other users might be able to see the filter's description, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
                  "type": "string"
                },
                "findingCriteria": {
                  "description": "Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.",
                  "properties": {
                    "criterion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Criterion"
                        },
                        {
                          "description": "A condition that specifies the property, operator, and value to use to filter the results."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "description": "<p>A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a filter. Other users might be able to see the filter's name, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
                  "type": "string"
                },
                "position": {
                  "description": "The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateFindingsFilterResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Updates the criteria and other settings for a findings filter.",
        "operationId": "UpdateFindingsFilter"
      }
    },
    "/invitations": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of items to include in each page of a paginated response.",
            "in": "query",
            "maximum": 25,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The nextToken string that specifies which page of results to return in a paginated response.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListInvitationsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves information about all the Amazon Macie membership invitations that were received by an account.",
        "operationId": "ListInvitations"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "accountIds": {
                  "description": "An array that lists AWS account IDs, one for each account to send the invitation to.",
                  "items": {
                    "$ref": "#/definitions/__string"
                  },
                  "type": "array"
                },
                "disableEmailNotification": {
                  "description": "Specifies whether to send an email notification to the root user of each account that the invitation will be sent to. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. To send an email notification to the root user of each account, set this value to true.",
                  "type": "boolean"
                },
                "message": {
                  "description": "A custom message to include in the invitation. Amazon Macie adds this message to the standard content that it sends for an invitation.",
                  "type": "string"
                }
              },
              "required": [
                "accountIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateInvitationsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": " <p>Sends an Amazon Macie membership invitation to one or more accounts.</p>",
        "operationId": "CreateInvitations"
      }
    },
    "/invitations/accept": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "invitationId": {
                  "description": "The unique identifier for the invitation to accept.",
                  "type": "string"
                },
                "masterAccount": {
                  "description": "The AWS account ID for the account that sent the invitation.",
                  "type": "string"
                }
              },
              "required": [
                "invitationId",
                "masterAccount"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AcceptInvitationResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Accepts an Amazon Macie membership invitation that was received from a specific account.",
        "operationId": "AcceptInvitation"
      }
    },
    "/invitations/count": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetInvitationsCountResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves the count of Amazon Macie membership invitations that were received by an account.",
        "operationId": "GetInvitationsCount"
      }
    },
    "/invitations/decline": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "accountIds": {
                  "description": "An array that lists AWS account IDs, one for each account that sent an invitation to decline.",
                  "items": {
                    "$ref": "#/definitions/__string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "accountIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeclineInvitationsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Declines Amazon Macie membership invitations that were received from specific accounts.",
        "operationId": "DeclineInvitations"
      }
    },
    "/invitations/delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "accountIds": {
                  "description": "An array that lists AWS account IDs, one for each account that sent an invitation to delete.",
                  "items": {
                    "$ref": "#/definitions/__string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "accountIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteInvitationsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Deletes Amazon Macie membership invitations that were received from specific accounts.",
        "operationId": "DeleteInvitations"
      }
    },
    "/jobs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/__string"
                  },
                  "description": "A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.",
                  "type": "object"
                },
                "clientToken": {
                  "description": "A unique, case-sensitive token that you provide to ensure the idempotency of the request.",
                  "type": "string"
                },
                "customDataIdentifierIds": {
                  "description": "The custom data identifiers to use for data analysis and classification.",
                  "items": {
                    "$ref": "#/definitions/__string"
                  },
                  "type": "array"
                },
                "description": {
                  "description": "A custom description of the job. The description can contain as many as 200 characters.",
                  "type": "string"
                },
                "initialRun": {
                  "description": "Specifies whether to analyze all existing, eligible objects immediately after the job is created.",
                  "type": "boolean"
                },
                "jobType": {
                  "description": "The schedule for running a classification job. Valid values are:",
                  "enum": [
                    "ONE_TIME",
                    "SCHEDULED"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "A custom name for the job. The name can contain as many as 500 characters.",
                  "type": "string"
                },
                "s3JobDefinition": {
                  "description": "Specifies which S3 buckets contain the objects that a classification job analyzes, and the scope of that analysis.",
                  "properties": {
                    "bucketDefinitions": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__listOfS3BucketDefinitionForJob"
                        },
                        {
                          "description": "An array of objects, one for each AWS account that owns buckets to analyze. Each object specifies the account ID for an account and one or more buckets to analyze for the account."
                        }
                      ]
                    },
                    "scoping": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Scoping"
                        },
                        {
                          "description": "The property- and tag-based conditions that determine which objects to include or exclude from the analysis."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "samplingPercentage": {
                  "description": "The sampling depth, as a percentage, to apply when processing objects. This value determines the percentage of eligible objects that the job analyzes. If this value is less than 100, Amazon Macie selects the objects to analyze at random, up to the specified percentage, and analyzes all the data in those objects.",
                  "type": "integer"
                },
                "scheduleFrequency": {
                  "description": "Specifies the recurrence pattern for running a classification job.",
                  "properties": {
                    "dailySchedule": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DailySchedule"
                        },
                        {
                          "description": "Specifies a daily recurrence pattern for running the job."
                        }
                      ]
                    },
                    "monthlySchedule": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MonthlySchedule"
                        },
                        {
                          "description": "Specifies a monthly recurrence pattern for running the job."
                        }
                      ]
                    },
                    "weeklySchedule": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/WeeklySchedule"
                        },
                        {
                          "description": "Specifies a weekly recurrence pattern for running the job."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "clientToken",
                "jobType",
                "name",
                "s3JobDefinition"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateClassificationJobResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": " <p>Creates and defines the settings for a classification job.</p>",
        "operationId": "CreateClassificationJob"
      }
    },
    "/jobs/list": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "filterCriteria": {
                  "description": "Specifies criteria for filtering the results of a request for information about classification jobs.",
                  "properties": {
                    "excludes": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__listOfListJobsFilterTerm"
                        },
                        {
                          "description": "An array of objects, one for each condition that determines which jobs to exclude from the results."
                        }
                      ]
                    },
                    "includes": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__listOfListJobsFilterTerm"
                        },
                        {
                          "description": "An array of objects, one for each condition that determines which jobs to include in the results."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "maxResults": {
                  "description": "The maximum number of items to include in each page of the response.",
                  "type": "integer"
                },
                "nextToken": {
                  "description": "The nextToken string that specifies which page of results to return in a paginated response.",
                  "type": "string"
                },
                "sortCriteria": {
                  "description": "Specifies criteria for sorting the results of a request for information about classification jobs.",
                  "properties": {
                    "attributeName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ListJobsSortAttributeName"
                        },
                        {
                          "description": "The property to sort the results by."
                        }
                      ]
                    },
                    "orderBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/OrderBy"
                        },
                        {
                          "description": "The sort order to apply to the results, based on the value for the property specified by the attributeName property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListClassificationJobsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves a subset of information about one or more classification jobs.",
        "operationId": "ListClassificationJobs"
      }
    },
    "/jobs/{jobId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the classification job.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeClassificationJobResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves the status and settings for a classification job.",
        "operationId": "DescribeClassificationJob"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the classification job.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "jobStatus": {
                  "description": "The status of a classification job. Possible values are:",
                  "enum": [
                    "RUNNING",
                    "PAUSED",
                    "CANCELLED",
                    "COMPLETE",
                    "IDLE",
                    "USER_PAUSED"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "jobStatus"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateClassificationJobResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Changes the status of a classification job.",
        "operationId": "UpdateClassificationJob"
      }
    },
    "/macie": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisableMacieResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Disables an Amazon Macie account and deletes Macie resources for the account.",
        "operationId": "DisableMacie"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetMacieSessionResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves the current status and configuration settings for an Amazon Macie account.",
        "operationId": "GetMacieSession"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "findingPublishingFrequency": {
                  "description": "The frequency with which Amazon Macie publishes updates to policy findings for an account. This includes publishing updates to AWS Security Hub and Amazon EventBridge (formerly called Amazon CloudWatch Events). Valid values are:",
                  "enum": [
                    "FIFTEEN_MINUTES",
                    "ONE_HOUR",
                    "SIX_HOURS"
                  ],
                  "type": "string"
                },
                "status": {
                  "description": "The status of an Amazon Macie account. Valid values are:",
                  "enum": [
                    "PAUSED",
                    "ENABLED"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateMacieSessionResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Suspends or re-enables an Amazon Macie account, or updates the configuration settings for a Macie account.",
        "operationId": "UpdateMacieSession"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "clientToken": {
                  "description": "A unique, case-sensitive token that you provide to ensure the idempotency of the request.",
                  "type": "string"
                },
                "findingPublishingFrequency": {
                  "description": "The frequency with which Amazon Macie publishes updates to policy findings for an account. This includes publishing updates to AWS Security Hub and Amazon EventBridge (formerly called Amazon CloudWatch Events). Valid values are:",
                  "enum": [
                    "FIFTEEN_MINUTES",
                    "ONE_HOUR",
                    "SIX_HOURS"
                  ],
                  "type": "string"
                },
                "status": {
                  "description": "The status of an Amazon Macie account. Valid values are:",
                  "enum": [
                    "PAUSED",
                    "ENABLED"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnableMacieResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Enables Amazon Macie and specifies the configuration settings for a Macie account.",
        "operationId": "EnableMacie"
      }
    },
    "/macie/members/{id}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the Amazon Macie resource or account that the request applies to.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "status": {
                  "description": "The status of an Amazon Macie account. Valid values are:",
                  "enum": [
                    "PAUSED",
                    "ENABLED"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "status"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateMemberSessionResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": " <p>Enables an Amazon Macie master account to suspend or re-enable a member account.</p>",
        "operationId": "UpdateMemberSession"
      }
    },
    "/master": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetMasterAccountResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves information about the Amazon Macie master account for an account.",
        "operationId": "GetMasterAccount"
      }
    },
    "/master/disassociate": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateFromMasterAccountResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Disassociates a member account from its Amazon Macie master account.",
        "operationId": "DisassociateFromMasterAccount"
      }
    },
    "/members": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of items to include in each page of a paginated response.",
            "in": "query",
            "maximum": 25,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The nextToken string that specifies which page of results to return in a paginated response.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specifies which accounts to include in the response, based on the status of an account's relationship with the master account. By default, the response includes only current member accounts. To include all accounts, set the value for this parameter to false.",
            "in": "query",
            "name": "onlyAssociated",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListMembersResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves information about the accounts that are associated with an Amazon Macie master account.",
        "operationId": "ListMembers"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/__string"
                  },
                  "description": "A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.",
                  "type": "object"
                },
                "account": {
                  "description": "Specifies details for an account to associate with an Amazon Macie master account.",
                  "properties": {
                    "accountId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The AWS account ID for the account."
                        }
                      ]
                    },
                    "email": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The email address for the account."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "account"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateMemberResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": " <p>Associates an account with an Amazon Macie master account.</p>",
        "operationId": "CreateMember"
      }
    },
    "/members/disassociate/{id}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the Amazon Macie resource or account that the request applies to.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateMemberResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Disassociates an Amazon Macie master account from a member account.",
        "operationId": "DisassociateMember"
      }
    },
    "/members/{id}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the Amazon Macie resource or account that the request applies to.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteMemberResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Deletes the association between an Amazon Macie master account and an account.",
        "operationId": "DeleteMember"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique identifier for the Amazon Macie resource or account that the request applies to.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetMemberResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves information about a member account that's associated with an Amazon Macie master account.",
        "operationId": "GetMember"
      }
    },
    "/tags/{resourceArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the classification job, custom data identifier, findings filter, or member account.",
            "in": "path",
            "name": "resourceArn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          }
        },
        "description": "Retrieves the tags (keys and values) that are associated with a classification job, custom data identifier, findings filter, or member account.",
        "operationId": "ListTagsForResource"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the classification job, custom data identifier, findings filter, or member account.",
            "in": "path",
            "name": "resourceArn",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/__string"
                  },
                  "description": "A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.",
                  "type": "object"
                }
              },
              "required": [
                "tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceResponse"
            }
          }
        },
        "description": "Adds or updates one or more tags (keys and values) that are associated with a classification job, custom data identifier, findings filter, or member account.",
        "operationId": "TagResource"
      }
    },
    "/tags/{resourceArn}#tagKeys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the classification job, custom data identifier, findings filter, or member account.",
            "in": "path",
            "name": "resourceArn",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The key of the tag to remove from the resource. To remove multiple tags, append the tagKeys parameter and argument for each additional tag to remove, separated by an ampersand (&amp;).",
            "in": "query",
            "items": {
              "$ref": "#/definitions/__string"
            },
            "name": "tagKeys",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceResponse"
            }
          }
        },
        "description": "Removes one or more tags (keys and values) from a classification job, custom data identifier, findings filter, or member account.",
        "operationId": "UntagResource"
      }
    },
    "/usage": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetUsageTotalsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves (queries) aggregated usage data for an account.",
        "operationId": "GetUsageTotals"
      }
    },
    "/usage/statistics": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "filterBy": {
                  "description": "An array of objects, one for each condition to use to filter the query results. If the array contains more than one object, Amazon Macie uses an AND operator to join the conditions specified by the objects.",
                  "items": {
                    "$ref": "#/definitions/UsageStatisticsFilter"
                  },
                  "type": "array"
                },
                "maxResults": {
                  "description": "The maximum number of items to include in each page of the response.",
                  "type": "integer"
                },
                "nextToken": {
                  "description": "The nextToken string that specifies which page of results to return in a paginated response.",
                  "type": "string"
                },
                "sortBy": {
                  "description": "Specifies criteria for sorting the results of a query for account quotas and usage data.",
                  "properties": {
                    "key": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/UsageStatisticsSortKey"
                        },
                        {
                          "description": "The field to sort the results by."
                        }
                      ]
                    },
                    "orderBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/OrderBy"
                        },
                        {
                          "description": "The sort order to apply to the results, based on the value for the field specified by the key property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetUsageStatisticsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          }
        },
        "description": "Retrieves (queries) quotas and aggregated usage data for one or more accounts.",
        "operationId": "GetUsageStatistics"
      }
    }
  },
  "definitions": {
    "AcceptInvitationRequest": {
      "properties": {
        "invitationId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the invitation to accept."
            }
          ]
        },
        "masterAccount": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the account that sent the invitation."
            }
          ]
        }
      },
      "required": [
        "masterAccount",
        "invitationId"
      ],
      "title": "AcceptInvitationRequest",
      "type": "object"
    },
    "AcceptInvitationResponse": {
      "properties": {},
      "type": "object"
    },
    "AccessControlList": {
      "description": "Provides information about the permissions settings of the bucket-level access control list (ACL) for an S3 bucket.",
      "properties": {
        "allowsPublicReadAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the ACL grants the general public with read access permissions for the bucket."
            }
          ]
        },
        "allowsPublicWriteAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the ACL grants the general public with write access permissions for the bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "AccessDeniedException": {},
    "AccountDetail": {
      "description": "Specifies details for an account to associate with an Amazon Macie master account.",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the account."
            }
          ]
        },
        "email": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The email address for the account."
            }
          ]
        }
      },
      "required": [
        "email",
        "accountId"
      ],
      "type": "object"
    },
    "AccountLevelPermissions": {
      "description": "Provides information about account-level permissions settings that apply to an S3 bucket.",
      "properties": {
        "blockPublicAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/BlockPublicAccess"
            },
            {
              "description": "The block public access settings for the bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "AdminAccount": {
      "description": "Provides information about the delegated Amazon Macie administrator account for an AWS organization.",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the account."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/AdminStatus"
            },
            {
              "description": "The current status of the account as a delegated administrator of Amazon Macie for the organization."
            }
          ]
        }
      },
      "type": "object"
    },
    "AdminStatus": {
      "description": "The current status of an account as the delegated Amazon Macie administrator account for an AWS organization.",
      "enum": [
        "ENABLED",
        "DISABLING_IN_PROGRESS"
      ],
      "type": "string"
    },
    "ApiCallDetails": {
      "description": "Provides information about an API operation that an entity invoked for an affected resource.",
      "properties": {
        "api": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation that was invoked most recently and produced the finding."
            }
          ]
        },
        "apiServiceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The URL of the AWS service that provides the operation, for example: s3.amazonaws.com."
            }
          ]
        },
        "firstSeen": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The first date and time, in UTC and extended ISO 8601 format, when any operation was invoked and produced the finding."
            }
          ]
        },
        "lastSeen": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The most recent date and time, in UTC and extended ISO 8601 format, when the specified operation (api) was invoked and produced the finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "AssumedRole": {
      "description": "Provides information about an identity that performed an action on an affected resource by using temporary security credentials. The credentials were obtained using the AssumeRole operation of the AWS Security Token Service (AWS STS) API.",
      "properties": {
        "accessKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS access key ID that identifies the credentials."
            }
          ]
        },
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account that owns the entity that was used to get the credentials."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the entity that was used to get the credentials."
            }
          ]
        },
        "principalId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the entity that was used to get the credentials."
            }
          ]
        },
        "sessionContext": {
          "allOf": [
            {
              "$ref": "#/definitions/SessionContext"
            },
            {
              "description": "The details of the session that was created for the credentials, including the entity that issued the session."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsAccount": {
      "description": "Provides information about an AWS account and entity that performed an action on an affected resource. The action was performed using the credentials for an AWS account other than your own account.",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account."
            }
          ]
        },
        "principalId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the entity that performed the action."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsService": {
      "description": "Provides information about an AWS service that performed an action on an affected resource.",
      "properties": {
        "invokedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the AWS service that performed the action."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchGetCustomDataIdentifierSummary": {
      "description": "Provides information about a custom data identifier.",
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the custom data identifier."
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the custom data identifier was created."
            }
          ]
        },
        "deleted": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the custom data identifier was deleted. If you delete a custom data identifier, Amazon Macie doesn't delete it permanently. Instead, it soft deletes the identifier."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom description of the custom data identifier."
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the custom data identifier."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom name of the custom data identifier."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchGetCustomDataIdentifiersRequest": {
      "properties": {
        "ids": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array of strings that lists the unique identifiers for the custom data identifiers to retrieve information about."
            }
          ]
        }
      },
      "title": "BatchGetCustomDataIdentifiersRequest",
      "type": "object"
    },
    "BatchGetCustomDataIdentifiersResponse": {
      "properties": {
        "customDataIdentifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfBatchGetCustomDataIdentifierSummary"
            },
            {
              "description": "An array of objects, one for each custom data identifier that meets the criteria specified in the request."
            }
          ]
        },
        "notFoundIdentifierIds": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array of identifiers, one for each identifier that was specified in the request, but doesn't correlate to an existing custom data identifier."
            }
          ]
        }
      },
      "type": "object"
    },
    "BlockPublicAccess": {
      "description": "Provides information about the block public access settings for an S3 bucket. These settings can apply to a bucket at the account level or bucket level. For detailed information about each setting, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\">Using Amazon S3 block public access</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.",
      "properties": {
        "blockPublicAcls": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether Amazon S3 blocks public access control lists (ACLs) for the bucket and objects in the bucket."
            }
          ]
        },
        "blockPublicPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether Amazon S3 blocks public bucket policies for the bucket."
            }
          ]
        },
        "ignorePublicAcls": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether Amazon S3 ignores public ACLs for the bucket and objects in the bucket."
            }
          ]
        },
        "restrictPublicBuckets": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether Amazon S3 restricts public bucket policies for the bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "BucketCountByEffectivePermission": {
      "description": "Provides information about the number of S3 buckets that are publicly accessible based on a combination of permissions settings for each bucket.",
      "properties": {
        "publiclyAccessible": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets that allow the general public to have read or write access to the bucket."
            }
          ]
        },
        "publiclyReadable": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets that allow the general public to have read access to the bucket."
            }
          ]
        },
        "publiclyWritable": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets that allow the general public to have write access to the bucket."
            }
          ]
        },
        "unknown": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets that Amazon Macie wasn't able to evaluate permissions settings for. Macie can't determine whether these buckets are publicly accessible."
            }
          ]
        }
      },
      "type": "object"
    },
    "BucketCountByEncryptionType": {
      "description": "Provides information about the number of S3 buckets that use certain types of server-side encryption or don't encrypt objects by default.",
      "properties": {
        "kmsManaged": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": " <p>The total number of buckets that use an AWS Key Management Service (AWS KMS) customer master key (CMK) to encrypt objects. These buckets use AWS managed AWS KMS (AWS-KMS) encryption or customer managed AWS KMS (SSE-KMS) encryption.</p>"
            }
          ]
        },
        "s3Managed": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets that use an Amazon S3 managed key to encrypt objects. These buckets use Amazon S3 managed (SSE-S3) encryption."
            }
          ]
        },
        "unencrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets that don't encrypt objects by default. Default encryption is disabled for these buckets."
            }
          ]
        }
      },
      "type": "object"
    },
    "BucketCountBySharedAccessType": {
      "description": "Provides information about the number of S3 buckets that are shared with other AWS accounts.",
      "properties": {
        "external": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets that are shared with an AWS account that isn't part of the same Amazon Macie organization."
            }
          ]
        },
        "internal": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets that are shared with an AWS account that's part of the same Amazon Macie organization."
            }
          ]
        },
        "notShared": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets that aren't shared with other AWS accounts."
            }
          ]
        },
        "unknown": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets that Amazon Macie wasn't able to evaluate shared access settings for. Macie can't determine whether these buckets are shared with other AWS accounts."
            }
          ]
        }
      },
      "type": "object"
    },
    "BucketCriteria": {
      "additionalProperties": {
        "$ref": "#/definitions/BucketCriteriaAdditionalProperties"
      },
      "description": "Specifies, as a map, one or more attribute-based conditions that filter the results of a query for information about S3 buckets.",
      "type": "object"
    },
    "BucketCriteriaAdditionalProperties": {
      "description": "Specifies the operator to use in an attribute-based condition that filters the results of a query for information about S3 buckets.",
      "properties": {
        "eq": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An equal to condition to apply to a specified attribute value for buckets."
            }
          ]
        },
        "gt": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "A greater than condition to apply to a specified attribute value for buckets."
            }
          ]
        },
        "gte": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "A greater than or equal to condition to apply to a specified attribute value for buckets."
            }
          ]
        },
        "lt": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "A less than condition to apply to a specified attribute value for buckets."
            }
          ]
        },
        "lte": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "A less than or equal to condition to apply to a specified attribute value for buckets."
            }
          ]
        },
        "neq": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "A not equal to condition to apply to a specified attribute value for buckets."
            }
          ]
        },
        "prefix": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The prefix of the buckets to include in the results."
            }
          ]
        }
      },
      "type": "object"
    },
    "BucketLevelPermissions": {
      "description": "Provides information about the bucket-level permissions settings for an S3 bucket.",
      "properties": {
        "accessControlList": {
          "allOf": [
            {
              "$ref": "#/definitions/AccessControlList"
            },
            {
              "description": "The permissions settings of the access control list (ACL) for the bucket. This value is null if an ACL hasn't been defined for the bucket."
            }
          ]
        },
        "blockPublicAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/BlockPublicAccess"
            },
            {
              "description": "The block public access settings for the bucket."
            }
          ]
        },
        "bucketPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketPolicy"
            },
            {
              "description": "The permissions settings of the bucket policy for the bucket. This value is null if a bucket policy hasn't been defined for the bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "BucketMetadata": {
      "description": "Provides information about an S3 bucket that Amazon Macie monitors and analyzes.",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfKeyValuePair"
            },
            {
              "description": "An array that specifies the tags (keys and values) that are associated with the bucket."
            }
          ]
        },
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account that owns the bucket."
            }
          ]
        },
        "bucketArn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the bucket."
            }
          ]
        },
        "bucketCreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the bucket was created."
            }
          ]
        },
        "bucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the bucket."
            }
          ]
        },
        "classifiableObjectCount": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of objects that Amazon Macie can analyze in the bucket. These objects use a supported storage class and have a file name extension for a supported file or storage format."
            }
          ]
        },
        "classifiableSizeInBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total storage size, in bytes, of the objects that Amazon Macie can analyze in the bucket. These objects use a supported storage class and have a file name extension for a supported file or storage format."
            }
          ]
        },
        "jobDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/JobDetails"
            },
            {
              "description": "Specifies whether any one-time or recurring classification jobs are configured to analyze data in the bucket, and, if so, the details of the job that ran most recently."
            }
          ]
        },
        "lastUpdated": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when Amazon Macie most recently retrieved data about the bucket from Amazon S3."
            }
          ]
        },
        "objectCount": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of objects in the bucket."
            }
          ]
        },
        "objectCountByEncryptionType": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectCountByEncryptionType"
            },
            {
              "description": "The total number of objects that are in the bucket, grouped by server-side encryption type. This includes a grouping that reports the total number of objects that aren't encrypted or use client-side encryption."
            }
          ]
        },
        "publicAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketPublicAccess"
            },
            {
              "description": "Specifies whether the bucket is publicly accessible. If this value is true, an access control list (ACL), bucket policy, or block public access settings allow the bucket to be accessed by the general public."
            }
          ]
        },
        "region": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS Region that hosts the bucket."
            }
          ]
        },
        "replicationDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationDetails"
            },
            {
              "description": "Specifies whether the bucket is configured to replicate one or more objects to buckets for other AWS accounts and, if so, which accounts."
            }
          ]
        },
        "sharedAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/SharedAccess"
            },
            {
              "description": " <p>Specifies whether the bucket is shared with another AWS account. Possible values are:</p> <ul><li><p>EXTERNAL - The bucket is shared with an AWS account that isn't part of the same Amazon Macie organization.</p></li> <li><p>INTERNAL - The bucket is shared with an AWS account that's part of the same Amazon Macie organization.</p></li> <li><p>NOT_SHARED - The bucket isn't shared with other AWS accounts.</p></li> <li><p>UNKNOWN - Amazon Macie wasn't able to evaluate the shared access settings for the bucket.</p></li></ul>"
            }
          ]
        },
        "sizeInBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total storage size, in bytes, of the bucket."
            }
          ]
        },
        "sizeInBytesCompressed": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total compressed storage size, in bytes, of the bucket."
            }
          ]
        },
        "unclassifiableObjectCount": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectLevelStatistics"
            },
            {
              "description": "The total number of objects that Amazon Macie can't analyze in the bucket. These objects don't use a supported storage class or don't have a file name extension for a supported file or storage format."
            }
          ]
        },
        "unclassifiableObjectSizeInBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectLevelStatistics"
            },
            {
              "description": "The total storage size, in bytes, of the objects that Amazon Macie can't analyze in the bucket. These objects don't use a supported storage class or don't have a file name extension for a supported file or storage format."
            }
          ]
        },
        "versioning": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether versioning is enabled for the bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "BucketPermissionConfiguration": {
      "description": "Provides information about the account-level and bucket-level permissions settings for an S3 bucket.",
      "properties": {
        "accountLevelPermissions": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountLevelPermissions"
            },
            {
              "description": "The account-level permissions settings that apply to the bucket."
            }
          ]
        },
        "bucketLevelPermissions": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketLevelPermissions"
            },
            {
              "description": "The bucket-level permissions settings for the bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "BucketPolicy": {
      "description": "Provides information about the permissions settings of a bucket policy for an S3 bucket.",
      "properties": {
        "allowsPublicReadAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the bucket policy allows the general public to have read access to the bucket."
            }
          ]
        },
        "allowsPublicWriteAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the bucket policy allows the general public to have write access to the bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "BucketPublicAccess": {
      "description": "Provides information about the permissions settings that determine whether an S3 bucket is publicly accessible.",
      "properties": {
        "effectivePermission": {
          "allOf": [
            {
              "$ref": "#/definitions/EffectivePermission"
            },
            {
              "description": " <p>Specifies whether the bucket is publicly accessible due to the combination of permissions settings that apply to the bucket. Possible values are:</p> <ul><li><p>NOT_PUBLIC - The bucket isn't publicly accessible.</p></li> <li><p>PUBLIC - The bucket is publicly accessible.</p></li> <li><p>UNKNOWN - Amazon Macie can't determine whether the bucket is publicly accessible.</p></li></ul>"
            }
          ]
        },
        "permissionConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketPermissionConfiguration"
            },
            {
              "description": "The account-level and bucket-level permissions for the bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "BucketSortCriteria": {
      "description": "Specifies criteria for sorting the results of a query for information about S3 buckets.",
      "properties": {
        "attributeName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the attribute to sort the results by. This value can be the name of any property that Amazon Macie defines as bucket metadata, such as bucketName or accountId."
            }
          ]
        },
        "orderBy": {
          "allOf": [
            {
              "$ref": "#/definitions/OrderBy"
            },
            {
              "description": "The sort order to apply to the results, based on the value for the property specified by the attributeName property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
            }
          ]
        }
      },
      "type": "object"
    },
    "Cell": {
      "description": "Specifies the location of an occurrence of sensitive data in a Microsoft Excel workbook, CSV file, or TSV file.",
      "properties": {
        "cellReference": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The location of the cell, as an absolute cell reference, that contains the data. For example, Sheet2!C5 for cell C5 on Sheet2 in a Microsoft Excel workbook. This value is null for CSV and TSV files."
            }
          ]
        },
        "column": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The column number of the column that contains the data. For a Microsoft Excel workbook, this value correlates to the alphabetical character(s) for a column identifier. For example, 1 for column A, 2 for column B, and so on."
            }
          ]
        },
        "columnName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the column that contains the data, if available."
            }
          ]
        },
        "row": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The row number of the row that contains the data."
            }
          ]
        }
      },
      "type": "object"
    },
    "Cells": {
      "description": "Specifies the location of occurrences of sensitive data in a Microsoft Excel workbook, CSV file, or TSV file.",
      "items": {
        "$ref": "#/definitions/Cell"
      },
      "type": "array"
    },
    "ClassificationDetails": {
      "description": "Provides information about a sensitive data finding, including the classification job that produced the finding.",
      "properties": {
        "detailedResultsLocation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The path to the folder or file (in Amazon S3) that contains the corresponding sensitive data discovery result for the finding. If a finding applies to a large archive or compressed file, this value is the path to a folder. Otherwise, this value is the path to a file."
            }
          ]
        },
        "jobArn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the classification job that produced the finding."
            }
          ]
        },
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the classification job that produced the finding."
            }
          ]
        },
        "result": {
          "allOf": [
            {
              "$ref": "#/definitions/ClassificationResult"
            },
            {
              "description": "The status and other details for the finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "ClassificationExportConfiguration": {
      "description": "Specifies where to store data classification results, and the encryption settings to use when storing results in that location. Currently, you can store classification results only in an S3 bucket.",
      "properties": {
        "s3Destination": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Destination"
            },
            {
              "description": "The S3 bucket to store data classification results in, and the encryption settings to use when storing results in that bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "ClassificationResult": {
      "description": "Provides the details of a sensitive data finding, including the types, number of occurrences, and locations of the sensitive data that was detected.",
      "properties": {
        "additionalOccurrences": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "<p>Specifies whether Amazon Macie detected additional occurrences of sensitive data in the S3 object. A finding includes location data for a maximum of 15 occurrences of sensitive data.</p> <p>This value can help you determine whether to investigate additional occurrences of sensitive data in an object. You can do this by referring to the corresponding sensitive data discovery result for the finding (ClassificationDetails.detailedResultsLocation).</p>"
            }
          ]
        },
        "customDataIdentifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomDataIdentifiers"
            },
            {
              "description": "The custom data identifiers that detected the sensitive data and the number of occurrences of the data that they detected."
            }
          ]
        },
        "mimeType": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The type of content, as a MIME type, that the finding applies to. For example, application/gzip, for a GNU Gzip compressed archive file, or application/pdf, for an Adobe Portable Document Format file."
            }
          ]
        },
        "sensitiveData": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveData"
            },
            {
              "description": "The category, types, and number of occurrences of the sensitive data that produced the finding."
            }
          ]
        },
        "sizeClassified": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total size, in bytes, of the data that the finding applies to."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/ClassificationResultStatus"
            },
            {
              "description": "The status of the finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "ClassificationResultStatus": {
      "description": "Provides information about the status of a sensitive data finding.",
      "properties": {
        "code": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": " <p>The status of the finding. Possible values are:</p> <ul><li><p>COMPLETE - Amazon Macie successfully completed its analysis of the object that the finding applies to.</p></li> <li><p>PARTIAL - Macie analyzed only a subset of the data in the object that the finding applies to. For example, the object is an archive file that contains files in an unsupported format.</p></li> <li><p>SKIPPED - Macie wasn't able to analyze the object that the finding applies to. For example, the object is a malformed file or a file that uses an unsupported format.</p></li></ul>"
            }
          ]
        },
        "reason": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A brief description of the status of the finding. Amazon Macie uses this value to notify you of any errors, warnings, or considerations that might impact your analysis of the finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "ConflictException": {},
    "CreateClassificationJobRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "<p>A map of key-value pairs that specifies the tags to associate with the job.</p> <p>A job can have a maximum of 50 tags. Each tag consists of a tag key and an associated tag value. The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.</p>"
            }
          ]
        },
        "clientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A unique, case-sensitive token that you provide to ensure the idempotency of the request."
            }
          ]
        },
        "customDataIdentifierIds": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "The custom data identifiers to use for data analysis and classification."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A custom description of the job. The description can contain as many as 200 characters."
            }
          ]
        },
        "initialRun": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether to analyze all existing, eligible objects immediately after the job is created."
            }
          ]
        },
        "jobType": {
          "allOf": [
            {
              "$ref": "#/definitions/JobType"
            },
            {
              "description": "<p>The schedule for running the job. Valid values are:</p> <ul><li><p>ONE_TIME - Run the job only once. If you specify this value, don't specify a value for the scheduleFrequency property.</p></li> <li><p>SCHEDULED - Run the job on a daily, weekly, or monthly basis. If you specify this value, use the scheduleFrequency property to define the recurrence pattern for the job.</p></li></ul>"
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A custom name for the job. The name can contain as many as 500 characters."
            }
          ]
        },
        "s3JobDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/S3JobDefinition"
            },
            {
              "description": "The S3 buckets that contain the objects to analyze, and the scope of that analysis."
            }
          ]
        },
        "samplingPercentage": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The sampling depth, as a percentage, to apply when processing objects. This value determines the percentage of eligible objects that the job analyzes. If this value is less than 100, Amazon Macie selects the objects to analyze at random, up to the specified percentage, and analyzes all the data in those objects."
            }
          ]
        },
        "scheduleFrequency": {
          "allOf": [
            {
              "$ref": "#/definitions/JobScheduleFrequency"
            },
            {
              "description": "The recurrence pattern for running the job. To run the job only once, don't specify a value for this property and set the value for the jobType property to ONE_TIME."
            }
          ]
        }
      },
      "required": [
        "s3JobDefinition",
        "jobType",
        "clientToken",
        "name"
      ],
      "title": "CreateClassificationJobRequest",
      "type": "object"
    },
    "CreateClassificationJobResponse": {
      "properties": {
        "jobArn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the job."
            }
          ]
        },
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the job."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateCustomDataIdentifierRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "<p>A map of key-value pairs that specifies the tags to associate with the custom data identifier.</p> <p>A custom data identifier can have a maximum of 50 tags. Each tag consists of a tag key and an associated tag value. The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.</p>"
            }
          ]
        },
        "clientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A unique, case-sensitive token that you provide to ensure the idempotency of the request."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "<p>A custom description of the custom data identifier. The description can contain as many as 512 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a custom data identifier. Other users of your account might be able to see the identifier's description, depending on the actions that they're allowed to perform in Amazon Macie.</p>"
            }
          ]
        },
        "ignoreWords": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive."
            }
          ]
        },
        "keywords": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists specific character sequences (keywords), one of which must be within proximity (maximumMatchDistance) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 4 - 90 characters. Keywords aren't case sensitive."
            }
          ]
        },
        "maximumMatchDistance": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "<p>A custom name for the custom data identifier. The name can contain as many as 128 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a custom data identifier. Other users of your account might be able to see the identifier's name, depending on the actions that they're allowed to perform in Amazon Macie.</p>"
            }
          ]
        },
        "regex": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The regular expression (<i>regex</i>) that defines the pattern to match. The expression can contain as many as 512 characters."
            }
          ]
        }
      },
      "title": "CreateCustomDataIdentifierRequest",
      "type": "object"
    },
    "CreateCustomDataIdentifierResponse": {
      "properties": {
        "customDataIdentifierId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the custom data identifier that was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateFindingsFilterRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "<p>A map of key-value pairs that specifies the tags to associate with the filter.</p> <p>A findings filter can have a maximum of 50 tags. Each tag consists of a tag key and an associated tag value. The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.</p>"
            }
          ]
        },
        "action": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingsFilterAction"
            },
            {
              "description": "The action to perform on findings that meet the filter criteria (findingCriteria). Valid values are: ARCHIVE, suppress (automatically archive) the findings; and, NOOP, don't perform any action on the findings."
            }
          ]
        },
        "clientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A unique, case-sensitive token that you provide to ensure the idempotency of the request."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "<p>A custom description of the filter. The description can contain as many as 512 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a filter. Other users of your account might be able to see the filter's description, depending on the actions that they're allowed to perform in Amazon Macie.</p>"
            }
          ]
        },
        "findingCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingCriteria"
            },
            {
              "description": "The criteria to use to filter findings."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "<p>A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a filter. Other users of your account might be able to see the filter's name, depending on the actions that they're allowed to perform in Amazon Macie.</p>"
            }
          ]
        },
        "position": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings."
            }
          ]
        }
      },
      "required": [
        "action",
        "findingCriteria",
        "name"
      ],
      "title": "CreateFindingsFilterRequest",
      "type": "object"
    },
    "CreateFindingsFilterResponse": {
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the filter that was created."
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the filter that was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateInvitationsRequest": {
      "properties": {
        "accountIds": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists AWS account IDs, one for each account to send the invitation to."
            }
          ]
        },
        "disableEmailNotification": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether to send an email notification to the root user of each account that the invitation will be sent to. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. To send an email notification to the root user of each account, set this value to true."
            }
          ]
        },
        "message": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A custom message to include in the invitation. Amazon Macie adds this message to the standard content that it sends for an invitation."
            }
          ]
        }
      },
      "required": [
        "accountIds"
      ],
      "title": "CreateInvitationsRequest",
      "type": "object"
    },
    "CreateInvitationsResponse": {
      "properties": {
        "unprocessedAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfUnprocessedAccount"
            },
            {
              "description": "An array of objects, one for each account whose invitation hasn't been processed. Each object identifies the account and explains why the invitation hasn't been processed for the account."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateMemberRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "<p>A map of key-value pairs that specifies the tags to associate with the account in Amazon Macie.</p> <p>An account can have a maximum of 50 tags. Each tag consists of a tag key and an associated tag value. The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.</p>"
            }
          ]
        },
        "account": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountDetail"
            },
            {
              "description": "The details for the account to associate with the master account."
            }
          ]
        }
      },
      "required": [
        "account"
      ],
      "title": "CreateMemberRequest",
      "type": "object"
    },
    "CreateMemberResponse": {
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the account that was associated with the master account."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateSampleFindingsRequest": {
      "properties": {
        "findingTypes": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfFindingType"
            },
            {
              "description": "<p>An array that lists one or more types of findings to include in the set of sample findings. Currently, the only supported value is Policy:IAMUser/S3BucketEncryptionDisabled.</p> "
            }
          ]
        }
      },
      "title": "CreateSampleFindingsRequest",
      "type": "object"
    },
    "CreateSampleFindingsResponse": {
      "properties": {},
      "type": "object"
    },
    "Criterion": {
      "additionalProperties": {
        "$ref": "#/definitions/CriterionAdditionalProperties"
      },
      "description": "Specifies a condition that defines a property, operator, and value to use to filter the results of a query for findings.",
      "type": "object"
    },
    "CriterionAdditionalProperties": {
      "description": "Specifies the operator to use in a property-based condition that filters the results of a query for findings.",
      "properties": {
        "eq": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An equal to condition to apply to a specified property value for findings."
            }
          ]
        },
        "eqExactMatch": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "A condition that requires an array field to exactly match the specified property values. You can use this operator with the following properties: customDataIdentifiers.detections.arn, customDataIdentifiers.detections.name, resourcesAffected.s3Bucket.tags.key, resourcesAffected.s3Bucket.tags.value, resourcesAffected.s3Object.tags.key, resourcesAffected.s3Object.tags.value, sensitiveData.category, and sensitiveData.detections.type."
            }
          ]
        },
        "gt": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "A greater than condition to apply to a specified property value for findings."
            }
          ]
        },
        "gte": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "A greater than or equal to condition to apply to a specified property value for findings."
            }
          ]
        },
        "lt": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "A less than condition to apply to a specified property value for findings."
            }
          ]
        },
        "lte": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "A less than or equal to condition to apply to a specified property value for findings."
            }
          ]
        },
        "neq": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "A not equal to condition to apply to a specified property value for findings."
            }
          ]
        }
      },
      "type": "object"
    },
    "Currency": {
      "description": "The type of currency that data for a usage metric is reported in. Possible values are:",
      "enum": [
        "USD"
      ],
      "type": "string"
    },
    "CustomDataIdentifierSummary": {
      "description": "Provides information about a custom data identifier.",
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the custom data identifier."
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the custom data identifier was created."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom description of the custom data identifier."
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the custom data identifier."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom name of the custom data identifier."
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomDataIdentifiers": {
      "description": "Provides information about custom data identifiers that produced a sensitive data finding, and the number of occurrences of the data that they detected for the finding.",
      "properties": {
        "detections": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomDetections"
            },
            {
              "description": "The custom data identifiers that detected the data, and the number of occurrences of the data that each identifier detected."
            }
          ]
        },
        "totalCount": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of occurrences of the data that was detected by the custom data identifiers and produced the finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomDetection": {
      "description": "Provides information about a custom data identifier that produced a sensitive data finding, and the sensitive data that it detected for the finding.",
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the custom data identifier."
            }
          ]
        },
        "count": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of occurrences of the sensitive data that the custom data identifier detected."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the custom data identifier."
            }
          ]
        },
        "occurrences": {
          "allOf": [
            {
              "$ref": "#/definitions/Occurrences"
            },
            {
              "description": "The location of 1-15 occurrences of the sensitive data that the custom data identifier detected. A finding includes location data for a maximum of 15 occurrences of sensitive data."
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomDetections": {
      "description": "Provides information about custom data identifiers that produced a sensitive data finding, and the number of occurrences of the data that each identifier detected.",
      "items": {
        "$ref": "#/definitions/CustomDetection"
      },
      "type": "array"
    },
    "DailySchedule": {
      "description": "Specifies that a classification job runs once a day, every day. This is an empty object.",
      "properties": {},
      "type": "object"
    },
    "DayOfWeek": {
      "enum": [
        "SUNDAY",
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY"
      ],
      "type": "string"
    },
    "DeclineInvitationsRequest": {
      "properties": {
        "accountIds": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists AWS account IDs, one for each account that sent an invitation to decline."
            }
          ]
        }
      },
      "required": [
        "accountIds"
      ],
      "title": "DeclineInvitationsRequest",
      "type": "object"
    },
    "DeclineInvitationsResponse": {
      "properties": {
        "unprocessedAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfUnprocessedAccount"
            },
            {
              "description": "An array of objects, one for each account whose invitation hasn't been declined. Each object identifies the account and explains why the request hasn't been processed for that account."
            }
          ]
        }
      },
      "type": "object"
    },
    "DefaultDetection": {
      "description": "Provides information about a type of sensitive data that was detected by managed data identifiers and produced a sensitive data finding.",
      "properties": {
        "count": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of occurrences of the type of sensitive data that was detected."
            }
          ]
        },
        "occurrences": {
          "allOf": [
            {
              "$ref": "#/definitions/Occurrences"
            },
            {
              "description": "The location of 1-15 occurrences of the sensitive data that was detected. A finding includes location data for a maximum of 15 occurrences of sensitive data."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The type of sensitive data that was detected. For example, AWS_CREDENTIALS, PHONE_NUMBER, or ADDRESS."
            }
          ]
        }
      },
      "type": "object"
    },
    "DefaultDetections": {
      "description": "Provides information about sensitive data that was detected by managed data identifiers and produced a sensitive data finding, and the number of occurrences of each type of sensitive data that was detected.",
      "items": {
        "$ref": "#/definitions/DefaultDetection"
      },
      "type": "array"
    },
    "DeleteCustomDataIdentifierRequest": {
      "properties": {},
      "title": "DeleteCustomDataIdentifierRequest",
      "type": "object"
    },
    "DeleteCustomDataIdentifierResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteFindingsFilterRequest": {
      "properties": {},
      "title": "DeleteFindingsFilterRequest",
      "type": "object"
    },
    "DeleteFindingsFilterResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteInvitationsRequest": {
      "properties": {
        "accountIds": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists AWS account IDs, one for each account that sent an invitation to delete."
            }
          ]
        }
      },
      "required": [
        "accountIds"
      ],
      "title": "DeleteInvitationsRequest",
      "type": "object"
    },
    "DeleteInvitationsResponse": {
      "properties": {
        "unprocessedAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfUnprocessedAccount"
            },
            {
              "description": "An array of objects, one for each account whose invitation hasn't been deleted. Each object identifies the account and explains why the request hasn't been processed for that account."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteMemberRequest": {
      "properties": {},
      "title": "DeleteMemberRequest",
      "type": "object"
    },
    "DeleteMemberResponse": {
      "properties": {},
      "type": "object"
    },
    "DescribeBucketsRequest": {
      "properties": {
        "criteria": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketCriteria"
            },
            {
              "description": "The criteria to use to filter the query results."
            }
          ]
        },
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The maximum number of items to include in each page of the response. The default value is 50."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The nextToken string that specifies which page of results to return in a paginated response."
            }
          ]
        },
        "sortCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketSortCriteria"
            },
            {
              "description": "The criteria to use to sort the query results."
            }
          ]
        }
      },
      "title": "DescribeBucketsRequest",
      "type": "object"
    },
    "DescribeBucketsResponse": {
      "properties": {
        "buckets": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfBucketMetadata"
            },
            {
              "description": "An array of objects, one for each bucket that meets the filter criteria specified in the request."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeClassificationJobRequest": {
      "properties": {},
      "title": "DescribeClassificationJobRequest",
      "type": "object"
    },
    "DescribeClassificationJobResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A map of key-value pairs that specifies which tags (keys and values) are associated with the classification job."
            }
          ]
        },
        "clientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The token that was provided to ensure the idempotency of the request to create the job."
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the job was created."
            }
          ]
        },
        "customDataIdentifierIds": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "The custom data identifiers that the job uses to analyze data."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom description of the job."
            }
          ]
        },
        "initialRun": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the job is configured to analyze all existing, eligible objects immediately after it's created."
            }
          ]
        },
        "jobArn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the job."
            }
          ]
        },
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the job."
            }
          ]
        },
        "jobStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/JobStatus"
            },
            {
              "description": "<p>The current status of the job. Possible values are:</p> <ul><li><p>CANCELLED - You cancelled the job, or you paused the job while it had a status of RUNNING and you didn't resume it within 30 days of pausing it.</p></li> <li><p>COMPLETE - For a one-time job, Amazon Macie finished processing the data specified for the job. This value doesn't apply to recurring jobs.</p></li> <li><p>IDLE - For a recurring job, the previous scheduled run is complete and the next scheduled run is pending. This value doesn't apply to one-time jobs.</p></li> <li><p>PAUSED - Amazon Macie started running the job but additional processing would exceed the monthly sensitive data discovery quota for your account or one or more member accounts that the job analyzes data for.</p></li> <li><p>RUNNING - For a one-time job, the job is in progress. For a recurring job, a scheduled run is in progress.</p></li> <li><p>USER_PAUSED - You paused the job. If you paused the job while it had a status of RUNNING and you don't resume the job within 30 days of pausing it, the job expires and is cancelled. To check the job's expiration date, refer to the UserPausedDetails.jobExpiresAt property.</p></li></ul>"
            }
          ]
        },
        "jobType": {
          "allOf": [
            {
              "$ref": "#/definitions/JobType"
            },
            {
              "description": "<p>The schedule for running the job. Possible values are:</p> <ul><li><p>ONE_TIME - The job runs only once.</p></li> <li><p>SCHEDULED - The job runs on a daily, weekly, or monthly basis. The scheduleFrequency property indicates the recurrence pattern for the job.</p></li></ul>"
            }
          ]
        },
        "lastRunErrorStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/LastRunErrorStatus"
            },
            {
              "description": "Specifies whether any account- or bucket-level access errors occurred when the job ran. For a recurring job, this value indicates the error status of the job's most recent run."
            }
          ]
        },
        "lastRunTime": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the job started. If the job is a recurring job, this value indicates when the most recent run started."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom name of the job."
            }
          ]
        },
        "s3JobDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/S3JobDefinition"
            },
            {
              "description": "The S3 buckets that the job is configured to analyze, and the scope of that analysis."
            }
          ]
        },
        "samplingPercentage": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The sampling depth, as a percentage, that determines the percentage of eligible objects that the job analyzes."
            }
          ]
        },
        "scheduleFrequency": {
          "allOf": [
            {
              "$ref": "#/definitions/JobScheduleFrequency"
            },
            {
              "description": "The recurrence pattern for running the job. If the job is configured to run only once, this value is null."
            }
          ]
        },
        "statistics": {
          "allOf": [
            {
              "$ref": "#/definitions/Statistics"
            },
            {
              "description": "The number of times that the job has run and processing statistics for the job's current run."
            }
          ]
        },
        "userPausedDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/UserPausedDetails"
            },
            {
              "description": "If the current status of the job is USER_PAUSED, specifies when the job was paused and when the job will expire and be cancelled if it isn't resumed. This value is present only if the value for jobStatus is USER_PAUSED."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeOrganizationConfigurationRequest": {
      "properties": {},
      "title": "DescribeOrganizationConfigurationRequest",
      "type": "object"
    },
    "DescribeOrganizationConfigurationResponse": {
      "properties": {
        "autoEnable": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether Amazon Macie is enabled automatically for accounts that are added to the AWS organization."
            }
          ]
        },
        "maxAccountLimitReached": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the maximum number of Amazon Macie member accounts are part of the AWS organization."
            }
          ]
        }
      },
      "type": "object"
    },
    "DisableMacieRequest": {
      "properties": {},
      "title": "DisableMacieRequest",
      "type": "object"
    },
    "DisableMacieResponse": {
      "properties": {},
      "type": "object"
    },
    "DisableOrganizationAdminAccountRequest": {
      "properties": {},
      "title": "DisableOrganizationAdminAccountRequest",
      "type": "object"
    },
    "DisableOrganizationAdminAccountResponse": {
      "properties": {},
      "type": "object"
    },
    "DisassociateFromMasterAccountRequest": {
      "properties": {},
      "title": "DisassociateFromMasterAccountRequest",
      "type": "object"
    },
    "DisassociateFromMasterAccountResponse": {
      "properties": {},
      "type": "object"
    },
    "DisassociateMemberRequest": {
      "properties": {},
      "title": "DisassociateMemberRequest",
      "type": "object"
    },
    "DisassociateMemberResponse": {
      "properties": {},
      "type": "object"
    },
    "DomainDetails": {
      "description": "Provides information about the domain name of the device that an entity used to perform an action on an affected resource.",
      "properties": {
        "domainName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the domain."
            }
          ]
        }
      },
      "type": "object"
    },
    "EffectivePermission": {
      "enum": [
        "PUBLIC",
        "NOT_PUBLIC",
        "UNKNOWN"
      ],
      "type": "string"
    },
    "EnableMacieRequest": {
      "properties": {
        "clientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A unique, case-sensitive token that you provide to ensure the idempotency of the request."
            }
          ]
        },
        "findingPublishingFrequency": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingPublishingFrequency"
            },
            {
              "description": "Specifies how often to publish updates to policy findings for the account. This includes publishing updates to AWS Security Hub and Amazon EventBridge (formerly called Amazon CloudWatch Events)."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/MacieStatus"
            },
            {
              "description": "Specifies the status for the account. To enable Amazon Macie and start all Amazon Macie activities for the account, set this value to ENABLED."
            }
          ]
        }
      },
      "title": "EnableMacieRequest",
      "type": "object"
    },
    "EnableMacieResponse": {
      "properties": {},
      "type": "object"
    },
    "EnableOrganizationAdminAccountRequest": {
      "properties": {
        "adminAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization."
            }
          ]
        },
        "clientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A unique, case-sensitive token that you provide to ensure the idempotency of the request."
            }
          ]
        }
      },
      "required": [
        "adminAccountId"
      ],
      "title": "EnableOrganizationAdminAccountRequest",
      "type": "object"
    },
    "EnableOrganizationAdminAccountResponse": {
      "properties": {},
      "type": "object"
    },
    "EncryptionType": {
      "description": "The type of server-side encryption that's used to encrypt an S3 object or objects in an S3 bucket. Valid values are:",
      "enum": [
        "NONE",
        "AES256",
        "aws:kms",
        "UNKNOWN"
      ],
      "type": "string"
    },
    "ErrorCode": {
      "description": "The source of an error, issue, or delay. Possible values are:",
      "enum": [
        "ClientError",
        "InternalError"
      ],
      "type": "string"
    },
    "FederatedUser": {
      "description": "Provides information about an identity that performed an action on an affected resource by using temporary security credentials. The credentials were obtained using the GetFederationToken operation of the AWS Security Token Service (AWS STS) API.",
      "properties": {
        "accessKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS access key ID that identifies the credentials."
            }
          ]
        },
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account that owns the entity that was used to get the credentials."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the entity that was used to get the credentials."
            }
          ]
        },
        "principalId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the entity that was used to get the credentials."
            }
          ]
        },
        "sessionContext": {
          "allOf": [
            {
              "$ref": "#/definitions/SessionContext"
            },
            {
              "description": "The details of the session that was created for the credentials, including the entity that issued the session."
            }
          ]
        }
      },
      "type": "object"
    },
    "Finding": {
      "description": "Provides the details of a finding.",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account that the finding applies to. This is typically the account that owns the affected resource."
            }
          ]
        },
        "archived": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the finding is archived."
            }
          ]
        },
        "category": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingCategory"
            },
            {
              "description": "The category of the finding. Possible values are: CLASSIFICATION, for a sensitive data finding; and, POLICY, for a policy finding."
            }
          ]
        },
        "classificationDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/ClassificationDetails"
            },
            {
              "description": "The details of a sensitive data finding. This value is null for a policy finding."
            }
          ]
        },
        "count": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of occurrences of the finding. For sensitive data findings, this value is always 1. All sensitive data findings are considered new (unique) because they derive from individual classification jobs."
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the finding was created."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The description of the finding."
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the finding. This is a random string that Amazon Macie generates and assigns to a finding when it creates the finding."
            }
          ]
        },
        "partition": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS partition that Amazon Macie created the finding in."
            }
          ]
        },
        "policyDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/PolicyDetails"
            },
            {
              "description": "The details of a policy finding. This value is null for a sensitive data finding."
            }
          ]
        },
        "region": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS Region that Amazon Macie created the finding in."
            }
          ]
        },
        "resourcesAffected": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourcesAffected"
            },
            {
              "description": "The resources that the finding applies to."
            }
          ]
        },
        "sample": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the finding is a sample finding. A <i>sample finding</i> is a finding that uses example data to demonstrate what a finding might contain."
            }
          ]
        },
        "schemaVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The version of the schema that was used to define the data structures in the finding."
            }
          ]
        },
        "severity": {
          "allOf": [
            {
              "$ref": "#/definitions/Severity"
            },
            {
              "description": "The severity level and score for the finding."
            }
          ]
        },
        "title": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The brief description of the finding."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingType"
            },
            {
              "description": "The type of the finding."
            }
          ]
        },
        "updatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the finding was last updated. For sensitive data findings, this value is the same as the value for the createdAt property. All sensitive data findings are considered new (unique) because they derive from individual classification jobs."
            }
          ]
        }
      },
      "type": "object"
    },
    "FindingAction": {
      "description": "Provides information about an action that occurred for a resource and produced a policy finding.",
      "properties": {
        "actionType": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingActionType"
            },
            {
              "description": "The type of action that occurred for the affected resource. This value is typically AWS_API_CALL, which indicates that an entity invoked an API operation for the resource."
            }
          ]
        },
        "apiCallDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/ApiCallDetails"
            },
            {
              "description": "The invocation details of the API operation that an entity invoked for the affected resource, if the value for the actionType property is AWS_API_CALL."
            }
          ]
        }
      },
      "type": "object"
    },
    "FindingActionType": {
      "description": "The type of action that occurred for the resource and produced the policy finding:",
      "enum": [
        "AWS_API_CALL"
      ],
      "type": "string"
    },
    "FindingActor": {
      "description": "Provides information about an entity that performed an action that produced a policy finding for a resource.",
      "properties": {
        "domainDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainDetails"
            },
            {
              "description": "The domain name of the device that the entity used to perform the action on the affected resource."
            }
          ]
        },
        "ipAddressDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/IpAddressDetails"
            },
            {
              "description": "The IP address of the device that the entity used to perform the action on the affected resource. This object also provides information such as the owner and geographic location for the IP address."
            }
          ]
        },
        "userIdentity": {
          "allOf": [
            {
              "$ref": "#/definitions/UserIdentity"
            },
            {
              "description": "The type and other characteristics of the entity that performed the action on the affected resource."
            }
          ]
        }
      },
      "type": "object"
    },
    "FindingCategory": {
      "description": "The category of the finding. Valid values are:",
      "enum": [
        "CLASSIFICATION",
        "POLICY"
      ],
      "type": "string"
    },
    "FindingCriteria": {
      "description": "Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.",
      "properties": {
        "criterion": {
          "allOf": [
            {
              "$ref": "#/definitions/Criterion"
            },
            {
              "description": "A condition that specifies the property, operator, and value to use to filter the results."
            }
          ]
        }
      },
      "type": "object"
    },
    "FindingPublishingFrequency": {
      "description": "The frequency with which Amazon Macie publishes updates to policy findings for an account. This includes publishing updates to AWS Security Hub and Amazon EventBridge (formerly called Amazon CloudWatch Events). Valid values are:",
      "enum": [
        "FIFTEEN_MINUTES",
        "ONE_HOUR",
        "SIX_HOURS"
      ],
      "type": "string"
    },
    "FindingStatisticsSortAttributeName": {
      "description": "The grouping to sort the results by. Valid values are:",
      "enum": [
        "groupKey",
        "count"
      ],
      "type": "string"
    },
    "FindingStatisticsSortCriteria": {
      "description": "Specifies criteria for sorting the results of a query that retrieves aggregated statistical data about findings.",
      "properties": {
        "attributeName": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingStatisticsSortAttributeName"
            },
            {
              "description": "The grouping to sort the results by. Valid values are: count, sort the results by the number of findings in each group of results; and, groupKey, sort the results by the name of each group of results."
            }
          ]
        },
        "orderBy": {
          "allOf": [
            {
              "$ref": "#/definitions/OrderBy"
            },
            {
              "description": "The sort order to apply to the results, based on the value for the property specified by the attributeName property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
            }
          ]
        }
      },
      "type": "object"
    },
    "FindingType": {
      "description": "The type of finding. For details about each type, see <a href=\"https://docs.aws.amazon.com/macie/latest/user/findings-types.html\">Types of Amazon Macie findings</a> in the <i>Amazon Macie User Guide</i>. Valid values are:",
      "enum": [
        "SensitiveData:S3Object/Multiple",
        "SensitiveData:S3Object/Financial",
        "SensitiveData:S3Object/Personal",
        "SensitiveData:S3Object/Credentials",
        "SensitiveData:S3Object/CustomIdentifier",
        "Policy:IAMUser/S3BucketPublic",
        "Policy:IAMUser/S3BucketSharedExternally",
        "Policy:IAMUser/S3BucketReplicatedExternally",
        "Policy:IAMUser/S3BucketEncryptionDisabled",
        "Policy:IAMUser/S3BlockPublicAccessDisabled"
      ],
      "type": "string"
    },
    "FindingsFilterAction": {
      "description": "The action to perform on findings that meet the filter criteria. To suppress (automatically archive) findings that meet the criteria, set this value to ARCHIVE. Valid values are:",
      "enum": [
        "ARCHIVE",
        "NOOP"
      ],
      "type": "string"
    },
    "FindingsFilterListItem": {
      "description": "Provides information about a findings filter.",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A map of key-value pairs that identifies the tags (keys and values) that are associated with the filter."
            }
          ]
        },
        "action": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingsFilterAction"
            },
            {
              "description": "The action that's performed on findings that meet the filter criteria. Possible values are: ARCHIVE, suppress (automatically archive) the findings; and, NOOP, don't perform any action on the findings."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the filter."
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the filter."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom name of the filter."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetBucketStatisticsRequest": {
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account."
            }
          ]
        }
      },
      "title": "GetBucketStatisticsRequest",
      "type": "object"
    },
    "GetBucketStatisticsResponse": {
      "properties": {
        "bucketCount": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of buckets."
            }
          ]
        },
        "bucketCountByEffectivePermission": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketCountByEffectivePermission"
            },
            {
              "description": "The total number of buckets that are publicly accessible based on a combination of permissions settings for each bucket."
            }
          ]
        },
        "bucketCountByEncryptionType": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketCountByEncryptionType"
            },
            {
              "description": "The total number of buckets, grouped by server-side encryption type. This object also reports the total number of buckets that don't encrypt objects by default."
            }
          ]
        },
        "bucketCountBySharedAccessType": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketCountBySharedAccessType"
            },
            {
              "description": "The total number of buckets that are shared with another AWS account."
            }
          ]
        },
        "classifiableObjectCount": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of objects that Amazon Macie can analyze in the buckets. These objects use a supported storage class and have a file name extension for a supported file or storage format."
            }
          ]
        },
        "classifiableSizeInBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total storage size, in bytes, of all the objects that Amazon Macie can analyze in the buckets. These objects use a supported storage class and have a file name extension for a supported file or storage format."
            }
          ]
        },
        "lastUpdated": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when Amazon Macie most recently retrieved data about the buckets from Amazon S3."
            }
          ]
        },
        "objectCount": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of objects in the buckets."
            }
          ]
        },
        "sizeInBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total storage size, in bytes, of the buckets."
            }
          ]
        },
        "sizeInBytesCompressed": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total compressed storage size, in bytes, of the buckets."
            }
          ]
        },
        "unclassifiableObjectCount": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectLevelStatistics"
            },
            {
              "description": "The total number of objects that Amazon Macie can't analyze in the buckets. These objects don't use a supported storage class or don't have a file name extension for a supported file or storage format."
            }
          ]
        },
        "unclassifiableObjectSizeInBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectLevelStatistics"
            },
            {
              "description": "The total storage size, in bytes, of all the objects that Amazon Macie can't analyze in the buckets. These objects don't use a supported storage class or don't have a file name extension for a supported file or storage format."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetClassificationExportConfigurationRequest": {
      "properties": {},
      "title": "GetClassificationExportConfigurationRequest",
      "type": "object"
    },
    "GetClassificationExportConfigurationResponse": {
      "properties": {
        "configuration": {
          "allOf": [
            {
              "$ref": "#/definitions/ClassificationExportConfiguration"
            },
            {
              "description": "The location where data classification results are stored, and the encryption settings that are used when storing results in that location."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetCustomDataIdentifierRequest": {
      "properties": {},
      "title": "GetCustomDataIdentifierRequest",
      "type": "object"
    },
    "GetCustomDataIdentifierResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A map of key-value pairs that identifies the tags (keys and values) that are associated with the custom data identifier."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the custom data identifier."
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the custom data identifier was created."
            }
          ]
        },
        "deleted": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the custom data identifier was deleted. If you delete a custom data identifier, Amazon Macie doesn't delete it permanently. Instead, it soft deletes the identifier."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom description of the custom data identifier."
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the custom data identifier."
            }
          ]
        },
        "ignoreWords": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. Ignore words are case sensitive."
            }
          ]
        },
        "keywords": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists specific character sequences (keywords), one of which must be within proximity (maximumMatchDistance) of the regular expression to match. Keywords aren't case sensitive."
            }
          ]
        },
        "maximumMatchDistance": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom name of the custom data identifier."
            }
          ]
        },
        "regex": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The regular expression (<i>regex</i>) that defines the pattern to match."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetFindingStatisticsRequest": {
      "properties": {
        "findingCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingCriteria"
            },
            {
              "description": "The criteria to use to filter the query results."
            }
          ]
        },
        "groupBy": {
          "allOf": [
            {
              "$ref": "#/definitions/GroupBy"
            },
            {
              "description": "<p>The finding property to use to group the query results. Valid values are:</p> <ul><li><p>classificationDetails.jobId - The unique identifier for the classification job that produced the finding.</p></li> <li><p>resourcesAffected.s3Bucket.name - The name of the S3 bucket that the finding applies to.</p></li> <li><p>severity.description - The severity level of the finding, such as High or Medium.</p></li> <li><p>type - The type of finding, such as Policy:IAMUser/S3BucketPublic and SensitiveData:S3Object/Personal.</p></li></ul>"
            }
          ]
        },
        "size": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The maximum number of items to include in each page of the response."
            }
          ]
        },
        "sortCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingStatisticsSortCriteria"
            },
            {
              "description": "The criteria to use to sort the query results."
            }
          ]
        }
      },
      "required": [
        "groupBy"
      ],
      "title": "GetFindingStatisticsRequest",
      "type": "object"
    },
    "GetFindingStatisticsResponse": {
      "properties": {
        "countsByGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfGroupCount"
            },
            {
              "description": "An array of objects, one for each group of findings that meet the filter criteria specified in the request."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetFindingsFilterRequest": {
      "properties": {},
      "title": "GetFindingsFilterRequest",
      "type": "object"
    },
    "GetFindingsFilterResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A map of key-value pairs that identifies the tags (keys and values) that are associated with the filter."
            }
          ]
        },
        "action": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingsFilterAction"
            },
            {
              "description": "The action that's performed on findings that meet the filter criteria (findingCriteria). Possible values are: ARCHIVE, suppress (automatically archive) the findings; and, NOOP, don't perform any action on the findings."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the filter."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom description of the filter."
            }
          ]
        },
        "findingCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingCriteria"
            },
            {
              "description": "The criteria that's used to filter findings."
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the filter."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom name of the filter."
            }
          ]
        },
        "position": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetFindingsRequest": {
      "properties": {
        "findingIds": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array of strings that lists the unique identifiers for the findings to retrieve."
            }
          ]
        },
        "sortCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/SortCriteria"
            },
            {
              "description": "The criteria for sorting the results of the request."
            }
          ]
        }
      },
      "required": [
        "findingIds"
      ],
      "title": "GetFindingsRequest",
      "type": "object"
    },
    "GetFindingsResponse": {
      "properties": {
        "findings": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfFinding"
            },
            {
              "description": "An array of objects, one for each finding that meets the criteria specified in the request."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetInvitationsCountRequest": {
      "properties": {},
      "title": "GetInvitationsCountRequest",
      "type": "object"
    },
    "GetInvitationsCountResponse": {
      "properties": {
        "invitationsCount": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of invitations that were received by the account, not including the currently accepted invitation."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetMacieSessionRequest": {
      "properties": {},
      "title": "GetMacieSessionRequest",
      "type": "object"
    },
    "GetMacieSessionResponse": {
      "properties": {
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the Amazon Macie account was created."
            }
          ]
        },
        "findingPublishingFrequency": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingPublishingFrequency"
            },
            {
              "description": "The frequency with which Amazon Macie publishes updates to policy findings for the account. This includes publishing updates to AWS Security Hub and Amazon EventBridge (formerly called Amazon CloudWatch Events)."
            }
          ]
        },
        "serviceRole": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the service-linked role that allows Amazon Macie to monitor and analyze data in AWS resources for the account."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/MacieStatus"
            },
            {
              "description": "The current status of the Amazon Macie account. Possible values are: PAUSED, the account is enabled but all Amazon Macie activities are suspended (paused) for the account; and, ENABLED, the account is enabled and all Amazon Macie activities are enabled for the account."
            }
          ]
        },
        "updatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, of the most recent change to the status of the Amazon Macie account."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetMasterAccountRequest": {
      "properties": {},
      "title": "GetMasterAccountRequest",
      "type": "object"
    },
    "GetMasterAccountResponse": {
      "properties": {
        "master": {
          "allOf": [
            {
              "$ref": "#/definitions/Invitation"
            },
            {
              "description": "The AWS account ID for the master account. If the accounts are associated by a Macie membership invitation, this object also provides details about the invitation that was sent and accepted to establish the relationship between the accounts."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetMemberRequest": {
      "properties": {},
      "title": "GetMemberRequest",
      "type": "object"
    },
    "GetMemberResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A map of key-value pairs that identifies the tags (keys and values) that are associated with the member account in Amazon Macie."
            }
          ]
        },
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the account."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the account."
            }
          ]
        },
        "email": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The email address for the account."
            }
          ]
        },
        "invitedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when an Amazon Macie membership invitation was last sent to the account. This value is null if a Macie invitation hasn't been sent to the account."
            }
          ]
        },
        "masterAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the master account."
            }
          ]
        },
        "relationshipStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/RelationshipStatus"
            },
            {
              "description": "The current status of the relationship between the account and the master account."
            }
          ]
        },
        "updatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, of the most recent change to the status of the relationship between the account and the master account."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetUsageStatisticsRequest": {
      "properties": {
        "filterBy": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfUsageStatisticsFilter"
            },
            {
              "description": "An array of objects, one for each condition to use to filter the query results. If the array contains more than one object, Amazon Macie uses an AND operator to join the conditions specified by the objects."
            }
          ]
        },
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The maximum number of items to include in each page of the response."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The nextToken string that specifies which page of results to return in a paginated response."
            }
          ]
        },
        "sortBy": {
          "allOf": [
            {
              "$ref": "#/definitions/UsageStatisticsSortBy"
            },
            {
              "description": "The criteria to use to sort the query results."
            }
          ]
        }
      },
      "title": "GetUsageStatisticsRequest",
      "type": "object"
    },
    "GetUsageStatisticsResponse": {
      "properties": {
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages."
            }
          ]
        },
        "records": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfUsageRecord"
            },
            {
              "description": "An array of objects that contains the results of the query. Each object contains the data for an account that meets the filter criteria specified in the request."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetUsageTotalsRequest": {
      "properties": {},
      "title": "GetUsageTotalsRequest",
      "type": "object"
    },
    "GetUsageTotalsResponse": {
      "properties": {
        "usageTotals": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfUsageTotal"
            },
            {
              "description": "An array of objects that contains the results of the query. Each object contains the data for a specific usage metric."
            }
          ]
        }
      },
      "type": "object"
    },
    "GroupBy": {
      "enum": [
        "resourcesAffected.s3Bucket.name",
        "type",
        "classificationDetails.jobId",
        "severity.description"
      ],
      "type": "string"
    },
    "GroupCount": {
      "description": "Provides a group of results for a query that retrieved aggregated statistical data about findings.",
      "properties": {
        "count": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of findings in the group of query results."
            }
          ]
        },
        "groupKey": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the property that defines the group in the query results, as specified by the groupBy property in the query request."
            }
          ]
        }
      },
      "type": "object"
    },
    "IamUser": {
      "description": "Provides information about an AWS Identity and Access Management (IAM) user who performed an action on an affected resource.",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account that's associated with the IAM user who performed the action."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the principal that performed the action. The last section of the ARN contains the name of the user who performed the action."
            }
          ]
        },
        "principalId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the IAM user who performed the action."
            }
          ]
        },
        "userName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The user name of the IAM user who performed the action."
            }
          ]
        }
      },
      "type": "object"
    },
    "InternalServerException": {},
    "Invitation": {
      "description": "Provides information about an Amazon Macie membership invitation that was received by an account.",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the account that sent the invitation."
            }
          ]
        },
        "invitationId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the invitation. Amazon Macie uses this identifier to validate the inviter account with the invitee account."
            }
          ]
        },
        "invitedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the invitation was sent."
            }
          ]
        },
        "relationshipStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/RelationshipStatus"
            },
            {
              "description": "The status of the relationship between the account that sent the invitation (<i>inviter account</i>) and the account that received the invitation (<i>invitee account</i>)."
            }
          ]
        }
      },
      "type": "object"
    },
    "IpAddressDetails": {
      "description": "Provides information about the IP address of the device that an entity used to perform an action on an affected resource.",
      "properties": {
        "ipAddressV4": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Internet Protocol version 4 (IPv4) address of the device."
            }
          ]
        },
        "ipCity": {
          "allOf": [
            {
              "$ref": "#/definitions/IpCity"
            },
            {
              "description": "The city that the IP address originated from."
            }
          ]
        },
        "ipCountry": {
          "allOf": [
            {
              "$ref": "#/definitions/IpCountry"
            },
            {
              "description": "The country that the IP address originated from."
            }
          ]
        },
        "ipGeoLocation": {
          "allOf": [
            {
              "$ref": "#/definitions/IpGeoLocation"
            },
            {
              "description": "The geographic coordinates of the location that the IP address originated from."
            }
          ]
        },
        "ipOwner": {
          "allOf": [
            {
              "$ref": "#/definitions/IpOwner"
            },
            {
              "description": "The registered owner of the IP address."
            }
          ]
        }
      },
      "type": "object"
    },
    "IpCity": {
      "description": "Provides information about the city that an IP address originated from.",
      "properties": {
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the city."
            }
          ]
        }
      },
      "type": "object"
    },
    "IpCountry": {
      "description": "Provides information about the country that an IP address originated from.",
      "properties": {
        "code": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The two-character code, in ISO 3166-1 alpha-2 format, for the country that the IP address originated from. For example, US for the United States."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the country that the IP address originated from."
            }
          ]
        }
      },
      "type": "object"
    },
    "IpGeoLocation": {
      "description": "Provides geographic coordinates that indicate where a specified IP address originated from.",
      "properties": {
        "lat": {
          "allOf": [
            {
              "$ref": "#/definitions/__double"
            },
            {
              "description": "The latitude coordinate of the location, rounded to four decimal places."
            }
          ]
        },
        "lon": {
          "allOf": [
            {
              "$ref": "#/definitions/__double"
            },
            {
              "description": "The longitude coordinate of the location, rounded to four decimal places."
            }
          ]
        }
      },
      "type": "object"
    },
    "IpOwner": {
      "description": "Provides information about the registered owner of an IP address.",
      "properties": {
        "asn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The autonomous system number (ASN) for the autonomous system that included the IP address."
            }
          ]
        },
        "asnOrg": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The organization identifier that's associated with the autonomous system number (ASN) for the autonomous system that included the IP address."
            }
          ]
        },
        "isp": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the internet service provider (ISP) that owned the IP address."
            }
          ]
        },
        "org": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the organization that owned the IP address."
            }
          ]
        }
      },
      "type": "object"
    },
    "IsDefinedInJob": {
      "enum": [
        "TRUE",
        "FALSE",
        "UNKNOWN"
      ],
      "type": "string"
    },
    "IsMonitoredByJob": {
      "enum": [
        "TRUE",
        "FALSE",
        "UNKNOWN"
      ],
      "type": "string"
    },
    "JobComparator": {
      "description": "The operator to use in a condition. Valid values are:",
      "enum": [
        "EQ",
        "GT",
        "GTE",
        "LT",
        "LTE",
        "NE",
        "CONTAINS"
      ],
      "type": "string"
    },
    "JobDetails": {
      "description": "Specifies whether any one-time or recurring classification jobs are configured to analyze data in an S3 bucket, and, if so, the details of the job that ran most recently.",
      "properties": {
        "isDefinedInJob": {
          "allOf": [
            {
              "$ref": "#/definitions/IsDefinedInJob"
            },
            {
              "description": "<p>Specifies whether any one-time or recurring jobs are configured to analyze data in the bucket. Possible values are:</p> <ul><li><p>TRUE - One or more jobs is configured to analyze data in the bucket, and at least one of those jobs has a status other than CANCELLED.</p></li> <li><p>FALSE - No jobs are configured to analyze data in the bucket, or all the jobs that are configured to analyze data in the bucket have a status of CANCELLED.</p></li> <li><p>UNKNOWN - An exception occurred when Amazon Macie attempted to retrieve job data for the bucket.</p></li></ul> <p></p>"
            }
          ]
        },
        "isMonitoredByJob": {
          "allOf": [
            {
              "$ref": "#/definitions/IsMonitoredByJob"
            },
            {
              "description": "<p>Specifies whether any recurring jobs are configured to analyze data in the bucket. Possible values are:</p> <ul><li><p>TRUE - One or more recurring jobs is configured to analyze data in the bucket, and at least one of those jobs has a status other than CANCELLED.</p></li> <li><p>FALSE - No recurring jobs are configured to analyze data in the bucket, or all the recurring jobs that are configured to analyze data in the bucket have a status of CANCELLED.</p></li> <li><p>UNKNOWN - An exception occurred when Amazon Macie attempted to retrieve job data for the bucket.</p></li></ul>"
            }
          ]
        },
        "lastJobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "<p>The unique identifier for the job that ran most recently (either the latest run of a recurring job or the only run of a one-time job) and is configured to analyze data in the bucket.</p> <p>This value is null if the value for the isDefinedInJob property is FALSE or UNKNOWN.</p>"
            }
          ]
        },
        "lastJobRunTime": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "<p>The date and time, in UTC and extended ISO 8601 format, when the job (lastJobId) started. If the job is a recurring job, this value indicates when the most recent run started.</p> <p>This value is null if the value for the isDefinedInJob property is FALSE or UNKNOWN.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobScheduleFrequency": {
      "description": "Specifies the recurrence pattern for running a classification job.",
      "properties": {
        "dailySchedule": {
          "allOf": [
            {
              "$ref": "#/definitions/DailySchedule"
            },
            {
              "description": "Specifies a daily recurrence pattern for running the job."
            }
          ]
        },
        "monthlySchedule": {
          "allOf": [
            {
              "$ref": "#/definitions/MonthlySchedule"
            },
            {
              "description": "Specifies a monthly recurrence pattern for running the job."
            }
          ]
        },
        "weeklySchedule": {
          "allOf": [
            {
              "$ref": "#/definitions/WeeklySchedule"
            },
            {
              "description": "Specifies a weekly recurrence pattern for running the job."
            }
          ]
        }
      },
      "type": "object"
    },
    "JobScopeTerm": {
      "description": "Specifies a property- or tag-based condition that defines criteria for including or excluding objects from a classification job.",
      "properties": {
        "simpleScopeTerm": {
          "allOf": [
            {
              "$ref": "#/definitions/SimpleScopeTerm"
            },
            {
              "description": "A property-based condition that defines a property, operator, and one or more values for including or excluding an object from the job."
            }
          ]
        },
        "tagScopeTerm": {
          "allOf": [
            {
              "$ref": "#/definitions/TagScopeTerm"
            },
            {
              "description": "A tag-based condition that defines the operator and tag keys or tag key and value pairs for including or excluding an object from the job."
            }
          ]
        }
      },
      "type": "object"
    },
    "JobScopingBlock": {
      "description": "Specifies one or more property- and tag-based conditions that define criteria for including or excluding objects from a classification job. If you specify more than one condition, Amazon Macie uses an AND operator to join the conditions.",
      "properties": {
        "and": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfJobScopeTerm"
            },
            {
              "description": "An array of conditions, one for each condition that determines which objects to include or exclude from the job."
            }
          ]
        }
      },
      "type": "object"
    },
    "JobStatus": {
      "description": "The status of a classification job. Possible values are:",
      "enum": [
        "RUNNING",
        "PAUSED",
        "CANCELLED",
        "COMPLETE",
        "IDLE",
        "USER_PAUSED"
      ],
      "type": "string"
    },
    "JobSummary": {
      "description": "Provides information about a classification job, including the current status of the job.",
      "properties": {
        "bucketDefinitions": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfS3BucketDefinitionForJob"
            },
            {
              "description": "The S3 buckets that the job is configured to analyze."
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the job was created."
            }
          ]
        },
        "jobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the job."
            }
          ]
        },
        "jobStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/JobStatus"
            },
            {
              "description": "<p>The current status of the job. Possible values are:</p> <ul><li><p>CANCELLED - You cancelled the job, or you paused the job while it had a status of RUNNING and you didn't resume it within 30 days of pausing it.</p></li> <li><p>COMPLETE - For a one-time job, Amazon Macie finished processing the data specified for the job. This value doesn't apply to recurring jobs.</p></li> <li><p>IDLE - For a recurring job, the previous scheduled run is complete and the next scheduled run is pending. This value doesn't apply to one-time jobs.</p></li> <li><p>PAUSED - Amazon Macie started running the job but additional processing would exceed the monthly sensitive data discovery quota for your account or one or more member accounts that the job analyzes data for.</p></li> <li><p>RUNNING - For a one-time job, the job is in progress. For a recurring job, a scheduled run is in progress.</p></li> <li><p>USER_PAUSED - You paused the job. If you paused the job while it had a status of RUNNING and you don't resume the job within 30 days of pausing it, the job expires and is cancelled. To check the job's expiration date, refer to the UserPausedDetails.jobExpiresAt property.</p></li></ul>"
            }
          ]
        },
        "jobType": {
          "allOf": [
            {
              "$ref": "#/definitions/JobType"
            },
            {
              "description": "<p>The schedule for running the job. Possible values are:</p> <ul><li><p>ONE_TIME - The job runs only once.</p></li> <li><p>SCHEDULED - The job runs on a daily, weekly, or monthly basis.</p></li></ul>"
            }
          ]
        },
        "lastRunErrorStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/LastRunErrorStatus"
            },
            {
              "description": "Specifies whether any account- or bucket-level access errors occurred when the job ran. For a recurring job, this value indicates the error status of the job's most recent run."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The custom name of the job."
            }
          ]
        },
        "userPausedDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/UserPausedDetails"
            },
            {
              "description": "If the current status of the job is USER_PAUSED, specifies when the job was paused and when the job will expire and be cancelled if it isn't resumed. This value is present only if the value for jobStatus is USER_PAUSED."
            }
          ]
        }
      },
      "type": "object"
    },
    "JobType": {
      "description": "The schedule for running a classification job. Valid values are:",
      "enum": [
        "ONE_TIME",
        "SCHEDULED"
      ],
      "type": "string"
    },
    "KeyValuePair": {
      "description": "Provides information about the tags that are associated with an S3 bucket or object. Each tag consists of a required tag key and an associated tag value.",
      "properties": {
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "One part of a key-value pair that comprises a tag. A tag key is a general label that acts as a category for more specific tag values."
            }
          ]
        },
        "value": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "One part of a key-value pair that comprises a tag. A tag value acts as a descriptor for a tag key. A tag value can be an empty string."
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyValuePairList": {
      "description": "Provides information about the tags that are associated with an S3 bucket or object. Each tag consists of a required tag key and an associated tag value.",
      "items": {
        "$ref": "#/definitions/KeyValuePair"
      },
      "type": "array"
    },
    "LastRunErrorStatus": {
      "description": "Specifies whether any account- or bucket-level access errors occurred when a classification job ran. For example, the job is configured to analyze data for a member account that was suspended, or the job is configured to analyze an S3 bucket that Amazon Macie isn't allowed to access.",
      "properties": {
        "code": {
          "allOf": [
            {
              "$ref": "#/definitions/LastRunErrorStatusCode"
            },
            {
              "description": "<p>Specifies whether any account- or bucket-level access errors occurred when the job ran. For a recurring job, this value indicates the error status of the job's most recent run. Possible values are:</p> <ul><li><p>ERROR - One or more errors occurred. Amazon Macie didn't process all the data specified for the job.</p></li> <li><p>NONE - No errors occurred. Macie processed all the data specified for the job.</p></li></ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "LastRunErrorStatusCode": {
      "description": "Specifies whether any account- or bucket-level access errors occurred during the run of a one-time classification job or the most recent run of a recurring classification job. Possible values are:",
      "enum": [
        "NONE",
        "ERROR"
      ],
      "type": "string"
    },
    "ListClassificationJobsRequest": {
      "properties": {
        "filterCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/ListJobsFilterCriteria"
            },
            {
              "description": "The criteria to use to filter the results."
            }
          ]
        },
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The maximum number of items to include in each page of the response."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The nextToken string that specifies which page of results to return in a paginated response."
            }
          ]
        },
        "sortCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/ListJobsSortCriteria"
            },
            {
              "description": "The criteria to use to sort the results."
            }
          ]
        }
      },
      "title": "ListClassificationJobsRequest",
      "type": "object"
    },
    "ListClassificationJobsResponse": {
      "properties": {
        "items": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfJobSummary"
            },
            {
              "description": "An array of objects, one for each job that meets the filter criteria specified in the request."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListCustomDataIdentifiersRequest": {
      "properties": {
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The maximum number of items to include in each page of the response."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The nextToken string that specifies which page of results to return in a paginated response."
            }
          ]
        }
      },
      "title": "ListCustomDataIdentifiersRequest",
      "type": "object"
    },
    "ListCustomDataIdentifiersResponse": {
      "properties": {
        "items": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfCustomDataIdentifierSummary"
            },
            {
              "description": "An array of objects, one for each custom data identifier."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListFindingsFiltersRequest": {
      "properties": {},
      "title": "ListFindingsFiltersRequest",
      "type": "object"
    },
    "ListFindingsFiltersResponse": {
      "properties": {
        "findingsFilterListItems": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfFindingsFilterListItem"
            },
            {
              "description": "An array of objects, one for each filter that's associated with the account."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListFindingsRequest": {
      "properties": {
        "findingCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingCriteria"
            },
            {
              "description": "The criteria to use to filter the results."
            }
          ]
        },
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The maximum number of items to include in each page of the response."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The nextToken string that specifies which page of results to return in a paginated response."
            }
          ]
        },
        "sortCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/SortCriteria"
            },
            {
              "description": "The criteria to use to sort the results."
            }
          ]
        }
      },
      "title": "ListFindingsRequest",
      "type": "object"
    },
    "ListFindingsResponse": {
      "properties": {
        "findingIds": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array of strings, where each string is the unique identifier for a finding that meets the filter criteria specified in the request."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListInvitationsRequest": {
      "properties": {},
      "title": "ListInvitationsRequest",
      "type": "object"
    },
    "ListInvitationsResponse": {
      "properties": {
        "invitations": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfInvitation"
            },
            {
              "description": "An array of objects, one for each invitation that was received by the account."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListJobsFilterCriteria": {
      "description": "Specifies criteria for filtering the results of a request for information about classification jobs.",
      "properties": {
        "excludes": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfListJobsFilterTerm"
            },
            {
              "description": "An array of objects, one for each condition that determines which jobs to exclude from the results."
            }
          ]
        },
        "includes": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfListJobsFilterTerm"
            },
            {
              "description": "An array of objects, one for each condition that determines which jobs to include in the results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListJobsFilterKey": {
      "description": "The property to use to filter the results. Valid values are:",
      "enum": [
        "jobType",
        "jobStatus",
        "createdAt",
        "name"
      ],
      "type": "string"
    },
    "ListJobsFilterTerm": {
      "description": "Specifies a condition that filters the results of a request for information about classification jobs. Each condition consists of a property, an operator, and one or more values.",
      "properties": {
        "comparator": {
          "allOf": [
            {
              "$ref": "#/definitions/JobComparator"
            },
            {
              "description": "The operator to use to filter the results."
            }
          ]
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/ListJobsFilterKey"
            },
            {
              "description": "The property to use to filter the results."
            }
          ]
        },
        "values": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists one or more values to use to filter the results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListJobsSortAttributeName": {
      "description": "The property to sort the results by. Valid values are:",
      "enum": [
        "createdAt",
        "jobStatus",
        "name",
        "jobType"
      ],
      "type": "string"
    },
    "ListJobsSortCriteria": {
      "description": "Specifies criteria for sorting the results of a request for information about classification jobs.",
      "properties": {
        "attributeName": {
          "allOf": [
            {
              "$ref": "#/definitions/ListJobsSortAttributeName"
            },
            {
              "description": "The property to sort the results by."
            }
          ]
        },
        "orderBy": {
          "allOf": [
            {
              "$ref": "#/definitions/OrderBy"
            },
            {
              "description": "The sort order to apply to the results, based on the value for the property specified by the attributeName property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListMembersRequest": {
      "properties": {},
      "title": "ListMembersRequest",
      "type": "object"
    },
    "ListMembersResponse": {
      "properties": {
        "members": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfMember"
            },
            {
              "description": "An array of objects, one for each account that's associated with the master account and meets the criteria specified by the onlyAssociated request parameter."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListOrganizationAdminAccountsRequest": {
      "properties": {},
      "title": "ListOrganizationAdminAccountsRequest",
      "type": "object"
    },
    "ListOrganizationAdminAccountsResponse": {
      "properties": {
        "adminAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfAdminAccount"
            },
            {
              "description": "An array of objects, one for each delegated Amazon Macie administrator account for the organization. Only one of these accounts can have a status of ENABLED."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "properties": {},
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A map of key-value pairs that identifies the tags (keys and values) that are associated with the resource."
            }
          ]
        }
      },
      "type": "object"
    },
    "MacieStatus": {
      "description": "The status of an Amazon Macie account. Valid values are:",
      "enum": [
        "PAUSED",
        "ENABLED"
      ],
      "type": "string"
    },
    "MaxResults": {
      "maximum": 25,
      "minimum": 1,
      "type": "integer"
    },
    "Member": {
      "description": "Provides information about an account that's associated with an Amazon Macie master account.",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A map of key-value pairs that identifies the tags (keys and values) that are associated with the account in Amazon Macie."
            }
          ]
        },
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the account."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the account."
            }
          ]
        },
        "email": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The email address for the account."
            }
          ]
        },
        "invitedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when an Amazon Macie membership invitation was last sent to the account. This value is null if a Macie invitation hasn't been sent to the account."
            }
          ]
        },
        "masterAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the master account."
            }
          ]
        },
        "relationshipStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/RelationshipStatus"
            },
            {
              "description": "The current status of the relationship between the account and the master account."
            }
          ]
        },
        "updatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, of the most recent change to the status of the relationship between the account and the master account."
            }
          ]
        }
      },
      "type": "object"
    },
    "MonthlySchedule": {
      "description": "Specifies a monthly recurrence pattern for running a classification job.",
      "properties": {
        "dayOfMonth": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "<p>The numeric day of the month when Amazon Macie runs the job. This value can be an integer from 1 through 31.</p> <p>If this value exceeds the number of days in a certain month, Macie runs the job on the last day of that month. For example, if this value is 31 and a month has only 30 days, Macie runs the job on day 30 of that month.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectCountByEncryptionType": {
      "description": "Provides information about the number of objects that are in an S3 bucket and use certain types of server-side encryption, use client-side encryption, or aren't encrypted.",
      "properties": {
        "customerManaged": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of objects that are encrypted using a customer-managed key. The objects use customer-provided server-side (SSE-C) encryption."
            }
          ]
        },
        "kmsManaged": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of objects that are encrypted using an AWS Key Management Service (AWS KMS) customer master key (CMK). The objects use AWS managed AWS KMS (AWS-KMS) encryption or customer managed AWS KMS (SSE-KMS) encryption."
            }
          ]
        },
        "s3Managed": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of objects that are encrypted using an Amazon S3 managed key. The objects use Amazon S3 managed (SSE-S3) encryption."
            }
          ]
        },
        "unencrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of objects that aren't encrypted or use client-side encryption."
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectLevelStatistics": {
      "description": "Provides information about the total storage size (in bytes) or number of objects that Amazon Macie can't analyze in one or more S3 buckets. In a BucketMetadata object, this data is for a specific bucket. In a GetBucketStatisticsResponse object, this data is aggregated for all the buckets in the query results.",
      "properties": {
        "fileType": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total storage size (in bytes) or number of objects that Amazon Macie can't analyze because the objects don't have a file name extension for a supported file or storage format."
            }
          ]
        },
        "storageClass": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total storage size (in bytes) or number of objects that Amazon Macie can't analyze because the objects use an unsupported storage class."
            }
          ]
        },
        "total": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total storage size (in bytes) or number of objects that Amazon Macie can't analyze because the objects use an unsupported storage class or don't have a file name extension for a supported file or storage format."
            }
          ]
        }
      },
      "type": "object"
    },
    "Occurrences": {
      "description": "Provides the location of 1-15 occurrences of sensitive data that was detected by managed data identifiers or a custom data identifier and produced a sensitive data finding.",
      "properties": {
        "cells": {
          "allOf": [
            {
              "$ref": "#/definitions/Cells"
            },
            {
              "description": "An array of objects, one for each occurrence of sensitive data in a Microsoft Excel workbook, CSV file, or TSV file. Each object specifies the cell or field that contains the data. This value is null for all other types of files."
            }
          ]
        },
        "lineRanges": {
          "allOf": [
            {
              "$ref": "#/definitions/Ranges"
            },
            {
              "description": "<p>An array of objects, one for each occurrence of sensitive data in a Microsoft Word document or non-binary text file, such as an HTML, JSON, TXT, or XML file. Each object specifies the line that contains the data, and the position of the data on that line.</p> <p>This value is often null for file types that are supported by Cell, Page, or Record objects. Exceptions are the locations of: data in unstructured sections of an otherwise structured file, such as a comment in a file; and, data in a malformed file that Amazon Macie analyzes as plain text.</p>"
            }
          ]
        },
        "offsetRanges": {
          "allOf": [
            {
              "$ref": "#/definitions/Ranges"
            },
            {
              "description": "<p>An array of objects, one for each occurrence of sensitive data in a binary text file. Each object specifies the position of the data relative to the beginning of the file.</p> <p>This value is typically null. For binary text files, Amazon Macie adds location data to a lineRanges.Range or Page object, depending on the file type.</p>"
            }
          ]
        },
        "pages": {
          "allOf": [
            {
              "$ref": "#/definitions/Pages"
            },
            {
              "description": "An array of objects, one for each occurrence of sensitive data in an Adobe Portable Document Format file. Each object specifies the page that contains the data, and the position of the data on that page. This value is null for all other types of files."
            }
          ]
        },
        "records": {
          "allOf": [
            {
              "$ref": "#/definitions/Records"
            },
            {
              "description": "An array of objects, one for each occurrence of sensitive data in an Apache Avro object container or Apache Parquet file. Each object specifies the record index and the path to the field in the record that contains the data. This value is null for all other types of files."
            }
          ]
        }
      },
      "type": "object"
    },
    "OrderBy": {
      "enum": [
        "ASC",
        "DESC"
      ],
      "type": "string"
    },
    "Page": {
      "description": "Specifies the location of an occurrence of sensitive data in an Adobe Portable Document Format file.",
      "properties": {
        "lineRange": {
          "allOf": [
            {
              "$ref": "#/definitions/Range"
            },
            {
              "description": "The line that contains the data, and the position of the data on that line."
            }
          ]
        },
        "offsetRange": {
          "allOf": [
            {
              "$ref": "#/definitions/Range"
            },
            {
              "description": "The position of the data on the page, relative to the beginning of the page."
            }
          ]
        },
        "pageNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The page number of the page that contains the data."
            }
          ]
        }
      },
      "type": "object"
    },
    "Pages": {
      "description": "Specifies the location of occurrences of sensitive data in an Adobe Portable Document Format file.",
      "items": {
        "$ref": "#/definitions/Page"
      },
      "type": "array"
    },
    "PolicyDetails": {
      "description": "Provides the details of a policy finding.",
      "properties": {
        "action": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingAction"
            },
            {
              "description": "The action that produced the finding."
            }
          ]
        },
        "actor": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingActor"
            },
            {
              "description": "The entity that performed the action that produced the finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutClassificationExportConfigurationRequest": {
      "properties": {
        "configuration": {
          "allOf": [
            {
              "$ref": "#/definitions/ClassificationExportConfiguration"
            },
            {
              "description": "The location to store data classification results in, and the encryption settings to use when storing results in that location."
            }
          ]
        }
      },
      "required": [
        "configuration"
      ],
      "title": "PutClassificationExportConfigurationRequest",
      "type": "object"
    },
    "PutClassificationExportConfigurationResponse": {
      "properties": {
        "configuration": {
          "allOf": [
            {
              "$ref": "#/definitions/ClassificationExportConfiguration"
            },
            {
              "description": "The location where the data classification results are stored, and the encryption settings that are used when storing results in that location."
            }
          ]
        }
      },
      "type": "object"
    },
    "Range": {
      "description": "Provides details about the location of an occurrence of sensitive data in an Adobe Portable Document Format file, Microsoft Word document, or non-binary text file.",
      "properties": {
        "end": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "<p>Possible values are:</p> <ul><li><p>In an Occurrences.lineRanges array, the number of lines from the beginning of the file to the end of the sensitive data.</p></li> <li><p>In an Occurrences.offsetRanges array, the number of characters from the beginning of the file to the end of the sensitive data.</p></li> <li><p>In a Page object, the number of lines (lineRange) or characters (offsetRange) from the beginning of the page to the end of the sensitive data.</p></li></ul>"
            }
          ]
        },
        "start": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "<p>Possible values are:</p> <ul><li><p>In an Occurrences.lineRanges array, the number of lines from the beginning of the file to the beginning of the sensitive data.</p></li> <li><p>In an Occurrences.offsetRanges array, the number of characters from the beginning of the file to the beginning of the sensitive data.</p></li> <li><p>In a Page object, the number of lines (lineRange) or characters (offsetRange) from the beginning of the page to the beginning of the sensitive data.</p></li></ul>"
            }
          ]
        },
        "startColumn": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The column number for the column that contains the data, if the file contains structured data."
            }
          ]
        }
      },
      "type": "object"
    },
    "Ranges": {
      "description": "Provides details about the location of occurrences of sensitive data in an Adobe Portable Document Format file, Microsoft Word document, or non-binary text file.",
      "items": {
        "$ref": "#/definitions/Range"
      },
      "type": "array"
    },
    "Record": {
      "description": "Specifies the location of an occurrence of sensitive data in an Apache Avro object container or Apache Parquet file.",
      "properties": {
        "jsonPath": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "<p>The path, as a JSONPath expression, to the field in the record that contains the data.</p> <p>If the name of an element exceeds 20 characters, Amazon Macie truncates the name by removing characters from the beginning of the name. If the resulting full path exceeds 250 characters, Macie also truncates the path, starting with the first element in the path, until the path contains 250 or fewer characters.</p>"
            }
          ]
        },
        "recordIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The record index, starting from 0, for the record that contains the data."
            }
          ]
        }
      },
      "type": "object"
    },
    "Records": {
      "description": "Specifies the location of occurrences of sensitive data in an Apache Parquet file.",
      "items": {
        "$ref": "#/definitions/Record"
      },
      "type": "array"
    },
    "RelationshipStatus": {
      "description": "The current status of the relationship between an account and an associated Amazon Macie master account (<i>inviter account</i>). Possible values are:",
      "enum": [
        "Enabled",
        "Paused",
        "Invited",
        "Created",
        "Removed",
        "Resigned",
        "EmailVerificationInProgress",
        "EmailVerificationFailed",
        "RegionDisabled",
        "AccountSuspended"
      ],
      "type": "string"
    },
    "ReplicationDetails": {
      "description": "Provides information about settings that define whether one or more objects in an S3 bucket are replicated to S3 buckets for other AWS accounts and, if so, which accounts.",
      "properties": {
        "replicated": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the bucket is configured to replicate one or more objects to any destination."
            }
          ]
        },
        "replicatedExternally": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the bucket is configured to replicate one or more objects to an AWS account that isn't part of the same Amazon Macie organization."
            }
          ]
        },
        "replicationAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array of AWS account IDs, one for each AWS account that the bucket is configured to replicate one or more objects to."
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceNotFoundException": {},
    "ResourcesAffected": {
      "description": "Provides information about the resources that a finding applies to.",
      "properties": {
        "s3Bucket": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Bucket"
            },
            {
              "description": "An array of objects, one for each S3 bucket that the finding applies to. Each object provides a set of metadata about an affected S3 bucket."
            }
          ]
        },
        "s3Object": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Object"
            },
            {
              "description": "An array of objects, one for each S3 object that the finding applies to. Each object provides a set of metadata about an affected S3 object."
            }
          ]
        }
      },
      "type": "object"
    },
    "S3Bucket": {
      "description": "Provides information about an S3 bucket that a finding applies to.",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyValuePairList"
            },
            {
              "description": "The tags that are associated with the bucket."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the bucket."
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the bucket was created."
            }
          ]
        },
        "defaultServerSideEncryption": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerSideEncryption"
            },
            {
              "description": "The type of server-side encryption that's used by default to encrypt objects in the bucket."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the bucket."
            }
          ]
        },
        "owner": {
          "allOf": [
            {
              "$ref": "#/definitions/S3BucketOwner"
            },
            {
              "description": "The display name and account identifier for the user who owns the bucket."
            }
          ]
        },
        "publicAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketPublicAccess"
            },
            {
              "description": "The permissions settings that determine whether the bucket is publicly accessible."
            }
          ]
        }
      },
      "type": "object"
    },
    "S3BucketDefinitionForJob": {
      "description": "Specifies which AWS account owns the S3 buckets that a classification job analyzes, and the buckets to analyze for the account.",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account that owns the buckets. If you specify this value and don't specify a value for the buckets array, the job analyzes objects in all the buckets that are owned by the account and meet other conditions specified for the job."
            }
          ]
        },
        "buckets": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists the names of the buckets."
            }
          ]
        }
      },
      "type": "object"
    },
    "S3BucketOwner": {
      "description": "Provides information about the user who owns an S3 bucket.",
      "properties": {
        "displayName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The display name of the user who owns the bucket."
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the user who owns the bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "S3Destination": {
      "description": "Specifies an S3 bucket to store data classification results in, and the encryption settings to use when storing results in that bucket.",
      "properties": {
        "bucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the bucket."
            }
          ]
        },
        "keyPrefix": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The path prefix to use in the path to the location in the bucket. This prefix specifies where to store classification results in the bucket."
            }
          ]
        },
        "kmsKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for encryption of the results. This must be the ARN of an existing CMK that's in the same AWS Region as the bucket."
            }
          ]
        }
      },
      "required": [
        "bucketName",
        "kmsKeyArn"
      ],
      "type": "object"
    },
    "S3JobDefinition": {
      "description": "Specifies which S3 buckets contain the objects that a classification job analyzes, and the scope of that analysis.",
      "properties": {
        "bucketDefinitions": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfS3BucketDefinitionForJob"
            },
            {
              "description": "An array of objects, one for each AWS account that owns buckets to analyze. Each object specifies the account ID for an account and one or more buckets to analyze for the account."
            }
          ]
        },
        "scoping": {
          "allOf": [
            {
              "$ref": "#/definitions/Scoping"
            },
            {
              "description": "The property- and tag-based conditions that determine which objects to include or exclude from the analysis."
            }
          ]
        }
      },
      "type": "object"
    },
    "S3Object": {
      "description": "Provides information about an S3 object that a finding applies to.",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyValuePairList"
            },
            {
              "description": "The tags that are associated with the object."
            }
          ]
        },
        "bucketArn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the bucket that contains the object."
            }
          ]
        },
        "eTag": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The entity tag (ETag) that identifies the affected version of the object. If the object was overwritten or changed after Amazon Macie produced the finding, this value might be different from the current ETag for the object."
            }
          ]
        },
        "extension": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The file name extension of the object. If the object doesn't have a file name extension, this value is \"\"."
            }
          ]
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The full key (name) that's assigned to the object."
            }
          ]
        },
        "lastModified": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the object was last modified."
            }
          ]
        },
        "path": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The path to the object, including the full key (name)."
            }
          ]
        },
        "publicAccess": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the object is publicly accessible due to the combination of permissions settings that apply to the object."
            }
          ]
        },
        "serverSideEncryption": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerSideEncryption"
            },
            {
              "description": "The type of server-side encryption that's used for the object."
            }
          ]
        },
        "size": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total storage size, in bytes, of the object."
            }
          ]
        },
        "storageClass": {
          "allOf": [
            {
              "$ref": "#/definitions/StorageClass"
            },
            {
              "description": "The storage class of the object."
            }
          ]
        },
        "versionId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The identifier for the affected version of the object."
            }
          ]
        }
      },
      "type": "object"
    },
    "ScopeFilterKey": {
      "description": "The property to use in a condition that determines which objects are analyzed by a classification job. Valid values are:",
      "enum": [
        "BUCKET_CREATION_DATE",
        "OBJECT_EXTENSION",
        "OBJECT_LAST_MODIFIED_DATE",
        "OBJECT_SIZE",
        "TAG"
      ],
      "type": "string"
    },
    "Scoping": {
      "description": "Specifies one or more property- and tag-based conditions that refine the scope of a classification job. These conditions define criteria that determine which objects a job analyzes. Exclude conditions take precedence over include conditions.",
      "properties": {
        "excludes": {
          "allOf": [
            {
              "$ref": "#/definitions/JobScopingBlock"
            },
            {
              "description": "The property- or tag-based conditions that determine which objects to exclude from the analysis."
            }
          ]
        },
        "includes": {
          "allOf": [
            {
              "$ref": "#/definitions/JobScopingBlock"
            },
            {
              "description": "The property- or tag-based conditions that determine which objects to include in the analysis."
            }
          ]
        }
      },
      "type": "object"
    },
    "SensitiveData": {
      "description": "Provides information about the category and number of occurrences of sensitive data that produced a finding.",
      "items": {
        "$ref": "#/definitions/SensitiveDataItem"
      },
      "type": "array"
    },
    "SensitiveDataItem": {
      "description": "Provides information about the category, types, and occurrences of sensitive data that produced a sensitive data finding.",
      "properties": {
        "category": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveDataItemCategory"
            },
            {
              "description": "The category of sensitive data that was detected. For example: CREDENTIALS, for credentials data such as private keys or AWS secret keys; FINANCIAL_INFORMATION, for financial data such as credit card numbers; or, PERSONAL_INFORMATION, for personal health information, such as health insurance identification numbers, or personally identifiable information, such as driver's license identification numbers."
            }
          ]
        },
        "detections": {
          "allOf": [
            {
              "$ref": "#/definitions/DefaultDetections"
            },
            {
              "description": "An array of objects, one for each type of sensitive data that was detected. Each object reports the number of occurrences of a specific type of sensitive data that was detected, and the location of up to 15 of those occurrences."
            }
          ]
        },
        "totalCount": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The total number of occurrences of the sensitive data that was detected."
            }
          ]
        }
      },
      "type": "object"
    },
    "SensitiveDataItemCategory": {
      "description": "The category of sensitive data that was detected and produced the finding. Possible values are:",
      "enum": [
        "FINANCIAL_INFORMATION",
        "PERSONAL_INFORMATION",
        "CREDENTIALS",
        "CUSTOM_IDENTIFIER"
      ],
      "type": "string"
    },
    "ServerSideEncryption": {
      "description": "Provides information about the server-side encryption settings for an S3 bucket or S3 object.",
      "properties": {
        "encryptionType": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionType"
            },
            {
              "description": "The server-side encryption algorithm that's used when storing data in the bucket or object. If encryption is disabled for the bucket or object, this value is NONE."
            }
          ]
        },
        "kmsMasterKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS Key Management Service (AWS KMS) master key that's used to encrypt the bucket or object. This value is null if AWS KMS isn't used to encrypt the bucket or object."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServiceLimit": {
      "description": "Specifies a current quota for an account.",
      "properties": {
        "isServiceLimited": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the account has met the quota that corresponds to the metric specified by the UsageByAccount.type field in the response."
            }
          ]
        },
        "unit": {
          "allOf": [
            {
              "$ref": "#/definitions/Unit"
            },
            {
              "description": "The unit of measurement for the value specified by the value field."
            }
          ]
        },
        "value": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The value for the metric specified by the UsageByAccount.type field in the response."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServiceQuotaExceededException": {},
    "SessionContext": {
      "description": "Provides information about a session that was created for an entity that performed an action by using temporary security credentials.",
      "properties": {
        "attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/SessionContextAttributes"
            },
            {
              "description": "The date and time when the credentials were issued, and whether the credentials were authenticated with a multi-factor authentication (MFA) device."
            }
          ]
        },
        "sessionIssuer": {
          "allOf": [
            {
              "$ref": "#/definitions/SessionIssuer"
            },
            {
              "description": "The source and type of credentials that were issued to the entity."
            }
          ]
        }
      },
      "type": "object"
    },
    "SessionContextAttributes": {
      "description": "Provides information about the context in which temporary security credentials were issued to an entity.",
      "properties": {
        "creationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and ISO 8601 format, when the credentials were issued."
            }
          ]
        },
        "mfaAuthenticated": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether the credentials were authenticated with a multi-factor authentication (MFA) device."
            }
          ]
        }
      },
      "type": "object"
    },
    "SessionIssuer": {
      "description": "Provides information about the source and type of temporary security credentials that were issued to an entity.",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account that owns the entity that was used to get the credentials."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the source account, IAM user, or role that was used to get the credentials."
            }
          ]
        },
        "principalId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the entity that was used to get the credentials."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The source of the temporary security credentials, such as Root, IAMUser, or Role."
            }
          ]
        },
        "userName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name or alias of the user or role that issued the session. This value is null if the credentials were obtained from a root account that doesn't have an alias."
            }
          ]
        }
      },
      "type": "object"
    },
    "Severity": {
      "description": "Provides the numerical and qualitative representations of a finding's severity.",
      "properties": {
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/SeverityDescription"
            },
            {
              "description": "The qualitative representation of the finding's severity, ranging from Low (least severe) to High (most severe)."
            }
          ]
        },
        "score": {
          "allOf": [
            {
              "$ref": "#/definitions/__long"
            },
            {
              "description": "The numerical representation of the finding's severity, ranging from 1 (least severe) to 3 (most severe)."
            }
          ]
        }
      },
      "type": "object"
    },
    "SeverityDescription": {
      "description": "The qualitative representation of the finding's severity. Possible values are:",
      "enum": [
        "Low",
        "Medium",
        "High"
      ],
      "type": "string"
    },
    "SharedAccess": {
      "enum": [
        "EXTERNAL",
        "INTERNAL",
        "NOT_SHARED",
        "UNKNOWN"
      ],
      "type": "string"
    },
    "SimpleScopeTerm": {
      "description": "Specifies a property-based condition that determines whether an object is included or excluded from a classification job.",
      "properties": {
        "comparator": {
          "allOf": [
            {
              "$ref": "#/definitions/JobComparator"
            },
            {
              "description": "<p>The operator to use in the condition. Valid operators for each supported property (key) are:</p> <ul><li><p>OBJECT_EXTENSION - EQ (equals) or NE (not equals)</p></li> <li><p>OBJECT_LAST_MODIFIED_DATE - Any operator except CONTAINS</p></li> <li><p>OBJECT_SIZE - Any operator except CONTAINS</p></li> <li><p>TAG - EQ (equals) or NE (not equals)</p></li></ul>"
            }
          ]
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/ScopeFilterKey"
            },
            {
              "description": "The object property to use in the condition."
            }
          ]
        },
        "values": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "<p>An array that lists the values to use in the condition. If the value for the key property is OBJECT_EXTENSION, this array can specify multiple values and Amazon Macie uses an OR operator to join the values. Otherwise, this array can specify only one value. Valid values for each supported property (key) are:</p> <ul><li><p>OBJECT_EXTENSION - A string that represents the file name extension of an object. For example: doc, docx, pdf</p></li> <li><p>OBJECT_LAST_MODIFIED_DATE - The date and time (in UTC and extended ISO 8601 format) when an object was created or last changed, whichever is latest. For example: 2020-09-28T14:31:13Z</p></li> <li><p>OBJECT_SIZE - An integer that represents the storage size (in bytes) of an object.</p></li> <li><p>TAG - A string that represents a tag key for an object. For advanced options, use a TagScopeTerm object, instead of a SimpleScopeTerm object, to define a tag-based condition for the job.</p></li></ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "SortCriteria": {
      "description": "Specifies criteria for sorting the results of a request for findings.",
      "properties": {
        "attributeName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the property to sort the results by. This value can be the name of any property that Amazon Macie defines for a finding."
            }
          ]
        },
        "orderBy": {
          "allOf": [
            {
              "$ref": "#/definitions/OrderBy"
            },
            {
              "description": "The sort order to apply to the results, based on the value for the property specified by the attributeName property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
            }
          ]
        }
      },
      "type": "object"
    },
    "Statistics": {
      "description": "Provides processing statistics for a classification job.",
      "properties": {
        "approximateNumberOfObjectsToProcess": {
          "allOf": [
            {
              "$ref": "#/definitions/__double"
            },
            {
              "description": "The approximate number of objects that the job has yet to process during its current run."
            }
          ]
        },
        "numberOfRuns": {
          "allOf": [
            {
              "$ref": "#/definitions/__double"
            },
            {
              "description": "The number of times that the job has run."
            }
          ]
        }
      },
      "type": "object"
    },
    "StorageClass": {
      "description": "The storage class of the S3 object. Possible values are:",
      "enum": [
        "STANDARD",
        "REDUCED_REDUNDANCY",
        "STANDARD_IA",
        "INTELLIGENT_TIERING",
        "DEEP_ARCHIVE",
        "ONEZONE_IA",
        "GLACIER"
      ],
      "type": "string"
    },
    "TagMap": {
      "additionalProperties": {
        "$ref": "#/definitions/__string"
      },
      "description": "A string-to-string map of key-value pairs that specifies the tags (keys and values) for a classification job, custom data identifier, findings filter, or member account.",
      "type": "object"
    },
    "TagResourceRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "<p>A map of key-value pairs that specifies the tags to associate with the resource.</p> <p>A resource can have a maximum of 50 tags. Each tag consists of a tag key and an associated tag value. The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.</p>"
            }
          ]
        }
      },
      "required": [
        "tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "TagScopeTerm": {
      "description": "Specifies a tag-based condition that determines whether an object is included or excluded from a classification job.",
      "properties": {
        "comparator": {
          "allOf": [
            {
              "$ref": "#/definitions/JobComparator"
            },
            {
              "description": "The operator to use in the condition. Valid operators are EQ (equals) or NE (not equals)."
            }
          ]
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The tag key to use in the condition."
            }
          ]
        },
        "tagValues": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfTagValuePair"
            },
            {
              "description": "The tag keys or tag key and value pairs to use in the condition."
            }
          ]
        },
        "target": {
          "allOf": [
            {
              "$ref": "#/definitions/TagTarget"
            },
            {
              "description": "The type of object to apply the condition to."
            }
          ]
        }
      },
      "type": "object"
    },
    "TagTarget": {
      "description": "The type of object to apply a tag-based condition to. Valid values are:",
      "enum": [
        "S3_OBJECT"
      ],
      "type": "string"
    },
    "TagValuePair": {
      "description": "Specifies a tag key or tag key and value pair to use in a tag-based condition for a classification job.",
      "properties": {
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The value for the tag key to use in the condition."
            }
          ]
        },
        "value": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The tag value, associated with the specified tag key (key), to use in the condition. To specify only a tag key for a condition, specify the tag key for the key property and set this value to an empty string."
            }
          ]
        }
      },
      "type": "object"
    },
    "TestCustomDataIdentifierRequest": {
      "properties": {
        "ignoreWords": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive."
            }
          ]
        },
        "keywords": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "An array that lists specific character sequences (keywords), one of which must be within proximity (maximumMatchDistance) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 4 - 90 characters. Keywords aren't case sensitive."
            }
          ]
        },
        "maximumMatchDistance": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50."
            }
          ]
        },
        "regex": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The regular expression (<i>regex</i>) that defines the pattern to match. The expression can contain as many as 512 characters."
            }
          ]
        },
        "sampleText": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The sample text to inspect by using the custom data identifier. The text can contain as many as 1,000 characters."
            }
          ]
        }
      },
      "required": [
        "regex",
        "sampleText"
      ],
      "title": "TestCustomDataIdentifierRequest",
      "type": "object"
    },
    "TestCustomDataIdentifierResponse": {
      "properties": {
        "matchCount": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The number of instances of sample text that matched the detection criteria specified in the custom data identifier."
            }
          ]
        }
      },
      "type": "object"
    },
    "ThrottlingException": {},
    "Unit": {
      "enum": [
        "TERABYTES"
      ],
      "type": "string"
    },
    "UnprocessedAccount": {
      "description": " <p>Provides information about an account-related request that hasn't been processed.</p>",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS account ID for the account that the request applies to."
            }
          ]
        },
        "errorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorCode"
            },
            {
              "description": "The source of the issue or delay in processing the request."
            }
          ]
        },
        "errorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The reason why the request hasn't been processed."
            }
          ]
        }
      },
      "type": "object"
    },
    "UntagResourceRequest": {
      "properties": {},
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UntagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateClassificationJobRequest": {
      "properties": {
        "jobStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/JobStatus"
            },
            {
              "description": "<p>The new status for the job. Valid values are:</p> <ul><li><p>CANCELLED - Stops the job permanently and cancels it. You can't resume a job after you cancel it. This value is valid only if the job's current status is IDLE, PAUSED, RUNNING, or USER_PAUSED.</p></li> <li><p>RUNNING - Resumes the job. This value is valid only if the job's current status is USER_PAUSED. If you specify this value, Amazon Macie immediately resumes processing from the point where you paused the job. Otherwise, Macie resumes the job according to the schedule and other configuration settings for the job.</p></li> <li><p>USER_PAUSED - Pauses the job. This value is valid only if the job's current status is IDLE or RUNNING. If you specify this value and the job's current status is RUNNING, Macie immediately begins to pause all processing tasks for the job.</p> <p>If you pause a job when its status is RUNNING and you don't resume the job within 30 days, the job expires and Macie cancels it. You can't resume a job after it's cancelled.</p></li></ul>"
            }
          ]
        }
      },
      "required": [
        "jobStatus"
      ],
      "title": "UpdateClassificationJobRequest",
      "type": "object"
    },
    "UpdateClassificationJobResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateFindingsFilterRequest": {
      "properties": {
        "action": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingsFilterAction"
            },
            {
              "description": "The action to perform on findings that meet the filter criteria (findingCriteria). Valid values are: ARCHIVE, suppress (automatically archive) the findings; and, NOOP, don't perform any action on the findings."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "<p>A custom description of the filter. The description can contain as many as 512 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a filter. Other users might be able to see the filter's description, depending on the actions that they're allowed to perform in Amazon Macie.</p>"
            }
          ]
        },
        "findingCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingCriteria"
            },
            {
              "description": "The criteria to use to filter findings."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "<p>A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a filter. Other users might be able to see the filter's name, depending on the actions that they're allowed to perform in Amazon Macie.</p>"
            }
          ]
        },
        "position": {
          "allOf": [
            {
              "$ref": "#/definitions/__integer"
            },
            {
              "description": "The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings."
            }
          ]
        }
      },
      "title": "UpdateFindingsFilterRequest",
      "type": "object"
    },
    "UpdateFindingsFilterResponse": {
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the filter that was updated."
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the filter that was updated."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateMacieSessionRequest": {
      "properties": {
        "findingPublishingFrequency": {
          "allOf": [
            {
              "$ref": "#/definitions/FindingPublishingFrequency"
            },
            {
              "description": "Specifies how often to publish updates to policy findings for the account. This includes publishing updates to AWS Security Hub and Amazon EventBridge (formerly called Amazon CloudWatch Events)."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/MacieStatus"
            },
            {
              "description": "Specifies whether to change the status of the account. Valid values are: ENABLED, resume all Amazon Macie activities for the account; and, PAUSED, suspend all Macie activities for the account."
            }
          ]
        }
      },
      "title": "UpdateMacieSessionRequest",
      "type": "object"
    },
    "UpdateMacieSessionResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateMemberSessionRequest": {
      "properties": {
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/MacieStatus"
            },
            {
              "description": "Specifies the new status for the account. Valid values are: ENABLED, resume all Amazon Macie activities for the account; and, PAUSED, suspend all Macie activities for the account."
            }
          ]
        }
      },
      "required": [
        "status"
      ],
      "title": "UpdateMemberSessionRequest",
      "type": "object"
    },
    "UpdateMemberSessionResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateOrganizationConfigurationRequest": {
      "properties": {
        "autoEnable": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Specifies whether Amazon Macie is enabled automatically for each account, when the account is added to the AWS organization."
            }
          ]
        }
      },
      "required": [
        "autoEnable"
      ],
      "title": "UpdateOrganizationConfigurationRequest",
      "type": "object"
    },
    "UpdateOrganizationConfigurationResponse": {
      "properties": {},
      "type": "object"
    },
    "UsageByAccount": {
      "description": "Provides data for a specific usage metric and the corresponding quota for an account. The value for the metric is an aggregated value that reports usage during the past 30 days.",
      "properties": {
        "currency": {
          "allOf": [
            {
              "$ref": "#/definitions/Currency"
            },
            {
              "description": "The type of currency that the value for the metric (estimatedCost) is reported in."
            }
          ]
        },
        "estimatedCost": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The estimated value for the metric."
            }
          ]
        },
        "serviceLimit": {
          "allOf": [
            {
              "$ref": "#/definitions/ServiceLimit"
            },
            {
              "description": "The current value for the quota that corresponds to the metric specified by the type field."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/UsageType"
            },
            {
              "description": "The name of the metric. Possible values are: DATA_INVENTORY_EVALUATION, for monitoring S3 buckets; and, SENSITIVE_DATA_DISCOVERY, for analyzing sensitive data."
            }
          ]
        }
      },
      "type": "object"
    },
    "UsageRecord": {
      "description": "Provides quota and aggregated usage data for an account.",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account that the data applies to."
            }
          ]
        },
        "freeTrialStartDate": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the free trial started for the account."
            }
          ]
        },
        "usage": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOfUsageByAccount"
            },
            {
              "description": "An array of objects that contains usage data and quotas for the account. Each object contains the data for a specific usage metric and the corresponding quota."
            }
          ]
        }
      },
      "type": "object"
    },
    "UsageStatisticsFilter": {
      "description": "Specifies a condition for filtering the results of a query for account quotas and usage data.",
      "properties": {
        "comparator": {
          "allOf": [
            {
              "$ref": "#/definitions/UsageStatisticsFilterComparator"
            },
            {
              "description": "The operator to use in the condition. If the value for the key property is accountId, this value must be CONTAINS. If the value for the key property is any other supported field, this value can be EQ, GT, GTE, LT, LTE, or NE."
            }
          ]
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/UsageStatisticsFilterKey"
            },
            {
              "description": "The field to use in the condition."
            }
          ]
        },
        "values": {
          "allOf": [
            {
              "$ref": "#/definitions/__listOf__string"
            },
            {
              "description": "<p>An array that lists values to use in the condition, based on the value for the field specified by the key property. If the value for the key property is accountId, this array can specify multiple values. Otherwise, this array can specify only one value.</p> <p>Valid values for each supported field are:</p> <ul><li><p>accountId - The unique identifier for an AWS account.</p></li></ul> <ul><li><p>freeTrialStartDate - The date and time, in UTC and extended ISO 8601 format, when the free trial started for an account.</p></li></ul> <ul><li><p>serviceLimit - A Boolean (true or false) value that indicates whether an account has reached its monthly quota.</p></li></ul> <ul><li><p>total - A string that represents the current, estimated month-to-date cost for an account.</p></li></ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "UsageStatisticsFilterComparator": {
      "description": "The operator to use in a condition that filters the results of a query for account quotas and usage data. Valid values are:",
      "enum": [
        "GT",
        "GTE",
        "LT",
        "LTE",
        "EQ",
        "NE",
        "CONTAINS"
      ],
      "type": "string"
    },
    "UsageStatisticsFilterKey": {
      "description": "The field to use in a condition that filters the results of a query for account quotas and usage data. Valid values are:",
      "enum": [
        "accountId",
        "serviceLimit",
        "freeTrialStartDate",
        "total"
      ],
      "type": "string"
    },
    "UsageStatisticsSortBy": {
      "description": "Specifies criteria for sorting the results of a query for account quotas and usage data.",
      "properties": {
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/UsageStatisticsSortKey"
            },
            {
              "description": "The field to sort the results by."
            }
          ]
        },
        "orderBy": {
          "allOf": [
            {
              "$ref": "#/definitions/OrderBy"
            },
            {
              "description": "The sort order to apply to the results, based on the value for the field specified by the key property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
            }
          ]
        }
      },
      "type": "object"
    },
    "UsageStatisticsSortKey": {
      "description": "The field to use to sort the results of a query for account quotas and usage data. Valid values are:",
      "enum": [
        "accountId",
        "total",
        "serviceLimitValue",
        "freeTrialStartDate"
      ],
      "type": "string"
    },
    "UsageTotal": {
      "description": "Provides aggregated data for a usage metric. The value for the metric reports usage data for an account during the past 30 days.",
      "properties": {
        "currency": {
          "allOf": [
            {
              "$ref": "#/definitions/Currency"
            },
            {
              "description": "The type of currency that the value for the metric (estimatedCost) is reported in."
            }
          ]
        },
        "estimatedCost": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The estimated value for the metric."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/UsageType"
            },
            {
              "description": "The name of the metric. Possible values are: DATA_INVENTORY_EVALUATION, for monitoring S3 buckets; and, SENSITIVE_DATA_DISCOVERY, for analyzing sensitive data."
            }
          ]
        }
      },
      "type": "object"
    },
    "UsageType": {
      "description": "The name of a usage metric for an account. Possible values are:",
      "enum": [
        "DATA_INVENTORY_EVALUATION",
        "SENSITIVE_DATA_DISCOVERY"
      ],
      "type": "string"
    },
    "UserIdentity": {
      "description": "Provides information about the type and other characteristics of an entity that performed an action on an affected resource.",
      "properties": {
        "assumedRole": {
          "allOf": [
            {
              "$ref": "#/definitions/AssumedRole"
            },
            {
              "description": "If the action was performed with temporary security credentials that were obtained using the AssumeRole operation of the AWS Security Token Service (AWS STS) API, the identifiers, session context, and other details about the identity."
            }
          ]
        },
        "awsAccount": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsAccount"
            },
            {
              "description": "If the action was performed using the credentials for another AWS account, the details of that account."
            }
          ]
        },
        "awsService": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsService"
            },
            {
              "description": "If the action was performed by an AWS account that belongs to an AWS service, the name of the service."
            }
          ]
        },
        "federatedUser": {
          "allOf": [
            {
              "$ref": "#/definitions/FederatedUser"
            },
            {
              "description": "If the action was performed with temporary security credentials that were obtained using the GetFederationToken operation of the AWS Security Token Service (AWS STS) API, the identifiers, session context, and other details about the identity."
            }
          ]
        },
        "iamUser": {
          "allOf": [
            {
              "$ref": "#/definitions/IamUser"
            },
            {
              "description": "If the action was performed using the credentials for an AWS Identity and Access Management (IAM) user, the name and other details about the user."
            }
          ]
        },
        "root": {
          "allOf": [
            {
              "$ref": "#/definitions/UserIdentityRoot"
            },
            {
              "description": "If the action was performed using the credentials for your AWS account, the details of your account."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/UserIdentityType"
            },
            {
              "description": "The type of entity that performed the action."
            }
          ]
        }
      },
      "type": "object"
    },
    "UserIdentityRoot": {
      "description": "Provides information about an AWS account and entity that performed an action on an affected resource. The action was performed using the credentials for your AWS account.",
      "properties": {
        "accountId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the AWS account."
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the principal that performed the action. The last section of the ARN contains the name of the user or role that performed the action."
            }
          ]
        },
        "principalId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The unique identifier for the entity that performed the action."
            }
          ]
        }
      },
      "type": "object"
    },
    "UserIdentityType": {
      "description": "The type of entity that performed the action on the affected resource. Possible values are:",
      "enum": [
        "AssumedRole",
        "IAMUser",
        "FederatedUser",
        "Root",
        "AWSAccount",
        "AWSService"
      ],
      "type": "string"
    },
    "UserPausedDetails": {
      "description": "Provides information about when a classification job was paused and when it will expire and be cancelled if it isn't resumed. This object is present only if a job's current status (jobStatus) is USER_PAUSED. The information in this object applies only to a job that was paused while it had a status of RUNNING.",
      "properties": {
        "jobExpiresAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when the job will expire and be cancelled if you don't resume it first. If you don't resume a job within 30 days of pausing it, the job expires and Amazon Macie cancels it."
            }
          ]
        },
        "jobImminentExpirationHealthEventArn": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the AWS Health event that Amazon Macie sent to notify you of the job's pending expiration and cancellation. This value is null if a job has been paused for less than 23 days."
            }
          ]
        },
        "jobPausedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The date and time, in UTC and extended ISO 8601 format, when you paused the job."
            }
          ]
        }
      },
      "type": "object"
    },
    "ValidationException": {},
    "WeeklySchedule": {
      "description": "Specifies a weekly recurrence pattern for running a classification job.",
      "properties": {
        "dayOfWeek": {
          "allOf": [
            {
              "$ref": "#/definitions/DayOfWeek"
            },
            {
              "description": "The day of the week when Amazon Macie runs the job."
            }
          ]
        }
      },
      "type": "object"
    },
    "__boolean": {
      "type": "boolean"
    },
    "__double": {
      "format": "double",
      "type": "number"
    },
    "__integer": {
      "type": "integer"
    },
    "__listOfAdminAccount": {
      "items": {
        "$ref": "#/definitions/AdminAccount"
      },
      "type": "array"
    },
    "__listOfBatchGetCustomDataIdentifierSummary": {
      "items": {
        "$ref": "#/definitions/BatchGetCustomDataIdentifierSummary"
      },
      "type": "array"
    },
    "__listOfBucketMetadata": {
      "items": {
        "$ref": "#/definitions/BucketMetadata"
      },
      "type": "array"
    },
    "__listOfCustomDataIdentifierSummary": {
      "items": {
        "$ref": "#/definitions/CustomDataIdentifierSummary"
      },
      "type": "array"
    },
    "__listOfFinding": {
      "items": {
        "$ref": "#/definitions/Finding"
      },
      "type": "array"
    },
    "__listOfFindingType": {
      "items": {
        "$ref": "#/definitions/FindingType"
      },
      "type": "array"
    },
    "__listOfFindingsFilterListItem": {
      "items": {
        "$ref": "#/definitions/FindingsFilterListItem"
      },
      "type": "array"
    },
    "__listOfGroupCount": {
      "items": {
        "$ref": "#/definitions/GroupCount"
      },
      "type": "array"
    },
    "__listOfInvitation": {
      "items": {
        "$ref": "#/definitions/Invitation"
      },
      "type": "array"
    },
    "__listOfJobScopeTerm": {
      "items": {
        "$ref": "#/definitions/JobScopeTerm"
      },
      "type": "array"
    },
    "__listOfJobSummary": {
      "items": {
        "$ref": "#/definitions/JobSummary"
      },
      "type": "array"
    },
    "__listOfKeyValuePair": {
      "items": {
        "$ref": "#/definitions/KeyValuePair"
      },
      "type": "array"
    },
    "__listOfListJobsFilterTerm": {
      "items": {
        "$ref": "#/definitions/ListJobsFilterTerm"
      },
      "type": "array"
    },
    "__listOfMember": {
      "items": {
        "$ref": "#/definitions/Member"
      },
      "type": "array"
    },
    "__listOfS3BucketDefinitionForJob": {
      "items": {
        "$ref": "#/definitions/S3BucketDefinitionForJob"
      },
      "type": "array"
    },
    "__listOfTagValuePair": {
      "items": {
        "$ref": "#/definitions/TagValuePair"
      },
      "type": "array"
    },
    "__listOfUnprocessedAccount": {
      "items": {
        "$ref": "#/definitions/UnprocessedAccount"
      },
      "type": "array"
    },
    "__listOfUsageByAccount": {
      "items": {
        "$ref": "#/definitions/UsageByAccount"
      },
      "type": "array"
    },
    "__listOfUsageRecord": {
      "items": {
        "$ref": "#/definitions/UsageRecord"
      },
      "type": "array"
    },
    "__listOfUsageStatisticsFilter": {
      "items": {
        "$ref": "#/definitions/UsageStatisticsFilter"
      },
      "type": "array"
    },
    "__listOfUsageTotal": {
      "items": {
        "$ref": "#/definitions/UsageTotal"
      },
      "type": "array"
    },
    "__listOf__string": {
      "items": {
        "$ref": "#/definitions/__string"
      },
      "type": "array"
    },
    "__long": {
      "type": "integer"
    },
    "__string": {
      "type": "string"
    },
    "__timestampIso8601": {
      "format": "date-time",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/macie2/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}