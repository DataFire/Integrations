{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "They Said So",
      "url": "https://theysaidso.com/api/quote",
      "x-twitter": "theysaidso"
    },
    "description": " They Said So Quotes API offers a complete feature rich REST API access to its quotes platform.  This is the documentation for the world famous [quotes API](https://theysaidso.com/api).  If you are a subscriber and you are trying this from a console add 'X-TheySaidSo-Api-Secret' header and add your api key as the header value. You can test and play with the API right here on this web page. For using the private end points and subscribing to the API please visit https://theysaidso.com/api.",
    "termsOfService": "https://theysaidso.com/terms#api",
    "title": "They Said So Quotes API",
    "version": "3.1",
    "x-apisguru-categories": [
      "open_data"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_theysaidso_profile_image.png"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "http://quotes.rest/yaml/theysaidso.quotes.openapi.yaml?v1.1",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "quotes.rest",
    "x-datafire": {
      "name": "quotes_rest",
      "type": "openapi"
    }
  },
  "host": "quotes.rest",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/qod": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "QOD Category",
            "format": "string",
            "in": "query",
            "name": "category",
            "required": false,
            "type": "string"
          },
          {
            "default": "en",
            "description": "Language of the QOD. The language must be supported in our QOD system.",
            "format": "string",
            "in": "query",
            "name": "language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "schema": {
              "$ref": "#/definitions/QuoteResponse"
            }
          },
          "400": {
            "description": "400  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote of the day"
        ],
        "description": "Gets `Quote of the Day`. Optional `category` param determines the category of returned quote of the day\n"
      }
    },
    "/qod/categories": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": "en",
            "description": "Language of the QOD category. The language must be supported in our QOD system.",
            "format": "string",
            "in": "query",
            "name": "language",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "Return detailed information of the categories. Note the data format changes between the two values of this switch.",
            "format": "boolean",
            "in": "query",
            "name": "detailed",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "400": {
            "description": "400  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote of the day"
        ],
        "description": "Gets a list of `Quote of the Day` Categories.\n"
      }
    },
    "/qod/languages": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote of the day"
        ],
        "description": "Gets a list of supported languages for `Quote of the Day`. \n"
      }
    },
    "/qshow": {
      "delete": {
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "description": "Qshow ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Qshow"
        ],
        "description": "Delete a qshow.\n"
      },
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Qshow ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Qshow"
        ],
        "description": "Gets a details about a qshow.\n"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Qshow ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Qshow title",
            "format": "string",
            "in": "query",
            "name": "title",
            "required": false,
            "type": "string"
          },
          {
            "description": "Qshow description",
            "format": "string",
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Tags for the qshow",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Qshow"
        ],
        "description": "Update an existing qshow."
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Qshow title",
            "format": "string",
            "in": "query",
            "name": "title",
            "required": true,
            "type": "string"
          },
          {
            "description": "Qshow description",
            "format": "string",
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Tags for the qshow",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Qshow"
        ],
        "description": "Create and add a new qshow to your private collection."
      }
    },
    "/qshow/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 0,
            "description": "Response is paged. This parameter controls where response starts the listing at",
            "format": "int32",
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "default": false,
            "description": "Should include public qshows or not in the list",
            "format": "boolean",
            "in": "query",
            "name": "public",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Qshow"
        ],
        "description": "Get the list of Qshows in They Said So platform."
      }
    },
    "/qshow/quotes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Qshow ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Qshow"
        ],
        "description": "Get the quotes in a given Qshow."
      }
    },
    "/qshow/quotes/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Qshow ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Quote ID to add the qshow collection",
            "format": "string",
            "in": "query",
            "name": "quoteid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Qshow"
        ],
        "description": "Add a quote to a given Qshow."
      }
    },
    "/qshow/quotes/remove": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Qshow ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Quote ID to remove from the qshow collection",
            "format": "string",
            "in": "query",
            "name": "quoteid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Qshow"
        ],
        "description": "Remove a quote to a given Qshow."
      }
    },
    "/quote": {
      "delete": {
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Private Quotes"
        ],
        "description": "Delete a quote. The user needs to be the owner of the quote to be able to delete it.\n"
      },
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "schema": {
              "$ref": "#/definitions/QuoteResponse"
            }
          },
          "401": {
            "description": "401  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote",
          "Private Quotes"
        ],
        "description": "Gets a `Quote` with a given `id`."
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Quote",
            "format": "string",
            "in": "query",
            "name": "quote",
            "required": false,
            "type": "string"
          },
          {
            "description": "Quote Author",
            "format": "string",
            "in": "query",
            "name": "author",
            "required": false,
            "type": "string"
          },
          {
            "default": "en",
            "description": "Language. If not supplied an auto detection mechanism will be used to detect a language.",
            "format": "string",
            "in": "query",
            "name": "language",
            "required": false,
            "type": "string"
          },
          {
            "description": "Comma Separated tags",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Private Quotes"
        ],
        "description": "Update a quote"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote",
            "format": "string",
            "in": "query",
            "name": "quote",
            "required": true,
            "type": "string"
          },
          {
            "description": "Quote Author",
            "format": "string",
            "in": "query",
            "name": "author",
            "required": false,
            "type": "string"
          },
          {
            "description": "Comma Separated tags",
            "format": "string",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          },
          {
            "default": "en",
            "description": "Language. If not supplied an auto detection mechanism will be used to detect a language.",
            "format": "string",
            "in": "query",
            "name": "language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Private Quotes"
        ],
        "description": "Add a new quote to your private collection. Same as 'PUT' but added since some clients don't handle PUT well."
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote",
            "format": "string",
            "in": "query",
            "name": "quote",
            "required": true,
            "type": "string"
          },
          {
            "description": "Quote Author",
            "format": "string",
            "in": "query",
            "name": "author",
            "required": false,
            "type": "string"
          },
          {
            "description": "Comma Separated tags",
            "format": "string",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          },
          {
            "default": "en",
            "description": "Language. If not supplied an auto detection mechanism will be used to detect a language.",
            "format": "string",
            "in": "query",
            "name": "language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Private Quotes"
        ],
        "description": "Add a new quote to your private collection."
      }
    },
    "/quote/authors/popular": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": "en",
            "description": "Language. A same author may have quotes in two or more different languages. So for example 'Mahatma Gandhi' may be returned for language \"en\"(English), and \"மஹாத்மா காந்தி\" may be returned when the language is \"ta\" (Tamil).",
            "format": "string",
            "in": "query",
            "name": "language",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "Should return detailed author information such as `birthday`, `death date`, `occupation`, `description` etc. Only available at certain subscription levels.",
            "format": "boolean",
            "in": "query",
            "name": "detailed",
            "required": false,
            "type": "boolean"
          },
          {
            "default": 0,
            "description": "Response is paged. This parameter controls where response starts the listing at",
            "format": "int32",
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "default": 5,
            "description": "Response is paged. This parameter controls how many is returned in the result. The maximum depends on the subscription level.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "400": {
            "description": "400  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Gets a list of popular author names in the system. \n"
      }
    },
    "/quote/authors/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Text string to search for in author names",
            "format": "string",
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": "en",
            "description": "Language. A same author may have quotes in two or more different languages. So for example 'Mahatma Gandhi' may be returned for language \"en\"(English), and \"மஹாத்மா காந்தி\" may be returned when the language is \"ta\" (Tamil).",
            "format": "string",
            "in": "query",
            "name": "language",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "Should return detailed author information such as `birthday`, `death date`, `occupation`, `description` etc. Only available at certain subscription levels.",
            "format": "boolean",
            "in": "query",
            "name": "detailed",
            "required": false,
            "type": "boolean"
          },
          {
            "default": 0,
            "description": "Response is paged. This parameter controls where response starts the listing at",
            "format": "int32",
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "default": 1,
            "description": "Response is paged. This parameter controls how many is returned in the result. The maximum depends on the subscription level.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "400": {
            "description": "400  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Gets a list of author names in the system. \n"
      }
    },
    "/quote/categories/popular": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 0,
            "description": "Response is paged. This parameter controls where response starts the listing at",
            "format": "int32",
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "default": 5,
            "description": "Response is paged. This parameter controls how many is returned in the result. The maximum depends on the subscription level.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Gets a list of popular `Quote` Categories.\n"
      }
    },
    "/quote/categories/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 0,
            "description": "Text string to search for in the categories",
            "format": "string",
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "description": "Response is paged. This parameter controls where response starts the listing at",
            "format": "int32",
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "default": 2,
            "description": "Response is paged. This parameter controls how many is returned in the result. The maximum depends on the subscription level.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Gets a list of `Quote` Categories matching the query string.\n"
      }
    },
    "/quote/dislike": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "quote_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Remove the disLike for the given Quote as a user of the API Key."
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "quote_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Dislike the given Quote as a user of the API Key. Same as `put` but a convenient alias for those clients that don't support `put` cleanly."
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "quote_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Dislike the given Quote as a user of the API Key. Some clients don't cleanly support `PUT`, in such scenarios use the `POST` version of this."
      }
    },
    "/quote/image": {
      "delete": {
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote Image ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Delete a quote image. The user needs to be the owner of the quote image to be able to delete it.\n"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote Image id",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Should the response be a direct file download of the image or a base64 encoded image file wrapped in json?",
            "format": "boolean",
            "in": "query",
            "name": "binary",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Gets a Quote image for a given id. Response can be an image file as a binary or a base64 encoded contents wrapped in json. `TODO`\n"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote id",
            "format": "string",
            "in": "query",
            "name": "quote_id",
            "required": true,
            "type": "string"
          },
          {
            "default": "theysaidso_default_background_image",
            "description": "Background Image id ( Will override bgcolor if supplied)",
            "format": "string",
            "in": "query",
            "name": "bgimage_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Background Color(if background image id is not supplied)",
            "format": "string",
            "in": "query",
            "name": "bg_color",
            "required": false,
            "type": "string"
          },
          {
            "default": "theysaidso_default_font",
            "description": "Font id",
            "format": "string",
            "in": "query",
            "name": "font_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Text Color",
            "format": "string",
            "in": "query",
            "name": "text_color",
            "required": false,
            "type": "string"
          },
          {
            "description": "Text/font size",
            "format": "string",
            "in": "query",
            "name": "text_size",
            "required": false,
            "type": "string"
          },
          {
            "default": "center",
            "description": "Horizontal text Alignment Value",
            "format": "string",
            "in": "query",
            "name": "halign",
            "required": false,
            "type": "string"
          },
          {
            "default": "center",
            "description": "Vertical text Alignment Value",
            "format": "string",
            "in": "query",
            "name": "valign",
            "required": false,
            "type": "string"
          },
          {
            "description": "Image Width(By default this takes the width of the background image)",
            "format": "integer",
            "in": "query",
            "name": "width",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Image Height(By default this takes the height of the background image)",
            "format": "integer",
            "in": "query",
            "name": "height",
            "required": false,
            "type": "integer"
          },
          {
            "default": false,
            "description": "Disable They Said So branding (Only available in certain subscription levels. Ignored in other levels)",
            "format": "boolean",
            "in": "query",
            "name": "branding",
            "required": false,
            "type": "boolean"
          },
          {
            "default": true,
            "description": "Should include a transparent layer between the text and the background image? This helps when the background image is bright and obscures the text.",
            "format": "boolean",
            "in": "query",
            "name": "include_transparent_layer",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Create a new quote image for a given quote. Choose background colors/images , choose different font styles and generate a beautiful quote image. Did you just had a feeling of being a god or what?!\n"
      }
    },
    "/quote/image/background": {
      "delete": {
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "description": "Font ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Delete a background image file. The user needs to be the owner of the background image to be able to delete it.\n"
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Image file to add to your collection (png/jpg/gif are supported)",
            "format": "binary",
            "in": "formData",
            "name": "image",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional comma separated tags",
            "format": "string",
            "in": "formData",
            "name": "tags",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Add an image for use later as a quote background image."
      }
    },
    "/quote/image/background/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Response is paged. This parameter determines where the response should start.",
            "format": "integer",
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Lists background images in your private collection. \n"
      }
    },
    "/quote/image/background/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Tag string",
            "format": "string",
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Searches for a background image with a given tag. \n"
      }
    },
    "/quote/image/background/tags/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Image ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comma Separated tags",
            "format": "string",
            "in": "query",
            "name": "tags",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Add a tag to a given Image."
      }
    },
    "/quote/image/background/tags/remove": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Image ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comma Separated tags",
            "format": "string",
            "in": "query",
            "name": "tags",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Remove a tag from a given Image."
      }
    },
    "/quote/image/font": {
      "delete": {
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "description": "Font ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Delete a font file. The user needs to be the owner of the font to be able to delete it.\n"
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Font file to add to your collection (ttf/otf are supported)",
            "format": "binary",
            "in": "formData",
            "name": "font",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional comma separated tags",
            "format": "string",
            "in": "formData",
            "name": "tags",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Add a font file for use later in creating a quote image. This is essentially a `PUT` but not many clients handle PUT with binary stream i.e. a file, gracefully."
      }
    },
    "/quote/image/font/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Response is paged. This parameter determines where the response should start.",
            "format": "integer",
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Lists background images in your private collection. \n"
      }
    },
    "/quote/image/font/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Tag string",
            "format": "string",
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Searches for a font with a given tag. \n"
      }
    },
    "/quote/image/font/tags/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Font ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comma Separated tags",
            "format": "string",
            "in": "query",
            "name": "tags",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Add a tag to a given font."
      }
    },
    "/quote/image/font/tags/remove": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Font ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comma Separated tags",
            "format": "string",
            "in": "query",
            "name": "tags",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Remove a tag from a given Font."
      }
    },
    "/quote/image/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote Category",
            "format": "string",
            "in": "query",
            "name": "category",
            "required": false,
            "type": "string"
          },
          {
            "description": "Quote Author",
            "format": "string",
            "in": "query",
            "name": "author",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "Should search private collection. Default searches public image collection.",
            "format": "boolean",
            "in": "query",
            "name": "private",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote Images"
        ],
        "description": "Gets a Random Quote image. Optional `category` param determines the category of quote used in the image. Optional `author` param gets the quote image of a given author. \n"
      }
    },
    "/quote/like": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "quote_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Remove the Like for the given Quote as a user of the API Key."
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "quote_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Like the given Quote as a user of the API Key. Same as `PUT` but a convenient alias for those clients that don't support `PUT` cleanly."
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "quote_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Like the given Quote as a user of the API Key. Some clients don't cleanly support `PUT`, in such scenarios use the `POST` version of this."
      }
    },
    "/quote/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 0,
            "description": "Response is paged. This parameter controls where response starts the listing at",
            "format": "int32",
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Response is paged. This parameter controls how many is returned in the result.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Private Quotes"
        ],
        "description": "Get the list of quotes in your private collection."
      }
    },
    "/quote/random": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "default": "en",
            "description": "Language of the Quote. The language must be supported in our system.",
            "format": "string",
            "in": "query",
            "name": "language",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "No of quotes to return. The max limit depends on the subscription level.",
            "format": "integer",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "schema": {
              "$ref": "#/definitions/QuoteResponse"
            }
          },
          "401": {
            "description": "401  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Gets a `Random Quote`. When you are in a hurry this is what you call to get a random famous quote."
      }
    },
    "/quote/search": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "description": "Quote Category",
            "format": "string",
            "in": "query",
            "name": "category",
            "required": false,
            "type": "string"
          },
          {
            "description": "Quote Author",
            "format": "string",
            "in": "query",
            "name": "author",
            "required": false,
            "type": "string"
          },
          {
            "default": 100,
            "description": "Quote minimum Length",
            "format": "int32",
            "in": "query",
            "name": "minlength",
            "required": false,
            "type": "integer"
          },
          {
            "default": 300,
            "description": "Quote maximum Length",
            "format": "int32",
            "in": "query",
            "name": "maxlength",
            "required": false,
            "type": "integer"
          },
          {
            "description": "keyword to search for in the quote",
            "format": "string",
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "Should search private collection? Default searches public collection.",
            "format": "boolean",
            "in": "query",
            "name": "private",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "en",
            "description": "Language of the Quote. The language must be supported in our system.",
            "format": "string",
            "in": "query",
            "name": "language",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "description": "No of quotes to return. The max limit depends on the subscription level.",
            "format": "integer",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": false,
            "description": "Should search only SFW (Safe For Work) quotes?",
            "format": "boolean",
            "in": "query",
            "name": "sfw",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "schema": {
              "$ref": "#/definitions/QuoteResponse"
            }
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Quote"
        ],
        "description": "Search for a `Quote` in They Said So platform. Optional `category` , `author`, `minlength`, `maxlength` params determines the filters applied while searching for the quote. "
      }
    },
    "/quote/tags/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comma Separated tags",
            "format": "string",
            "in": "query",
            "name": "tags",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Private Quotes"
        ],
        "description": "Add a tag to a given Quote."
      }
    },
    "/quote/tags/remove": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Quote ID",
            "format": "string",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comma Separated tags",
            "format": "string",
            "in": "query",
            "name": "tags",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200  response"
          },
          "401": {
            "description": "401  response"
          },
          "404": {
            "description": "404  response"
          }
        },
        "security": [
          {
            "X-TheySaidSo-Api-Secret": []
          }
        ],
        "tags": [
          "Private Quotes"
        ],
        "description": "Remove a tag from a given quote."
      }
    }
  },
  "definitions": {
    "NewQuote": {
      "properties": {
        "tags": {
          "description": "Array of tags/categories.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "author": {
          "description": "Author name of quote.",
          "type": "string"
        },
        "quote": {
          "description": "The Quote.",
          "type": "string"
        }
      },
      "required": [
        "quote"
      ]
    },
    "QOD": {
      "allOf": [
        {
          "$ref": "#/definitions/Quote"
        },
        {
          "properties": {
            "date": {
              "description": "Date this quote of the day belongs to",
              "type": "string"
            }
          },
          "required": [
            "date"
          ]
        }
      ]
    },
    "Quote": {
      "allOf": [
        {
          "$ref": "#/definitions/NewQuote"
        },
        {
          "properties": {
            "id": {
              "description": "Unique identifier representing a specific quote in theysaidso.com.",
              "type": "string"
            },
            "image": {
              "description": "Image URL that can be used for background to display this quote.",
              "type": "string"
            },
            "length": {
              "description": "Length of the quote string.",
              "format": "int32",
              "type": "integer"
            }
          },
          "required": [
            "id"
          ]
        }
      ]
    },
    "QuoteResponse": {
      "properties": {
        "contents": {
          "properties": {
            "quotes": {
              "description": "List of quotes",
              "items": {
                "$ref": "#/definitions/Quote"
              },
              "type": "array"
            }
          }
        },
        "success": {
          "description": "Metadata about this successful call",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "X-TheySaidSo-Api-Secret": {
      "in": "header",
      "name": "X-TheySaidSo-Api-Secret",
      "type": "apiKey"
    }
  },
  "tags": [
    {
      "externalDocs": {
        "description": "Find out more",
        "url": "https://theysaidso.com/api/quote#qod"
      },
      "description": "Access quote of the day service. Use this to get the quote of the day in various categories. This is a free API that is available to public. You must credit They Said So if you are using the free version.",
      "name": "Quote of the day"
    },
    {
      "description": "Access random quote service. Use this to get random quotes , quotes filtered by authors or tags etc. You need an API key to access this service.",
      "name": "Quote"
    },
    {
      "description": "Create and manage your own Quotes. You need an API key to access this service.",
      "name": "Private Quotes"
    },
    {
      "externalDocs": {
        "description": "Find out more about image",
        "url": "https://theysaidso.com/api/quote#image"
      },
      "description": "Create beatiful quote images or get one of the premade images. You need an API key to access this service.",
      "name": "Quote Images"
    },
    {
      "description": "Access Qshow - quote collection service. Create curated quotes collection. You can group quotes by any way you want and access them as a single unit. You need an API key to access this service.",
      "name": "Qshow"
    }
  ],
  "x-components": {}
}