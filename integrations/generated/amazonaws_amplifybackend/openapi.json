{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "AWS Amplify Admin API",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AmplifyBackend",
    "version": "2020-08-11",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amplifybackend-2020-08-11.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "amplifybackend",
    "x-datafire": {
      "name": "amazonaws_amplifybackend",
      "type": "openapi"
    }
  },
  "host": "amplifybackend.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/backend": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "appId": {
                  "description": "The app ID.",
                  "type": "string"
                },
                "appName": {
                  "description": "The name of the app.",
                  "type": "string"
                },
                "backendEnvironmentName": {
                  "description": "The name of the backend environment.",
                  "type": "string"
                },
                "resourceConfig": {
                  "description": "Defines the resource configuration for the data model in your Amplify project.",
                  "properties": {},
                  "type": "object"
                },
                "resourceName": {
                  "description": "The name of the resource.",
                  "type": "string"
                }
              },
              "required": [
                "appId",
                "appName",
                "backendEnvironmentName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBackendResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "This operation creates a backend for an Amplify app. Backends are automatically created at the time of app creation.",
        "operationId": "CreateBackend"
      }
    },
    "/backend/{appId}/api": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "backendEnvironmentName": {
                  "description": "The name of the backend environment.",
                  "type": "string"
                },
                "resourceConfig": {
                  "description": "The resource configuration for the data model, configured as a part of the Amplify project.",
                  "properties": {
                    "AdditionalAuthTypes": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ListOfBackendAPIAuthType"
                        },
                        {
                          "description": "Additional authentication methods used to interact with your data models.",
                          "xml": {
                            "name": "additionalAuthTypes"
                          }
                        }
                      ]
                    },
                    "ApiName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The API name used to interact with the data model, configured as a part of the Amplify project.",
                          "xml": {
                            "name": "apiName"
                          }
                        }
                      ]
                    },
                    "ConflictResolution": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BackendAPIConflictResolution"
                        },
                        {
                          "description": "The conflict resolution strategy for your data stored in the data models.",
                          "xml": {
                            "name": "conflictResolution"
                          }
                        }
                      ]
                    },
                    "DefaultAuthType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BackendAPIAuthType"
                        },
                        {
                          "description": "The default authentication type for interacting with the configured data models in your Amplify project.",
                          "xml": {
                            "name": "defaultAuthType"
                          }
                        }
                      ]
                    },
                    "Service": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The service used to provision and interact with the data model.",
                          "xml": {
                            "name": "service"
                          }
                        }
                      ]
                    },
                    "TransformSchema": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The definition of the data model in the annotated transform of the GraphQL schema.",
                          "xml": {
                            "name": "transformSchema"
                          }
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "resourceName": {
                  "description": "The name of this resource.",
                  "type": "string"
                }
              },
              "required": [
                "backendEnvironmentName",
                "resourceConfig",
                "resourceName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBackendAPIResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Creates a new backend API resource.",
        "operationId": "CreateBackendAPI"
      }
    },
    "/backend/{appId}/api/{backendEnvironmentName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "resourceConfig": {
                  "description": "The resource configuration for the data model, configured as a part of the Amplify project.",
                  "properties": {
                    "AdditionalAuthTypes": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ListOfBackendAPIAuthType"
                        },
                        {
                          "description": "Additional authentication methods used to interact with your data models.",
                          "xml": {
                            "name": "additionalAuthTypes"
                          }
                        }
                      ]
                    },
                    "ApiName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The API name used to interact with the data model, configured as a part of the Amplify project.",
                          "xml": {
                            "name": "apiName"
                          }
                        }
                      ]
                    },
                    "ConflictResolution": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BackendAPIConflictResolution"
                        },
                        {
                          "description": "The conflict resolution strategy for your data stored in the data models.",
                          "xml": {
                            "name": "conflictResolution"
                          }
                        }
                      ]
                    },
                    "DefaultAuthType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BackendAPIAuthType"
                        },
                        {
                          "description": "The default authentication type for interacting with the configured data models in your Amplify project.",
                          "xml": {
                            "name": "defaultAuthType"
                          }
                        }
                      ]
                    },
                    "Service": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The service used to provision and interact with the data model.",
                          "xml": {
                            "name": "service"
                          }
                        }
                      ]
                    },
                    "TransformSchema": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The definition of the data model in the annotated transform of the GraphQL schema.",
                          "xml": {
                            "name": "transformSchema"
                          }
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "resourceName": {
                  "description": "The name of this resource.",
                  "type": "string"
                }
              },
              "required": [
                "resourceName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBackendAPIResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Updates an existing backend API resource.",
        "operationId": "UpdateBackendAPI"
      }
    },
    "/backend/{appId}/api/{backendEnvironmentName}/details": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "resourceConfig": {
                  "description": "The resource configuration for the data model, configured as a part of the Amplify project.",
                  "properties": {
                    "AdditionalAuthTypes": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ListOfBackendAPIAuthType"
                        },
                        {
                          "description": "Additional authentication methods used to interact with your data models.",
                          "xml": {
                            "name": "additionalAuthTypes"
                          }
                        }
                      ]
                    },
                    "ApiName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The API name used to interact with the data model, configured as a part of the Amplify project.",
                          "xml": {
                            "name": "apiName"
                          }
                        }
                      ]
                    },
                    "ConflictResolution": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BackendAPIConflictResolution"
                        },
                        {
                          "description": "The conflict resolution strategy for your data stored in the data models.",
                          "xml": {
                            "name": "conflictResolution"
                          }
                        }
                      ]
                    },
                    "DefaultAuthType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BackendAPIAuthType"
                        },
                        {
                          "description": "The default authentication type for interacting with the configured data models in your Amplify project.",
                          "xml": {
                            "name": "defaultAuthType"
                          }
                        }
                      ]
                    },
                    "Service": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The service used to provision and interact with the data model.",
                          "xml": {
                            "name": "service"
                          }
                        }
                      ]
                    },
                    "TransformSchema": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The definition of the data model in the annotated transform of the GraphQL schema.",
                          "xml": {
                            "name": "transformSchema"
                          }
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "resourceName": {
                  "description": "The name of this resource.",
                  "type": "string"
                }
              },
              "required": [
                "resourceName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBackendAPIResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Gets the details for a backend API.",
        "operationId": "GetBackendAPI"
      }
    },
    "/backend/{appId}/api/{backendEnvironmentName}/generateModels": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "resourceName": {
                  "description": "The name of this resource.",
                  "type": "string"
                }
              },
              "required": [
                "resourceName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GenerateBackendAPIModelsResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Generates a model schema for an existing backend API resource.",
        "operationId": "GenerateBackendAPIModels"
      }
    },
    "/backend/{appId}/api/{backendEnvironmentName}/getModels": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "resourceName": {
                  "description": "The name of this resource.",
                  "type": "string"
                }
              },
              "required": [
                "resourceName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBackendAPIModelsResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Generates a model schema for existing backend API resource.",
        "operationId": "GetBackendAPIModels"
      }
    },
    "/backend/{appId}/api/{backendEnvironmentName}/remove": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "resourceConfig": {
                  "description": "The resource configuration for the data model, configured as a part of the Amplify project.",
                  "properties": {
                    "AdditionalAuthTypes": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ListOfBackendAPIAuthType"
                        },
                        {
                          "description": "Additional authentication methods used to interact with your data models.",
                          "xml": {
                            "name": "additionalAuthTypes"
                          }
                        }
                      ]
                    },
                    "ApiName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The API name used to interact with the data model, configured as a part of the Amplify project.",
                          "xml": {
                            "name": "apiName"
                          }
                        }
                      ]
                    },
                    "ConflictResolution": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BackendAPIConflictResolution"
                        },
                        {
                          "description": "The conflict resolution strategy for your data stored in the data models.",
                          "xml": {
                            "name": "conflictResolution"
                          }
                        }
                      ]
                    },
                    "DefaultAuthType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BackendAPIAuthType"
                        },
                        {
                          "description": "The default authentication type for interacting with the configured data models in your Amplify project.",
                          "xml": {
                            "name": "defaultAuthType"
                          }
                        }
                      ]
                    },
                    "Service": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The service used to provision and interact with the data model.",
                          "xml": {
                            "name": "service"
                          }
                        }
                      ]
                    },
                    "TransformSchema": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The definition of the data model in the annotated transform of the GraphQL schema.",
                          "xml": {
                            "name": "transformSchema"
                          }
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "resourceName": {
                  "description": "The name of this resource.",
                  "type": "string"
                }
              },
              "required": [
                "resourceName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBackendAPIResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Deletes an existing backend API resource.",
        "operationId": "DeleteBackendAPI"
      }
    },
    "/backend/{appId}/auth": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "backendEnvironmentName": {
                  "description": "The name of the backend environment.",
                  "type": "string"
                },
                "resourceConfig": {
                  "description": "Defines the resource configuration when creating an auth resource in your Amplify project.",
                  "properties": {
                    "AuthResources": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AuthResources"
                        },
                        {
                          "description": "Defines whether you want to configure only authentication or both authentication and authorization settings.",
                          "xml": {
                            "name": "authResources"
                          }
                        }
                      ]
                    },
                    "IdentityPoolConfigs": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/CreateBackendAuthIdentityPoolConfig"
                        },
                        {
                          "description": "Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of the auth resource in your Amplify project.",
                          "xml": {
                            "name": "identityPoolConfigs"
                          }
                        }
                      ]
                    },
                    "Service": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Service"
                        },
                        {
                          "description": "Defines the service name to use when configuring an authentication resource in your Amplify project.",
                          "xml": {
                            "name": "service"
                          }
                        }
                      ]
                    },
                    "UserPoolConfigs": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/CreateBackendAuthUserPoolConfig"
                        },
                        {
                          "description": "Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of the auth resource in your Amplify project.",
                          "xml": {
                            "name": "userPoolConfigs"
                          }
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "resourceName": {
                  "description": "The name of this resource.",
                  "type": "string"
                }
              },
              "required": [
                "backendEnvironmentName",
                "resourceConfig",
                "resourceName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBackendAuthResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Creates a new backend authentication resource.",
        "operationId": "CreateBackendAuth"
      }
    },
    "/backend/{appId}/auth/{backendEnvironmentName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "resourceConfig": {
                  "description": "Defines the resource configuration when updating an authentication resource in your Amplify project.",
                  "properties": {
                    "AuthResources": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AuthResources"
                        },
                        {
                          "description": "Defines the service name to use when configuring an authentication resource in your Amplify project.",
                          "xml": {
                            "name": "authResources"
                          }
                        }
                      ]
                    },
                    "IdentityPoolConfigs": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/UpdateBackendAuthIdentityPoolConfig"
                        },
                        {
                          "description": "Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of the auth resource in your Amplify project.",
                          "xml": {
                            "name": "identityPoolConfigs"
                          }
                        }
                      ]
                    },
                    "Service": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Service"
                        },
                        {
                          "description": "Defines the service name to use when configuring an authentication resource in your Amplify project.",
                          "xml": {
                            "name": "service"
                          }
                        }
                      ]
                    },
                    "UserPoolConfigs": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/UpdateBackendAuthUserPoolConfig"
                        },
                        {
                          "description": "Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of the auth resource in your Amplify project.",
                          "xml": {
                            "name": "userPoolConfigs"
                          }
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "resourceName": {
                  "description": "The name of this resource.",
                  "type": "string"
                }
              },
              "required": [
                "resourceConfig",
                "resourceName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBackendAuthResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Updates an existing backend authentication resource.",
        "operationId": "UpdateBackendAuth"
      }
    },
    "/backend/{appId}/auth/{backendEnvironmentName}/details": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "resourceName": {
                  "description": "The name of this resource.",
                  "type": "string"
                }
              },
              "required": [
                "resourceName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBackendAuthResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Gets backend auth details.",
        "operationId": "GetBackendAuth"
      }
    },
    "/backend/{appId}/auth/{backendEnvironmentName}/remove": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "resourceName": {
                  "description": "The name of this resource.",
                  "type": "string"
                }
              },
              "required": [
                "resourceName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBackendAuthResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Deletes an existing backend authentication resource.",
        "operationId": "DeleteBackendAuth"
      }
    },
    "/backend/{appId}/challenge": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateTokenResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Generates a one-time challenge code to authenticate a user into your Amplify Admin UI.",
        "operationId": "CreateToken"
      }
    },
    "/backend/{appId}/challenge/{sessionId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The session ID.",
            "in": "path",
            "name": "sessionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetTokenResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Gets the challenge token based on the given appId and sessionId.",
        "operationId": "GetToken"
      }
    },
    "/backend/{appId}/challenge/{sessionId}/remove": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The session ID.",
            "in": "path",
            "name": "sessionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteTokenResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Deletes the challenge token based on the given appId and sessionId.",
        "operationId": "DeleteToken"
      }
    },
    "/backend/{appId}/config": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "backendManagerAppId": {
                  "description": "The app ID for the backend manager.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBackendConfigResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Creates a config object for a backend.",
        "operationId": "CreateBackendConfig"
      }
    },
    "/backend/{appId}/config/remove": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RemoveBackendConfigResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Removes the AWS resources that are required to access the Amplify Admin UI.",
        "operationId": "RemoveBackendConfig"
      }
    },
    "/backend/{appId}/config/update": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "loginAuthConfig": {
                  "description": "The request object for this operation.",
                  "properties": {
                    "AwsCognitoIdentityPoolId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The Amazon Cognito identity pool ID used for Amplify Admin UI login authorization.",
                          "xml": {
                            "name": "aws_cognito_identity_pool_id"
                          }
                        }
                      ]
                    },
                    "AwsCognitoRegion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The AWS Region for the Amplify Admin UI login.",
                          "xml": {
                            "name": "aws_cognito_region"
                          }
                        }
                      ]
                    },
                    "AwsUserPoolsId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The Amazon Cognito user pool ID used for Amplify Admin UI login authentication.",
                          "xml": {
                            "name": "aws_user_pools_id"
                          }
                        }
                      ]
                    },
                    "AwsUserPoolsWebClientId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/__string"
                        },
                        {
                          "description": "The web client ID for the Amazon Cognito user pools.",
                          "xml": {
                            "name": "aws_user_pools_web_client_id"
                          }
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBackendConfigResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Updates the AWS resources that are required to access the Amplify Admin UI.",
        "operationId": "UpdateBackendConfig"
      }
    },
    "/backend/{appId}/details": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "backendEnvironmentName": {
                  "description": "The name of the backend environment.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBackendResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Provides project-level details for your Amplify UI project.",
        "operationId": "GetBackend"
      }
    },
    "/backend/{appId}/environments/{backendEnvironmentName}/clone": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "targetEnvironmentName": {
                  "description": "The name of the destination backend environment to be created.",
                  "type": "string"
                }
              },
              "required": [
                "targetEnvironmentName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CloneBackendResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "This operation clones an existing backend.",
        "operationId": "CloneBackend"
      }
    },
    "/backend/{appId}/environments/{backendEnvironmentName}/remove": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteBackendResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Removes an existing environment from your Amplify project.",
        "operationId": "DeleteBackend"
      }
    },
    "/backend/{appId}/job/{backendEnvironmentName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "jobId": {
                  "description": "The ID for the job.",
                  "type": "string"
                },
                "maxResults": {
                  "description": "The maximum number of results that you want in the response.",
                  "maximum": 25,
                  "minimum": 1,
                  "type": "integer"
                },
                "nextToken": {
                  "description": "The token for the next set of results.",
                  "type": "string"
                },
                "operation": {
                  "description": "Filters the list of response objects to include only those with the specified operation name.",
                  "type": "string"
                },
                "status": {
                  "description": "Filters the list of response objects to include only those with the specified status.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListBackendJobsResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Lists the jobs for the backend of an Amplify app.",
        "operationId": "ListBackendJobs"
      }
    },
    "/backend/{appId}/job/{backendEnvironmentName}/{jobId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID for the job.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBackendJobResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Returns information about a specific job.",
        "operationId": "GetBackendJob"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the backend environment.",
            "in": "path",
            "name": "backendEnvironmentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID for the job.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "operation": {
                  "description": "Filters the list of response objects to include only those with the specified operation name.",
                  "type": "string"
                },
                "status": {
                  "description": "Filters the list of response objects to include only those with the specified status.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBackendJobResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Updates a specific job.",
        "operationId": "UpdateBackendJob"
      }
    },
    "/backend/{appId}/remove": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The app ID.",
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "cleanAmplifyApp": {
                  "description": "Cleans up the Amplify Console app if this value is set to true.",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RemoveAllBackendsResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "GatewayTimeoutException",
            "schema": {
              "$ref": "#/definitions/GatewayTimeoutException"
            }
          },
          "482": {
            "description": "TooManyRequestsException",
            "schema": {
              "$ref": "#/definitions/TooManyRequestsException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          }
        },
        "description": "Removes all backend environments from your Amplify project.",
        "operationId": "RemoveAllBackends"
      }
    }
  },
  "definitions": {
    "AdditionalConstraintsElement": {
      "enum": [
        "REQUIRE_DIGIT",
        "REQUIRE_LOWERCASE",
        "REQUIRE_SYMBOL",
        "REQUIRE_UPPERCASE"
      ],
      "type": "string"
    },
    "AuthResources": {
      "enum": [
        "USER_POOL_ONLY",
        "IDENTITY_POOL_AND_USER_POOL"
      ],
      "type": "string"
    },
    "BackendAPIAppSyncAuthSettings": {
      "description": "The authentication settings for accessing provisioned data models in your Amplify project.",
      "properties": {
        "CognitoUserPoolId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Cognito user pool ID, if Amazon Cognito is used as an authentication setting to access your data models.",
              "xml": {
                "name": "cognitoUserPoolId"
              }
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The API key description for API_KEY, if it is used as an authentication mechanism to access your data models.",
              "xml": {
                "name": "description"
              }
            }
          ]
        },
        "ExpirationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/__double"
            },
            {
              "description": "The API key expiration time for API_KEY, if it is used as an authentication mechanism to access your data models.",
              "xml": {
                "name": "expirationTime"
              }
            }
          ]
        },
        "OpenIDAuthTTL": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The expiry time for the OpenID authentication mechanism.",
              "xml": {
                "name": "openIDAuthTTL"
              }
            }
          ]
        },
        "OpenIDClientId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The clientID for openID, if openID is used as an authentication setting to access your data models.",
              "xml": {
                "name": "openIDClientId"
              }
            }
          ]
        },
        "OpenIDIatTTL": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The expiry time for the OpenID authentication mechanism.",
              "xml": {
                "name": "openIDIatTTL"
              }
            }
          ]
        },
        "OpenIDIssueURL": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The openID issuer URL, if openID is used as an authentication setting to access your data models.",
              "xml": {
                "name": "openIDIssueURL"
              }
            }
          ]
        },
        "OpenIDProviderName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The openID provider name, if openID is used as an authentication mechanism to access your data models.",
              "xml": {
                "name": "openIDProviderName"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "BackendAPIAuthType": {
      "description": "Describes the auth types for your configured data models.",
      "properties": {
        "Mode": {
          "allOf": [
            {
              "$ref": "#/definitions/Mode"
            },
            {
              "description": "Describes the authentication mode.",
              "xml": {
                "name": "mode"
              }
            }
          ]
        },
        "Settings": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendAPIAppSyncAuthSettings"
            },
            {
              "description": "Describes settings for the authentication mode.",
              "xml": {
                "name": "settings"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "BackendAPIConflictResolution": {
      "description": "Describes the conflict resolution configuration for the data model configured in your Amplify project.",
      "properties": {
        "ResolutionStrategy": {
          "allOf": [
            {
              "$ref": "#/definitions/ResolutionStrategy"
            },
            {
              "description": "The strategy for conflict resolution.",
              "xml": {
                "name": "resolutionStrategy"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "BackendAPIResourceConfig": {
      "description": "The resource configuration for the data model, configured as a part of the Amplify project.",
      "properties": {
        "AdditionalAuthTypes": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOfBackendAPIAuthType"
            },
            {
              "description": "Additional authentication methods used to interact with your data models.",
              "xml": {
                "name": "additionalAuthTypes"
              }
            }
          ]
        },
        "ApiName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The API name used to interact with the data model, configured as a part of the Amplify project.",
              "xml": {
                "name": "apiName"
              }
            }
          ]
        },
        "ConflictResolution": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendAPIConflictResolution"
            },
            {
              "description": "The conflict resolution strategy for your data stored in the data models.",
              "xml": {
                "name": "conflictResolution"
              }
            }
          ]
        },
        "DefaultAuthType": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendAPIAuthType"
            },
            {
              "description": "The default authentication type for interacting with the configured data models in your Amplify project.",
              "xml": {
                "name": "defaultAuthType"
              }
            }
          ]
        },
        "Service": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The service used to provision and interact with the data model.",
              "xml": {
                "name": "service"
              }
            }
          ]
        },
        "TransformSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The definition of the data model in the annotated transform of the GraphQL schema.",
              "xml": {
                "name": "transformSchema"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "BackendAuthSocialProviderConfig": {
      "description": "Describes third-party social federation configurations for allowing your app users to sign in using OAuth.",
      "properties": {
        "ClientId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "Describes the client_id that can be obtained from the third-party social federation provider.",
              "xml": {
                "name": "client_id"
              }
            }
          ]
        },
        "ClientSecret": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "Describes the client_secret that can be obtained from third-party social federation providers.",
              "xml": {
                "name": "client_secret"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "BackendJobRespObj": {
      "description": "The response object for this operation.",
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "CreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The time when the job was created.",
              "xml": {
                "name": "createTime"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        },
        "UpdateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The time when the job was last updated.",
              "xml": {
                "name": "updateTime"
              }
            }
          ]
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "object"
    },
    "BadRequestException": {},
    "CloneBackendRequest": {
      "description": "The request body for CloneBackend.",
      "properties": {
        "TargetEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the destination backend environment to be created.",
              "xml": {
                "name": "targetEnvironmentName"
              }
            }
          ]
        }
      },
      "required": [
        "TargetEnvironmentName"
      ],
      "title": "CloneBackendRequest",
      "type": "object"
    },
    "CloneBackendResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateBackendAPIRequest": {
      "description": "The request body for CreateBackendAPI.",
      "properties": {
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "ResourceConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendAPIResourceConfig"
            },
            {
              "description": "The resource configuration for this request.",
              "xml": {
                "name": "resourceConfig"
              }
            }
          ]
        },
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "ResourceName",
        "BackendEnvironmentName",
        "ResourceConfig"
      ],
      "title": "CreateBackendAPIRequest",
      "type": "object"
    },
    "CreateBackendAPIResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateBackendAuthForgotPasswordConfig": {
      "description": "Describes the forgot password policy for authenticating into the Amplify app.",
      "properties": {
        "DeliveryMethod": {
          "allOf": [
            {
              "$ref": "#/definitions/DeliveryMethod"
            },
            {
              "description": "Describes which method to use (either SMS or email) to deliver messages to app users that want to recover their password.",
              "xml": {
                "name": "deliveryMethod"
              }
            }
          ]
        },
        "EmailSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/EmailSettings"
            },
            {
              "description": "The configuration for the email sent when an app user forgets their password.",
              "xml": {
                "name": "emailSettings"
              }
            }
          ]
        },
        "SmsSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/SmsSettings"
            },
            {
              "description": "The configuration for the SMS message sent when an app user forgets their password.",
              "xml": {
                "name": "smsSettings"
              }
            }
          ]
        }
      },
      "required": [
        "DeliveryMethod"
      ],
      "type": "object"
    },
    "CreateBackendAuthIdentityPoolConfig": {
      "description": "Describes authorization configurations for the auth resources, configured as a part of your Amplify project.",
      "properties": {
        "IdentityPoolName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "Name of the identity pool used for authorization.",
              "xml": {
                "name": "identityPoolName"
              }
            }
          ]
        },
        "UnauthenticatedLogin": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Set to true or false based on whether you want to enable guest authorization to your Amplify app.",
              "xml": {
                "name": "unauthenticatedLogin"
              }
            }
          ]
        }
      },
      "required": [
        "UnauthenticatedLogin",
        "IdentityPoolName"
      ],
      "type": "object"
    },
    "CreateBackendAuthMFAConfig": {
      "description": "Describes whether to apply multi-factor authentication (MFA) policies for your Amazon Cognito user pool that's configured as a part of your Amplify project.",
      "properties": {
        "MFAMode": {
          "allOf": [
            {
              "$ref": "#/definitions/MFAMode"
            },
            {
              "description": "Describes whether MFA should be [ON, OFF, or OPTIONAL] for authentication in your Amplify project."
            }
          ]
        },
        "Settings": {
          "allOf": [
            {
              "$ref": "#/definitions/Settings"
            },
            {
              "description": "Describes the configuration settings and methods for your Amplify app users to use MFA.",
              "xml": {
                "name": "settings"
              }
            }
          ]
        }
      },
      "required": [
        "MFAMode"
      ],
      "type": "object"
    },
    "CreateBackendAuthOAuthConfig": {
      "description": "Creates the OAuth configuration for your Amplify project.",
      "properties": {
        "DomainPrefix": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The domain prefix for your Amplify app.",
              "xml": {
                "name": "domainPrefix"
              }
            }
          ]
        },
        "OAuthGrantType": {
          "allOf": [
            {
              "$ref": "#/definitions/OAuthGrantType"
            },
            {
              "description": "The OAuth grant type that you use to allow app users to authenticate from your Amplify app.",
              "xml": {
                "name": "oAuthGrantType"
              }
            }
          ]
        },
        "OAuthScopes": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOfOAuthScopesElement"
            },
            {
              "description": "List of OAuth-related flows that allow your app users to authenticate from your Amplify app.",
              "xml": {
                "name": "oAuthScopes"
              }
            }
          ]
        },
        "RedirectSignInURIs": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOf__string"
            },
            {
              "description": "The redirected URI for signing in to your Amplify app.",
              "xml": {
                "name": "redirectSignInURIs"
              }
            }
          ]
        },
        "RedirectSignOutURIs": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOf__string"
            },
            {
              "description": "Redirect URLs that OAuth uses when a user signs out of an Amplify app.",
              "xml": {
                "name": "redirectSignOutURIs"
              }
            }
          ]
        },
        "SocialProviderSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/SocialProviderSettings"
            },
            {
              "description": "The settings for using social identity providers for access to your Amplify app.",
              "xml": {
                "name": "socialProviderSettings"
              }
            }
          ]
        }
      },
      "required": [
        "RedirectSignOutURIs",
        "RedirectSignInURIs",
        "OAuthGrantType",
        "OAuthScopes"
      ],
      "type": "object"
    },
    "CreateBackendAuthPasswordPolicyConfig": {
      "description": "The password policy configuration for the backend of your Amplify project.",
      "properties": {
        "AdditionalConstraints": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOfAdditionalConstraintsElement"
            },
            {
              "description": "Additional constraints for the password used to access the backend of your Amplify project.",
              "xml": {
                "name": "additionalConstraints"
              }
            }
          ]
        },
        "MinimumLength": {
          "allOf": [
            {
              "$ref": "#/definitions/__double"
            },
            {
              "description": "The minimum length of the password used to access the backend of your Amplify project.",
              "xml": {
                "name": "minimumLength"
              }
            }
          ]
        }
      },
      "required": [
        "MinimumLength"
      ],
      "type": "object"
    },
    "CreateBackendAuthRequest": {
      "description": "The request body for CreateBackendAuth.",
      "properties": {
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "ResourceConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateBackendAuthResourceConfig"
            },
            {
              "description": "The resource configuration for this request object.",
              "xml": {
                "name": "resourceConfig"
              }
            }
          ]
        },
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "ResourceName",
        "BackendEnvironmentName",
        "ResourceConfig"
      ],
      "title": "CreateBackendAuthRequest",
      "type": "object"
    },
    "CreateBackendAuthResourceConfig": {
      "description": "Defines the resource configuration when creating an auth resource in your Amplify project.",
      "properties": {
        "AuthResources": {
          "allOf": [
            {
              "$ref": "#/definitions/AuthResources"
            },
            {
              "description": "Defines whether you want to configure only authentication or both authentication and authorization settings.",
              "xml": {
                "name": "authResources"
              }
            }
          ]
        },
        "IdentityPoolConfigs": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateBackendAuthIdentityPoolConfig"
            },
            {
              "description": "Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of the auth resource in your Amplify project.",
              "xml": {
                "name": "identityPoolConfigs"
              }
            }
          ]
        },
        "Service": {
          "allOf": [
            {
              "$ref": "#/definitions/Service"
            },
            {
              "description": "Defines the service name to use when configuring an authentication resource in your Amplify project.",
              "xml": {
                "name": "service"
              }
            }
          ]
        },
        "UserPoolConfigs": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateBackendAuthUserPoolConfig"
            },
            {
              "description": "Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of the auth resource in your Amplify project.",
              "xml": {
                "name": "userPoolConfigs"
              }
            }
          ]
        }
      },
      "required": [
        "AuthResources",
        "UserPoolConfigs",
        "Service"
      ],
      "type": "object"
    },
    "CreateBackendAuthResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateBackendAuthUserPoolConfig": {
      "description": "Describes the Amazon Cognito user pool configuration for the auth resource to be configured for your Amplify project.",
      "properties": {
        "ForgotPassword": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateBackendAuthForgotPasswordConfig"
            },
            {
              "description": "Describes the forgotten password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml": {
                "name": "forgotPassword"
              }
            }
          ]
        },
        "Mfa": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateBackendAuthMFAConfig"
            },
            {
              "description": "Describes whether to apply multi-factor authentication (MFA) policies for your Amazon Cognito user pool that's configured as a part of your Amplify project.",
              "xml": {
                "name": "mfa"
              }
            }
          ]
        },
        "OAuth": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateBackendAuthOAuthConfig"
            },
            {
              "description": "Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml": {
                "name": "oAuth"
              }
            }
          ]
        },
        "PasswordPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateBackendAuthPasswordPolicyConfig"
            },
            {
              "description": "Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml": {
                "name": "passwordPolicy"
              }
            }
          ]
        },
        "RequiredSignUpAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOfRequiredSignUpAttributesElement"
            },
            {
              "description": "The required attributes to sign up new users in the Amazon Cognito user pool.",
              "xml": {
                "name": "requiredSignUpAttributes"
              }
            }
          ]
        },
        "SignInMethod": {
          "allOf": [
            {
              "$ref": "#/definitions/SignInMethod"
            },
            {
              "description": "Describes the sign-in methods that your Amplify app users to log in using the Amazon Cognito user pool that's configured as a part of your Amplify project.",
              "xml": {
                "name": "signInMethod"
              }
            }
          ]
        },
        "UserPoolName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Cognito user pool name.",
              "xml": {
                "name": "userPoolName"
              }
            }
          ]
        }
      },
      "required": [
        "RequiredSignUpAttributes",
        "SignInMethod",
        "UserPoolName"
      ],
      "type": "object"
    },
    "CreateBackendConfigRequest": {
      "description": "The request body for CreateBackendConfig.",
      "properties": {
        "BackendManagerAppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID for the backend manager.",
              "xml": {
                "name": "backendManagerAppId"
              }
            }
          ]
        }
      },
      "title": "CreateBackendConfigRequest",
      "type": "object"
    },
    "CreateBackendConfigResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateBackendRequest": {
      "description": "The request body for CreateBackend.",
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "AppName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the app.",
              "xml": {
                "name": "appName"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "ResourceConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceConfig"
            },
            {
              "description": "The resource configuration for the backend creation request.",
              "xml": {
                "name": "resourceConfig"
              }
            }
          ]
        },
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "AppName"
      ],
      "title": "CreateBackendRequest",
      "type": "object"
    },
    "CreateBackendResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateTokenRequest": {
      "properties": {},
      "title": "CreateTokenRequest",
      "type": "object"
    },
    "CreateTokenResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "ChallengeCode": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "One-time challenge code for authenticating into the Amplify Admin UI.",
              "xml": {
                "name": "challengeCode"
              }
            }
          ]
        },
        "SessionId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A unique ID provided when creating a new challenge token.",
              "xml": {
                "name": "sessionId"
              }
            }
          ]
        },
        "Ttl": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The expiry time for the one-time generated token code.",
              "xml": {
                "name": "ttl"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteBackendAPIRequest": {
      "description": "The request body for DeleteBackendAPI.",
      "properties": {
        "ResourceConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendAPIResourceConfig"
            },
            {
              "description": "Defines the resource configuration for the data model in your Amplify project.",
              "xml": {
                "name": "resourceConfig"
              }
            }
          ]
        },
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "ResourceName"
      ],
      "title": "DeleteBackendAPIRequest",
      "type": "object"
    },
    "DeleteBackendAPIResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteBackendAuthRequest": {
      "description": "The request body for DeleteBackendAuth.",
      "properties": {
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "ResourceName"
      ],
      "title": "DeleteBackendAuthRequest",
      "type": "object"
    },
    "DeleteBackendAuthResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteBackendRequest": {
      "properties": {},
      "title": "DeleteBackendRequest",
      "type": "object"
    },
    "DeleteBackendResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteTokenRequest": {
      "properties": {},
      "title": "DeleteTokenRequest",
      "type": "object"
    },
    "DeleteTokenResponse": {
      "properties": {
        "IsSuccess": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Indicates whether the request succeeded or failed.",
              "xml": {
                "name": "isSuccess"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "DeliveryMethod": {
      "enum": [
        "EMAIL",
        "SMS"
      ],
      "type": "string"
    },
    "EmailSettings": {
      "description": "The configuration for the email sent when an app user forgets their password.",
      "properties": {
        "EmailMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The body of the email.",
              "xml": {
                "name": "emailMessage"
              }
            }
          ]
        },
        "EmailSubject": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The subject of the email.",
              "xml": {
                "name": "emailSubject"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "GatewayTimeoutException": {},
    "GenerateBackendAPIModelsRequest": {
      "description": "The request body for GenerateBackendAPIModels.",
      "properties": {
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "ResourceName"
      ],
      "title": "GenerateBackendAPIModelsRequest",
      "type": "object"
    },
    "GenerateBackendAPIModelsResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "GetBackendAPIModelsRequest": {
      "description": "The request body for GetBackendAPIModels.",
      "properties": {
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "ResourceName"
      ],
      "title": "GetBackendAPIModelsRequest",
      "type": "object"
    },
    "GetBackendAPIModelsResponse": {
      "properties": {
        "Models": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "Stringified JSON of the DataStore model.",
              "xml": {
                "name": "models"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/Status"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "GetBackendAPIRequest": {
      "description": "The request body for GetBackendAPI.",
      "properties": {
        "ResourceConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendAPIResourceConfig"
            },
            {
              "description": "Defines the resource configuration for the data model in your Amplify project.",
              "xml": {
                "name": "resourceConfig"
              }
            }
          ]
        },
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "ResourceName"
      ],
      "title": "GetBackendAPIRequest",
      "type": "object"
    },
    "GetBackendAPIResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "ResourceConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendAPIResourceConfig"
            },
            {
              "description": "The resource configuration for this response object.",
              "xml": {
                "name": "resourceConfig"
              }
            }
          ]
        },
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "GetBackendAuthRequest": {
      "description": "The request body for GetBackendAuth.",
      "properties": {
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "ResourceName"
      ],
      "title": "GetBackendAuthRequest",
      "type": "object"
    },
    "GetBackendAuthResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "ResourceConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateBackendAuthResourceConfig"
            },
            {
              "description": "The resource configuration for authorization requests to the backend of your Amplify project.",
              "xml": {
                "name": "resourceConfig"
              }
            }
          ]
        },
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "GetBackendJobRequest": {
      "properties": {},
      "title": "GetBackendJobRequest",
      "type": "object"
    },
    "GetBackendJobResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "CreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The time when the job was created.",
              "xml": {
                "name": "createTime"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        },
        "UpdateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The time when the job was last updated.",
              "xml": {
                "name": "updateTime"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "GetBackendRequest": {
      "description": "The request body for GetBackend.",
      "properties": {
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        }
      },
      "title": "GetBackendRequest",
      "type": "object"
    },
    "GetBackendResponse": {
      "properties": {
        "AmplifyMetaConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A stringified version of the current configurations for your Amplify project.",
              "xml": {
                "name": "amplifyMetaConfig"
              }
            }
          ]
        },
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "AppName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the app.",
              "xml": {
                "name": "appName"
              }
            }
          ]
        },
        "BackendEnvironmentList": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOf__string"
            },
            {
              "description": "A list of backend environments in an array.",
              "xml": {
                "name": "backendEnvironmentList"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "GetTokenRequest": {
      "properties": {},
      "title": "GetTokenRequest",
      "type": "object"
    },
    "GetTokenResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "ChallengeCode": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The one-time challenge code for authenticating into the Amplify Admin UI.",
              "xml": {
                "name": "challengeCode"
              }
            }
          ]
        },
        "SessionId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "A unique ID provided when creating a new challenge token.",
              "xml": {
                "name": "sessionId"
              }
            }
          ]
        },
        "Ttl": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The expiry time for the one-time generated token code.",
              "xml": {
                "name": "ttl"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "ListBackendJobsRequest": {
      "description": "The request body for ListBackendJobs.",
      "properties": {
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/__integerMin1Max25"
            },
            {
              "description": "The maximum number of results that you want in the response.",
              "xml": {
                "name": "maxResults"
              }
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The token for the next set of results.",
              "xml": {
                "name": "nextToken"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "Filters the list of response objects to include only those with the specified operation name.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "Filters the list of response objects to include only those with the specified status.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "title": "ListBackendJobsRequest",
      "type": "object"
    },
    "ListBackendJobsResponse": {
      "properties": {
        "Jobs": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOfBackendJobRespObj"
            },
            {
              "description": "An array of jobs and their properties.",
              "xml": {
                "name": "jobs"
              }
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The token for the next set of results.",
              "xml": {
                "name": "nextToken"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "ListOfAdditionalConstraintsElement": {
      "items": {
        "$ref": "#/definitions/AdditionalConstraintsElement"
      },
      "type": "array"
    },
    "ListOfBackendAPIAuthType": {
      "items": {
        "$ref": "#/definitions/BackendAPIAuthType"
      },
      "type": "array"
    },
    "ListOfBackendJobRespObj": {
      "items": {
        "$ref": "#/definitions/BackendJobRespObj"
      },
      "type": "array"
    },
    "ListOfMfaTypesElement": {
      "items": {
        "$ref": "#/definitions/MfaTypesElement"
      },
      "type": "array"
    },
    "ListOfOAuthScopesElement": {
      "items": {
        "$ref": "#/definitions/OAuthScopesElement"
      },
      "type": "array"
    },
    "ListOfRequiredSignUpAttributesElement": {
      "items": {
        "$ref": "#/definitions/RequiredSignUpAttributesElement"
      },
      "type": "array"
    },
    "ListOf__string": {
      "items": {
        "$ref": "#/definitions/__string"
      },
      "type": "array"
    },
    "LoginAuthConfigReqObj": {
      "description": "The request object for this operation.",
      "properties": {
        "AwsCognitoIdentityPoolId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Cognito identity pool ID used for Amplify Admin UI login authorization.",
              "xml": {
                "name": "aws_cognito_identity_pool_id"
              }
            }
          ]
        },
        "AwsCognitoRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The AWS Region for the Amplify Admin UI login.",
              "xml": {
                "name": "aws_cognito_region"
              }
            }
          ]
        },
        "AwsUserPoolsId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Cognito user pool ID used for Amplify Admin UI login authentication.",
              "xml": {
                "name": "aws_user_pools_id"
              }
            }
          ]
        },
        "AwsUserPoolsWebClientId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The web client ID for the Amazon Cognito user pools.",
              "xml": {
                "name": "aws_user_pools_web_client_id"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "MFAMode": {
      "enum": [
        "ON",
        "OFF",
        "OPTIONAL"
      ],
      "type": "string"
    },
    "MfaTypesElement": {
      "enum": [
        "SMS",
        "TOTP"
      ],
      "type": "string"
    },
    "Mode": {
      "enum": [
        "API_KEY",
        "AWS_IAM",
        "AMAZON_COGNITO_USER_POOLS",
        "OPENID_CONNECT"
      ],
      "type": "string"
    },
    "NotFoundException": {},
    "OAuthGrantType": {
      "enum": [
        "CODE",
        "IMPLICIT"
      ],
      "type": "string"
    },
    "OAuthScopesElement": {
      "enum": [
        "PHONE",
        "EMAIL",
        "OPENID",
        "PROFILE",
        "AWS_COGNITO_SIGNIN_USER_ADMIN"
      ],
      "type": "string"
    },
    "RemoveAllBackendsRequest": {
      "description": "The request body for RemoveAllBackends.",
      "properties": {
        "CleanAmplifyApp": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "Cleans up the Amplify Console app if this value is set to true.",
              "xml": {
                "name": "cleanAmplifyApp"
              }
            }
          ]
        }
      },
      "title": "RemoveAllBackendsRequest",
      "type": "object"
    },
    "RemoveAllBackendsResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "RemoveBackendConfigRequest": {
      "properties": {},
      "title": "RemoveBackendConfigRequest",
      "type": "object"
    },
    "RemoveBackendConfigResponse": {
      "properties": {
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "RequiredSignUpAttributesElement": {
      "enum": [
        "ADDRESS",
        "BIRTHDATE",
        "EMAIL",
        "FAMILY_NAME",
        "GENDER",
        "GIVEN_NAME",
        "LOCALE",
        "MIDDLE_NAME",
        "NAME",
        "NICKNAME",
        "PHONE_NUMBER",
        "PICTURE",
        "PREFERRED_USERNAME",
        "PROFILE",
        "UPDATED_AT",
        "WEBSITE",
        "ZONE_INFO"
      ],
      "type": "string"
    },
    "ResolutionStrategy": {
      "enum": [
        "OPTIMISTIC_CONCURRENCY",
        "LAMBDA",
        "AUTOMERGE",
        "NONE"
      ],
      "type": "string"
    },
    "ResourceConfig": {
      "description": "Defines the resource configuration for the data model in your Amplify project.",
      "properties": {},
      "type": "object"
    },
    "Service": {
      "enum": [
        "COGNITO"
      ],
      "type": "string"
    },
    "Settings": {
      "description": "The settings of your MFA configuration for the backend of your Amplify project.",
      "properties": {
        "MfaTypes": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOfMfaTypesElement"
            },
            {
              "description": "The supported MFA types.",
              "xml": {
                "name": "mfaTypes"
              }
            }
          ]
        },
        "SmsMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The body of the SMS message.",
              "xml": {
                "name": "smsMessage"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "SignInMethod": {
      "enum": [
        "EMAIL",
        "EMAIL_AND_PHONE_NUMBER",
        "PHONE_NUMBER",
        "USERNAME"
      ],
      "type": "string"
    },
    "SmsSettings": {
      "description": "SMS settings for authentication.",
      "properties": {
        "SmsMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The body of the SMS message.",
              "xml": {
                "name": "smsMessage"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "SocialProviderSettings": {
      "description": "The settings for using the social identity providers for access to your Amplify app.",
      "properties": {
        "Facebook": {
          "$ref": "#/definitions/BackendAuthSocialProviderConfig"
        },
        "Google": {
          "$ref": "#/definitions/BackendAuthSocialProviderConfig"
        },
        "LoginWithAmazon": {
          "$ref": "#/definitions/BackendAuthSocialProviderConfig"
        }
      },
      "type": "object"
    },
    "Status": {
      "enum": [
        "LATEST",
        "STALE"
      ],
      "type": "string"
    },
    "TooManyRequestsException": {},
    "UpdateBackendAPIRequest": {
      "description": "The request body for UpdateBackendAPI.",
      "properties": {
        "ResourceConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendAPIResourceConfig"
            },
            {
              "description": "Defines the resource configuration for the data model in your Amplify project.",
              "xml": {
                "name": "resourceConfig"
              }
            }
          ]
        },
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "ResourceName"
      ],
      "title": "UpdateBackendAPIRequest",
      "type": "object"
    },
    "UpdateBackendAPIResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateBackendAuthForgotPasswordConfig": {
      "description": "Describes the forgot password policy for authenticating into the Amplify app.",
      "properties": {
        "DeliveryMethod": {
          "allOf": [
            {
              "$ref": "#/definitions/DeliveryMethod"
            },
            {
              "description": "Describes which method to use (either SMS or email) to deliver messages to app users that want to recover their password.",
              "xml": {
                "name": "deliveryMethod"
              }
            }
          ]
        },
        "EmailSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/EmailSettings"
            },
            {
              "description": "The configuration for the email sent when an app user forgets their password.",
              "xml": {
                "name": "emailSettings"
              }
            }
          ]
        },
        "SmsSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/SmsSettings"
            },
            {
              "description": "The configuration for the SMS message sent when an Amplify app user forgets their password.",
              "xml": {
                "name": "smsSettings"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateBackendAuthIdentityPoolConfig": {
      "description": "Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.",
      "properties": {
        "UnauthenticatedLogin": {
          "allOf": [
            {
              "$ref": "#/definitions/__boolean"
            },
            {
              "description": "A Boolean value that you can set to allow or disallow guest-level authorization into your Amplify app.",
              "xml": {
                "name": "unauthenticatedLogin"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateBackendAuthMFAConfig": {
      "description": "Updates the multi-factor authentication (MFA) configuration for the backend of your Amplify project.",
      "properties": {
        "MFAMode": {
          "allOf": [
            {
              "$ref": "#/definitions/MFAMode"
            },
            {
              "description": "The MFA mode for the backend of your Amplify project."
            }
          ]
        },
        "Settings": {
          "allOf": [
            {
              "$ref": "#/definitions/Settings"
            },
            {
              "description": "The settings of your MFA configuration for the backend of your Amplify project.",
              "xml": {
                "name": "settings"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateBackendAuthOAuthConfig": {
      "description": "The OAuth configurations for authenticating users into your Amplify app.",
      "properties": {
        "DomainPrefix": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The Amazon Cognito domain prefix used to create a hosted UI for authentication.",
              "xml": {
                "name": "domainPrefix"
              }
            }
          ]
        },
        "OAuthGrantType": {
          "allOf": [
            {
              "$ref": "#/definitions/OAuthGrantType"
            },
            {
              "description": "The OAuth grant type to allow app users to authenticate from your Amplify app.",
              "xml": {
                "name": "oAuthGrantType"
              }
            }
          ]
        },
        "OAuthScopes": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOfOAuthScopesElement"
            },
            {
              "description": "The list of OAuth-related flows that can allow users to authenticate from your Amplify app.",
              "xml": {
                "name": "oAuthScopes"
              }
            }
          ]
        },
        "RedirectSignInURIs": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOf__string"
            },
            {
              "description": "Redirect URLs that OAuth uses when a user signs in to an Amplify app.",
              "xml": {
                "name": "redirectSignInURIs"
              }
            }
          ]
        },
        "RedirectSignOutURIs": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOf__string"
            },
            {
              "description": "Redirect URLs that OAuth uses when a user signs out of an Amplify app.",
              "xml": {
                "name": "redirectSignOutURIs"
              }
            }
          ]
        },
        "SocialProviderSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/SocialProviderSettings"
            },
            {
              "description": "Describes third-party social federation configurations for allowing your users to sign in with OAuth.",
              "xml": {
                "name": "socialProviderSettings"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateBackendAuthPasswordPolicyConfig": {
      "description": "Describes the password policy for your Amazon Cognito user pool that's configured as a part of your Amplify project.",
      "properties": {
        "AdditionalConstraints": {
          "allOf": [
            {
              "$ref": "#/definitions/ListOfAdditionalConstraintsElement"
            },
            {
              "description": "Describes additional constrains on the password requirements to sign in to the auth resource, configured as a part of your Amplify project.",
              "xml": {
                "name": "additionalConstraints"
              }
            }
          ]
        },
        "MinimumLength": {
          "allOf": [
            {
              "$ref": "#/definitions/__double"
            },
            {
              "description": "Describes the minimum length of the password required to sign in to the auth resource, configured as a part of your Amplify project.",
              "xml": {
                "name": "minimumLength"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateBackendAuthRequest": {
      "description": "The request body for UpdateBackendAuth.",
      "properties": {
        "ResourceConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateBackendAuthResourceConfig"
            },
            {
              "description": "The resource configuration for this request object.",
              "xml": {
                "name": "resourceConfig"
              }
            }
          ]
        },
        "ResourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of this resource.",
              "xml": {
                "name": "resourceName"
              }
            }
          ]
        }
      },
      "required": [
        "ResourceName",
        "ResourceConfig"
      ],
      "title": "UpdateBackendAuthRequest",
      "type": "object"
    },
    "UpdateBackendAuthResourceConfig": {
      "description": "Defines the resource configuration when updating an authentication resource in your Amplify project.",
      "properties": {
        "AuthResources": {
          "allOf": [
            {
              "$ref": "#/definitions/AuthResources"
            },
            {
              "description": "Defines the service name to use when configuring an authentication resource in your Amplify project.",
              "xml": {
                "name": "authResources"
              }
            }
          ]
        },
        "IdentityPoolConfigs": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateBackendAuthIdentityPoolConfig"
            },
            {
              "description": "Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of the auth resource in your Amplify project.",
              "xml": {
                "name": "identityPoolConfigs"
              }
            }
          ]
        },
        "Service": {
          "allOf": [
            {
              "$ref": "#/definitions/Service"
            },
            {
              "description": "Defines the service name to use when configuring an authentication resource in your Amplify project.",
              "xml": {
                "name": "service"
              }
            }
          ]
        },
        "UserPoolConfigs": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateBackendAuthUserPoolConfig"
            },
            {
              "description": "Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of the auth resource in your Amplify project.",
              "xml": {
                "name": "userPoolConfigs"
              }
            }
          ]
        }
      },
      "required": [
        "AuthResources",
        "UserPoolConfigs",
        "Service"
      ],
      "type": "object"
    },
    "UpdateBackendAuthResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateBackendAuthUserPoolConfig": {
      "description": "Describes the Amazon Cognito user pool configuration to configure the authorization resource for your Amplify project on an update.",
      "properties": {
        "ForgotPassword": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateBackendAuthForgotPasswordConfig"
            },
            {
              "description": "Describes the forgot password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml": {
                "name": "forgotPassword"
              }
            }
          ]
        },
        "Mfa": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateBackendAuthMFAConfig"
            },
            {
              "description": "Describes whether to apply multi-factor authentication (MFA) policies for your Amazon Cognito user pool that's configured as a part of your Amplify project.",
              "xml": {
                "name": "mfa"
              }
            }
          ]
        },
        "OAuth": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateBackendAuthOAuthConfig"
            },
            {
              "description": "Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml": {
                "name": "oAuth"
              }
            }
          ]
        },
        "PasswordPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateBackendAuthPasswordPolicyConfig"
            },
            {
              "description": "Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.",
              "xml": {
                "name": "passwordPolicy"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateBackendConfigRequest": {
      "description": "The request body for UpdateBackendConfig.",
      "properties": {
        "LoginAuthConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/LoginAuthConfigReqObj"
            },
            {
              "description": "Describes the Amazon Cognito configuration for Admin UI access.",
              "xml": {
                "name": "loginAuthConfig"
              }
            }
          ]
        }
      },
      "title": "UpdateBackendConfigRequest",
      "type": "object"
    },
    "UpdateBackendConfigResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendManagerAppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID for the backend manager.",
              "xml": {
                "name": "backendManagerAppId"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "LoginAuthConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/LoginAuthConfigReqObj"
            },
            {
              "description": "Describes the Amazon Cognito configurations for the Admin UI auth resource to log in with.",
              "xml": {
                "name": "loginAuthConfig"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateBackendJobRequest": {
      "description": "The request body for GetBackendJob.",
      "properties": {
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "Filters the list of response objects to include only those with the specified operation name.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "Filters the list of response objects to include only those with the specified status.",
              "xml": {
                "name": "status"
              }
            }
          ]
        }
      },
      "title": "UpdateBackendJobRequest",
      "type": "object"
    },
    "UpdateBackendJobResponse": {
      "properties": {
        "AppId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The app ID.",
              "xml": {
                "name": "appId"
              }
            }
          ]
        },
        "BackendEnvironmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the backend environment.",
              "xml": {
                "name": "backendEnvironmentName"
              }
            }
          ]
        },
        "CreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The time when the job was created.",
              "xml": {
                "name": "createTime"
              }
            }
          ]
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "If the request failed, this is the returned error.",
              "xml": {
                "name": "error"
              }
            }
          ]
        },
        "JobId": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The ID for the job.",
              "xml": {
                "name": "jobId"
              }
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The name of the operation.",
              "xml": {
                "name": "operation"
              }
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The current status of the request.",
              "xml": {
                "name": "status"
              }
            }
          ]
        },
        "UpdateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The time when the job was last updated.",
              "xml": {
                "name": "updateTime"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "__boolean": {
      "type": "boolean"
    },
    "__double": {
      "format": "double",
      "type": "number"
    },
    "__integerMin1Max25": {
      "maximum": 25,
      "minimum": 1,
      "type": "integer"
    },
    "__string": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/amplifybackend/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  }
}