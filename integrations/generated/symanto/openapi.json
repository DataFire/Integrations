{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "support@symanto.net",
      "name": "Symanto Support",
      "url": "https://developers.symanto.net"
    },
    "description": "We aim to provide the deepest understanding of people through psychology & AI",
    "termsOfService": "https://developers.symanto.net/terms-of-service",
    "title": "Psycholinguistic Text Analytics",
    "version": "1.0",
    "x-apisguru-categories": [
      "text"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_www.symanto.com_wp-content_uploads_2020_06_symanto.svg"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://api.symanto.net/docs/v1/openapi.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "symanto.net",
    "x-datafire": {
      "name": "symanto",
      "type": "openapi"
    }
  },
  "host": "api.symanto.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/communication": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": false,
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/PredictionResults"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "tags": [
          "Text Analysis"
        ],
        "description": "Identify the purpose and writing style of a written text.\n\nSupported Languages: [`ar`, `de`, `en`, `es`, `fr`, `it`, `nl`, `pt`, `ru`, `tr`, `zh`]\n\nReturned labels:\n* action-seeking\n* fact-oriented\n* information-seeking\n* self-revealing",
        "operationId": "communication",
        "summary": "Communication & Tonality"
      }
    },
    "/emotion": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": false,
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/PredictionResults"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "tags": [
          "Text Analysis"
        ],
        "description": "Detect the emotions of the text.\n\nSupported Langauges: [`en`, `de`, `es`]\n\nReturned labels:\n* anger\n* joy\n* love\n* sadness\n* surprise\n* uncategorized",
        "operationId": "emotion",
        "summary": "Emotion Analysis"
      }
    },
    "/language-detection": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageDetectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/LanguageDetectionResponse"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "tags": [
          "Text Analysis"
        ],
        "description": "Identifies what language a text is written in. Only languages that our API supports can be analyzed.\n\nReturned labels:\n* language_code of the detected language",
        "operationId": "language-detection",
        "summary": "Language Detection"
      }
    },
    "/personality": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": false,
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/PredictionResults"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "tags": [
          "Text Analysis"
        ],
        "description": "Predict the personality trait of author of any written text.\n\nSupported Languages: [`ar`, `de`, `en`, `es`, `fr`, `it`, `nl`, `pt`, `ru`, `tr`, `zh`]\n\nReturned labels:\n\n* emotional\n* rational",
        "operationId": "personality",
        "summary": "Personality Traits"
      }
    },
    "/sentiment": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": false,
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/PredictionResults"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "tags": [
          "Text Analysis"
        ],
        "description": "Evaluate the overall tonality of the text.\n\nSupported Languages: [`en`, `de`, `es`]\n\nReturned labels:\n* positive\n* negative",
        "operationId": "sentiment",
        "summary": "Sentiment Analysis"
      }
    },
    "/topic-sentiment": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Provide analysis domain for better extraction (optional)",
            "enum": [
              "Ecom",
              "Employee"
            ],
            "in": "query",
            "name": "domain",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TopicSentimentResponse"
            }
          }
        },
        "tags": [
          "Text Analysis"
        ],
        "operationId": "topic-sentiment",
        "summary": "Extracts topics and sentiments and relates them."
      }
    }
  },
  "definitions": {
    "LanguageDetection": {
      "properties": {
        "id": {
          "description": "id of the text.",
          "type": "string"
        },
        "text": {
          "description": "the text itself.",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "type": "object"
    },
    "LanguageDetectionRequest": {
      "items": {
        "$ref": "#/definitions/LanguageDetection"
      },
      "maxItems": 64,
      "minItems": 1,
      "type": "array"
    },
    "LanguageDetectionResponse": {
      "items": {
        "$ref": "#/definitions/LanguagePredicted"
      },
      "type": "array"
    },
    "LanguagePredicted": {
      "properties": {
        "detected_language": {
          "description": "the detected language_code corresponding to the input text.",
          "type": "string"
        },
        "id": {
          "description": "id of the post.",
          "type": "string"
        }
      },
      "required": [
        "detected_language"
      ],
      "title": "LanguagePredicted",
      "type": "object"
    },
    "Post": {
      "properties": {
        "id": {
          "description": "id of the post.",
          "example": 1,
          "type": "string"
        },
        "language": {
          "description": "language_code of the text.",
          "example": "en",
          "type": "string"
        },
        "text": {
          "description": "the text to be analysed.",
          "example": "I love the service",
          "type": "string"
        }
      },
      "required": [
        "text",
        "language"
      ],
      "title": "Post",
      "type": "object"
    },
    "PostPredicted": {
      "properties": {
        "id": {
          "description": "id of the post.",
          "type": "string"
        },
        "predictions": {
          "description": "the list of predictions.",
          "items": {
            "$ref": "#/definitions/Prediction"
          },
          "type": "array"
        }
      },
      "required": [
        "predictions"
      ],
      "title": "PostPredicted",
      "type": "object"
    },
    "PostRequest": {
      "items": {
        "$ref": "#/definitions/Post"
      },
      "maxItems": 32,
      "minItems": 1,
      "title": "Posts",
      "type": "array"
    },
    "Prediction": {
      "properties": {
        "prediction": {
          "description": "the predicted label.",
          "title": "Prediction",
          "type": "string"
        },
        "probability": {
          "description": "the probability of the predicted label.",
          "title": "Probability",
          "type": "number"
        }
      },
      "required": [
        "prediction",
        "probability"
      ],
      "title": "Prediction",
      "type": "object"
    },
    "PredictionResults": {
      "items": {
        "$ref": "#/definitions/PostPredicted"
      },
      "title": "Prediction Results",
      "type": "array"
    },
    "Sentiment": {
      "properties": {
        "category": {
          "type": "string"
        },
        "end": {
          "format": "int32",
          "type": "integer"
        },
        "negationTerm": {
          "type": "string"
        },
        "parentCategory": {
          "type": "string"
        },
        "positive": {
          "type": "boolean"
        },
        "scale": {
          "format": "double",
          "type": "number"
        },
        "start": {
          "format": "int32",
          "type": "integer"
        },
        "text": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Topic": {
      "properties": {
        "category": {
          "type": "string"
        },
        "end": {
          "format": "int32",
          "type": "integer"
        },
        "polarity": {
          "format": "double",
          "type": "number"
        },
        "start": {
          "format": "int32",
          "type": "integer"
        },
        "text": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TopicSentiment": {
      "properties": {
        "sentence": {
          "type": "string"
        },
        "sentiment": {
          "$ref": "#/definitions/Sentiment"
        },
        "topic": {
          "$ref": "#/definitions/Topic"
        }
      },
      "type": "object"
    },
    "TopicSentimentOutput": {
      "properties": {
        "id": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "sentiments": {
          "items": {
            "$ref": "#/definitions/Sentiment"
          },
          "type": "array"
        },
        "text": {
          "type": "string"
        },
        "topicSentiments": {
          "items": {
            "$ref": "#/definitions/TopicSentiment"
          },
          "type": "array"
        },
        "topics": {
          "items": {
            "$ref": "#/definitions/Topic"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TopicSentimentResponse": {
      "items": {
        "$ref": "#/definitions/TopicSentimentOutput"
      },
      "type": "array"
    },
    "ValidationError": {
      "properties": {
        "loc": {
          "items": {
            "type": "string"
          },
          "title": "Location",
          "type": "array"
        },
        "msg": {
          "title": "Message",
          "type": "string"
        },
        "type": {
          "title": "Error Type",
          "type": "string"
        }
      },
      "required": [
        "loc",
        "msg",
        "type"
      ],
      "title": "ValidationError",
      "type": "object"
    },
    "ValidationErrors": {
      "properties": {
        "detail": {
          "items": {
            "$ref": "#/definitions/ValidationError"
          },
          "title": "Detail",
          "type": "array"
        }
      },
      "title": "ValidationErrors",
      "type": "object"
    }
  },
  "securityDefinitions": {
    "apiKeyHeader": {
      "in": "header",
      "name": "x-api-key",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "x-components": {}
}