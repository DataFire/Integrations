{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>Amazon Connect Customer Profiles</fullname> <p>Welcome to the Amazon Connect Customer Profiles API Reference. This guide provides information about the Amazon Connect Customer Profiles API, including supported operations, data types, parameters, and schemas.</p> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center.</p> <p>If you're new to Amazon Connect, you might find it helpful to also review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/what-is-amazon-connect.html\">Amazon Connect Administrator Guide</a>.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Connect Customer Profiles",
    "version": "2020-08-15",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/customer-profiles-2020-08-15.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "customer-profiles",
    "x-datafire": {
      "name": "amazonaws_customer_profiles",
      "type": "openapi"
    }
  },
  "host": "profile.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/domains": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The pagination token from the previous ListDomain API call.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 1,
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of objects returned per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDomainsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Returns a list of all the domains for an AWS account that have been created.",
        "operationId": "ListDomains"
      }
    },
    "/domains/{DomainName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteDomainResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Deletes a specific domain and all of its customer data, such as customer profile attributes and their related objects.",
        "operationId": "DeleteDomain"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A unique name for the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDomainResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Returns information about a specific domain.",
        "operationId": "GetDomain"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DeadLetterQueueUrl": {
                  "description": "The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "DefaultEncryptionKey": {
                  "description": "The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "DefaultExpirationDays": {
                  "description": "The default number of days until the data within the domain expires.",
                  "maximum": 1098,
                  "minimum": 1,
                  "type": "integer"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "The tags used to organize, track, or control access for this resource.",
                  "maxProperties": 50,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "DefaultExpirationDays"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDomainResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "<p>Creates a domain, which is a container for all customer data, such as customer profile attributes, object types, profile keys, and encryption keys. You can create multiple domains, and each domain can have multiple third-party integrations.</p> <p>Each Amazon Connect instance can be associated with only one domain. Multiple Amazon Connect instances can be associated with one domain.</p>",
        "operationId": "CreateDomain"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name for the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DeadLetterQueueUrl": {
                  "description": "The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. If specified as an empty string, it will clear any existing value. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "DefaultEncryptionKey": {
                  "description": "The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage. If specified as an empty string, it will clear any existing value.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "DefaultExpirationDays": {
                  "description": "The default number of days until the data within the domain expires.",
                  "maximum": 1098,
                  "minimum": 1,
                  "type": "integer"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "The tags used to organize, track, or control access for this resource.",
                  "maxProperties": 50,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateDomainResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "<p>Updates the properties of a domain, including creating or selecting a dead letter queue or an encryption key.</p> <p>Once a domain is created, the name can’t be changed.</p>",
        "operationId": "UpdateDomain"
      }
    },
    "/domains/{DomainName}/integrations": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The pagination token from the previous ListIntegrations API call.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 1,
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of objects returned per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListIntegrationsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Lists all of the integrations in your domain.",
        "operationId": "ListIntegrations"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Uri": {
                  "description": "The URI of the S3 bucket or any other type of data source.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetIntegrationResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Returns an integration for a domain.",
        "operationId": "GetIntegration"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ObjectTypeName": {
                  "description": "The name of the profile object type.",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
                  "type": "string"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "The tags used to organize, track, or control access for this resource.",
                  "maxProperties": 50,
                  "minProperties": 1,
                  "type": "object"
                },
                "Uri": {
                  "description": "The URI of the S3 bucket or any other type of data source.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "Uri",
                "ObjectTypeName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutIntegrationResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "<p>Adds an integration between the service and a third-party service, which includes Amazon AppFlow and Amazon Connect.</p> <p>An integration can belong to only one domain.</p>",
        "operationId": "PutIntegration"
      }
    },
    "/domains/{DomainName}/integrations/delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Uri": {
                  "description": "The URI of the S3 bucket or any other type of data source.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteIntegrationResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Removes an integration from a specific domain.",
        "operationId": "DeleteIntegration"
      }
    },
    "/domains/{DomainName}/object-types": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifies the next page of results to return.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 1,
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of objects returned per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListProfileObjectTypesResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Lists all of the templates available within the service.",
        "operationId": "ListProfileObjectTypes"
      }
    },
    "/domains/{DomainName}/object-types/{ObjectTypeName}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the profile object type.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "ObjectTypeName",
            "pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteProfileObjectTypeResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Removes a ProfileObjectType from a specific domain as well as removes all the ProfileObjects of that type. It also disables integrations from this specific ProfileObjectType. In addition, it scrubs all of the fields of the standard profile that were populated from this ProfileObjectType.",
        "operationId": "DeleteProfileObjectType"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the profile object type.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "ObjectTypeName",
            "pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetProfileObjectTypeResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Returns the object types for a specific domain.",
        "operationId": "GetProfileObjectType"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the profile object type.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "ObjectTypeName",
            "pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AllowProfileCreation": {
                  "description": "Indicates whether a profile should be created when data is received if one doesn’t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile.",
                  "type": "boolean"
                },
                "Description": {
                  "description": "Description of the profile object type.",
                  "maxLength": 1000,
                  "minLength": 1,
                  "type": "string"
                },
                "EncryptionKey": {
                  "description": "The customer-provided key to encrypt the profile object that will be created in this profile object type.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "ExpirationDays": {
                  "description": "The number of days until the data in the object expires.",
                  "maximum": 1098,
                  "minimum": 1,
                  "type": "integer"
                },
                "Fields": {
                  "additionalProperties": {
                    "$ref": "#/definitions/ObjectTypeField"
                  },
                  "description": "A map of the name and ObjectType field.",
                  "type": "object"
                },
                "Keys": {
                  "additionalProperties": {
                    "$ref": "#/definitions/ObjectTypeKeyList"
                  },
                  "description": "A list of unique keys that can be used to map data to the profile.",
                  "type": "object"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "The tags used to organize, track, or control access for this resource.",
                  "maxProperties": 50,
                  "minProperties": 1,
                  "type": "object"
                },
                "TemplateId": {
                  "description": "A unique identifier for the object template.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9_-]+$",
                  "type": "string"
                }
              },
              "required": [
                "Description"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutProfileObjectTypeResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Defines a ProfileObjectType.",
        "operationId": "PutProfileObjectType"
      }
    },
    "/domains/{DomainName}/profiles": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccountNumber": {
                  "description": "A unique account number that you have given to the customer.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "AdditionalInformation": {
                  "description": "Any additional information relevant to the customer's profile.",
                  "maxLength": 1000,
                  "minLength": 1,
                  "type": "string"
                },
                "Address": {
                  "description": "A generic address associated with the customer that is not mailing, shipping, or billing.",
                  "properties": {
                    "Address1": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The first line of a customer address."
                        }
                      ]
                    },
                    "Address2": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The second line of a customer address."
                        }
                      ]
                    },
                    "Address3": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The third line of a customer address."
                        }
                      ]
                    },
                    "Address4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The fourth line of a customer address."
                        }
                      ]
                    },
                    "City": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The city in which a customer lives."
                        }
                      ]
                    },
                    "Country": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The country in which a customer lives."
                        }
                      ]
                    },
                    "County": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The county in which a customer lives."
                        }
                      ]
                    },
                    "PostalCode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The postal code of a customer address."
                        }
                      ]
                    },
                    "Province": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The province in which a customer lives."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The state in which a customer lives."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Attributes": {
                  "additionalProperties": {
                    "$ref": "#/definitions/string1To255"
                  },
                  "description": "A key value pair of attributes of a customer profile.",
                  "type": "object"
                },
                "BillingAddress": {
                  "description": "A generic address associated with the customer that is not mailing, shipping, or billing.",
                  "properties": {
                    "Address1": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The first line of a customer address."
                        }
                      ]
                    },
                    "Address2": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The second line of a customer address."
                        }
                      ]
                    },
                    "Address3": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The third line of a customer address."
                        }
                      ]
                    },
                    "Address4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The fourth line of a customer address."
                        }
                      ]
                    },
                    "City": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The city in which a customer lives."
                        }
                      ]
                    },
                    "Country": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The country in which a customer lives."
                        }
                      ]
                    },
                    "County": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The county in which a customer lives."
                        }
                      ]
                    },
                    "PostalCode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The postal code of a customer address."
                        }
                      ]
                    },
                    "Province": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The province in which a customer lives."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The state in which a customer lives."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "BirthDate": {
                  "description": "The customer’s birth date.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "BusinessEmailAddress": {
                  "description": "The customer’s business email address.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "BusinessName": {
                  "description": "The name of the customer’s business.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "BusinessPhoneNumber": {
                  "description": "The customer’s business phone number.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "EmailAddress": {
                  "description": "The customer's email address, which has not been specified as a personal or business address.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "FirstName": {
                  "description": "The customer’s first name.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "Gender": {
                  "description": "The gender with which the customer identifies.",
                  "enum": [
                    "MALE",
                    "FEMALE",
                    "UNSPECIFIED"
                  ],
                  "type": "string"
                },
                "HomePhoneNumber": {
                  "description": "The customer’s home phone number.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "LastName": {
                  "description": "The customer’s last name.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "MailingAddress": {
                  "description": "A generic address associated with the customer that is not mailing, shipping, or billing.",
                  "properties": {
                    "Address1": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The first line of a customer address."
                        }
                      ]
                    },
                    "Address2": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The second line of a customer address."
                        }
                      ]
                    },
                    "Address3": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The third line of a customer address."
                        }
                      ]
                    },
                    "Address4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The fourth line of a customer address."
                        }
                      ]
                    },
                    "City": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The city in which a customer lives."
                        }
                      ]
                    },
                    "Country": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The country in which a customer lives."
                        }
                      ]
                    },
                    "County": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The county in which a customer lives."
                        }
                      ]
                    },
                    "PostalCode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The postal code of a customer address."
                        }
                      ]
                    },
                    "Province": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The province in which a customer lives."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The state in which a customer lives."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "MiddleName": {
                  "description": "The customer’s middle name.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "MobilePhoneNumber": {
                  "description": "The customer’s mobile phone number.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "PartyType": {
                  "description": "The type of profile used to describe the customer.",
                  "enum": [
                    "INDIVIDUAL",
                    "BUSINESS",
                    "OTHER"
                  ],
                  "type": "string"
                },
                "PersonalEmailAddress": {
                  "description": "The customer’s personal email address.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "PhoneNumber": {
                  "description": "The customer's phone number, which has not been specified as a mobile, home, or business number.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "ShippingAddress": {
                  "description": "A generic address associated with the customer that is not mailing, shipping, or billing.",
                  "properties": {
                    "Address1": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The first line of a customer address."
                        }
                      ]
                    },
                    "Address2": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The second line of a customer address."
                        }
                      ]
                    },
                    "Address3": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The third line of a customer address."
                        }
                      ]
                    },
                    "Address4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The fourth line of a customer address."
                        }
                      ]
                    },
                    "City": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The city in which a customer lives."
                        }
                      ]
                    },
                    "Country": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The country in which a customer lives."
                        }
                      ]
                    },
                    "County": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The county in which a customer lives."
                        }
                      ]
                    },
                    "PostalCode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The postal code of a customer address."
                        }
                      ]
                    },
                    "Province": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The province in which a customer lives."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string1To255"
                        },
                        {
                          "description": "The state in which a customer lives."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateProfileResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "<p>Creates a standard profile.</p> <p>A standard profile represents the following attributes for a customer profile in a domain.</p>",
        "operationId": "CreateProfile"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccountNumber": {
                  "description": "A unique account number that you have given to the customer.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "AdditionalInformation": {
                  "description": "Any additional information relevant to the customer's profile.",
                  "maxLength": 1000,
                  "minLength": 0,
                  "type": "string"
                },
                "Address": {
                  "description": "Updates associated with the address properties of a customer profile.",
                  "properties": {
                    "Address1": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The first line of a customer address."
                        }
                      ]
                    },
                    "Address2": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The second line of a customer address."
                        }
                      ]
                    },
                    "Address3": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The third line of a customer address."
                        }
                      ]
                    },
                    "Address4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The fourth line of a customer address."
                        }
                      ]
                    },
                    "City": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The city in which a customer lives."
                        }
                      ]
                    },
                    "Country": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The country in which a customer lives."
                        }
                      ]
                    },
                    "County": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The county in which a customer lives."
                        }
                      ]
                    },
                    "PostalCode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The postal code of a customer address."
                        }
                      ]
                    },
                    "Province": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The province in which a customer lives."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The state in which a customer lives."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Attributes": {
                  "additionalProperties": {
                    "$ref": "#/definitions/string0To255"
                  },
                  "description": "A key value pair of attributes of a customer profile.",
                  "type": "object"
                },
                "BillingAddress": {
                  "description": "Updates associated with the address properties of a customer profile.",
                  "properties": {
                    "Address1": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The first line of a customer address."
                        }
                      ]
                    },
                    "Address2": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The second line of a customer address."
                        }
                      ]
                    },
                    "Address3": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The third line of a customer address."
                        }
                      ]
                    },
                    "Address4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The fourth line of a customer address."
                        }
                      ]
                    },
                    "City": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The city in which a customer lives."
                        }
                      ]
                    },
                    "Country": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The country in which a customer lives."
                        }
                      ]
                    },
                    "County": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The county in which a customer lives."
                        }
                      ]
                    },
                    "PostalCode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The postal code of a customer address."
                        }
                      ]
                    },
                    "Province": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The province in which a customer lives."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The state in which a customer lives."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "BirthDate": {
                  "description": "The customer’s birth date.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "BusinessEmailAddress": {
                  "description": "The customer’s business email address.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "BusinessName": {
                  "description": "The name of the customer’s business.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "BusinessPhoneNumber": {
                  "description": "The customer’s business phone number.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "EmailAddress": {
                  "description": "The customer's email address, which has not been specified as a personal or business address.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "FirstName": {
                  "description": "The customer’s first name.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "Gender": {
                  "description": "The gender with which the customer identifies.",
                  "enum": [
                    "MALE",
                    "FEMALE",
                    "UNSPECIFIED"
                  ],
                  "type": "string"
                },
                "HomePhoneNumber": {
                  "description": "The customer’s home phone number.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "LastName": {
                  "description": "The customer’s last name.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "MailingAddress": {
                  "description": "Updates associated with the address properties of a customer profile.",
                  "properties": {
                    "Address1": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The first line of a customer address."
                        }
                      ]
                    },
                    "Address2": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The second line of a customer address."
                        }
                      ]
                    },
                    "Address3": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The third line of a customer address."
                        }
                      ]
                    },
                    "Address4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The fourth line of a customer address."
                        }
                      ]
                    },
                    "City": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The city in which a customer lives."
                        }
                      ]
                    },
                    "Country": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The country in which a customer lives."
                        }
                      ]
                    },
                    "County": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The county in which a customer lives."
                        }
                      ]
                    },
                    "PostalCode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The postal code of a customer address."
                        }
                      ]
                    },
                    "Province": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The province in which a customer lives."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The state in which a customer lives."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "MiddleName": {
                  "description": "The customer’s middle name.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "MobilePhoneNumber": {
                  "description": "The customer’s mobile phone number.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "PartyType": {
                  "description": "The type of profile used to describe the customer.",
                  "enum": [
                    "INDIVIDUAL",
                    "BUSINESS",
                    "OTHER"
                  ],
                  "type": "string"
                },
                "PersonalEmailAddress": {
                  "description": "The customer’s personal email address.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "PhoneNumber": {
                  "description": "The customer's phone number, which has not been specified as a mobile, home, or business number.",
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string"
                },
                "ProfileId": {
                  "description": "The unique identifier of a customer profile.",
                  "pattern": "[a-f0-9]{32}",
                  "type": "string"
                },
                "ShippingAddress": {
                  "description": "Updates associated with the address properties of a customer profile.",
                  "properties": {
                    "Address1": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The first line of a customer address."
                        }
                      ]
                    },
                    "Address2": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The second line of a customer address."
                        }
                      ]
                    },
                    "Address3": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The third line of a customer address."
                        }
                      ]
                    },
                    "Address4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The fourth line of a customer address."
                        }
                      ]
                    },
                    "City": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The city in which a customer lives."
                        }
                      ]
                    },
                    "Country": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The country in which a customer lives."
                        }
                      ]
                    },
                    "County": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The county in which a customer lives."
                        }
                      ]
                    },
                    "PostalCode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The postal code of a customer address."
                        }
                      ]
                    },
                    "Province": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The province in which a customer lives."
                        }
                      ]
                    },
                    "State": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/string0To255"
                        },
                        {
                          "description": "The state in which a customer lives."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ProfileId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateProfileResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "<p>Updates the properties of a profile. The ProfileId is required for updating a customer profile.</p> <p>When calling the UpdateProfile API, specifying an empty string value means that any existing value will be removed. Not specifying a string value means that any value already there will be kept.</p>",
        "operationId": "UpdateProfile"
      }
    },
    "/domains/{DomainName}/profiles/delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ProfileId": {
                  "description": "The unique identifier of a customer profile.",
                  "pattern": "[a-f0-9]{32}",
                  "type": "string"
                }
              },
              "required": [
                "ProfileId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteProfileResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Deletes the standard customer profile and all data pertaining to the profile.",
        "operationId": "DeleteProfile"
      }
    },
    "/domains/{DomainName}/profiles/keys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "KeyName": {
                  "description": "A searchable identifier of a customer profile.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9_-]+$",
                  "type": "string"
                },
                "ProfileId": {
                  "description": "The unique identifier of a customer profile.",
                  "pattern": "[a-f0-9]{32}",
                  "type": "string"
                },
                "Values": {
                  "description": "A list of key values.",
                  "items": {
                    "$ref": "#/definitions/string1To255"
                  },
                  "type": "array"
                }
              },
              "required": [
                "ProfileId",
                "KeyName",
                "Values"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AddProfileKeyResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "<p>Associates a new key value with a specific profile, such as a Contact Trace Record (CTR) ContactId.</p> <p>A profile object can have a single unique key and any number of additional keys that can be used to identify the profile that it belongs to.</p>",
        "operationId": "AddProfileKey"
      }
    },
    "/domains/{DomainName}/profiles/keys/delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "KeyName": {
                  "description": "A searchable identifier of a customer profile.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9_-]+$",
                  "type": "string"
                },
                "ProfileId": {
                  "description": "The unique identifier of a customer profile.",
                  "pattern": "[a-f0-9]{32}",
                  "type": "string"
                },
                "Values": {
                  "description": "A list of key values.",
                  "items": {
                    "$ref": "#/definitions/string1To255"
                  },
                  "type": "array"
                }
              },
              "required": [
                "ProfileId",
                "KeyName",
                "Values"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteProfileKeyResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Removes a searchable key from a customer profile.",
        "operationId": "DeleteProfileKey"
      }
    },
    "/domains/{DomainName}/profiles/objects": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The pagination token from the previous call to ListProfileObjects.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 1,
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of objects returned per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ObjectTypeName": {
                  "description": "The name of the profile object type.",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
                  "type": "string"
                },
                "ProfileId": {
                  "description": "The unique identifier of a customer profile.",
                  "pattern": "[a-f0-9]{32}",
                  "type": "string"
                }
              },
              "required": [
                "ObjectTypeName",
                "ProfileId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListProfileObjectsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Returns a list of objects associated with a profile of a given ProfileObjectType.",
        "operationId": "ListProfileObjects"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Object": {
                  "description": "A string that is serialized from a JSON object.",
                  "maxLength": 256000,
                  "minLength": 1,
                  "type": "string"
                },
                "ObjectTypeName": {
                  "description": "The name of the profile object type.",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
                  "type": "string"
                }
              },
              "required": [
                "ObjectTypeName",
                "Object"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutProfileObjectResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "<p>Adds additional objects to customer profiles of a given ObjectType.</p> <p>When adding a specific profile object, like a Contact Trace Record (CTR), an inferred profile can get created if it is not mapped to an existing profile. The resulting profile will only have a phone number populated in the standard ProfileObject. Any additional CTRs with the same phone number will be mapped to the same inferred profile.</p> <p>When a ProfileObject is created and if a ProfileObjectType already exists for the ProfileObject, it will provide data to a standard profile depending on the ProfileObjectType definition.</p> <p>PutProfileObject needs an ObjectType, which can be created using PutProfileObjectType.</p>",
        "operationId": "PutProfileObject"
      }
    },
    "/domains/{DomainName}/profiles/objects/delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ObjectTypeName": {
                  "description": "The name of the profile object type.",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
                  "type": "string"
                },
                "ProfileId": {
                  "description": "The unique identifier of a customer profile.",
                  "pattern": "[a-f0-9]{32}",
                  "type": "string"
                },
                "ProfileObjectUniqueKey": {
                  "description": "The unique identifier of the profile object generated by the service.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "ProfileId",
                "ProfileObjectUniqueKey",
                "ObjectTypeName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteProfileObjectResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Removes an object associated with a profile of a given ProfileObjectType.",
        "operationId": "DeleteProfileObject"
      }
    },
    "/domains/{DomainName}/profiles/search": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The pagination token from the previous SearchProfiles API call.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 1,
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of objects returned per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The unique name of the domain.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "DomainName",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "KeyName": {
                  "description": "A searchable identifier of a customer profile. The predefined keys you can use to search include: _account, _profileId, _fullName, _phone, _email, _ctrContactId, _marketoLeadId, _salesforceAccountId, _salesforceContactId, _zendeskUserId, _zendeskExternalId, _serviceNowSystemId.",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9_-]+$",
                  "type": "string"
                },
                "Values": {
                  "description": "A list of key values.",
                  "items": {
                    "$ref": "#/definitions/string1To255"
                  },
                  "type": "array"
                }
              },
              "required": [
                "KeyName",
                "Values"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchProfilesResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Searches for profiles within a specific domain name using name, phone number, email address, account number, or a custom defined index.",
        "operationId": "SearchProfiles"
      }
    },
    "/integrations": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The pagination token from the previous ListAccountIntegrations API call.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 1,
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of objects returned per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Uri": {
                  "description": "The URI of the S3 bucket or any other type of data source.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "Uri"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAccountIntegrationsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Lists all of the integrations associated to a specific URI in the AWS account.",
        "operationId": "ListAccountIntegrations"
      }
    },
    "/tags/{resourceArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the resource for which you want to view tags.",
            "in": "path",
            "maxLength": 256,
            "name": "resourceArn",
            "pattern": "^arn:[a-z0-9]{1,10}:profile",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Displays the tags associated with an Amazon Connect Customer Profiles resource. In Connect Customer Profiles, domains, profile object types, and integrations can be tagged.",
        "operationId": "ListTagsForResource"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the resource that you're adding tags to.",
            "in": "path",
            "maxLength": 256,
            "name": "resourceArn",
            "pattern": "^arn:[a-z0-9]{1,10}:profile",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "The tags used to organize, track, or control access for this resource.",
                  "maxProperties": 50,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Assigns one or more tags (key-value pairs) to the specified Amazon Connect Customer Profiles resource. Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values. In Connect Customer Profiles, domains, profile object types, and integrations can be tagged.</p> <p>Tags don't have any semantic meaning to AWS and are interpreted strictly as strings of characters.</p> <p>You can use the TagResource action with a resource that already has tags. If you specify a new tag key, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>",
        "operationId": "TagResource"
      }
    },
    "/tags/{resourceArn}#tagKeys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the resource from which you are removing tags.",
            "in": "path",
            "maxLength": 256,
            "name": "resourceArn",
            "pattern": "^arn:[a-z0-9]{1,10}:profile",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of tag keys to remove from the resource.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/TagKey"
            },
            "maxItems": 50,
            "minItems": 1,
            "name": "tagKeys",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Removes one or more tags from the specified Amazon Connect Customer Profiles resource. In Connect Customer Profiles, domains, profile object types, and integrations can be tagged.",
        "operationId": "UntagResource"
      }
    },
    "/templates": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The pagination token from the previous ListObjectTypeTemplates API call.",
            "in": "query",
            "maxLength": 1024,
            "minLength": 1,
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of objects returned per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListProfileObjectTypeTemplatesResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "Lists all of the template information for object types.",
        "operationId": "ListProfileObjectTypeTemplates"
      }
    },
    "/templates/{TemplateId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A unique identifier for the object template.",
            "in": "path",
            "maxLength": 64,
            "minLength": 1,
            "name": "TemplateId",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetProfileObjectTypeTemplateResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": "<p>Returns the template information for a specific object type.</p> <p>A template is a predefined ProfileObjectType, such as “Salesforce-Account” or “Salesforce-Contact.” When a user sends a ProfileObject, using the PutProfileObject API, with an ObjectTypeName that matches one of the TemplateIds, it uses the mappings from the template.</p>",
        "operationId": "GetProfileObjectTypeTemplate"
      }
    }
  },
  "definitions": {
    "AccessDeniedException": {},
    "AddProfileKeyRequest": {
      "properties": {
        "KeyName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "A searchable identifier of a customer profile."
            }
          ]
        },
        "ProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            },
            {
              "description": "The unique identifier of a customer profile."
            }
          ]
        },
        "Values": {
          "allOf": [
            {
              "$ref": "#/definitions/requestValueList"
            },
            {
              "description": "A list of key values."
            }
          ]
        }
      },
      "required": [
        "ProfileId",
        "KeyName",
        "Values"
      ],
      "title": "AddProfileKeyRequest",
      "type": "object"
    },
    "AddProfileKeyResponse": {
      "properties": {
        "KeyName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "A searchable identifier of a customer profile."
            }
          ]
        },
        "Values": {
          "allOf": [
            {
              "$ref": "#/definitions/requestValueList"
            },
            {
              "description": "A list of key values."
            }
          ]
        }
      },
      "type": "object"
    },
    "Address": {
      "description": "A generic address associated with the customer that is not mailing, shipping, or billing.",
      "properties": {
        "Address1": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The first line of a customer address."
            }
          ]
        },
        "Address2": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The second line of a customer address."
            }
          ]
        },
        "Address3": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The third line of a customer address."
            }
          ]
        },
        "Address4": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The fourth line of a customer address."
            }
          ]
        },
        "City": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The city in which a customer lives."
            }
          ]
        },
        "Country": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The country in which a customer lives."
            }
          ]
        },
        "County": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The county in which a customer lives."
            }
          ]
        },
        "PostalCode": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The postal code of a customer address."
            }
          ]
        },
        "Province": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The province in which a customer lives."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The state in which a customer lives."
            }
          ]
        }
      },
      "type": "object"
    },
    "Attributes": {
      "additionalProperties": {
        "$ref": "#/definitions/string1To255"
      },
      "type": "object"
    },
    "BadRequestException": {},
    "CreateDomainRequest": {
      "properties": {
        "DeadLetterQueueUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/sqsQueueUrl"
            },
            {
              "description": "The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue."
            }
          ]
        },
        "DefaultEncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/encryptionKey"
            },
            {
              "description": "The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage."
            }
          ]
        },
        "DefaultExpirationDays": {
          "allOf": [
            {
              "$ref": "#/definitions/expirationDaysInteger"
            },
            {
              "description": "The default number of days until the data within the domain expires."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        }
      },
      "required": [
        "DefaultExpirationDays"
      ],
      "title": "CreateDomainRequest",
      "type": "object"
    },
    "CreateDomainResponse": {
      "properties": {
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was created."
            }
          ]
        },
        "DeadLetterQueueUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/sqsQueueUrl"
            },
            {
              "description": "The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications."
            }
          ]
        },
        "DefaultEncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/encryptionKey"
            },
            {
              "description": "The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage."
            }
          ]
        },
        "DefaultExpirationDays": {
          "allOf": [
            {
              "$ref": "#/definitions/expirationDaysInteger"
            },
            {
              "description": "The default number of days until the data within the domain expires."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The unique name of the domain."
            }
          ]
        },
        "LastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was most recently edited."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "DefaultExpirationDays",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "object"
    },
    "CreateProfileRequest": {
      "properties": {
        "AccountNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "A unique account number that you have given to the customer."
            }
          ]
        },
        "AdditionalInformation": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To1000"
            },
            {
              "description": "Any additional information relevant to the customer's profile."
            }
          ]
        },
        "Address": {
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            },
            {
              "description": "A generic address associated with the customer that is not mailing, shipping, or billing."
            }
          ]
        },
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/Attributes"
            },
            {
              "description": "A key value pair of attributes of a customer profile."
            }
          ]
        },
        "BillingAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            },
            {
              "description": "The customer’s billing address."
            }
          ]
        },
        "BirthDate": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s birth date."
            }
          ]
        },
        "BusinessEmailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s business email address."
            }
          ]
        },
        "BusinessName": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The name of the customer’s business."
            }
          ]
        },
        "BusinessPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s business phone number."
            }
          ]
        },
        "EmailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer's email address, which has not been specified as a personal or business address."
            }
          ]
        },
        "FirstName": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s first name."
            }
          ]
        },
        "Gender": {
          "allOf": [
            {
              "$ref": "#/definitions/Gender"
            },
            {
              "description": "The gender with which the customer identifies."
            }
          ]
        },
        "HomePhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s home phone number."
            }
          ]
        },
        "LastName": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s last name."
            }
          ]
        },
        "MailingAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            },
            {
              "description": "The customer’s mailing address."
            }
          ]
        },
        "MiddleName": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s middle name."
            }
          ]
        },
        "MobilePhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s mobile phone number."
            }
          ]
        },
        "PartyType": {
          "allOf": [
            {
              "$ref": "#/definitions/PartyType"
            },
            {
              "description": "The type of profile used to describe the customer."
            }
          ]
        },
        "PersonalEmailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s personal email address."
            }
          ]
        },
        "PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer's phone number, which has not been specified as a mobile, home, or business number."
            }
          ]
        },
        "ShippingAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            },
            {
              "description": "The customer’s shipping address."
            }
          ]
        }
      },
      "title": "CreateProfileRequest",
      "type": "object"
    },
    "CreateProfileResponse": {
      "properties": {
        "ProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            },
            {
              "description": "The unique identifier of a customer profile."
            }
          ]
        }
      },
      "required": [
        "ProfileId"
      ],
      "type": "object"
    },
    "DeleteDomainRequest": {
      "properties": {},
      "title": "DeleteDomainRequest",
      "type": "object"
    },
    "DeleteDomainResponse": {
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/message"
            },
            {
              "description": "A message that indicates the delete request is done."
            }
          ]
        }
      },
      "required": [
        "Message"
      ],
      "type": "object"
    },
    "DeleteIntegrationRequest": {
      "properties": {
        "Uri": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The URI of the S3 bucket or any other type of data source."
            }
          ]
        }
      },
      "title": "DeleteIntegrationRequest",
      "type": "object"
    },
    "DeleteIntegrationResponse": {
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/message"
            },
            {
              "description": "A message that indicates the delete request is done."
            }
          ]
        }
      },
      "required": [
        "Message"
      ],
      "type": "object"
    },
    "DeleteProfileKeyRequest": {
      "properties": {
        "KeyName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "A searchable identifier of a customer profile."
            }
          ]
        },
        "ProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            },
            {
              "description": "The unique identifier of a customer profile."
            }
          ]
        },
        "Values": {
          "allOf": [
            {
              "$ref": "#/definitions/requestValueList"
            },
            {
              "description": "A list of key values."
            }
          ]
        }
      },
      "required": [
        "ProfileId",
        "KeyName",
        "Values"
      ],
      "title": "DeleteProfileKeyRequest",
      "type": "object"
    },
    "DeleteProfileKeyResponse": {
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/message"
            },
            {
              "description": "A message that indicates the delete request is done."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteProfileObjectRequest": {
      "properties": {
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "The name of the profile object type."
            }
          ]
        },
        "ProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            },
            {
              "description": "The unique identifier of a customer profile."
            }
          ]
        },
        "ProfileObjectUniqueKey": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The unique identifier of the profile object generated by the service."
            }
          ]
        }
      },
      "required": [
        "ProfileId",
        "ProfileObjectUniqueKey",
        "ObjectTypeName"
      ],
      "title": "DeleteProfileObjectRequest",
      "type": "object"
    },
    "DeleteProfileObjectResponse": {
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/message"
            },
            {
              "description": "A message that indicates the delete request is done."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteProfileObjectTypeRequest": {
      "properties": {},
      "title": "DeleteProfileObjectTypeRequest",
      "type": "object"
    },
    "DeleteProfileObjectTypeResponse": {
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/message"
            },
            {
              "description": "A message that indicates the delete request is done."
            }
          ]
        }
      },
      "required": [
        "Message"
      ],
      "type": "object"
    },
    "DeleteProfileRequest": {
      "properties": {
        "ProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            },
            {
              "description": "The unique identifier of a customer profile."
            }
          ]
        }
      },
      "required": [
        "ProfileId"
      ],
      "title": "DeleteProfileRequest",
      "type": "object"
    },
    "DeleteProfileResponse": {
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/message"
            },
            {
              "description": "A message that indicates the delete request is done."
            }
          ]
        }
      },
      "type": "object"
    },
    "DomainList": {
      "items": {
        "$ref": "#/definitions/ListDomainItem"
      },
      "type": "array"
    },
    "DomainStats": {
      "description": "Usage-specific statistics about the domain.",
      "properties": {
        "MeteringProfileCount": {
          "allOf": [
            {
              "$ref": "#/definitions/long"
            },
            {
              "description": "The number of profiles that you are currently paying for in the domain. If you have more than 100 objects associated with a single profile, that profile counts as two profiles. If you have more than 200 objects, that profile counts as three, and so on."
            }
          ]
        },
        "ObjectCount": {
          "allOf": [
            {
              "$ref": "#/definitions/long"
            },
            {
              "description": "The total number of objects in domain."
            }
          ]
        },
        "ProfileCount": {
          "allOf": [
            {
              "$ref": "#/definitions/long"
            },
            {
              "description": "The total number of profiles currently in the domain."
            }
          ]
        },
        "TotalSize": {
          "allOf": [
            {
              "$ref": "#/definitions/long"
            },
            {
              "description": "The total size, in bytes, of all objects in the domain."
            }
          ]
        }
      },
      "type": "object"
    },
    "FieldContentType": {
      "enum": [
        "STRING",
        "NUMBER",
        "PHONE_NUMBER",
        "EMAIL_ADDRESS",
        "NAME"
      ],
      "type": "string"
    },
    "FieldMap": {
      "additionalProperties": {
        "$ref": "#/definitions/ObjectTypeField"
      },
      "type": "object"
    },
    "FieldNameList": {
      "items": {
        "$ref": "#/definitions/name"
      },
      "type": "array"
    },
    "Gender": {
      "enum": [
        "MALE",
        "FEMALE",
        "UNSPECIFIED"
      ],
      "type": "string"
    },
    "GetDomainRequest": {
      "properties": {},
      "title": "GetDomainRequest",
      "type": "object"
    },
    "GetDomainResponse": {
      "properties": {
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was created."
            }
          ]
        },
        "DeadLetterQueueUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/sqsQueueUrl"
            },
            {
              "description": "The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications."
            }
          ]
        },
        "DefaultEncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/encryptionKey"
            },
            {
              "description": "The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage."
            }
          ]
        },
        "DefaultExpirationDays": {
          "allOf": [
            {
              "$ref": "#/definitions/expirationDaysInteger"
            },
            {
              "description": "The default number of days until the data within the domain expires."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The unique name of the domain."
            }
          ]
        },
        "LastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was most recently edited."
            }
          ]
        },
        "Stats": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainStats"
            },
            {
              "description": "Usage-specific statistics about the domain."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "object"
    },
    "GetIntegrationRequest": {
      "properties": {
        "Uri": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The URI of the S3 bucket or any other type of data source."
            }
          ]
        }
      },
      "title": "GetIntegrationRequest",
      "type": "object"
    },
    "GetIntegrationResponse": {
      "properties": {
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was created."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The unique name of the domain."
            }
          ]
        },
        "LastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was most recently edited."
            }
          ]
        },
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "The name of the profile object type."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        },
        "Uri": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The URI of the S3 bucket or any other type of data source."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "Uri",
        "ObjectTypeName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "object"
    },
    "GetProfileObjectTypeRequest": {
      "properties": {},
      "title": "GetProfileObjectTypeRequest",
      "type": "object"
    },
    "GetProfileObjectTypeResponse": {
      "properties": {
        "AllowProfileCreation": {
          "allOf": [
            {
              "$ref": "#/definitions/boolean"
            },
            {
              "description": "Indicates whether a profile should be created when data is received if one doesn’t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile."
            }
          ]
        },
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was created."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/text"
            },
            {
              "description": "The description of the profile object type."
            }
          ]
        },
        "EncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/encryptionKey"
            },
            {
              "description": "The customer-provided key to encrypt the profile object that will be created in this profile object type."
            }
          ]
        },
        "ExpirationDays": {
          "allOf": [
            {
              "$ref": "#/definitions/expirationDaysInteger"
            },
            {
              "description": "The number of days until the data in the object expires."
            }
          ]
        },
        "Fields": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "A map of the name and ObjectType field."
            }
          ]
        },
        "Keys": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyMap"
            },
            {
              "description": "A list of unique keys that can be used to map data to the profile."
            }
          ]
        },
        "LastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was most recently edited."
            }
          ]
        },
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "The name of the profile object type."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        },
        "TemplateId": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "A unique identifier for the object template."
            }
          ]
        }
      },
      "required": [
        "ObjectTypeName",
        "Description"
      ],
      "type": "object"
    },
    "GetProfileObjectTypeTemplateRequest": {
      "properties": {},
      "title": "GetProfileObjectTypeTemplateRequest",
      "type": "object"
    },
    "GetProfileObjectTypeTemplateResponse": {
      "properties": {
        "AllowProfileCreation": {
          "allOf": [
            {
              "$ref": "#/definitions/boolean"
            },
            {
              "description": "Indicates whether a profile should be created when data is received if one doesn’t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile."
            }
          ]
        },
        "Fields": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "A map of the name and ObjectType field."
            }
          ]
        },
        "Keys": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyMap"
            },
            {
              "description": "A list of unique keys that can be used to map data to the profile."
            }
          ]
        },
        "SourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The name of the source of the object template."
            }
          ]
        },
        "SourceObject": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The source of the object template."
            }
          ]
        },
        "TemplateId": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "A unique identifier for the object template."
            }
          ]
        }
      },
      "type": "object"
    },
    "IntegrationList": {
      "items": {
        "$ref": "#/definitions/ListIntegrationItem"
      },
      "type": "array"
    },
    "InternalServerException": {},
    "KeyMap": {
      "additionalProperties": {
        "$ref": "#/definitions/ObjectTypeKeyList"
      },
      "type": "object"
    },
    "ListAccountIntegrationsRequest": {
      "properties": {
        "Uri": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The URI of the S3 bucket or any other type of data source."
            }
          ]
        }
      },
      "required": [
        "Uri"
      ],
      "title": "ListAccountIntegrationsRequest",
      "type": "object"
    },
    "ListAccountIntegrationsResponse": {
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegrationList"
            },
            {
              "description": "The list of ListAccountIntegration instances."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/token"
            },
            {
              "description": "The pagination token from the previous ListAccountIntegrations API call."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListDomainItem": {
      "description": "An object in a list that represents a domain.",
      "properties": {
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was created."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The unique name of the domain."
            }
          ]
        },
        "LastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was most recently edited."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "object"
    },
    "ListDomainsRequest": {
      "properties": {},
      "title": "ListDomainsRequest",
      "type": "object"
    },
    "ListDomainsResponse": {
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainList"
            },
            {
              "description": "The list of ListDomains instances."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/token"
            },
            {
              "description": "The pagination token from the previous ListDomains API call."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListIntegrationItem": {
      "description": "An integration in list of integrations.",
      "properties": {
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was created."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The unique name of the domain."
            }
          ]
        },
        "LastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was most recently edited."
            }
          ]
        },
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "The name of the profile object type."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        },
        "Uri": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The URI of the S3 bucket or any other type of data source."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "Uri",
        "ObjectTypeName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "object"
    },
    "ListIntegrationsRequest": {
      "properties": {},
      "title": "ListIntegrationsRequest",
      "type": "object"
    },
    "ListIntegrationsResponse": {
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegrationList"
            },
            {
              "description": "The list of ListIntegrations instances."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/token"
            },
            {
              "description": "The pagination token from the previous ListIntegrations API call."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListProfileObjectTypeItem": {
      "description": "A ProfileObjectType instance.",
      "properties": {
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was created."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/text"
            },
            {
              "description": "Description of the profile object type."
            }
          ]
        },
        "LastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was most recently edited."
            }
          ]
        },
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "The name of the profile object type."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        }
      },
      "required": [
        "ObjectTypeName",
        "Description"
      ],
      "type": "object"
    },
    "ListProfileObjectTypeTemplateItem": {
      "description": "A ProfileObjectTypeTemplate in a list of ProfileObjectTypeTemplates.",
      "properties": {
        "SourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The name of the source of the object template."
            }
          ]
        },
        "SourceObject": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The source of the object template."
            }
          ]
        },
        "TemplateId": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "A unique identifier for the object template."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListProfileObjectTypeTemplatesRequest": {
      "properties": {},
      "title": "ListProfileObjectTypeTemplatesRequest",
      "type": "object"
    },
    "ListProfileObjectTypeTemplatesResponse": {
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileObjectTypeTemplateList"
            },
            {
              "description": "The list of ListProfileObjectType template instances."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/token"
            },
            {
              "description": "The pagination token from the previous ListObjectTypeTemplates API call. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ListProfileObjectTypesRequest": {
      "properties": {},
      "title": "ListProfileObjectTypesRequest",
      "type": "object"
    },
    "ListProfileObjectTypesResponse": {
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileObjectTypeList"
            },
            {
              "description": "The list of ListProfileObjectTypes instances."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/token"
            },
            {
              "description": "Identifies the next page of results to return."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListProfileObjectsItem": {
      "description": "A ProfileObject in a list of ProfileObjects.",
      "properties": {
        "Object": {
          "allOf": [
            {
              "$ref": "#/definitions/stringifiedJson"
            },
            {
              "description": "A JSON representation of a ProfileObject that belongs to a profile."
            }
          ]
        },
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "Specifies the kind of object being added to a profile, such as \"Salesforce-Account.\""
            }
          ]
        },
        "ProfileObjectUniqueKey": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The unique identifier of the ProfileObject generated by the service."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListProfileObjectsRequest": {
      "properties": {
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "The name of the profile object type."
            }
          ]
        },
        "ProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            },
            {
              "description": "The unique identifier of a customer profile."
            }
          ]
        }
      },
      "required": [
        "ObjectTypeName",
        "ProfileId"
      ],
      "title": "ListProfileObjectsRequest",
      "type": "object"
    },
    "ListProfileObjectsResponse": {
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileObjectList"
            },
            {
              "description": "The list of ListProfileObject instances."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/token"
            },
            {
              "description": "The pagination token from the previous call to ListProfileObjects."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "properties": {},
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectTypeField": {
      "description": "Represents a field in a ProfileObjectType.",
      "properties": {
        "ContentType": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldContentType"
            },
            {
              "description": "The content type of the field. Used for determining equality when searching."
            }
          ]
        },
        "Source": {
          "allOf": [
            {
              "$ref": "#/definitions/text"
            },
            {
              "description": "A field of a ProfileObject. For example: _source.FirstName, where “_source” is a ProfileObjectType of a Zendesk user and “FirstName” is a field in that ObjectType."
            }
          ]
        },
        "Target": {
          "allOf": [
            {
              "$ref": "#/definitions/text"
            },
            {
              "description": "The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode."
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectTypeKey": {
      "description": "An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.",
      "properties": {
        "FieldNames": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldNameList"
            },
            {
              "description": "The reference for the key name of the fields map."
            }
          ]
        },
        "StandardIdentifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardIdentifierList"
            },
            {
              "description": "The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE means that this key can be used to tie an object to a PROFILE. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles."
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectTypeKeyList": {
      "items": {
        "$ref": "#/definitions/ObjectTypeKey"
      },
      "type": "array"
    },
    "PartyType": {
      "enum": [
        "INDIVIDUAL",
        "BUSINESS",
        "OTHER"
      ],
      "type": "string"
    },
    "Profile": {
      "description": "The standard profile of a customer.",
      "properties": {
        "AccountNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "A unique account number that you have given to the customer."
            }
          ]
        },
        "AdditionalInformation": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To1000"
            },
            {
              "description": "Any additional information relevant to the customer's profile."
            }
          ]
        },
        "Address": {
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            },
            {
              "description": "A generic address associated with the customer that is not mailing, shipping, or billing."
            }
          ]
        },
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/Attributes"
            },
            {
              "description": "A key value pair of attributes of a customer profile."
            }
          ]
        },
        "BillingAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            },
            {
              "description": "The customer’s billing address."
            }
          ]
        },
        "BirthDate": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s birth date."
            }
          ]
        },
        "BusinessEmailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s business email address."
            }
          ]
        },
        "BusinessName": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The name of the customer’s business."
            }
          ]
        },
        "BusinessPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s home phone number."
            }
          ]
        },
        "EmailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer's email address, which has not been specified as a personal or business address."
            }
          ]
        },
        "FirstName": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s first name."
            }
          ]
        },
        "Gender": {
          "allOf": [
            {
              "$ref": "#/definitions/Gender"
            },
            {
              "description": "The gender with which the customer identifies."
            }
          ]
        },
        "HomePhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s home phone number."
            }
          ]
        },
        "LastName": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s last name."
            }
          ]
        },
        "MailingAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            },
            {
              "description": "The customer’s mailing address."
            }
          ]
        },
        "MiddleName": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s middle name."
            }
          ]
        },
        "MobilePhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s mobile phone number."
            }
          ]
        },
        "PartyType": {
          "allOf": [
            {
              "$ref": "#/definitions/PartyType"
            },
            {
              "description": "The type of profile used to describe the customer."
            }
          ]
        },
        "PersonalEmailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer’s personal email address."
            }
          ]
        },
        "PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The customer's phone number, which has not been specified as a mobile, home, or business number."
            }
          ]
        },
        "ProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            },
            {
              "description": "The unique identifier of a customer profile."
            }
          ]
        },
        "ShippingAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/Address"
            },
            {
              "description": "The customer’s shipping address."
            }
          ]
        }
      },
      "type": "object"
    },
    "ProfileList": {
      "items": {
        "$ref": "#/definitions/Profile"
      },
      "type": "array"
    },
    "ProfileObjectList": {
      "items": {
        "$ref": "#/definitions/ListProfileObjectsItem"
      },
      "type": "array"
    },
    "ProfileObjectTypeList": {
      "items": {
        "$ref": "#/definitions/ListProfileObjectTypeItem"
      },
      "type": "array"
    },
    "ProfileObjectTypeTemplateList": {
      "items": {
        "$ref": "#/definitions/ListProfileObjectTypeTemplateItem"
      },
      "type": "array"
    },
    "PutIntegrationRequest": {
      "properties": {
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "The name of the profile object type."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        },
        "Uri": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The URI of the S3 bucket or any other type of data source."
            }
          ]
        }
      },
      "required": [
        "Uri",
        "ObjectTypeName"
      ],
      "title": "PutIntegrationRequest",
      "type": "object"
    },
    "PutIntegrationResponse": {
      "properties": {
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was created."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The unique name of the domain."
            }
          ]
        },
        "LastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was most recently edited."
            }
          ]
        },
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "The name of the profile object type."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        },
        "Uri": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The URI of the S3 bucket or any other type of data source."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "Uri",
        "ObjectTypeName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "object"
    },
    "PutProfileObjectRequest": {
      "properties": {
        "Object": {
          "allOf": [
            {
              "$ref": "#/definitions/stringifiedJson"
            },
            {
              "description": "A string that is serialized from a JSON object."
            }
          ]
        },
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "The name of the profile object type."
            }
          ]
        }
      },
      "required": [
        "ObjectTypeName",
        "Object"
      ],
      "title": "PutProfileObjectRequest",
      "type": "object"
    },
    "PutProfileObjectResponse": {
      "properties": {
        "ProfileObjectUniqueKey": {
          "allOf": [
            {
              "$ref": "#/definitions/string1To255"
            },
            {
              "description": "The unique identifier of the profile object generated by the service."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutProfileObjectTypeRequest": {
      "properties": {
        "AllowProfileCreation": {
          "allOf": [
            {
              "$ref": "#/definitions/boolean"
            },
            {
              "description": "Indicates whether a profile should be created when data is received if one doesn’t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/text"
            },
            {
              "description": "Description of the profile object type."
            }
          ]
        },
        "EncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/encryptionKey"
            },
            {
              "description": "The customer-provided key to encrypt the profile object that will be created in this profile object type."
            }
          ]
        },
        "ExpirationDays": {
          "allOf": [
            {
              "$ref": "#/definitions/expirationDaysInteger"
            },
            {
              "description": "The number of days until the data in the object expires."
            }
          ]
        },
        "Fields": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "A map of the name and ObjectType field."
            }
          ]
        },
        "Keys": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyMap"
            },
            {
              "description": "A list of unique keys that can be used to map data to the profile."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        },
        "TemplateId": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "A unique identifier for the object template."
            }
          ]
        }
      },
      "required": [
        "Description"
      ],
      "title": "PutProfileObjectTypeRequest",
      "type": "object"
    },
    "PutProfileObjectTypeResponse": {
      "properties": {
        "AllowProfileCreation": {
          "allOf": [
            {
              "$ref": "#/definitions/boolean"
            },
            {
              "description": "Indicates whether a profile should be created when data is received if one doesn’t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile."
            }
          ]
        },
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was created."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/text"
            },
            {
              "description": "Description of the profile object type."
            }
          ]
        },
        "EncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/encryptionKey"
            },
            {
              "description": "The customer-provided key to encrypt the profile object that will be created in this profile object type."
            }
          ]
        },
        "ExpirationDays": {
          "allOf": [
            {
              "$ref": "#/definitions/expirationDaysInteger"
            },
            {
              "description": "The number of days until the data in the object expires."
            }
          ]
        },
        "Fields": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "A map of the name and ObjectType field."
            }
          ]
        },
        "Keys": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyMap"
            },
            {
              "description": "A list of unique keys that can be used to map data to the profile."
            }
          ]
        },
        "LastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was most recently edited."
            }
          ]
        },
        "ObjectTypeName": {
          "allOf": [
            {
              "$ref": "#/definitions/typeName"
            },
            {
              "description": "The name of the profile object type."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        },
        "TemplateId": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "A unique identifier for the object template."
            }
          ]
        }
      },
      "required": [
        "ObjectTypeName",
        "Description"
      ],
      "type": "object"
    },
    "ResourceNotFoundException": {},
    "SearchProfilesRequest": {
      "properties": {
        "KeyName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "A searchable identifier of a customer profile. The predefined keys you can use to search include: _account, _profileId, _fullName, _phone, _email, _ctrContactId, _marketoLeadId, _salesforceAccountId, _salesforceContactId, _zendeskUserId, _zendeskExternalId, _serviceNowSystemId."
            }
          ]
        },
        "Values": {
          "allOf": [
            {
              "$ref": "#/definitions/requestValueList"
            },
            {
              "description": "A list of key values."
            }
          ]
        }
      },
      "required": [
        "KeyName",
        "Values"
      ],
      "title": "SearchProfilesRequest",
      "type": "object"
    },
    "SearchProfilesResponse": {
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/ProfileList"
            },
            {
              "description": "The list of SearchProfiles instances."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/token"
            },
            {
              "description": "The pagination token from the previous SearchProfiles API call."
            }
          ]
        }
      },
      "type": "object"
    },
    "StandardIdentifier": {
      "enum": [
        "PROFILE",
        "UNIQUE",
        "SECONDARY",
        "LOOKUP_ONLY",
        "NEW_ONLY"
      ],
      "type": "string"
    },
    "StandardIdentifierList": {
      "items": {
        "$ref": "#/definitions/StandardIdentifier"
      },
      "type": "array"
    },
    "TagArn": {
      "maxLength": 256,
      "pattern": "^arn:[a-z0-9]{1,10}:profile",
      "type": "string"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "TagMap": {
      "additionalProperties": {
        "$ref": "#/definitions/TagValue"
      },
      "maxProperties": 50,
      "minProperties": 1,
      "type": "object"
    },
    "TagResourceRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        }
      },
      "required": [
        "tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "TagValue": {
      "maxLength": 256,
      "type": "string"
    },
    "ThrottlingException": {},
    "UntagResourceRequest": {
      "properties": {},
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UntagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateAddress": {
      "description": "Updates associated with the address properties of a customer profile.",
      "properties": {
        "Address1": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The first line of a customer address."
            }
          ]
        },
        "Address2": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The second line of a customer address."
            }
          ]
        },
        "Address3": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The third line of a customer address."
            }
          ]
        },
        "Address4": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The fourth line of a customer address."
            }
          ]
        },
        "City": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The city in which a customer lives."
            }
          ]
        },
        "Country": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The country in which a customer lives."
            }
          ]
        },
        "County": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The county in which a customer lives."
            }
          ]
        },
        "PostalCode": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The postal code of a customer address."
            }
          ]
        },
        "Province": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The province in which a customer lives."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The state in which a customer lives."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateAttributes": {
      "additionalProperties": {
        "$ref": "#/definitions/string0To255"
      },
      "type": "object"
    },
    "UpdateDomainRequest": {
      "properties": {
        "DeadLetterQueueUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/sqsQueueUrl"
            },
            {
              "description": "The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. If specified as an empty string, it will clear any existing value. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue."
            }
          ]
        },
        "DefaultEncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/encryptionKey"
            },
            {
              "description": "The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage. If specified as an empty string, it will clear any existing value."
            }
          ]
        },
        "DefaultExpirationDays": {
          "allOf": [
            {
              "$ref": "#/definitions/expirationDaysInteger"
            },
            {
              "description": "The default number of days until the data within the domain expires."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        }
      },
      "title": "UpdateDomainRequest",
      "type": "object"
    },
    "UpdateDomainResponse": {
      "properties": {
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was created."
            }
          ]
        },
        "DeadLetterQueueUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/sqsQueueUrl"
            },
            {
              "description": "The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications."
            }
          ]
        },
        "DefaultEncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/encryptionKey"
            },
            {
              "description": "The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage."
            }
          ]
        },
        "DefaultExpirationDays": {
          "allOf": [
            {
              "$ref": "#/definitions/expirationDaysInteger"
            },
            {
              "description": "The default number of days until the data within the domain expires."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/name"
            },
            {
              "description": "The unique name for the domain."
            }
          ]
        },
        "LastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The timestamp of when the domain was most recently edited."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags used to organize, track, or control access for this resource."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "object"
    },
    "UpdateProfileRequest": {
      "properties": {
        "AccountNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "A unique account number that you have given to the customer."
            }
          ]
        },
        "AdditionalInformation": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To1000"
            },
            {
              "description": "Any additional information relevant to the customer's profile."
            }
          ]
        },
        "Address": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateAddress"
            },
            {
              "description": "A generic address associated with the customer that is not mailing, shipping, or billing."
            }
          ]
        },
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateAttributes"
            },
            {
              "description": "A key value pair of attributes of a customer profile."
            }
          ]
        },
        "BillingAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateAddress"
            },
            {
              "description": "The customer’s billing address."
            }
          ]
        },
        "BirthDate": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer’s birth date."
            }
          ]
        },
        "BusinessEmailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer’s business email address."
            }
          ]
        },
        "BusinessName": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The name of the customer’s business."
            }
          ]
        },
        "BusinessPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer’s business phone number."
            }
          ]
        },
        "EmailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer's email address, which has not been specified as a personal or business address."
            }
          ]
        },
        "FirstName": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer’s first name."
            }
          ]
        },
        "Gender": {
          "allOf": [
            {
              "$ref": "#/definitions/Gender"
            },
            {
              "description": "The gender with which the customer identifies."
            }
          ]
        },
        "HomePhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer’s home phone number."
            }
          ]
        },
        "LastName": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer’s last name."
            }
          ]
        },
        "MailingAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateAddress"
            },
            {
              "description": "The customer’s mailing address."
            }
          ]
        },
        "MiddleName": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer’s middle name."
            }
          ]
        },
        "MobilePhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer’s mobile phone number."
            }
          ]
        },
        "PartyType": {
          "allOf": [
            {
              "$ref": "#/definitions/PartyType"
            },
            {
              "description": "The type of profile used to describe the customer."
            }
          ]
        },
        "PersonalEmailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer’s personal email address."
            }
          ]
        },
        "PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/string0To255"
            },
            {
              "description": "The customer's phone number, which has not been specified as a mobile, home, or business number."
            }
          ]
        },
        "ProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            },
            {
              "description": "The unique identifier of a customer profile."
            }
          ]
        },
        "ShippingAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateAddress"
            },
            {
              "description": "The customer’s shipping address."
            }
          ]
        }
      },
      "required": [
        "ProfileId"
      ],
      "title": "UpdateProfileRequest",
      "type": "object"
    },
    "UpdateProfileResponse": {
      "properties": {
        "ProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/uuid"
            },
            {
              "description": "The unique identifier of a customer profile."
            }
          ]
        }
      },
      "required": [
        "ProfileId"
      ],
      "type": "object"
    },
    "boolean": {
      "type": "boolean"
    },
    "encryptionKey": {
      "maxLength": 255,
      "minLength": 0,
      "type": "string"
    },
    "expirationDaysInteger": {
      "maximum": 1098,
      "minimum": 1,
      "type": "integer"
    },
    "long": {
      "type": "integer"
    },
    "maxSize100": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "message": {
      "type": "string"
    },
    "name": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9_-]+$",
      "type": "string"
    },
    "requestValueList": {
      "items": {
        "$ref": "#/definitions/string1To255"
      },
      "type": "array"
    },
    "sqsQueueUrl": {
      "maxLength": 255,
      "minLength": 0,
      "type": "string"
    },
    "string0To1000": {
      "maxLength": 1000,
      "minLength": 0,
      "type": "string"
    },
    "string0To255": {
      "maxLength": 255,
      "minLength": 0,
      "type": "string"
    },
    "string1To1000": {
      "maxLength": 1000,
      "minLength": 1,
      "type": "string"
    },
    "string1To255": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "stringifiedJson": {
      "maxLength": 256000,
      "minLength": 1,
      "type": "string"
    },
    "text": {
      "maxLength": 1000,
      "minLength": 1,
      "type": "string"
    },
    "timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "token": {
      "maxLength": 1024,
      "minLength": 1,
      "type": "string"
    },
    "typeName": {
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
      "type": "string"
    },
    "uuid": {
      "pattern": "[a-f0-9]{32}",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/profile/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}