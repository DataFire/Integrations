{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>Welcome to the AWS Audit Manager API reference. This guide is for developers who need detailed information about the AWS Audit Manager API operations, data types, and errors. </p> <p>AWS Audit Manager is a service that provides automated evidence collection so that you can continuously audit your AWS usage, and assess the effectiveness of your controls to better manage risk and simplify compliance.</p> <p>AWS Audit Manager provides pre-built frameworks that structure and automate assessments for a given compliance standard. Frameworks include a pre-built collection of controls with descriptions and testing procedures, which are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with unique requirements. </p> <p>Use the following links to get started with the AWS Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all AWS Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all AWS Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to AWS Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> AWS Audit Manager User Guide</a>.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Audit Manager",
    "version": "2017-07-25",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/auditmanager-2017-07-25.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "auditmanager",
    "x-datafire": {
      "name": "amazonaws_auditmanager",
      "type": "openapi"
    }
  },
  "host": "auditmanager.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/account/deregisterAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeregisterAccountResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Deregisters an account in AWS Audit Manager. ",
        "operationId": "DeregisterAccount"
      }
    },
    "/account/deregisterOrganizationAdminAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "adminAccountId": {
                  "description": " The identifier for the specified administrator account. ",
                  "maxLength": 12,
                  "minLength": 12,
                  "pattern": "^[0-9]{12}$",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeregisterOrganizationAdminAccountResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Deregisters the delegated AWS administrator account from the AWS organization. ",
        "operationId": "DeregisterOrganizationAdminAccount"
      }
    },
    "/account/organizationAdminAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetOrganizationAdminAccountResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Returns the name of the delegated AWS administrator account for the AWS organization. ",
        "operationId": "GetOrganizationAdminAccount"
      }
    },
    "/account/registerAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "delegatedAdminAccount": {
                  "description": " The delegated administrator account for AWS Audit Manager. ",
                  "maxLength": 12,
                  "minLength": 12,
                  "pattern": "^[0-9]{12}$",
                  "type": "string"
                },
                "kmsKey": {
                  "description": " The AWS KMS key details. ",
                  "maxLength": 2048,
                  "minLength": 7,
                  "pattern": "^arn:.*:kms:.*|DEFAULT",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegisterAccountResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Enables AWS Audit Manager for the specified AWS account. ",
        "operationId": "RegisterAccount"
      }
    },
    "/account/registerOrganizationAdminAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "adminAccountId": {
                  "description": " The identifier for the specified delegated administrator account. ",
                  "maxLength": 12,
                  "minLength": 12,
                  "pattern": "^[0-9]{12}$",
                  "type": "string"
                }
              },
              "required": [
                "adminAccountId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegisterOrganizationAdminAccountResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Enables an AWS account within the organization as the delegated administrator for AWS Audit Manager. ",
        "operationId": "RegisterOrganizationAdminAccount"
      }
    },
    "/account/status": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAccountStatusResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns the registration status of an account in AWS Audit Manager. ",
        "operationId": "GetAccountStatus"
      }
    },
    "/assessmentFrameworks": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "complianceType": {
                  "description": " The compliance type that the new custom framework supports, such as CIS or HIPAA. ",
                  "maxLength": 100,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "controlSets": {
                  "description": " The control sets to be associated with the framework. ",
                  "items": {
                    "$ref": "#/definitions/CreateAssessmentFrameworkControlSet"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "description": {
                  "description": " An optional description for the new custom framework. ",
                  "maxLength": 1000,
                  "minLength": 1,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "name": {
                  "description": " The name of the new custom framework. ",
                  "maxLength": 300,
                  "minLength": 1,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "controlSets"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAssessmentFrameworkResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Creates a custom framework in AWS Audit Manager. ",
        "operationId": "CreateAssessmentFramework"
      }
    },
    "/assessmentFrameworks#frameworkType": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The type of framework, such as standard or custom. ",
            "enum": [
              "Standard",
              "Custom"
            ],
            "in": "query",
            "name": "frameworkType",
            "required": true,
            "type": "string"
          },
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAssessmentFrameworksResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a list of the frameworks available in the AWS Audit Manager framework library. ",
        "operationId": "ListAssessmentFrameworks"
      }
    },
    "/assessmentFrameworks/{frameworkId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified framework. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "frameworkId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAssessmentFrameworkResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Deletes a custom framework in AWS Audit Manager. ",
        "operationId": "DeleteAssessmentFramework"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified framework. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "frameworkId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAssessmentFrameworkResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a framework from AWS Audit Manager. ",
        "operationId": "GetAssessmentFramework"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified framework. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "frameworkId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "complianceType": {
                  "description": " The compliance type that the new custom framework supports, such as CIS or HIPAA. ",
                  "maxLength": 100,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "controlSets": {
                  "description": " The control sets associated with the framework. ",
                  "items": {
                    "$ref": "#/definitions/UpdateAssessmentFrameworkControlSet"
                  },
                  "type": "array"
                },
                "description": {
                  "description": " The description of the framework that is to be updated. ",
                  "maxLength": 1000,
                  "minLength": 1,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "name": {
                  "description": " The name of the framework to be updated. ",
                  "maxLength": 300,
                  "minLength": 1,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "controlSets"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAssessmentFrameworkResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Updates a custom framework in AWS Audit Manager. ",
        "operationId": "UpdateAssessmentFramework"
      }
    },
    "/assessmentReports": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAssessmentReportsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a list of assessment reports created in AWS Audit Manager. ",
        "operationId": "ListAssessmentReports"
      }
    },
    "/assessmentReports/integrity": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "s3RelativePath": {
                  "description": " The relative path of the specified Amazon S3 bucket in which the assessment report is stored. ",
                  "maxLength": 1024,
                  "minLength": 1,
                  "pattern": "^(S|s)3:\\/\\/[a-zA-Z0-9-_\\/.]+$",
                  "type": "string"
                }
              },
              "required": [
                "s3RelativePath"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ValidateAssessmentReportIntegrityResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Validates the integrity of an assessment report in AWS Audit Manager. ",
        "operationId": "ValidateAssessmentReportIntegrity"
      }
    },
    "/assessments": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAssessmentsResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a list of current and past assessments from AWS Audit Manager. ",
        "operationId": "ListAssessments"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": " The tags associated with the assessment. ",
                  "maxProperties": 50,
                  "minProperties": 0,
                  "type": "object"
                },
                "assessmentReportsDestination": {
                  "description": " The location in which AWS Audit Manager saves assessment reports for the given assessment. ",
                  "properties": {
                    "destination": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Url"
                        },
                        {
                          "description": " The destination of the assessment report. "
                        }
                      ]
                    },
                    "destinationType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AssessmentReportDestinationType"
                        },
                        {
                          "description": " The destination type, such as Amazon S3. "
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "description": {
                  "description": " The optional description of the assessment to be created. ",
                  "maxLength": 1000,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "frameworkId": {
                  "description": " The identifier for the specified framework. ",
                  "maxLength": 36,
                  "minLength": 36,
                  "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                  "type": "string"
                },
                "name": {
                  "description": " The name of the assessment to be created. ",
                  "maxLength": 300,
                  "minLength": 1,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "roles": {
                  "description": " The list of roles for the specified assessment. ",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "type": "array"
                },
                "scope": {
                  "description": " The wrapper that contains the AWS accounts and AWS services in scope for the assessment. ",
                  "properties": {
                    "awsAccounts": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AWSAccounts"
                        },
                        {
                          "description": " The AWS accounts included in the scope of the assessment. "
                        }
                      ]
                    },
                    "awsServices": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AWSServices"
                        },
                        {
                          "description": " The AWS services included in the scope of the assessment. "
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "name",
                "assessmentReportsDestination",
                "scope",
                "roles",
                "frameworkId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAssessmentResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Creates an assessment in AWS Audit Manager. ",
        "operationId": "CreateAssessment"
      }
    },
    "/assessments/{assessmentId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAssessmentResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Deletes an assessment in AWS Audit Manager. ",
        "operationId": "DeleteAssessment"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAssessmentResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns an assessment from AWS Audit Manager. ",
        "operationId": "GetAssessment"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "assessmentDescription": {
                  "description": " The description of the specified assessment. ",
                  "maxLength": 1000,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "assessmentName": {
                  "description": " The name of the specified assessment to be updated. ",
                  "maxLength": 300,
                  "minLength": 1,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "assessmentReportsDestination": {
                  "description": " The location in which AWS Audit Manager saves assessment reports for the given assessment. ",
                  "properties": {
                    "destination": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Url"
                        },
                        {
                          "description": " The destination of the assessment report. "
                        }
                      ]
                    },
                    "destinationType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AssessmentReportDestinationType"
                        },
                        {
                          "description": " The destination type, such as Amazon S3. "
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "roles": {
                  "description": " The list of roles for the specified assessment. ",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "type": "array"
                },
                "scope": {
                  "description": " The wrapper that contains the AWS accounts and AWS services in scope for the assessment. ",
                  "properties": {
                    "awsAccounts": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AWSAccounts"
                        },
                        {
                          "description": " The AWS accounts included in the scope of the assessment. "
                        }
                      ]
                    },
                    "awsServices": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AWSServices"
                        },
                        {
                          "description": " The AWS services included in the scope of the assessment. "
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "scope"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAssessmentResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Edits an AWS Audit Manager assessment. ",
        "operationId": "UpdateAssessment"
      }
    },
    "/assessments/{assessmentId}/associateToAssessmentReport": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "evidenceFolderId": {
                  "description": " The identifier for the folder in which evidence is stored. ",
                  "maxLength": 36,
                  "minLength": 36,
                  "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                  "type": "string"
                }
              },
              "required": [
                "evidenceFolderId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateAssessmentReportEvidenceFolderResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Associates an evidence folder to the specified assessment report in AWS Audit Manager. ",
        "operationId": "AssociateAssessmentReportEvidenceFolder"
      }
    },
    "/assessments/{assessmentId}/batchAssociateToAssessmentReport": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The unique identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "evidenceFolderId": {
                  "description": " The identifier for the folder in which the evidence is stored. ",
                  "maxLength": 36,
                  "minLength": 36,
                  "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                  "type": "string"
                },
                "evidenceIds": {
                  "description": " The list of evidence identifiers. ",
                  "items": {
                    "$ref": "#/definitions/UUID"
                  },
                  "maxItems": 50,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "evidenceFolderId",
                "evidenceIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchAssociateAssessmentReportEvidenceResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Associates a list of evidence to an assessment report in an AWS Audit Manager assessment. ",
        "operationId": "BatchAssociateAssessmentReportEvidence"
      }
    },
    "/assessments/{assessmentId}/batchDisassociateFromAssessmentReport": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "evidenceFolderId": {
                  "description": " The identifier for the folder in which evidence is stored. ",
                  "maxLength": 36,
                  "minLength": 36,
                  "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                  "type": "string"
                },
                "evidenceIds": {
                  "description": " The list of evidence identifiers. ",
                  "items": {
                    "$ref": "#/definitions/UUID"
                  },
                  "maxItems": 50,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "evidenceFolderId",
                "evidenceIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDisassociateAssessmentReportEvidenceResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Disassociates a list of evidence from the specified assessment report in AWS Audit Manager. ",
        "operationId": "BatchDisassociateAssessmentReportEvidence"
      }
    },
    "/assessments/{assessmentId}/changelogs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control set. ",
            "in": "query",
            "maxLength": 300,
            "minLength": 1,
            "name": "controlSetId",
            "pattern": "^[\\w\\W\\s\\S]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control. ",
            "in": "query",
            "maxLength": 36,
            "minLength": 36,
            "name": "controlId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": false,
            "type": "string"
          },
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetChangeLogsResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a list of changelogs from AWS Audit Manager. ",
        "operationId": "GetChangeLogs"
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control set. ",
            "in": "path",
            "maxLength": 300,
            "minLength": 1,
            "name": "controlSetId",
            "pattern": "^[\\w\\W\\s\\S]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "controlId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "commentBody": {
                  "description": " The comment body text for the specified control. ",
                  "maxLength": 500,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "controlStatus": {
                  "description": " The status of the specified control. ",
                  "enum": [
                    "UNDER_REVIEW",
                    "REVIEWED",
                    "INACTIVE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAssessmentControlResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Updates a control within an assessment in AWS Audit Manager. ",
        "operationId": "UpdateAssessmentControl"
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}/evidence": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control set. ",
            "in": "path",
            "maxLength": 300,
            "minLength": 1,
            "name": "controlSetId",
            "pattern": "^[\\w\\W\\s\\S]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "controlId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "manualEvidence": {
                  "description": " The list of manual evidence objects. ",
                  "items": {
                    "$ref": "#/definitions/ManualEvidence"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "manualEvidence"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchImportEvidenceToAssessmentControlResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Uploads one or more pieces of evidence to the specified control in the assessment in AWS Audit Manager. ",
        "operationId": "BatchImportEvidenceToAssessmentControl"
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control set. ",
            "in": "path",
            "maxLength": 300,
            "minLength": 1,
            "name": "controlSetId",
            "pattern": "^[\\w\\W\\s\\S]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the folder in which the evidence is stored. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "evidenceFolderId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetEvidenceFolderResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns an evidence folder from the specified assessment in AWS Audit Manager. ",
        "operationId": "GetEvidenceFolder"
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the control set. ",
            "in": "path",
            "maxLength": 300,
            "minLength": 1,
            "name": "controlSetId",
            "pattern": "^[\\w\\W\\s\\S]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The unique identifier for the folder in which the evidence is stored. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "evidenceFolderId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetEvidenceByEvidenceFolderResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns all evidence from a specified evidence folder in AWS Audit Manager. ",
        "operationId": "GetEvidenceByEvidenceFolder"
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence/{evidenceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control set. ",
            "in": "path",
            "maxLength": 300,
            "minLength": 1,
            "name": "controlSetId",
            "pattern": "^[\\w\\W\\s\\S]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the folder in which the evidence is stored. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "evidenceFolderId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the evidence. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "evidenceId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetEvidenceResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns evidence from AWS Audit Manager. ",
        "operationId": "GetEvidence"
      }
    },
    "/assessments/{assessmentId}/controlSets/{controlSetId}/status": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control set. ",
            "in": "path",
            "maxLength": 2048,
            "minLength": 0,
            "name": "controlSetId",
            "pattern": ".*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "comment": {
                  "description": " The comment related to the status update. ",
                  "maxLength": 350,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "status": {
                  "description": " The status of the control set that is being updated. ",
                  "enum": [
                    "ACTIVE",
                    "UNDER_REVIEW",
                    "REVIEWED"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "status",
                "comment"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAssessmentControlSetStatusResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Updates the status of a control set in an AWS Audit Manager assessment. ",
        "operationId": "UpdateAssessmentControlSetStatus"
      }
    },
    "/assessments/{assessmentId}/delegations": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "createDelegationRequests": {
                  "description": " The API request to batch create delegations in AWS Audit Manager. ",
                  "items": {
                    "$ref": "#/definitions/CreateDelegationRequest"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "createDelegationRequests"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchCreateDelegationByAssessmentResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Create a batch of delegations for a specified assessment in AWS Audit Manager. ",
        "operationId": "BatchCreateDelegationByAssessment"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "delegationIds": {
                  "description": " The identifiers for the specified delegations. ",
                  "items": {
                    "$ref": "#/definitions/UUID"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "delegationIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeleteDelegationByAssessmentResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Deletes the delegations in the specified AWS Audit Manager assessment. ",
        "operationId": "BatchDeleteDelegationByAssessment"
      }
    },
    "/assessments/{assessmentId}/disassociateFromAssessmentReport": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "evidenceFolderId": {
                  "description": " The identifier for the folder in which evidence is stored. ",
                  "maxLength": 36,
                  "minLength": 36,
                  "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
                  "type": "string"
                }
              },
              "required": [
                "evidenceFolderId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateAssessmentReportEvidenceFolderResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Disassociates an evidence folder from the specified assessment report in AWS Audit Manager. ",
        "operationId": "DisassociateAssessmentReportEvidenceFolder"
      }
    },
    "/assessments/{assessmentId}/evidenceFolders": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetEvidenceFoldersByAssessmentResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns the evidence folders from a specified assessment in AWS Audit Manager. ",
        "operationId": "GetEvidenceFoldersByAssessment"
      }
    },
    "/assessments/{assessmentId}/evidenceFolders-by-assessment-control/{controlSetId}/{controlId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control set. ",
            "in": "path",
            "maxLength": 300,
            "minLength": 1,
            "name": "controlSetId",
            "pattern": "^[\\w\\W\\s\\S]*$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified control. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "controlId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetEvidenceFoldersByAssessmentControlResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a list of evidence folders associated with a specified control of an assessment in AWS Audit Manager. ",
        "operationId": "GetEvidenceFoldersByAssessmentControl"
      }
    },
    "/assessments/{assessmentId}/reports": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "description": " The description of the assessment report. ",
                  "maxLength": 1000,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "name": {
                  "description": " The name of the new assessment report. ",
                  "maxLength": 300,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9-_\\.]+$",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAssessmentReportResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Creates an assessment report for the specified assessment. ",
        "operationId": "CreateAssessmentReport"
      }
    },
    "/assessments/{assessmentId}/reports/{assessmentReportId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The unique identifier for the assessment report. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentReportId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAssessmentReportResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Deletes an assessment report from an assessment in AWS Audit Manager. ",
        "operationId": "DeleteAssessmentReport"
      }
    },
    "/assessments/{assessmentId}/reports/{assessmentReportId}/url": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the assessment report. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentReportId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAssessmentReportUrlResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Returns the URL of a specified assessment report in AWS Audit Manager. ",
        "operationId": "GetAssessmentReportUrl"
      }
    },
    "/assessments/{assessmentId}/status": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified assessment. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "assessmentId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "status": {
                  "description": " The current status of the specified assessment. ",
                  "enum": [
                    "ACTIVE",
                    "INACTIVE"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "status"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAssessmentStatusResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Updates the status of an assessment in AWS Audit Manager. ",
        "operationId": "UpdateAssessmentStatus"
      }
    },
    "/controls": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": " The tags associated with the control. ",
                  "maxProperties": 50,
                  "minProperties": 0,
                  "type": "object"
                },
                "actionPlanInstructions": {
                  "description": " The recommended actions to carry out if the control is not fulfilled. ",
                  "maxLength": 1000,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "actionPlanTitle": {
                  "description": " The title of the action plan for remediating the control. ",
                  "maxLength": 300,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "controlMappingSources": {
                  "description": " The data source that determines from where AWS Audit Manager collects evidence for the control. ",
                  "items": {
                    "$ref": "#/definitions/CreateControlMappingSource"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "description": {
                  "description": " The description of the control. ",
                  "maxLength": 1000,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "name": {
                  "description": " The name of the control. ",
                  "maxLength": 300,
                  "minLength": 1,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "testingInformation": {
                  "description": " The steps to follow to determine if the control has been satisfied. ",
                  "maxLength": 1000,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "controlMappingSources"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateControlResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Creates a new custom control in AWS Audit Manager. ",
        "operationId": "CreateControl"
      }
    },
    "/controls#controlType": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The type of control, such as standard or custom. ",
            "enum": [
              "Standard",
              "Custom"
            ],
            "in": "query",
            "name": "controlType",
            "required": true,
            "type": "string"
          },
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListControlsResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a list of controls from AWS Audit Manager. ",
        "operationId": "ListControls"
      }
    },
    "/controls/{controlId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified control. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "controlId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteControlResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Deletes a custom control in AWS Audit Manager. ",
        "operationId": "DeleteControl"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified control. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "controlId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetControlResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a control from AWS Audit Manager. ",
        "operationId": "GetControl"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The identifier for the specified control. ",
            "in": "path",
            "maxLength": 36,
            "minLength": 36,
            "name": "controlId",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "actionPlanInstructions": {
                  "description": " The recommended actions to carry out if the control is not fulfilled. ",
                  "maxLength": 1000,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "actionPlanTitle": {
                  "description": " The title of the action plan for remediating the control. ",
                  "maxLength": 300,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "controlMappingSources": {
                  "description": " The data source that determines from where AWS Audit Manager collects evidence for the control. ",
                  "items": {
                    "$ref": "#/definitions/ControlMappingSource"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "description": {
                  "description": " The optional description of the control. ",
                  "maxLength": 1000,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "name": {
                  "description": " The name of the control to be updated. ",
                  "maxLength": 300,
                  "minLength": 1,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                },
                "testingInformation": {
                  "description": " The steps that to follow to determine if the control has been satisfied. ",
                  "maxLength": 1000,
                  "pattern": "^[\\w\\W\\s\\S]*$",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "controlMappingSources"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateControlResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Updates a custom control in AWS Audit Manager. ",
        "operationId": "UpdateControl"
      }
    },
    "/dataSourceKeywords#source": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The control mapping data source to which the keywords apply. ",
            "enum": [
              "AWS_Cloudtrail",
              "AWS_Config",
              "AWS_Security_Hub",
              "AWS_API_Call",
              "MANUAL"
            ],
            "in": "query",
            "name": "source",
            "required": true,
            "type": "string"
          },
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListKeywordsForDataSourceResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a list of keywords that pre-mapped to the specified control data source. ",
        "operationId": "ListKeywordsForDataSource"
      }
    },
    "/delegations": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDelegationsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a list of delegations from an audit owner to a delegate. ",
        "operationId": "GetDelegations"
      }
    },
    "/notifications": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The pagination token used to fetch the next set of results. ",
            "in": "query",
            "maxLength": 1000,
            "minLength": 1,
            "name": "nextToken",
            "pattern": "^[A-Za-z0-9+\\/=]*$",
            "required": false,
            "type": "string"
          },
          {
            "description": " Represents the maximum number of results per page, or per API request call. ",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListNotificationsResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a list of all AWS Audit Manager notifications. ",
        "operationId": "ListNotifications"
      }
    },
    "/services": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetServicesInScopeResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns a list of the in-scope AWS services for the specified assessment. ",
        "operationId": "GetServicesInScope"
      }
    },
    "/settings": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "defaultAssessmentReportsDestination": {
                  "description": " The location in which AWS Audit Manager saves assessment reports for the given assessment. ",
                  "properties": {
                    "destination": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Url"
                        },
                        {
                          "description": " The destination of the assessment report. "
                        }
                      ]
                    },
                    "destinationType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AssessmentReportDestinationType"
                        },
                        {
                          "description": " The destination type, such as Amazon S3. "
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "defaultProcessOwners": {
                  "description": " A list of the default audit owners. ",
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "type": "array"
                },
                "kmsKey": {
                  "description": " The AWS KMS key details. ",
                  "maxLength": 2048,
                  "minLength": 7,
                  "pattern": "^arn:.*:kms:.*|DEFAULT",
                  "type": "string"
                },
                "snsTopic": {
                  "description": " The Amazon Simple Notification Service (Amazon SNS) topic to which AWS Audit Manager sends notifications. ",
                  "maxLength": 2048,
                  "minLength": 20,
                  "pattern": "^arn:.*:sns:.*",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateSettingsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Updates AWS Audit Manager settings for the current user account. ",
        "operationId": "UpdateSettings"
      }
    },
    "/settings/{attribute}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The list of <code>SettingAttribute</code> enum values. ",
            "enum": [
              "ALL",
              "IS_AWS_ORG_ENABLED",
              "SNS_TOPIC",
              "DEFAULT_ASSESSMENT_REPORTS_DESTINATION",
              "DEFAULT_PROCESS_OWNERS"
            ],
            "in": "path",
            "name": "attribute",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSettingsResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          }
        },
        "description": " Returns the settings for the specified AWS account. ",
        "operationId": "GetSettings"
      }
    },
    "/tags/{resourceArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The Amazon Resource Name (ARN) of the specified resource. ",
            "in": "path",
            "maxLength": 2048,
            "minLength": 20,
            "name": "resourceArn",
            "pattern": "^arn:.*:auditmanager:.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Returns a list of tags for the specified resource in AWS Audit Manager. ",
        "operationId": "ListTagsForResource"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The Amazon Resource Name (ARN) of the specified resource. ",
            "in": "path",
            "maxLength": 2048,
            "minLength": 20,
            "name": "resourceArn",
            "pattern": "^arn:.*:auditmanager:.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": " The tags to be associated with the resource. ",
                  "maxProperties": 50,
                  "minProperties": 0,
                  "type": "object"
                }
              },
              "required": [
                "tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Tags the specified resource in AWS Audit Manager. ",
        "operationId": "TagResource"
      }
    },
    "/tags/{resourceArn}#tagKeys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": " The Amazon Resource Name (ARN) of the specified resource. ",
            "in": "path",
            "maxLength": 2048,
            "minLength": 20,
            "name": "resourceArn",
            "pattern": "^arn:.*:auditmanager:.*",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": " The name or key of the tag. ",
            "in": "query",
            "items": {
              "$ref": "#/definitions/TagKey"
            },
            "maxItems": 50,
            "minItems": 1,
            "name": "tagKeys",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": " Removes a tag from a resource in AWS Audit Manager. ",
        "operationId": "UntagResource"
      }
    }
  },
  "definitions": {
    "AWSAccount": {
      "description": " The wrapper of AWS account details, such as account ID, email address, and so on. ",
      "properties": {
        "emailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/EmailAddress"
            },
            {
              "description": " The email address associated with the specified AWS account. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": " The identifier for the specified AWS account. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountName"
            },
            {
              "description": " The name of the specified AWS account. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AWSAccounts": {
      "items": {
        "$ref": "#/definitions/AWSAccount"
      },
      "type": "array"
    },
    "AWSService": {
      "description": " An AWS service such as Amazon S3, AWS CloudTrail, and so on. ",
      "properties": {
        "serviceName": {
          "allOf": [
            {
              "$ref": "#/definitions/AWSServiceName"
            },
            {
              "description": " The name of the AWS service. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AWSServiceName": {
      "maxLength": 40,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9-\\s().]+$",
      "type": "string"
    },
    "AWSServices": {
      "items": {
        "$ref": "#/definitions/AWSService"
      },
      "type": "array"
    },
    "AccessDeniedException": {},
    "AccountId": {
      "maxLength": 12,
      "minLength": 12,
      "pattern": "^[0-9]{12}$",
      "type": "string"
    },
    "AccountName": {
      "maxLength": 50,
      "minLength": 1,
      "pattern": "^[\\u0020-\\u007E]+$",
      "type": "string"
    },
    "AccountStatus": {
      "enum": [
        "ACTIVE",
        "INACTIVE",
        "PENDING_ACTIVATION"
      ],
      "type": "string"
    },
    "ActionEnum": {
      "enum": [
        "CREATE",
        "UPDATE_METADATA",
        "ACTIVE",
        "INACTIVE",
        "DELETE",
        "UNDER_REVIEW",
        "REVIEWED",
        "IMPORT_EVIDENCE"
      ],
      "type": "string"
    },
    "ActionPlanInstructions": {
      "maxLength": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ActionPlanTitle": {
      "maxLength": 300,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "Assessment": {
      "description": " An entity that defines the scope of audit evidence collected by AWS Audit Manager. An AWS Audit Manager assessment is an implementation of an AWS Audit Manager framework. ",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The tags associated with the assessment. "
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/AuditManagerArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the assessment. "
            }
          ]
        },
        "awsAccount": {
          "allOf": [
            {
              "$ref": "#/definitions/AWSAccount"
            },
            {
              "description": " The AWS account associated with the assessment. "
            }
          ]
        },
        "framework": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentFramework"
            },
            {
              "description": " The framework from which the assessment was created. "
            }
          ]
        },
        "metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentMetadata"
            },
            {
              "description": " The metadata for the specified assessment. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentControl": {
      "description": " The control entity that represents a standard or custom control used in an AWS Audit Manager assessment. ",
      "properties": {
        "assessmentReportEvidenceCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The amount of evidence in the assessment report. "
            }
          ]
        },
        "comments": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlComments"
            },
            {
              "description": " The list of comments attached to the specified control. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlDescription"
            },
            {
              "description": " The description of the specified control. "
            }
          ]
        },
        "evidenceCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The amount of evidence generated for the control. "
            }
          ]
        },
        "evidenceSources": {
          "allOf": [
            {
              "$ref": "#/definitions/EvidenceSources"
            },
            {
              "description": " The list of data sources for the specified evidence. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the specified control. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlName"
            },
            {
              "description": " The name of the specified control. "
            }
          ]
        },
        "response": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlResponse"
            },
            {
              "description": " The response of the specified control. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlStatus"
            },
            {
              "description": " The status of the specified control. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentControlSet": {
      "description": " Represents a set of controls in an AWS Audit Manager assessment. ",
      "properties": {
        "controls": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentControls"
            },
            {
              "description": " The list of controls contained with the control set. "
            }
          ]
        },
        "delegations": {
          "allOf": [
            {
              "$ref": "#/definitions/Delegations"
            },
            {
              "description": " The delegations associated with the control set. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": " The description for the control set. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetId"
            },
            {
              "description": " The identifier of the control set in the assessment. This is the control set name in a plain string format. "
            }
          ]
        },
        "manualEvidenceCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The total number of evidence objects uploaded manually to the control set. "
            }
          ]
        },
        "roles": {
          "allOf": [
            {
              "$ref": "#/definitions/Roles"
            },
            {
              "description": " The roles associated with the control set. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetStatus"
            },
            {
              "description": " Specifies the current status of the control set. "
            }
          ]
        },
        "systemEvidenceCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The total number of evidence objects retrieved automatically for the control set. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentControlSets": {
      "items": {
        "$ref": "#/definitions/AssessmentControlSet"
      },
      "type": "array"
    },
    "AssessmentControls": {
      "items": {
        "$ref": "#/definitions/AssessmentControl"
      },
      "type": "array"
    },
    "AssessmentDescription": {
      "maxLength": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "AssessmentEvidenceFolder": {
      "description": " The folder in which AWS Audit Manager stores evidence for an assessment. ",
      "properties": {
        "assessmentId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the specified assessment. "
            }
          ]
        },
        "assessmentReportSelectionCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The total count of evidence included in the assessment report. "
            }
          ]
        },
        "author": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The name of the user who created the evidence folder. "
            }
          ]
        },
        "controlId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the specified control. "
            }
          ]
        },
        "controlName": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlName"
            },
            {
              "description": " The name of the control. "
            }
          ]
        },
        "controlSetId": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetId"
            },
            {
              "description": " The identifier for the control set. "
            }
          ]
        },
        "dataSource": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The AWS service from which the evidence was collected. "
            }
          ]
        },
        "date": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " The date when the first evidence was added to the evidence folder. "
            }
          ]
        },
        "evidenceAwsServiceSourceCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The total number of AWS resources assessed to generate the evidence. "
            }
          ]
        },
        "evidenceByTypeComplianceCheckCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The number of evidence that falls under the compliance check category. This evidence is collected from AWS Config or AWS Security Hub. "
            }
          ]
        },
        "evidenceByTypeComplianceCheckIssuesCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The total number of issues that were reported directly from AWS Security Hub, AWS Config, or both. "
            }
          ]
        },
        "evidenceByTypeConfigurationDataCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The number of evidence that falls under the configuration data category. This evidence is collected from configuration snapshots of other AWS services such as Amazon EC2, Amazon S3, or IAM. "
            }
          ]
        },
        "evidenceByTypeManualCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The number of evidence that falls under the manual category. This evidence is imported manually. "
            }
          ]
        },
        "evidenceByTypeUserActivityCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The number of evidence that falls under the user activity category. This evidence is collected from AWS CloudTrail logs. "
            }
          ]
        },
        "evidenceResourcesIncludedCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The amount of evidence included in the evidence folder. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the folder in which evidence is stored. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentEvidenceFolderName"
            },
            {
              "description": " The name of the specified evidence folder. "
            }
          ]
        },
        "totalEvidence": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": " The total amount of evidence in the evidence folder. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentEvidenceFolderName": {
      "maxLength": 300,
      "minLength": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "AssessmentEvidenceFolders": {
      "items": {
        "$ref": "#/definitions/AssessmentEvidenceFolder"
      },
      "type": "array"
    },
    "AssessmentFramework": {
      "description": " The file used to structure and automate AWS Audit Manager assessments for a given compliance standard. ",
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/AuditManagerArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the specified framework. "
            }
          ]
        },
        "controlSets": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentControlSets"
            },
            {
              "description": " The control sets associated with the framework. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the framework. "
            }
          ]
        },
        "metadata": {
          "$ref": "#/definitions/FrameworkMetadata"
        }
      },
      "type": "object"
    },
    "AssessmentFrameworkDescription": {
      "maxLength": 200,
      "minLength": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "AssessmentFrameworkMetadata": {
      "description": " The metadata associated with a standard or custom framework. ",
      "properties": {
        "complianceType": {
          "allOf": [
            {
              "$ref": "#/definitions/ComplianceType"
            },
            {
              "description": " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
            }
          ]
        },
        "controlSetsCount": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetsCount"
            },
            {
              "description": " The number of control sets associated with the specified framework. "
            }
          ]
        },
        "controlsCount": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlsCount"
            },
            {
              "description": " The number of controls associated with the specified framework. "
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the framework was created. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkDescription"
            },
            {
              "description": " The description of the specified framework. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identified for the specified framework. "
            }
          ]
        },
        "lastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the framework was most recently updated. "
            }
          ]
        },
        "logo": {
          "allOf": [
            {
              "$ref": "#/definitions/Filename"
            },
            {
              "description": " The logo associated with the framework. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkName"
            },
            {
              "description": " The name of the specified framework. "
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkType"
            },
            {
              "description": " The framework type, such as standard or custom. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentMetadata": {
      "description": " The metadata associated with the specified assessment. ",
      "properties": {
        "assessmentReportsDestination": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportsDestination"
            },
            {
              "description": " The destination in which evidence reports are stored for the specified assessment. "
            }
          ]
        },
        "complianceType": {
          "allOf": [
            {
              "$ref": "#/definitions/ComplianceType"
            },
            {
              "description": " The name of a compliance standard related to the assessment, such as PCI-DSS. "
            }
          ]
        },
        "creationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the assessment was created. "
            }
          ]
        },
        "delegations": {
          "allOf": [
            {
              "$ref": "#/definitions/Delegations"
            },
            {
              "description": " The delegations associated with the assessment. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentDescription"
            },
            {
              "description": " The description of the assessment. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the assessment. "
            }
          ]
        },
        "lastUpdated": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " The time of the most recent update. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentName"
            },
            {
              "description": " The name of the assessment. "
            }
          ]
        },
        "roles": {
          "allOf": [
            {
              "$ref": "#/definitions/Roles"
            },
            {
              "description": " The roles associated with the assessment. "
            }
          ]
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            },
            {
              "description": " The wrapper of AWS accounts and services in scope for the assessment. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentStatus"
            },
            {
              "description": " The overall status of the assessment. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentMetadataItem": {
      "description": " A metadata object associated with an assessment in AWS Audit Manager. ",
      "properties": {
        "complianceType": {
          "allOf": [
            {
              "$ref": "#/definitions/ComplianceType"
            },
            {
              "description": " The name of the compliance standard related to the assessment, such as PCI-DSS. "
            }
          ]
        },
        "creationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the assessment was created. "
            }
          ]
        },
        "delegations": {
          "allOf": [
            {
              "$ref": "#/definitions/Delegations"
            },
            {
              "description": " The delegations associated with the assessment. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the assessment. "
            }
          ]
        },
        "lastUpdated": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " The time of the most recent update. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentName"
            },
            {
              "description": " The name of the assessment. "
            }
          ]
        },
        "roles": {
          "allOf": [
            {
              "$ref": "#/definitions/Roles"
            },
            {
              "description": " The roles associated with the assessment. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentStatus"
            },
            {
              "description": " The current status of the assessment. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentName": {
      "maxLength": 300,
      "minLength": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "AssessmentReport": {
      "description": " A finalized document generated from an AWS Audit Manager assessment. These reports summarize the relevant evidence collected for your audit, and link to the relevant evidence folders which are named and organized according to the controls specified in your assessment. ",
      "properties": {
        "assessmentId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the specified assessment. "
            }
          ]
        },
        "assessmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentName"
            },
            {
              "description": " The name of the associated assessment. "
            }
          ]
        },
        "author": {
          "allOf": [
            {
              "$ref": "#/definitions/Username"
            },
            {
              "description": " The name of the user who created the assessment report. "
            }
          ]
        },
        "awsAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": " The identifier for the specified AWS account. "
            }
          ]
        },
        "creationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the assessment report was created. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportDescription"
            },
            {
              "description": " The description of the specified assessment report. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the specified assessment report. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportName"
            },
            {
              "description": " The name given to the assessment report. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportStatus"
            },
            {
              "description": " The current status of the specified assessment report. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentReportDescription": {
      "maxLength": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "AssessmentReportDestinationType": {
      "enum": [
        "S3"
      ],
      "type": "string"
    },
    "AssessmentReportEvidenceError": {
      "description": " An error entity for the <code>AssessmentReportEvidence</code> API. This is used to provide more meaningful errors than a simple string message. ",
      "properties": {
        "errorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorCode"
            },
            {
              "description": " The error code returned by the <code>AssessmentReportEvidence</code> API. "
            }
          ]
        },
        "errorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorMessage"
            },
            {
              "description": " The error message returned by the <code>AssessmentReportEvidence</code> API. "
            }
          ]
        },
        "evidenceId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the evidence. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentReportEvidenceErrors": {
      "items": {
        "$ref": "#/definitions/AssessmentReportEvidenceError"
      },
      "type": "array"
    },
    "AssessmentReportMetadata": {
      "description": " The metadata objects associated with the specified assessment report. ",
      "properties": {
        "assessmentId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the associated assessment. "
            }
          ]
        },
        "assessmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentName"
            },
            {
              "description": "The name of the associated assessment. "
            }
          ]
        },
        "author": {
          "allOf": [
            {
              "$ref": "#/definitions/Username"
            },
            {
              "description": " The name of the user who created the assessment report. "
            }
          ]
        },
        "creationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the assessment report was created. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportDescription"
            },
            {
              "description": " The description of the specified assessment report. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the assessment report. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportName"
            },
            {
              "description": " The name of the assessment report. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportStatus"
            },
            {
              "description": " The current status of the assessment report. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentReportName": {
      "maxLength": 300,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9-_\\.]+$",
      "type": "string"
    },
    "AssessmentReportStatus": {
      "enum": [
        "COMPLETE",
        "IN_PROGRESS",
        "FAILED"
      ],
      "type": "string"
    },
    "AssessmentReportsDestination": {
      "description": " The location in which AWS Audit Manager saves assessment reports for the given assessment. ",
      "properties": {
        "destination": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Url"
            },
            {
              "description": " The destination of the assessment report. "
            }
          ]
        },
        "destinationType": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportDestinationType"
            },
            {
              "description": " The destination type, such as Amazon S3. "
            }
          ]
        }
      },
      "type": "object"
    },
    "AssessmentReportsMetadata": {
      "items": {
        "$ref": "#/definitions/AssessmentReportMetadata"
      },
      "type": "array"
    },
    "AssessmentStatus": {
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "type": "string"
    },
    "AssociateAssessmentReportEvidenceFolderRequest": {
      "properties": {
        "evidenceFolderId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the folder in which evidence is stored. "
            }
          ]
        }
      },
      "required": [
        "evidenceFolderId"
      ],
      "title": "AssociateAssessmentReportEvidenceFolderRequest",
      "type": "object"
    },
    "AssociateAssessmentReportEvidenceFolderResponse": {
      "properties": {},
      "type": "object"
    },
    "AuditManagerArn": {
      "maxLength": 2048,
      "minLength": 20,
      "pattern": "^arn:.*:auditmanager:.*",
      "type": "string"
    },
    "BatchAssociateAssessmentReportEvidenceRequest": {
      "properties": {
        "evidenceFolderId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the folder in which the evidence is stored. "
            }
          ]
        },
        "evidenceIds": {
          "allOf": [
            {
              "$ref": "#/definitions/EvidenceIds"
            },
            {
              "description": " The list of evidence identifiers. "
            }
          ]
        }
      },
      "required": [
        "evidenceFolderId",
        "evidenceIds"
      ],
      "title": "BatchAssociateAssessmentReportEvidenceRequest",
      "type": "object"
    },
    "BatchAssociateAssessmentReportEvidenceResponse": {
      "properties": {
        "errors": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportEvidenceErrors"
            },
            {
              "description": " A list of errors returned by the <code>BatchAssociateAssessmentReportEvidence</code> API. "
            }
          ]
        },
        "evidenceIds": {
          "allOf": [
            {
              "$ref": "#/definitions/EvidenceIds"
            },
            {
              "description": " The identifier for the evidence. "
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchCreateDelegationByAssessmentError": {
      "description": " An error entity for the <code>BatchCreateDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. ",
      "properties": {
        "createDelegationRequest": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateDelegationRequest"
            },
            {
              "description": " The API request to batch create delegations in AWS Audit Manager. "
            }
          ]
        },
        "errorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorCode"
            },
            {
              "description": " The error code returned by the <code>BatchCreateDelegationByAssessment</code> API. "
            }
          ]
        },
        "errorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorMessage"
            },
            {
              "description": " The error message returned by the <code>BatchCreateDelegationByAssessment</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchCreateDelegationByAssessmentErrors": {
      "items": {
        "$ref": "#/definitions/BatchCreateDelegationByAssessmentError"
      },
      "type": "array"
    },
    "BatchCreateDelegationByAssessmentRequest": {
      "properties": {
        "createDelegationRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateDelegationRequests"
            },
            {
              "description": " The API request to batch create delegations in AWS Audit Manager. "
            }
          ]
        }
      },
      "required": [
        "createDelegationRequests"
      ],
      "title": "BatchCreateDelegationByAssessmentRequest",
      "type": "object"
    },
    "BatchCreateDelegationByAssessmentResponse": {
      "properties": {
        "delegations": {
          "allOf": [
            {
              "$ref": "#/definitions/Delegations"
            },
            {
              "description": " The delegations associated with the assessment. "
            }
          ]
        },
        "errors": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchCreateDelegationByAssessmentErrors"
            },
            {
              "description": " A list of errors returned by the <code>BatchCreateDelegationByAssessment</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchDeleteDelegationByAssessmentError": {
      "description": " An error entity for the <code>BatchDeleteDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. ",
      "properties": {
        "delegationId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the specified delegation. "
            }
          ]
        },
        "errorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorCode"
            },
            {
              "description": " The error code returned by the <code>BatchDeleteDelegationByAssessment</code> API. "
            }
          ]
        },
        "errorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorMessage"
            },
            {
              "description": " The error message returned by the <code>BatchDeleteDelegationByAssessment</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchDeleteDelegationByAssessmentErrors": {
      "items": {
        "$ref": "#/definitions/BatchDeleteDelegationByAssessmentError"
      },
      "type": "array"
    },
    "BatchDeleteDelegationByAssessmentRequest": {
      "properties": {
        "delegationIds": {
          "allOf": [
            {
              "$ref": "#/definitions/DelegationIds"
            },
            {
              "description": " The identifiers for the specified delegations. "
            }
          ]
        }
      },
      "required": [
        "delegationIds"
      ],
      "title": "BatchDeleteDelegationByAssessmentRequest",
      "type": "object"
    },
    "BatchDeleteDelegationByAssessmentResponse": {
      "properties": {
        "errors": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchDeleteDelegationByAssessmentErrors"
            },
            {
              "description": " A list of errors returned by the <code>BatchDeleteDelegationByAssessment</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchDisassociateAssessmentReportEvidenceRequest": {
      "properties": {
        "evidenceFolderId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the folder in which evidence is stored. "
            }
          ]
        },
        "evidenceIds": {
          "allOf": [
            {
              "$ref": "#/definitions/EvidenceIds"
            },
            {
              "description": " The list of evidence identifiers. "
            }
          ]
        }
      },
      "required": [
        "evidenceFolderId",
        "evidenceIds"
      ],
      "title": "BatchDisassociateAssessmentReportEvidenceRequest",
      "type": "object"
    },
    "BatchDisassociateAssessmentReportEvidenceResponse": {
      "properties": {
        "errors": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportEvidenceErrors"
            },
            {
              "description": " A list of errors returned by the <code>BatchDisassociateAssessmentReportEvidence</code> API. "
            }
          ]
        },
        "evidenceIds": {
          "allOf": [
            {
              "$ref": "#/definitions/EvidenceIds"
            },
            {
              "description": " The identifier for the evidence. "
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchImportEvidenceToAssessmentControlError": {
      "description": " An error entity for the <code>BatchImportEvidenceToAssessmentControl</code> API. This is used to provide more meaningful errors than a simple string message. ",
      "properties": {
        "errorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorCode"
            },
            {
              "description": " The error code returned by the <code>BatchImportEvidenceToAssessmentControl</code> API. "
            }
          ]
        },
        "errorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorMessage"
            },
            {
              "description": " The error message returned by the <code>BatchImportEvidenceToAssessmentControlError</code> API. "
            }
          ]
        },
        "manualEvidence": {
          "allOf": [
            {
              "$ref": "#/definitions/ManualEvidence"
            },
            {
              "description": " Manual evidence that cannot be collected automatically by AWS Audit Manager. "
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchImportEvidenceToAssessmentControlErrors": {
      "items": {
        "$ref": "#/definitions/BatchImportEvidenceToAssessmentControlError"
      },
      "type": "array"
    },
    "BatchImportEvidenceToAssessmentControlRequest": {
      "properties": {
        "manualEvidence": {
          "allOf": [
            {
              "$ref": "#/definitions/ManualEvidenceList"
            },
            {
              "description": " The list of manual evidence objects. "
            }
          ]
        }
      },
      "required": [
        "manualEvidence"
      ],
      "title": "BatchImportEvidenceToAssessmentControlRequest",
      "type": "object"
    },
    "BatchImportEvidenceToAssessmentControlResponse": {
      "properties": {
        "errors": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchImportEvidenceToAssessmentControlErrors"
            },
            {
              "description": " A list of errors returned by the <code>BatchImportEvidenceToAssessmentControl</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "Boolean": {
      "type": "boolean"
    },
    "ChangeLog": {
      "description": " The record of a change within AWS Audit Manager, such as a modified assessment, a delegated control set, and so on. ",
      "properties": {
        "action": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionEnum"
            },
            {
              "description": " The action performed. "
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " The time of creation for the changelog object. "
            }
          ]
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/definitions/IamArn"
            },
            {
              "description": " The IAM user or role that performed the action. "
            }
          ]
        },
        "objectName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": " The name of the changelog object. "
            }
          ]
        },
        "objectType": {
          "allOf": [
            {
              "$ref": "#/definitions/ObjectTypeEnum"
            },
            {
              "description": " The changelog object type, such as an assessment, control, or control set. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ChangeLogs": {
      "items": {
        "$ref": "#/definitions/ChangeLog"
      },
      "type": "array"
    },
    "ComplianceType": {
      "maxLength": 100,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "Control": {
      "description": " A control in AWS Audit Manager. ",
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The tags associated with the control. "
            }
          ]
        },
        "actionPlanInstructions": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionPlanInstructions"
            },
            {
              "description": " The recommended actions to carry out if the control is not fulfilled. "
            }
          ]
        },
        "actionPlanTitle": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionPlanTitle"
            },
            {
              "description": " The title of the action plan for remediating the control. "
            }
          ]
        },
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/AuditManagerArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the specified control. "
            }
          ]
        },
        "controlMappingSources": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlMappingSources"
            },
            {
              "description": " The data mapping sources for the specified control. "
            }
          ]
        },
        "controlSources": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSources"
            },
            {
              "description": " The data mapping sources for the specified control. "
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the control was created. "
            }
          ]
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": " The IAM user or role that created the control. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlDescription"
            },
            {
              "description": " The description of the specified control. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the control. "
            }
          ]
        },
        "lastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the control was most recently updated. "
            }
          ]
        },
        "lastUpdatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastUpdatedBy"
            },
            {
              "description": " The IAM user or role that most recently updated the control. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlName"
            },
            {
              "description": " The name of the specified control. "
            }
          ]
        },
        "testingInformation": {
          "allOf": [
            {
              "$ref": "#/definitions/TestingInformation"
            },
            {
              "description": " The steps to follow to determine if the control has been satisfied. "
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlType"
            },
            {
              "description": " The type of control, such as custom or standard. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ControlComment": {
      "description": " A comment posted by a user on a control. This includes the author's name, the comment text, and a timestamp. ",
      "properties": {
        "authorName": {
          "allOf": [
            {
              "$ref": "#/definitions/Username"
            },
            {
              "description": " The name of the user who authored the comment. "
            }
          ]
        },
        "commentBody": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlCommentBody"
            },
            {
              "description": " The body text of a control comment. "
            }
          ]
        },
        "postedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " The time when the comment was posted. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ControlCommentBody": {
      "maxLength": 500,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ControlComments": {
      "items": {
        "$ref": "#/definitions/ControlComment"
      },
      "type": "array"
    },
    "ControlDescription": {
      "maxLength": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ControlMappingSource": {
      "description": " The data source that determines from where AWS Audit Manager collects evidence for the control. ",
      "properties": {
        "sourceDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceDescription"
            },
            {
              "description": " The description of the specified source. "
            }
          ]
        },
        "sourceFrequency": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceFrequency"
            },
            {
              "description": " The frequency of evidence collection for the specified control mapping source. "
            }
          ]
        },
        "sourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the specified source. "
            }
          ]
        },
        "sourceKeyword": {
          "$ref": "#/definitions/SourceKeyword"
        },
        "sourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceName"
            },
            {
              "description": " The name of the specified source. "
            }
          ]
        },
        "sourceSetUpOption": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceSetUpOption"
            },
            {
              "description": " The setup option for the data source, which reflects if the evidence collection is automated or manual. "
            }
          ]
        },
        "sourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceType"
            },
            {
              "description": " Specifies one of the five types of data sources for evidence collection. "
            }
          ]
        },
        "troubleshootingText": {
          "allOf": [
            {
              "$ref": "#/definitions/TroubleshootingText"
            },
            {
              "description": " The instructions for troubleshooting the specified control. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ControlMappingSources": {
      "items": {
        "$ref": "#/definitions/ControlMappingSource"
      },
      "minItems": 1,
      "type": "array"
    },
    "ControlMetadata": {
      "description": " The metadata associated with the specified standard or custom control. ",
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/AuditManagerArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the specified control. "
            }
          ]
        },
        "controlSources": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSources"
            },
            {
              "description": " The data source that determines from where AWS Audit Manager collects evidence for the control. "
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the control was created. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the specified control. "
            }
          ]
        },
        "lastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the control was most recently updated. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlName"
            },
            {
              "description": " The name of the specified control. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ControlMetadataList": {
      "items": {
        "$ref": "#/definitions/ControlMetadata"
      },
      "type": "array"
    },
    "ControlName": {
      "maxLength": 300,
      "minLength": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ControlResponse": {
      "enum": [
        "MANUAL",
        "AUTOMATE",
        "DEFER",
        "IGNORE"
      ],
      "type": "string"
    },
    "ControlSet": {
      "description": " A set of controls in AWS Audit Manager. ",
      "properties": {
        "controls": {
          "allOf": [
            {
              "$ref": "#/definitions/Controls"
            },
            {
              "description": " The list of controls within the control set. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier of the control set in the assessment. This is the control set name in a plain string format. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetName"
            },
            {
              "description": " The name of the control set. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ControlSetId": {
      "maxLength": 300,
      "minLength": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ControlSetName": {
      "maxLength": 300,
      "minLength": 1,
      "pattern": "^[^\\_]*$",
      "type": "string"
    },
    "ControlSetStatus": {
      "enum": [
        "ACTIVE",
        "UNDER_REVIEW",
        "REVIEWED"
      ],
      "type": "string"
    },
    "ControlSets": {
      "items": {
        "$ref": "#/definitions/ControlSet"
      },
      "minItems": 1,
      "type": "array"
    },
    "ControlSetsCount": {
      "type": "integer"
    },
    "ControlSources": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "^[a-zA-Z_0-9-\\s.,]+$",
      "type": "string"
    },
    "ControlStatus": {
      "enum": [
        "UNDER_REVIEW",
        "REVIEWED",
        "INACTIVE"
      ],
      "type": "string"
    },
    "ControlType": {
      "enum": [
        "Standard",
        "Custom"
      ],
      "type": "string"
    },
    "Controls": {
      "items": {
        "$ref": "#/definitions/Control"
      },
      "minItems": 1,
      "type": "array"
    },
    "ControlsCount": {
      "type": "integer"
    },
    "CreateAssessmentFrameworkControl": {
      "description": " Control entity attributes that uniquely identify an existing control to be added to a framework in AWS Audit Manager. ",
      "properties": {
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier of the control. "
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateAssessmentFrameworkControlSet": {
      "description": " A <code>controlSet</code> entity that represents a collection of controls in AWS Audit Manager. This does not contain the control set ID. ",
      "properties": {
        "controls": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateAssessmentFrameworkControls"
            },
            {
              "description": " The list of controls within the control set. This does not contain the control set ID. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetName"
            },
            {
              "description": " The name of the specified control set. "
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateAssessmentFrameworkControlSets": {
      "items": {
        "$ref": "#/definitions/CreateAssessmentFrameworkControlSet"
      },
      "minItems": 1,
      "type": "array"
    },
    "CreateAssessmentFrameworkControls": {
      "items": {
        "$ref": "#/definitions/CreateAssessmentFrameworkControl"
      },
      "minItems": 1,
      "type": "array"
    },
    "CreateAssessmentFrameworkRequest": {
      "properties": {
        "complianceType": {
          "allOf": [
            {
              "$ref": "#/definitions/ComplianceType"
            },
            {
              "description": " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
            }
          ]
        },
        "controlSets": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateAssessmentFrameworkControlSets"
            },
            {
              "description": " The control sets to be associated with the framework. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkDescription"
            },
            {
              "description": " An optional description for the new custom framework. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkName"
            },
            {
              "description": " The name of the new custom framework. "
            }
          ]
        }
      },
      "required": [
        "name",
        "controlSets"
      ],
      "title": "CreateAssessmentFrameworkRequest",
      "type": "object"
    },
    "CreateAssessmentFrameworkResponse": {
      "properties": {
        "framework": {
          "allOf": [
            {
              "$ref": "#/definitions/Framework"
            },
            {
              "description": " The name of the new framework returned by the <code>CreateAssessmentFramework</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateAssessmentReportRequest": {
      "properties": {
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportDescription"
            },
            {
              "description": " The description of the assessment report. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportName"
            },
            {
              "description": " The name of the new assessment report. "
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "title": "CreateAssessmentReportRequest",
      "type": "object"
    },
    "CreateAssessmentReportResponse": {
      "properties": {
        "assessmentReport": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReport"
            },
            {
              "description": " The new assessment report returned by the <code>CreateAssessmentReport</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateAssessmentRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The tags associated with the assessment. "
            }
          ]
        },
        "assessmentReportsDestination": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportsDestination"
            },
            {
              "description": " The assessment report storage destination for the specified assessment that is being created. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentDescription"
            },
            {
              "description": " The optional description of the assessment to be created. "
            }
          ]
        },
        "frameworkId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the specified framework. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentName"
            },
            {
              "description": " The name of the assessment to be created. "
            }
          ]
        },
        "roles": {
          "allOf": [
            {
              "$ref": "#/definitions/Roles"
            },
            {
              "description": " The list of roles for the specified assessment. "
            }
          ]
        },
        "scope": {
          "$ref": "#/definitions/Scope"
        }
      },
      "required": [
        "name",
        "assessmentReportsDestination",
        "scope",
        "roles",
        "frameworkId"
      ],
      "title": "CreateAssessmentRequest",
      "type": "object"
    },
    "CreateAssessmentResponse": {
      "properties": {
        "assessment": {
          "$ref": "#/definitions/Assessment"
        }
      },
      "type": "object"
    },
    "CreateControlMappingSource": {
      "description": " Control mapping fields that represent the source for evidence collection, along with related parameters and metadata. This does not contain <code>mappingID</code>. ",
      "properties": {
        "sourceDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceDescription"
            },
            {
              "description": " The description of the data source that determines from where AWS Audit Manager collects evidence for the control. "
            }
          ]
        },
        "sourceFrequency": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceFrequency"
            },
            {
              "description": " The frequency of evidence collection for the specified control mapping source. "
            }
          ]
        },
        "sourceKeyword": {
          "$ref": "#/definitions/SourceKeyword"
        },
        "sourceName": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceName"
            },
            {
              "description": " The name of the control mapping data source. "
            }
          ]
        },
        "sourceSetUpOption": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceSetUpOption"
            },
            {
              "description": " The setup option for the data source, which reflects if the evidence collection is automated or manual. "
            }
          ]
        },
        "sourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceType"
            },
            {
              "description": " Specifies one of the five types of data sources for evidence collection. "
            }
          ]
        },
        "troubleshootingText": {
          "allOf": [
            {
              "$ref": "#/definitions/TroubleshootingText"
            },
            {
              "description": " The instructions for troubleshooting the specified control. "
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateControlMappingSources": {
      "items": {
        "$ref": "#/definitions/CreateControlMappingSource"
      },
      "minItems": 1,
      "type": "array"
    },
    "CreateControlRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The tags associated with the control. "
            }
          ]
        },
        "actionPlanInstructions": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionPlanInstructions"
            },
            {
              "description": " The recommended actions to carry out if the control is not fulfilled. "
            }
          ]
        },
        "actionPlanTitle": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionPlanTitle"
            },
            {
              "description": " The title of the action plan for remediating the control. "
            }
          ]
        },
        "controlMappingSources": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateControlMappingSources"
            },
            {
              "description": " The data source that determines from where AWS Audit Manager collects evidence for the control. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlDescription"
            },
            {
              "description": " The description of the control. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlName"
            },
            {
              "description": " The name of the control. "
            }
          ]
        },
        "testingInformation": {
          "allOf": [
            {
              "$ref": "#/definitions/TestingInformation"
            },
            {
              "description": " The steps to follow to determine if the control has been satisfied. "
            }
          ]
        }
      },
      "required": [
        "name",
        "controlMappingSources"
      ],
      "title": "CreateControlRequest",
      "type": "object"
    },
    "CreateControlResponse": {
      "properties": {
        "control": {
          "allOf": [
            {
              "$ref": "#/definitions/Control"
            },
            {
              "description": " The new control returned by the <code>CreateControl</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateDelegationRequest": {
      "description": " A collection of attributes used to create a delegation for an assessment in AWS Audit Manager. ",
      "properties": {
        "comment": {
          "allOf": [
            {
              "$ref": "#/definitions/DelegationComment"
            },
            {
              "description": " A comment related to the delegation request. "
            }
          ]
        },
        "controlSetId": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetId"
            },
            {
              "description": " The unique identifier for the control set. "
            }
          ]
        },
        "roleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/IamArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the IAM role. "
            }
          ]
        },
        "roleType": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleType"
            },
            {
              "description": "<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>"
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateDelegationRequests": {
      "items": {
        "$ref": "#/definitions/CreateDelegationRequest"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "CreatedBy": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9\\s-_()\\[\\]]+$",
      "type": "string"
    },
    "Delegation": {
      "description": " The assignment of a control set to a delegate for review. ",
      "properties": {
        "assessmentId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the associated assessment. "
            }
          ]
        },
        "assessmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentName"
            },
            {
              "description": " The name of the associated assessment. "
            }
          ]
        },
        "comment": {
          "allOf": [
            {
              "$ref": "#/definitions/DelegationComment"
            },
            {
              "description": " The comment related to the delegation. "
            }
          ]
        },
        "controlSetId": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetId"
            },
            {
              "description": " The identifier for the associated control set. "
            }
          ]
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": " The IAM user or role that created the delegation. "
            }
          ]
        },
        "creationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the delegation was created. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the delegation. "
            }
          ]
        },
        "lastUpdated": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the delegation was last updated. "
            }
          ]
        },
        "roleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/IamArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the IAM role. "
            }
          ]
        },
        "roleType": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleType"
            },
            {
              "description": "<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>"
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/DelegationStatus"
            },
            {
              "description": " The status of the delegation. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DelegationComment": {
      "maxLength": 350,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "DelegationIds": {
      "items": {
        "$ref": "#/definitions/UUID"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "DelegationMetadata": {
      "description": " The metadata associated with the specified delegation. ",
      "properties": {
        "assessmentId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the specified assessment. "
            }
          ]
        },
        "assessmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentName"
            },
            {
              "description": " The name of the associated assessment. "
            }
          ]
        },
        "controlSetName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": " Specifies the name of the control set delegated for review. "
            }
          ]
        },
        "creationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the delegation was created. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the delegation. "
            }
          ]
        },
        "roleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/IamArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the IAM role. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/DelegationStatus"
            },
            {
              "description": " The current status of the delgation. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DelegationMetadataList": {
      "items": {
        "$ref": "#/definitions/DelegationMetadata"
      },
      "type": "array"
    },
    "DelegationStatus": {
      "enum": [
        "IN_PROGRESS",
        "UNDER_REVIEW",
        "COMPLETE"
      ],
      "type": "string"
    },
    "Delegations": {
      "items": {
        "$ref": "#/definitions/Delegation"
      },
      "type": "array"
    },
    "DeleteAssessmentFrameworkRequest": {
      "properties": {},
      "title": "DeleteAssessmentFrameworkRequest",
      "type": "object"
    },
    "DeleteAssessmentFrameworkResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteAssessmentReportRequest": {
      "properties": {},
      "title": "DeleteAssessmentReportRequest",
      "type": "object"
    },
    "DeleteAssessmentReportResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteAssessmentRequest": {
      "properties": {},
      "title": "DeleteAssessmentRequest",
      "type": "object"
    },
    "DeleteAssessmentResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteControlRequest": {
      "properties": {},
      "title": "DeleteControlRequest",
      "type": "object"
    },
    "DeleteControlResponse": {
      "properties": {},
      "type": "object"
    },
    "DeregisterAccountRequest": {
      "properties": {},
      "title": "DeregisterAccountRequest",
      "type": "object"
    },
    "DeregisterAccountResponse": {
      "properties": {
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountStatus"
            },
            {
              "description": " The registration status of the account. "
            }
          ]
        }
      },
      "type": "object"
    },
    "DeregisterOrganizationAdminAccountRequest": {
      "properties": {
        "adminAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": " The identifier for the specified administrator account. "
            }
          ]
        }
      },
      "title": "DeregisterOrganizationAdminAccountRequest",
      "type": "object"
    },
    "DeregisterOrganizationAdminAccountResponse": {
      "properties": {},
      "type": "object"
    },
    "DisassociateAssessmentReportEvidenceFolderRequest": {
      "properties": {
        "evidenceFolderId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the folder in which evidence is stored. "
            }
          ]
        }
      },
      "required": [
        "evidenceFolderId"
      ],
      "title": "DisassociateAssessmentReportEvidenceFolderRequest",
      "type": "object"
    },
    "DisassociateAssessmentReportEvidenceFolderResponse": {
      "properties": {},
      "type": "object"
    },
    "EmailAddress": {
      "maxLength": 320,
      "minLength": 1,
      "pattern": "^.*@.*$",
      "type": "string"
    },
    "ErrorCode": {
      "maxLength": 3,
      "minLength": 3,
      "pattern": "[0-9]{3}",
      "type": "string"
    },
    "ErrorMessage": {
      "maxLength": 300,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "EventName": {
      "maxLength": 100,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "Evidence": {
      "description": " A record that contains the information needed to demonstrate compliance with the requirements specified by a control. Examples of evidence include change activity triggered by a user, or a system configuration snapshot. ",
      "properties": {
        "assessmentReportSelection": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " Specifies whether the evidence is inclded in the assessment report. "
            }
          ]
        },
        "attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/EvidenceAttributes"
            },
            {
              "description": " The names and values used by the evidence event, including an attribute name (such as <code>allowUsersToChangePassword</code>) and value (such as <code>true</code> or <code>false</code>). "
            }
          ]
        },
        "awsAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": " The identifier for the specified AWS account. "
            }
          ]
        },
        "awsOrganization": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The AWS account from which the evidence is collected, and its AWS organization path. "
            }
          ]
        },
        "complianceCheck": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The evaluation status for evidence that falls under the compliance check category. For evidence collected from AWS Security Hub, a <i>Pass</i> or <i>Fail</i> result is shown. For evidence collected from AWS Config, a <i>Compliant</i> or <i>Noncompliant</i> result is shown. "
            }
          ]
        },
        "dataSource": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The data source from which the specified evidence was collected. "
            }
          ]
        },
        "eventName": {
          "allOf": [
            {
              "$ref": "#/definitions/EventName"
            },
            {
              "description": " The name of the specified evidence event. "
            }
          ]
        },
        "eventSource": {
          "allOf": [
            {
              "$ref": "#/definitions/AWSServiceName"
            },
            {
              "description": " The AWS service from which the evidence is collected. "
            }
          ]
        },
        "evidenceAwsAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": " The identifier for the specified AWS account. "
            }
          ]
        },
        "evidenceByType": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The type of automated evidence. "
            }
          ]
        },
        "evidenceFolderId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the folder in which the evidence is stored. "
            }
          ]
        },
        "iamId": {
          "allOf": [
            {
              "$ref": "#/definitions/IamArn"
            },
            {
              "description": " The unique identifier for the IAM user or role associated with the evidence. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the evidence. "
            }
          ]
        },
        "resourcesIncluded": {
          "allOf": [
            {
              "$ref": "#/definitions/Resources"
            },
            {
              "description": " The list of resources assessed to generate the evidence. "
            }
          ]
        },
        "time": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " The timestamp that represents when the evidence was collected. "
            }
          ]
        }
      },
      "type": "object"
    },
    "EvidenceAttributeKey": {
      "maxLength": 100,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "EvidenceAttributeValue": {
      "maxLength": 200,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "EvidenceAttributes": {
      "additionalProperties": {
        "$ref": "#/definitions/EvidenceAttributeValue"
      },
      "type": "object"
    },
    "EvidenceIds": {
      "items": {
        "$ref": "#/definitions/UUID"
      },
      "maxItems": 50,
      "minItems": 0,
      "type": "array"
    },
    "EvidenceList": {
      "items": {
        "$ref": "#/definitions/Evidence"
      },
      "type": "array"
    },
    "EvidenceSources": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "Filename": {
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[\\w,\\s-]+\\.[A-Za-z]+$",
      "type": "string"
    },
    "Framework": {
      "description": " The file used to structure and automate AWS Audit Manager assessments for a given compliance standard. ",
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/AuditManagerArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the specified framework. "
            }
          ]
        },
        "complianceType": {
          "allOf": [
            {
              "$ref": "#/definitions/ComplianceType"
            },
            {
              "description": " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
            }
          ]
        },
        "controlSets": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSets"
            },
            {
              "description": " The control sets associated with the framework. "
            }
          ]
        },
        "controlSources": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSources"
            },
            {
              "description": " The sources from which AWS Audit Manager collects evidence for the control. "
            }
          ]
        },
        "createdAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the framework was created. "
            }
          ]
        },
        "createdBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": " The IAM user or role that created the framework. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkDescription"
            },
            {
              "description": " The description of the specified framework. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the specified framework. "
            }
          ]
        },
        "lastUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " Specifies when the framework was most recently updated. "
            }
          ]
        },
        "lastUpdatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastUpdatedBy"
            },
            {
              "description": " The IAM user or role that most recently updated the framework. "
            }
          ]
        },
        "logo": {
          "allOf": [
            {
              "$ref": "#/definitions/Filename"
            },
            {
              "description": " The logo associated with the framework. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkName"
            },
            {
              "description": " The name of the specified framework. "
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkType"
            },
            {
              "description": " The framework type, such as custom or standard. "
            }
          ]
        }
      },
      "type": "object"
    },
    "FrameworkDescription": {
      "maxLength": 1000,
      "minLength": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "FrameworkMetadata": {
      "description": " The metadata of a framework, such as the name, ID, description, and so on. ",
      "properties": {
        "complianceType": {
          "allOf": [
            {
              "$ref": "#/definitions/ComplianceType"
            },
            {
              "description": " The compliance standard associated with the framework, such as PCI-DSS or HIPAA. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentFrameworkDescription"
            },
            {
              "description": " The description of the framework. "
            }
          ]
        },
        "logo": {
          "allOf": [
            {
              "$ref": "#/definitions/Filename"
            },
            {
              "description": " The logo associated with the framework. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentName"
            },
            {
              "description": " The name of the framework. "
            }
          ]
        }
      },
      "type": "object"
    },
    "FrameworkMetadataList": {
      "items": {
        "$ref": "#/definitions/AssessmentFrameworkMetadata"
      },
      "type": "array"
    },
    "FrameworkName": {
      "maxLength": 300,
      "minLength": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "FrameworkType": {
      "enum": [
        "Standard",
        "Custom"
      ],
      "type": "string"
    },
    "GenericArn": {
      "maxLength": 2048,
      "minLength": 20,
      "pattern": "^arn:.*",
      "type": "string"
    },
    "GetAccountStatusRequest": {
      "properties": {},
      "title": "GetAccountStatusRequest",
      "type": "object"
    },
    "GetAccountStatusResponse": {
      "properties": {
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountStatus"
            },
            {
              "description": " The status of the specified AWS account. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAssessmentFrameworkRequest": {
      "properties": {},
      "title": "GetAssessmentFrameworkRequest",
      "type": "object"
    },
    "GetAssessmentFrameworkResponse": {
      "properties": {
        "framework": {
          "allOf": [
            {
              "$ref": "#/definitions/Framework"
            },
            {
              "description": " The framework returned by the <code>GetAssessmentFramework</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAssessmentReportUrlRequest": {
      "properties": {},
      "title": "GetAssessmentReportUrlRequest",
      "type": "object"
    },
    "GetAssessmentReportUrlResponse": {
      "properties": {
        "preSignedUrl": {
          "$ref": "#/definitions/URL"
        }
      },
      "type": "object"
    },
    "GetAssessmentRequest": {
      "properties": {},
      "title": "GetAssessmentRequest",
      "type": "object"
    },
    "GetAssessmentResponse": {
      "properties": {
        "assessment": {
          "$ref": "#/definitions/Assessment"
        }
      },
      "type": "object"
    },
    "GetChangeLogsRequest": {
      "properties": {},
      "title": "GetChangeLogsRequest",
      "type": "object"
    },
    "GetChangeLogsResponse": {
      "properties": {
        "changeLogs": {
          "allOf": [
            {
              "$ref": "#/definitions/ChangeLogs"
            },
            {
              "description": " The list of user activity for the control. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetControlRequest": {
      "properties": {},
      "title": "GetControlRequest",
      "type": "object"
    },
    "GetControlResponse": {
      "properties": {
        "control": {
          "allOf": [
            {
              "$ref": "#/definitions/Control"
            },
            {
              "description": " The name of the control returned by the <code>GetControl</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetDelegationsRequest": {
      "properties": {},
      "title": "GetDelegationsRequest",
      "type": "object"
    },
    "GetDelegationsResponse": {
      "properties": {
        "delegations": {
          "allOf": [
            {
              "$ref": "#/definitions/DelegationMetadataList"
            },
            {
              "description": " The list of delegations returned by the <code>GetDelegations</code> API. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetEvidenceByEvidenceFolderRequest": {
      "properties": {},
      "title": "GetEvidenceByEvidenceFolderRequest",
      "type": "object"
    },
    "GetEvidenceByEvidenceFolderResponse": {
      "properties": {
        "evidence": {
          "allOf": [
            {
              "$ref": "#/definitions/EvidenceList"
            },
            {
              "description": " The list of evidence returned by the <code>GetEvidenceByEvidenceFolder</code> API. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetEvidenceFolderRequest": {
      "properties": {},
      "title": "GetEvidenceFolderRequest",
      "type": "object"
    },
    "GetEvidenceFolderResponse": {
      "properties": {
        "evidenceFolder": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentEvidenceFolder"
            },
            {
              "description": " The folder in which evidence is stored. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetEvidenceFoldersByAssessmentControlRequest": {
      "properties": {},
      "title": "GetEvidenceFoldersByAssessmentControlRequest",
      "type": "object"
    },
    "GetEvidenceFoldersByAssessmentControlResponse": {
      "properties": {
        "evidenceFolders": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentEvidenceFolders"
            },
            {
              "description": " The list of evidence folders returned by the <code>GetEvidenceFoldersByAssessmentControl</code> API. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetEvidenceFoldersByAssessmentRequest": {
      "properties": {},
      "title": "GetEvidenceFoldersByAssessmentRequest",
      "type": "object"
    },
    "GetEvidenceFoldersByAssessmentResponse": {
      "properties": {
        "evidenceFolders": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentEvidenceFolders"
            },
            {
              "description": " The list of evidence folders returned by the <code>GetEvidenceFoldersByAssessment</code> API. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetEvidenceRequest": {
      "properties": {},
      "title": "GetEvidenceRequest",
      "type": "object"
    },
    "GetEvidenceResponse": {
      "properties": {
        "evidence": {
          "allOf": [
            {
              "$ref": "#/definitions/Evidence"
            },
            {
              "description": " The evidence returned by the <code>GetEvidenceResponse</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetOrganizationAdminAccountRequest": {
      "properties": {},
      "title": "GetOrganizationAdminAccountRequest",
      "type": "object"
    },
    "GetOrganizationAdminAccountResponse": {
      "properties": {
        "adminAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": " The identifier for the specified administrator account. "
            }
          ]
        },
        "organizationId": {
          "allOf": [
            {
              "$ref": "#/definitions/organizationId"
            },
            {
              "description": " The identifier for the specified organization. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetServicesInScopeRequest": {
      "properties": {},
      "title": "GetServicesInScopeRequest",
      "type": "object"
    },
    "GetServicesInScopeResponse": {
      "properties": {
        "serviceMetadata": {
          "allOf": [
            {
              "$ref": "#/definitions/ServiceMetadataList"
            },
            {
              "description": " The metadata associated with the aAWS service. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetSettingsRequest": {
      "properties": {},
      "title": "GetSettingsRequest",
      "type": "object"
    },
    "GetSettingsResponse": {
      "properties": {
        "settings": {
          "allOf": [
            {
              "$ref": "#/definitions/Settings"
            },
            {
              "description": " The settings object that holds all supported AWS Audit Manager settings. "
            }
          ]
        }
      },
      "type": "object"
    },
    "HyperlinkName": {
      "maxLength": 200,
      "minLength": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "IamArn": {
      "maxLength": 2048,
      "minLength": 20,
      "pattern": "^arn:.*:iam:.*",
      "type": "string"
    },
    "Integer": {
      "type": "integer"
    },
    "InternalServerException": {},
    "KeywordInputType": {
      "enum": [
        "SELECT_FROM_LIST"
      ],
      "type": "string"
    },
    "KeywordValue": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "^[a-zA-Z_0-9-\\s().]+$",
      "type": "string"
    },
    "Keywords": {
      "items": {
        "$ref": "#/definitions/KeywordValue"
      },
      "type": "array"
    },
    "KmsKey": {
      "maxLength": 2048,
      "minLength": 7,
      "pattern": "^arn:.*:kms:.*|DEFAULT",
      "type": "string"
    },
    "LastUpdatedBy": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9\\s-_()\\[\\]]+$",
      "type": "string"
    },
    "ListAssessmentFrameworksRequest": {
      "properties": {},
      "title": "ListAssessmentFrameworksRequest",
      "type": "object"
    },
    "ListAssessmentFrameworksResponse": {
      "properties": {
        "frameworkMetadataList": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkMetadataList"
            },
            {
              "description": " The list of metadata objects for the specified framework. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ListAssessmentMetadata": {
      "items": {
        "$ref": "#/definitions/AssessmentMetadataItem"
      },
      "type": "array"
    },
    "ListAssessmentReportsRequest": {
      "properties": {},
      "title": "ListAssessmentReportsRequest",
      "type": "object"
    },
    "ListAssessmentReportsResponse": {
      "properties": {
        "assessmentReports": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportsMetadata"
            },
            {
              "description": " The list of assessment reports returned by the <code>ListAssessmentReports</code> API. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ListAssessmentsRequest": {
      "properties": {},
      "title": "ListAssessmentsRequest",
      "type": "object"
    },
    "ListAssessmentsResponse": {
      "properties": {
        "assessmentMetadata": {
          "allOf": [
            {
              "$ref": "#/definitions/ListAssessmentMetadata"
            },
            {
              "description": " The metadata associated with the assessment. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ListControlsRequest": {
      "properties": {},
      "title": "ListControlsRequest",
      "type": "object"
    },
    "ListControlsResponse": {
      "properties": {
        "controlMetadataList": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlMetadataList"
            },
            {
              "description": " The list of control metadata objects returned by the <code>ListControls</code> API. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ListKeywordsForDataSourceRequest": {
      "properties": {},
      "title": "ListKeywordsForDataSourceRequest",
      "type": "object"
    },
    "ListKeywordsForDataSourceResponse": {
      "properties": {
        "keywords": {
          "allOf": [
            {
              "$ref": "#/definitions/Keywords"
            },
            {
              "description": " The list of keywords for the specified event mapping source. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ListNotificationsRequest": {
      "properties": {},
      "title": "ListNotificationsRequest",
      "type": "object"
    },
    "ListNotificationsResponse": {
      "properties": {
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/Token"
            },
            {
              "description": " The pagination token used to fetch the next set of results. "
            }
          ]
        },
        "notifications": {
          "allOf": [
            {
              "$ref": "#/definitions/Notifications"
            },
            {
              "description": " The returned list of notifications. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "properties": {},
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The list of tags returned by the <code>ListTagsForResource</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ManualEvidence": {
      "description": " Evidence that is uploaded to AWS Audit Manager manually. ",
      "properties": {
        "s3ResourcePath": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Url"
            },
            {
              "description": " The Amazon S3 URL that points to a manual evidence object. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ManualEvidenceList": {
      "items": {
        "$ref": "#/definitions/ManualEvidence"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "MaxResults": {
      "description": "Max results in the page.",
      "maximum": 1000,
      "minimum": 1,
      "type": "integer"
    },
    "NonEmptyString": {
      "maxLength": 2048,
      "minLength": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "Notification": {
      "description": " The notification used to inform a user of an update in AWS Audit Manager. For example, this includes the notification that is sent when a control set is delegated for review. ",
      "properties": {
        "assessmentId": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The identifier for the specified assessment. "
            }
          ]
        },
        "assessmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentName"
            },
            {
              "description": " The name of the related assessment. "
            }
          ]
        },
        "controlSetId": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetId"
            },
            {
              "description": " The identifier for the specified control set. "
            }
          ]
        },
        "controlSetName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": " Specifies the name of the control set that the notification is about. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": " The description of the notification. "
            }
          ]
        },
        "eventTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": " The time when the notification was sent. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/TimestampUUID"
            },
            {
              "description": " The unique identifier for the notification. "
            }
          ]
        },
        "source": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": " The sender of the notification. "
            }
          ]
        }
      },
      "type": "object"
    },
    "Notifications": {
      "items": {
        "$ref": "#/definitions/Notification"
      },
      "type": "array"
    },
    "ObjectTypeEnum": {
      "enum": [
        "ASSESSMENT",
        "CONTROL_SET",
        "CONTROL",
        "DELEGATION",
        "ASSESSMENT_REPORT"
      ],
      "type": "string"
    },
    "RegisterAccountRequest": {
      "properties": {
        "delegatedAdminAccount": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": " The delegated administrator account for AWS Audit Manager. "
            }
          ]
        },
        "kmsKey": {
          "allOf": [
            {
              "$ref": "#/definitions/KmsKey"
            },
            {
              "description": " The AWS KMS key details. "
            }
          ]
        }
      },
      "title": "RegisterAccountRequest",
      "type": "object"
    },
    "RegisterAccountResponse": {
      "properties": {
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountStatus"
            },
            {
              "description": " The status of the account registration request. "
            }
          ]
        }
      },
      "type": "object"
    },
    "RegisterOrganizationAdminAccountRequest": {
      "properties": {
        "adminAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": " The identifier for the specified delegated administrator account. "
            }
          ]
        }
      },
      "required": [
        "adminAccountId"
      ],
      "title": "RegisterOrganizationAdminAccountRequest",
      "type": "object"
    },
    "RegisterOrganizationAdminAccountResponse": {
      "properties": {
        "adminAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": " The identifier for the specified delegated administrator account. "
            }
          ]
        },
        "organizationId": {
          "allOf": [
            {
              "$ref": "#/definitions/organizationId"
            },
            {
              "description": " The identifier for the specified AWS organization. "
            }
          ]
        }
      },
      "type": "object"
    },
    "Resource": {
      "description": " A system asset that is evaluated in an AWS Audit Manager assessment. ",
      "properties": {
        "arn": {
          "allOf": [
            {
              "$ref": "#/definitions/GenericArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) for the specified resource. "
            }
          ]
        },
        "value": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The value of the specified resource. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceNotFoundException": {},
    "Resources": {
      "items": {
        "$ref": "#/definitions/Resource"
      },
      "type": "array"
    },
    "Role": {
      "description": " The wrapper that contains AWS Audit Manager role information, such as the role type and IAM Amazon Resource Name (ARN). ",
      "properties": {
        "roleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/IamArn"
            },
            {
              "description": " The Amazon Resource Name (ARN) of the IAM role. "
            }
          ]
        },
        "roleType": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleType"
            },
            {
              "description": "<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>"
            }
          ]
        }
      },
      "type": "object"
    },
    "RoleType": {
      "enum": [
        "PROCESS_OWNER",
        "RESOURCE_OWNER"
      ],
      "type": "string"
    },
    "Roles": {
      "items": {
        "$ref": "#/definitions/Role"
      },
      "type": "array"
    },
    "S3Url": {
      "maxLength": 1024,
      "minLength": 1,
      "pattern": "^(S|s)3:\\/\\/[a-zA-Z0-9-_\\/.]+$",
      "type": "string"
    },
    "SNSTopic": {
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9-_\\(\\)\\[\\]]+$",
      "type": "string"
    },
    "Scope": {
      "description": " The wrapper that contains the AWS accounts and AWS services in scope for the assessment. ",
      "properties": {
        "awsAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/AWSAccounts"
            },
            {
              "description": " The AWS accounts included in the scope of the assessment. "
            }
          ]
        },
        "awsServices": {
          "allOf": [
            {
              "$ref": "#/definitions/AWSServices"
            },
            {
              "description": " The AWS services included in the scope of the assessment. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ServiceMetadata": {
      "description": " The metadata associated with the specified AWS service. ",
      "properties": {
        "category": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": " The category in which the AWS service belongs, such as compute, storage, database, and so on. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": " The description of the specified AWS service. "
            }
          ]
        },
        "displayName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": " The display name of the AWS service. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AWSServiceName"
            },
            {
              "description": " The name of the AWS service. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ServiceMetadataList": {
      "items": {
        "$ref": "#/definitions/ServiceMetadata"
      },
      "type": "array"
    },
    "SettingAttribute": {
      "enum": [
        "ALL",
        "IS_AWS_ORG_ENABLED",
        "SNS_TOPIC",
        "DEFAULT_ASSESSMENT_REPORTS_DESTINATION",
        "DEFAULT_PROCESS_OWNERS"
      ],
      "type": "string"
    },
    "Settings": {
      "description": " The settings object that holds all supported AWS Audit Manager settings. ",
      "properties": {
        "defaultAssessmentReportsDestination": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportsDestination"
            },
            {
              "description": " The default storage destination for assessment reports. "
            }
          ]
        },
        "defaultProcessOwners": {
          "allOf": [
            {
              "$ref": "#/definitions/Roles"
            },
            {
              "description": " The designated default audit owners. "
            }
          ]
        },
        "isAwsOrgEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": " Specifies whether AWS Organizations is enabled. "
            }
          ]
        },
        "kmsKey": {
          "allOf": [
            {
              "$ref": "#/definitions/KmsKey"
            },
            {
              "description": " The AWS KMS key details. "
            }
          ]
        },
        "snsTopic": {
          "allOf": [
            {
              "$ref": "#/definitions/SNSTopic"
            },
            {
              "description": " The designated Amazon Simple Notification Service (Amazon SNS) topic. "
            }
          ]
        }
      },
      "type": "object"
    },
    "SnsArn": {
      "maxLength": 2048,
      "minLength": 20,
      "pattern": "^arn:.*:sns:.*",
      "type": "string"
    },
    "SourceDescription": {
      "maxLength": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "SourceFrequency": {
      "enum": [
        "DAILY",
        "WEEKLY",
        "MONTHLY"
      ],
      "type": "string"
    },
    "SourceKeyword": {
      "description": " The keyword to search for in AWS CloudTrail logs. ",
      "properties": {
        "keywordInputType": {
          "allOf": [
            {
              "$ref": "#/definitions/KeywordInputType"
            },
            {
              "description": " The method of input for the specified keyword. "
            }
          ]
        },
        "keywordValue": {
          "allOf": [
            {
              "$ref": "#/definitions/KeywordValue"
            },
            {
              "description": " The value of the keyword used to search AWS CloudTrail logs when mapping a control data source. "
            }
          ]
        }
      },
      "type": "object"
    },
    "SourceName": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "SourceSetUpOption": {
      "enum": [
        "System_Controls_Mapping",
        "Procedural_Controls_Mapping"
      ],
      "type": "string"
    },
    "SourceType": {
      "enum": [
        "AWS_Cloudtrail",
        "AWS_Config",
        "AWS_Security_Hub",
        "AWS_API_Call",
        "MANUAL"
      ],
      "type": "string"
    },
    "String": {
      "maxLength": 2048,
      "minLength": 0,
      "pattern": ".*",
      "type": "string"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "TagMap": {
      "additionalProperties": {
        "$ref": "#/definitions/TagValue"
      },
      "maxProperties": 50,
      "minProperties": 0,
      "type": "object"
    },
    "TagResourceRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": " The tags to be associated with the resource. "
            }
          ]
        }
      },
      "required": [
        "tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "TagValue": {
      "maxLength": 256,
      "minLength": 0,
      "pattern": ".{0,255}",
      "type": "string"
    },
    "TestingInformation": {
      "maxLength": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "TimestampUUID": {
      "maxLength": 50,
      "minLength": 47,
      "pattern": "^[0-9]{10,13}_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
      "type": "string"
    },
    "Token": {
      "maxLength": 1000,
      "minLength": 1,
      "pattern": "^[A-Za-z0-9+\\/=]*$",
      "type": "string"
    },
    "TroubleshootingText": {
      "maxLength": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "URL": {
      "description": " A uniform resource locator, used as a unique identifier to locate a resource on the internet. ",
      "properties": {
        "hyperlinkName": {
          "allOf": [
            {
              "$ref": "#/definitions/HyperlinkName"
            },
            {
              "description": " The name or word used as a hyperlink to the URL. "
            }
          ]
        },
        "link": {
          "allOf": [
            {
              "$ref": "#/definitions/UrlLink"
            },
            {
              "description": " The unique identifier for the internet resource. "
            }
          ]
        }
      },
      "type": "object"
    },
    "UUID": {
      "maxLength": 36,
      "minLength": 36,
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
      "type": "string"
    },
    "UntagResourceRequest": {
      "properties": {},
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UntagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateAssessmentControlRequest": {
      "properties": {
        "commentBody": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlCommentBody"
            },
            {
              "description": " The comment body text for the specified control. "
            }
          ]
        },
        "controlStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlStatus"
            },
            {
              "description": " The status of the specified control. "
            }
          ]
        }
      },
      "title": "UpdateAssessmentControlRequest",
      "type": "object"
    },
    "UpdateAssessmentControlResponse": {
      "properties": {
        "control": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentControl"
            },
            {
              "description": " The name of the updated control set returned by the <code>UpdateAssessmentControl</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateAssessmentControlSetStatusRequest": {
      "properties": {
        "comment": {
          "allOf": [
            {
              "$ref": "#/definitions/DelegationComment"
            },
            {
              "description": " The comment related to the status update. "
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetStatus"
            },
            {
              "description": " The status of the control set that is being updated. "
            }
          ]
        }
      },
      "required": [
        "status",
        "comment"
      ],
      "title": "UpdateAssessmentControlSetStatusRequest",
      "type": "object"
    },
    "UpdateAssessmentControlSetStatusResponse": {
      "properties": {
        "controlSet": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentControlSet"
            },
            {
              "description": " The name of the updated control set returned by the <code>UpdateAssessmentControlSetStatus</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateAssessmentFrameworkControlSet": {
      "description": " A <code>controlSet</code> entity that represents a collection of controls in AWS Audit Manager. This does not contain the control set ID. ",
      "properties": {
        "controls": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateAssessmentFrameworkControls"
            },
            {
              "description": " The list of controls contained within the control set. "
            }
          ]
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            },
            {
              "description": " The unique identifier for the control set. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlSetName"
            },
            {
              "description": " The name of the control set. "
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateAssessmentFrameworkControlSets": {
      "items": {
        "$ref": "#/definitions/UpdateAssessmentFrameworkControlSet"
      },
      "type": "array"
    },
    "UpdateAssessmentFrameworkRequest": {
      "properties": {
        "complianceType": {
          "allOf": [
            {
              "$ref": "#/definitions/ComplianceType"
            },
            {
              "description": " The compliance type that the new custom framework supports, such as CIS or HIPAA. "
            }
          ]
        },
        "controlSets": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateAssessmentFrameworkControlSets"
            },
            {
              "description": " The control sets associated with the framework. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkDescription"
            },
            {
              "description": " The description of the framework that is to be updated. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/FrameworkName"
            },
            {
              "description": " The name of the framework to be updated. "
            }
          ]
        }
      },
      "required": [
        "name",
        "controlSets"
      ],
      "title": "UpdateAssessmentFrameworkRequest",
      "type": "object"
    },
    "UpdateAssessmentFrameworkResponse": {
      "properties": {
        "framework": {
          "allOf": [
            {
              "$ref": "#/definitions/Framework"
            },
            {
              "description": " The name of the specified framework. "
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateAssessmentRequest": {
      "properties": {
        "assessmentDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentDescription"
            },
            {
              "description": " The description of the specified assessment. "
            }
          ]
        },
        "assessmentName": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentName"
            },
            {
              "description": " The name of the specified assessment to be updated. "
            }
          ]
        },
        "assessmentReportsDestination": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportsDestination"
            },
            {
              "description": " The assessment report storage destination for the specified assessment that is being updated. "
            }
          ]
        },
        "roles": {
          "allOf": [
            {
              "$ref": "#/definitions/Roles"
            },
            {
              "description": " The list of roles for the specified assessment. "
            }
          ]
        },
        "scope": {
          "allOf": [
            {
              "$ref": "#/definitions/Scope"
            },
            {
              "description": " The scope of the specified assessment. "
            }
          ]
        }
      },
      "required": [
        "scope"
      ],
      "title": "UpdateAssessmentRequest",
      "type": "object"
    },
    "UpdateAssessmentResponse": {
      "properties": {
        "assessment": {
          "allOf": [
            {
              "$ref": "#/definitions/Assessment"
            },
            {
              "description": " The response object (name of the updated assessment) for the <code>UpdateAssessmentRequest</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateAssessmentStatusRequest": {
      "properties": {
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentStatus"
            },
            {
              "description": " The current status of the specified assessment. "
            }
          ]
        }
      },
      "required": [
        "status"
      ],
      "title": "UpdateAssessmentStatusRequest",
      "type": "object"
    },
    "UpdateAssessmentStatusResponse": {
      "properties": {
        "assessment": {
          "allOf": [
            {
              "$ref": "#/definitions/Assessment"
            },
            {
              "description": " The name of the updated assessment returned by the <code>UpdateAssessmentStatus</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateControlRequest": {
      "properties": {
        "actionPlanInstructions": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionPlanInstructions"
            },
            {
              "description": " The recommended actions to carry out if the control is not fulfilled. "
            }
          ]
        },
        "actionPlanTitle": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionPlanTitle"
            },
            {
              "description": " The title of the action plan for remediating the control. "
            }
          ]
        },
        "controlMappingSources": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlMappingSources"
            },
            {
              "description": " The data source that determines from where AWS Audit Manager collects evidence for the control. "
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlDescription"
            },
            {
              "description": " The optional description of the control. "
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlName"
            },
            {
              "description": " The name of the control to be updated. "
            }
          ]
        },
        "testingInformation": {
          "allOf": [
            {
              "$ref": "#/definitions/TestingInformation"
            },
            {
              "description": " The steps that to follow to determine if the control has been satisfied. "
            }
          ]
        }
      },
      "required": [
        "name",
        "controlMappingSources"
      ],
      "title": "UpdateControlRequest",
      "type": "object"
    },
    "UpdateControlResponse": {
      "properties": {
        "control": {
          "allOf": [
            {
              "$ref": "#/definitions/Control"
            },
            {
              "description": " The name of the updated control set returned by the <code>UpdateControl</code> API. "
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateSettingsRequest": {
      "properties": {
        "defaultAssessmentReportsDestination": {
          "allOf": [
            {
              "$ref": "#/definitions/AssessmentReportsDestination"
            },
            {
              "description": " The default storage destination for assessment reports. "
            }
          ]
        },
        "defaultProcessOwners": {
          "allOf": [
            {
              "$ref": "#/definitions/Roles"
            },
            {
              "description": " A list of the default audit owners. "
            }
          ]
        },
        "kmsKey": {
          "allOf": [
            {
              "$ref": "#/definitions/KmsKey"
            },
            {
              "description": " The AWS KMS key details. "
            }
          ]
        },
        "snsTopic": {
          "allOf": [
            {
              "$ref": "#/definitions/SnsArn"
            },
            {
              "description": " The Amazon Simple Notification Service (Amazon SNS) topic to which AWS Audit Manager sends notifications. "
            }
          ]
        }
      },
      "title": "UpdateSettingsRequest",
      "type": "object"
    },
    "UpdateSettingsResponse": {
      "properties": {
        "settings": {
          "allOf": [
            {
              "$ref": "#/definitions/Settings"
            },
            {
              "description": " The current list of settings. "
            }
          ]
        }
      },
      "type": "object"
    },
    "UrlLink": {
      "maxLength": 8192,
      "minLength": 1,
      "pattern": "^(https?:\\/\\/)?(www\\.)?[a-zA-Z0-9-_]+([\\.]+[a-zA-Z]+)+[\\/\\w]*$",
      "type": "string"
    },
    "Username": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9-_()\\s\\+=,.@]+$",
      "type": "string"
    },
    "ValidateAssessmentReportIntegrityRequest": {
      "properties": {
        "s3RelativePath": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Url"
            },
            {
              "description": " The relative path of the specified Amazon S3 bucket in which the assessment report is stored. "
            }
          ]
        }
      },
      "required": [
        "s3RelativePath"
      ],
      "title": "ValidateAssessmentReportIntegrityRequest",
      "type": "object"
    },
    "ValidateAssessmentReportIntegrityResponse": {
      "properties": {
        "signatureAlgorithm": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The signature algorithm used to code sign the assessment report file. "
            }
          ]
        },
        "signatureDateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The date and time signature that specifies when the assessment report was created. "
            }
          ]
        },
        "signatureKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": " The unique identifier for the validation signature key. "
            }
          ]
        },
        "signatureValid": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": " Specifies whether the signature key is valid. "
            }
          ]
        },
        "validationErrors": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidationErrors"
            },
            {
              "description": " Represents any errors that occurred when validating the assessment report. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ValidationErrors": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "ValidationException": {},
    "organizationId": {
      "maxLength": 34,
      "minLength": 12,
      "pattern": "o-[a-z0-9]{10,32}",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/auditmanager/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}