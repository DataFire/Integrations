{
  "swagger": "2.0",
  "info": {
    "title": "Bhagavad Gita API",
    "version": "1.0",
    "x-apisguru-categories": [
      "open_data"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_bhagavadgita.io_static_images_radhakrishna.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "http://bhagavadgita.io/apispec_1.json",
        "version": "2.0"
      },
      {
        "format": "openapi",
        "url": "http://bhagavadgita.io/apispec_1.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "bhagavadgita.io",
    "x-datafire": {
      "name": "bhagavadgita",
      "type": "openapi"
    }
  },
  "paths": {
    "/api/v1/chapters": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Your app's access token.",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Language to query. Leave blank for english.",
            "enum": [
              "hi"
            ],
            "in": "query",
            "name": "language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Everything worked as expected.",
            "schema": {
              "$ref": "#/definitions/ChapterSchema"
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable due to wrong parameter(s)."
          },
          "401": {
            "description": "Unauthorized: Invalid access_token used."
          },
          "402": {
            "description": "Request Failed."
          },
          "500": {
            "description": "Server Error: Something went wrong on our end."
          }
        },
        "tags": [
          "chapter"
        ],
        "description": "Get a list of all the 18 Chapters of the Bhagavad Gita.<br/>",
        "summary": "Get all the 18 Chapters of the Bhagavad Gita."
      }
    },
    "/api/v1/chapters/{chapter_number}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Your app's access token.",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "default": 1,
            "description": "Which Chapter Number to filter?",
            "enum": [
              1,
              2,
              3
            ],
            "in": "path",
            "name": "chapter_number",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Language to query. Leave blank for english.",
            "enum": [
              "hi"
            ],
            "in": "query",
            "name": "language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Everything worked as expected.",
            "schema": {
              "$ref": "#/definitions/ChapterSchema"
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable due to wrong parameter(s)."
          },
          "401": {
            "description": "Unauthorized: Invalid access_token used."
          },
          "402": {
            "description": "Request Failed."
          },
          "404": {
            "description": "Not Found: The chapter number you are looking for could not be found."
          },
          "500": {
            "description": "Server Error: Something went wrong on our end."
          }
        },
        "tags": [
          "chapter"
        ],
        "description": "Get information about a specific chapter from the Bhagavad Gita.<br/>",
        "summary": "Get a specific chapter from the Bhagavad Gita."
      }
    },
    "/api/v1/chapters/{chapter_number}/verses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Your app's access token.",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "default": 1,
            "description": "Which Chapter Number to filter?",
            "enum": [
              1,
              2,
              3
            ],
            "in": "path",
            "name": "chapter_number",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Language to query. Leave blank for english.",
            "enum": [
              "hi"
            ],
            "in": "query",
            "name": "language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Everything worked as expected.",
            "schema": {
              "$ref": "#/definitions/VerseSchema"
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable due to wrong parameter(s)."
          },
          "401": {
            "description": "Unauthorized: Invalid access_token used."
          },
          "402": {
            "description": "Request Failed."
          },
          "404": {
            "description": "Not Found: The chapter number you are looking for could not be found."
          },
          "500": {
            "description": "Server Error: Something went wrong on our end."
          }
        },
        "tags": [
          "verse"
        ],
        "description": "Get a list of all Verses from a particular Chapter.<br/>",
        "summary": "Get all the Verses from a Chapter."
      }
    },
    "/api/v1/chapters/{chapter_number}/verses/{verse_number}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Your app's access token.",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "default": 1,
            "description": "Which Chapter Number to filter?",
            "enum": [
              1,
              2,
              3
            ],
            "in": "path",
            "name": "chapter_number",
            "required": true,
            "type": "integer"
          },
          {
            "default": 1,
            "description": "Which Verse Number to filter?",
            "enum": [
              1,
              2,
              3
            ],
            "in": "path",
            "name": "verse_number",
            "required": true,
            "type": "string"
          },
          {
            "description": "Language to query. Leave blank for english.",
            "enum": [
              "hi"
            ],
            "in": "query",
            "name": "language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Everything worked as expected.",
            "schema": {
              "$ref": "#/definitions/VerseSchema"
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable due to wrong parameter(s)."
          },
          "401": {
            "description": "Unauthorized: Invalid access_token used."
          },
          "402": {
            "description": "Request Failed."
          },
          "404": {
            "description": "Not Found: The chapter/verse number you are looking for could not be found."
          },
          "500": {
            "description": "Server Error: Something went wrong on our end."
          }
        },
        "tags": [
          "verse"
        ],
        "description": "Get a specific verse from a specific chapter.<br/>",
        "summary": "Get a particular verse from a chapter."
      }
    },
    "/api/v1/verses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Your app's access token.",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Language to query. Leave blank for english.",
            "enum": [
              "hi"
            ],
            "in": "query",
            "name": "language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Everything worked as expected.",
            "schema": {
              "$ref": "#/definitions/VerseSchema"
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable due to wrong parameter(s)."
          },
          "401": {
            "description": "Unauthorized: Inavlid access_token used."
          },
          "402": {
            "description": "Request Failed."
          },
          "500": {
            "description": "Server Error: Something went wrong on our end."
          }
        },
        "tags": [
          "verse"
        ],
        "description": "Get a list of all Verses.<br/>",
        "summary": "Get all the Verses."
      }
    },
    "/auth/oauth/token": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Your app's client_id. Get from API dashboard.",
            "in": "formData",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Your app's client_secret. Get from API dashboard.",
            "in": "formData",
            "name": "client_secret",
            "required": true,
            "type": "string"
          },
          {
            "default": "client_credentials",
            "description": "Grant Type.",
            "in": "formData",
            "name": "grant_type",
            "required": true,
            "type": "string"
          },
          {
            "default": "verse chapter",
            "description": "The resources that you would like to access.",
            "in": "formData",
            "name": "scope",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success: Everything worked as expected."
          },
          "400": {
            "description": "Bad Request: The request was unacceptable due to wrong parameter(s)."
          },
          "401": {
            "description": "Unauthorized: Invalid access_token used."
          },
          "402": {
            "description": "Request Failed."
          },
          "500": {
            "description": "Server Error: Something went wrong on our end."
          }
        },
        "tags": [
          "auth"
        ],
        "summary": "Send client credentials and get an access token."
      }
    }
  },
  "definitions": {
    "ChapterSchema": {
      "properties": {
        "chapter_number": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "chapter_summary": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "name_meaning": {
          "type": "string",
          "x-nullable": true
        },
        "name_translation": {
          "type": "string",
          "x-nullable": true
        },
        "name_transliterated": {
          "type": "string",
          "x-nullable": true
        },
        "verses_count": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "VerseSchema": {
      "properties": {
        "meaning": {
          "type": "string",
          "x-nullable": true
        },
        "text": {
          "type": "string",
          "x-nullable": true
        },
        "transliteration": {
          "type": "string",
          "x-nullable": true
        },
        "verse_number": {
          "type": "string",
          "x-nullable": true
        },
        "word_meanings": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    }
  },
  "x-components": {}
}