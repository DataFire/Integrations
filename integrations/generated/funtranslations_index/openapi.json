{
  "swagger": "2.0",
  "schemes": [
    "http"
  ],
  "host": "api.funtranslations.com",
  "info": {
    "contact": {
      "name": "Fun Translations",
      "url": "http://funtranslations.com/",
      "x-twitter": "funtranslate"
    },
    "description": "Funtranslations API gives access to the full set of translations available at funtranslations.com so that you can integrate them in your workflow or an app. [Click here to get details and subscribe](http://funtranslations.com/api) . Here are the individual API links:\n\n  ## Morse code API ##\n  Morse code conversion API on the cloud. Translate to and from Morse Code.[Click here to subscribe](http://funtranslations.com/api/morse)\n  ## Braille API ##\n  Braille conversion API on the cloud. Translate to Braille and get Braille results suitable for many display types.[Click here to subscribe](http://funtranslations.com/api/braille)     \n  ## Starwars Translation API ##\n  Ever wonder how to talk like Yoda? Well, use our API and let your APP/webpage speak like Yoda too.[Click here to subscribe](http://funtranslations.com/api/yoda)  \n  \n  Sith Translator API. [Click here to subscribe](http://funtranslations.com/api/sith) \n  \n  Cheunh Translator API. [Click here to subscribe](http://funtranslations.com/api/cheunh) \n  \n  Huttese Translator API. [Click here to subscribe](http://funtranslations.com/api/huttese)\n  \n  Mandalorian Translator API. [Click here to subscribe](http://funtranslations.com/api/mandalorian)\n  \n  Gungan Translator API. [Click here to subscribe](http://funtranslations.com/api/gungan)\n  \n  ## Pirate Speak Translation API ##\n  Ahoy, matey. Let's get those land lubbers speak our tounge too! Our evergreen pirate speak tranlsator API.[Click here to subscribe](http://funtranslations.com/api/pirate) \n  ## Valley Speak Translation API ##\n  Our throwback Valspeak translations API.[Click here to subscribe](http://funtranslations.com/api/valspeak)    \n  ## Minion Speak Translation API ##\n  Our evil master following minion speak translations API.[Click here to subscribe](http://funtranslations.com/api/minion)     \n",
    "termsOfService": "https://funtranslations.com/terms",
    "title": "FunTranslations API",
    "version": "2.3",
    "x-apisguru-categories": [
      "text"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_funtranslate_profile_image.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "http://api.funtranslations.com/yaml/funtranslations.yaml",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "funtranslations.com",
    "x-serviceName": "index",
    "x-datafire": {
      "name": "funtranslations_index",
      "type": "openapi"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "application/xml",
    "application/js"
  ],
  "securityDefinitions": {
    "X-Funtranslations-Api-Secret": {
      "in": "header",
      "name": "X-Funtranslations-Api-Secret",
      "type": "apiKey"
    }
  },
  "tags": [
    {
      "description": "Morse Code Translation API",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://funtranslations.com/api/morse"
      },
      "name": "Morse"
    },
    {
      "description": "Starwars Translation API",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://funtranslations.com/api/yoda"
      },
      "name": "Starwars"
    },
    {
      "description": "Startrek Translation API",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://funtranslations.com/api/yoda"
      },
      "name": "Startrek"
    },
    {
      "description": "Pirate Speak Translation API",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://funtranslations.com/api/pirate"
      },
      "name": "Pirate"
    },
    {
      "description": "Valley Speak Translation API",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://funtranslations.com/api/valspeak"
      },
      "name": "Valspeak"
    },
    {
      "description": "Braille Translation API",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://funtranslations.com/api/braille"
      },
      "name": "Braille"
    },
    {
      "description": "Minion Translation API",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://funtranslations.com/api/minion"
      },
      "name": "Minion"
    }
  ],
  "paths": {
    "/translate/braille": {
      "get": {
        "description": "Translate from English to Braille. This is what you use if you have a braille display. This API translates the English text into characters that a braille display understands and you can feed the translated text directly to the display.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": {\n        \"translated\": \"  ,fun ,transl,ns has \\\"s?+ =\\r\\n\\\"ey\\\"o4\\r\\n\",\n        \"text\": \"Fun Translations has something for everyone.\",\n        \"translation\": {\n            \"source\": \"english\",\n            \"destination\": \"braille display\"\n        }\n    }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}    "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Braille"
        ],
        "operationId": "translate.braille.get"
      }
    },
    "/translate/braille/dots": {
      "get": {
        "description": "Use this to see which dots are enabled for each Braille letters. This is highly educational (to see which dots are enabled) and can potentially drive a non braille display which works on individual dots.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": {\n        \"translated\": [\n            \"none\",\n            \"none\",\n            \"6\",\n            \"124\",\n            \"136\",\n            \"1345\",\n            \"none\",\n            \"6\",\n            \"2345\",\n            \"1235\",\n            \"1\",\n            \"1345\",\n            \"234\",\n            \"123\",\n            \"6\",\n            \"1345\",\n            \"234\",\n            \"none\",\n            \"125\",\n            \"1\",\n            \"234\",\n            \"none\",\n            \"5\",\n            \"234\",\n            \"1456\",\n            \"346\",\n            \"none\",\n            \"123456\",\n            \"\\r\",\n            \"\\n\",\n            \"5\",\n            \"15\",\n            \"13456\",\n            \"5\",\n            \"135\",\n            \"256\",\n            \"\\r\",\n            \"\\n\"\n        ],\n        \"text\": \"Fun Translations has something for everyone.\",\n        \"translation\": {\n            \"source\": \"english\",\n            \"destination\": \"braille dots\"\n        }\n    }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}        "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Braille"
        ],
        "operationId": "translate.braille.dots.get"
      }
    },
    "/translate/braille/html": {
      "get": {
        "description": "Translate from English to Braille Image characters. This is probably what you want to use if you are displaying braille in a browser.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": {\n        \"translated\": [\n            \"&#x2800;\",\n            \"&#x2800;\",\n            \"&#x2820;\",\n            \"&#x280b;\",\n            \"&#x2825;\",\n            \"&#x281d;\",\n            \"&#x2800;\",\n            \"&#x2820;\",\n            \"&#x281e;\",\n            \"&#x2817;\",\n            \"&#x2801;\",\n            \"&#x281d;\",\n            \"&#x280e;\",\n            \"&#x2807;\",\n            \"&#x2820;\",\n            \"&#x281d;\",\n            \"&#x280e;\",\n            \"&#x2800;\",\n            \"&#x2813;\",\n            \"&#x2801;\",\n            \"&#x280e;\",\n            \"&#x2800;\",\n            \"&#x2810;\",\n            \"&#x280e;\",\n            \"&#x2839;\",\n            \"&#x282c;\",\n            \"&#x2800;\",\n            \"&#x283f;\",\n            \"\\r\",\n            \"\\n\",\n            \"&#x2810;\",\n            \"&#x2811;\",\n            \"&#x283d;\",\n            \"&#x2810;\",\n            \"&#x2815;\",\n            \"&#x2832;\",\n            \"\\r\",\n            \"\\n\"\n        ],\n        \"text\": \"Fun Translations has something for everyone.\",\n        \"translation\": {\n            \"source\": \"english\",\n            \"destination\": \"braille html\"\n        }\n    }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}                                            "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Braille"
        ],
        "operationId": "translate.braille.html.get"
      }
    },
    "/translate/braille/image": {
      "get": {
        "description": "Translate from English to Braille image characters. This is probably what you want to use if you are displaying braille in a browser.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": {\n        \"translated\": [\n            \"<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/20.gif' alt='char 0x2820 = &#x2820;' title='char 0x2820 = &#x2820;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/0b.gif' alt='char 0x280b = &#x280b;' title='char 0x280b = &#x280b;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/25.gif' alt='char 0x2825 = &#x2825;' title='char 0x2825 = &#x2825;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/1d.gif' alt='char 0x281d = &#x281d;' title='char 0x281d = &#x281d;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/20.gif' alt='char 0x2820 = &#x2820;' title='char 0x2820 = &#x2820;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/1e.gif' alt='char 0x281e = &#x281e;' title='char 0x281e = &#x281e;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/17.gif' alt='char 0x2817 = &#x2817;' title='char 0x2817 = &#x2817;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/01.gif' alt='char 0x2801 = &#x2801;' title='char 0x2801 = &#x2801;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/1d.gif' alt='char 0x281d = &#x281d;' title='char 0x281d = &#x281d;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/0e.gif' alt='char 0x280e = &#x280e;' title='char 0x280e = &#x280e;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/07.gif' alt='char 0x2807 = &#x2807;' title='char 0x2807 = &#x2807;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/20.gif' alt='char 0x2820 = &#x2820;' title='char 0x2820 = &#x2820;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/1d.gif' alt='char 0x281d = &#x281d;' title='char 0x281d = &#x281d;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/0e.gif' alt='char 0x280e = &#x280e;' title='char 0x280e = &#x280e;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/13.gif' alt='char 0x2813 = &#x2813;' title='char 0x2813 = &#x2813;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/01.gif' alt='char 0x2801 = &#x2801;' title='char 0x2801 = &#x2801;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/0e.gif' alt='char 0x280e = &#x280e;' title='char 0x280e = &#x280e;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/10.gif' alt='char 0x2810 = &#x2810;' title='char 0x2810 = &#x2810;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/0e.gif' alt='char 0x280e = &#x280e;' title='char 0x280e = &#x280e;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/39.gif' alt='char 0x2839 = &#x2839;' title='char 0x2839 = &#x2839;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/2c.gif' alt='char 0x282c = &#x282c;' title='char 0x282c = &#x282c;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/3f.gif' alt='char 0x283f = &#x283f;' title='char 0x283f = &#x283f;' class='img-braille-char'>\",\n            \"\\r\",\n            \"\\n\",\n            \"<img src='http://funtranslations.com/img/braille/char/10.gif' alt='char 0x2810 = &#x2810;' title='char 0x2810 = &#x2810;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/11.gif' alt='char 0x2811 = &#x2811;' title='char 0x2811 = &#x2811;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/3d.gif' alt='char 0x283d = &#x283d;' title='char 0x283d = &#x283d;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/10.gif' alt='char 0x2810 = &#x2810;' title='char 0x2810 = &#x2810;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/15.gif' alt='char 0x2815 = &#x2815;' title='char 0x2815 = &#x2815;' class='img-braille-char'>\",\n            \"<img src='http://funtranslations.com/img/braille/char/32.gif' alt='char 0x2832 = &#x2832;' title='char 0x2832 = &#x2832;' class='img-braille-char'>\",\n            \"\\r\",\n            \"\\n\"\n        ],\n        \"text\": \"Fun Translations has something for everyone.\",\n        \"translation\": {\n            \"source\": \"english\",\n            \"destination\": \"braille images\"\n        }\n    }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Braille"
        ],
        "operationId": "translate.braille.image.get"
      }
    },
    "/translate/braille/unicode": {
      "get": {
        "description": "Translate from English to Braille Unicode characters.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": {\n        \"translated\": [\n            \"⠀\",\n            \"⠀\",\n            \"⠠\",\n            \"⠋\",\n            \"⠥\",\n            \"⠝\",\n            \"⠀\",\n            \"⠠\",\n            \"⠞\",\n            \"⠗\",\n            \"⠁\",\n            \"⠝\",\n            \"⠎\",\n            \"⠇\",\n            \"⠠\",\n            \"⠝\",\n            \"⠎\",\n            \"⠀\",\n            \"⠓\",\n            \"⠁\",\n            \"⠎\",\n            \"⠀\",\n            \"⠐\",\n            \"⠎\",\n            \"⠹\",\n            \"⠬\",\n            \"⠀\",\n            \"⠿\",\n            \"\\r\",\n            \"\\n\",\n            \"⠐\",\n            \"⠑\",\n            \"⠽\",\n            \"⠐\",\n            \"⠕\",\n            \"⠲\",\n            \"\\r\",\n            \"\\n\"\n        ],\n        \"text\": \"Fun Translations has something for everyone.\",\n        \"translation\": {\n            \"source\": \"english\",\n            \"destination\": \"braille unicode\"\n        }\n    }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}    "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Braille"
        ],
        "operationId": "translate.braille.unicode.get"
      }
    },
    "/translate/brooklyn": {
      "get": {
        "description": "Translate from English to Brooklyn Speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Where dis is lots of love dere is lots of fightin'.\",\n    \"text\": \"Where this is lots of love there is lots of fighting.\",\n    \"translation\": \"brooklyn\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Dialect"
        ],
        "operationId": "translate.brooklyn.get"
      }
    },
    "/translate/chef": {
      "get": {
        "description": "Translate from English to Swedish Chef speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Cuokeeng is fuon vhee-a yuou du it vit a cheff. Bork, Bork, Bork!\",\n    \"text\": \"Cooking is fun when you do it with a chef\",\n    \"translation\": \"chef\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Characters"
        ],
        "operationId": "translate.chef.get"
      }
    },
    "/translate/cheunh": {
      "get": {
        "description": "Translate from English to Starwars cheunh.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Ch'ah went ch'at coruscant vea was bav parsec ch'itt'suvrecah!\",\n    \"text\": \"I went to coruscant which was ten parsec away!\",\n    \"translation\": \"cheunh\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}   "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Starwars"
        ],
        "operationId": "translate.cheunh.get"
      }
    },
    "/translate/cockney": {
      "get": {
        "description": "Translate from English to Cockney Speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"I'm wee busy wiv the bleedin' bike, but I luv ter eat the chuffin' food.\",\n    \"text\": \"I'm little busy with the bike, but I love to eat the food.\",\n    \"translation\": \"cockney\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Dialect"
        ],
        "operationId": "translate.cockney.get"
      }
    },
    "/translate/dolan": {
      "get": {
        "description": "Translate from English to Dolan Speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Ai hav 2 gievn prezintashun 2 ppl.\",\n    \"text\": \"I have to give a presentation to people.\",\n    \"translation\": \"dolan\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Characters"
        ],
        "operationId": "translate.dolan.get"
      }
    },
    "/translate/dothraki": {
      "get": {
        "description": "Translate from English to Dothraki.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Hash yeri ray tih erinak’s zhavorsa?\",\n    \"text\": \"Have you seen my lady’s dragon?\",\n    \"translation\": \"dothraki\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Game Of Thrones"
        ],
        "operationId": "translate.dothraki.get"
      }
    },
    "/translate/ermahgerd": {
      "get": {
        "description": "Translate from English to ERMAHGERD.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \" ER MAH GERD THERS ERS GERVIN MAH GERSERBERMPS\",\n    \"text\": \"Oh my god! This is giving me goosebumps!\",\n    \"translation\": \"ermahgerd\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}                                                                                "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Internet FAD"
        ],
        "operationId": "translate.ermahgerd.get"
      }
    },
    "/translate/ferblatin": {
      "get": {
        "description": "Translate from English to Ferb Latin.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"ell-Werb, if by hat-terb ou-yerb ean-merb we hould-serb reate-cerb a hole-werb ew-nerb orm-ferb of ommunication-cerb, hen-terb I couldn't gree-aerb more. \",\n    \"text\": \"Well, if by that you mean we should create a whole new form of communication, then I couldn't agree more.\",\n    \"translation\": \"ferblatin\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}            "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Characters"
        ],
        "operationId": "translate.ferblatin.get"
      }
    },
    "/translate/fudd": {
      "get": {
        "description": "Translate from English to Fudd Speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Be vewy vewy qwiet. I am hunting wabbits.\",\n    \"text\": \"Be very very quiet. I am hunting rabbits.\",\n    \"translation\": \"fudd\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}                   "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Characters"
        ],
        "operationId": "translate.fudd.get"
      }
    },
    "/translate/gungan": {
      "get": {
        "description": "Translate from English to Starwars Gungan Language.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Yousa came to mesa home and mesa said okeeday!\",\n    \"text\": \"You came to my home and I said okay!\",\n    \"translation\": \"gungan\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Starwars"
        ],
        "operationId": "translate.gungan.get"
      }
    },
    "/translate/huttese": {
      "get": {
        "description": "Translate from English to Starwars Huttese Language.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Did u stuka doe murishani?\",\n    \"text\": \"Did you see the bounty hunter?\",\n    \"translation\": \"huttese\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Starwars"
        ],
        "operationId": "translate.huttese.get"
      }
    },
    "/translate/jive": {
      "get": {
        "description": "Translate from normal English to Jive Speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"I likes da damn boy across de street.  Right On!\",\n    \"text\": \"I like the boy across the street!\",\n    \"translation\": \"jive\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}       "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Dialect"
        ],
        "operationId": "translate.jive.get"
      }
    },
    "/translate/klingon": {
      "get": {
        "description": "Translate from English to Startrek Klingon Language.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"'iv do tlhih baj? Chah are going to baq tlhih.\",\n    \"text\": \"Who do you work for? They are going to terminate you.\",\n    \"translation\": \"klingon\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Startrek"
        ],
        "operationId": "translate.klingon.get"
      }
    },
    "/translate/mandalorian": {
      "get": {
        "description": "Translate from English to Starwars Mandalorian Language.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Ni'd guuror a pint cuyir gal\",\n    \"text\": \"I'd like a pint of ale\",\n    \"translation\": \"mandalorian\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Starwars"
        ],
        "operationId": "translate.mandalorian.get"
      }
    },
    "/translate/minion": {
      "get": {
        "description": "Translate from English to Minion Speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Bello, ka am con a banana!\",\n    \"text\": \"Hello, I am hungry!\",\n    \"translation\": \"minion\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}     "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Characters"
        ],
        "operationId": "translate.minion.get"
      }
    },
    "/translate/morse": {
      "get": {
        "description": "Translate from English to morse code.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"-- --- .-. ... .     -.-. --- -.. .     .. ...     .-     -.. .. -     .- -. -..     -.. .- .... \",\n    \"text\": \"Morse code is a dit and dah\",\n    \"translation\": \"morse\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Morse"
        ],
        "operationId": "translate.morse.get"
      }
    },
    "/translate/morse/audio": {
      "get": {
        "description": "Translate from English to morse code and get the result as an audio file.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          },
          {
            "description": "Audio Speed (Words/Minute)",
            "format": "integer",
            "in": "query",
            "name": "speed",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Audio Tone Frequency(Hz)",
            "format": "integer",
            "in": "query",
            "name": "tone",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": {\n        \"translated\": {\n            \"audio\": \"data:audio/wave;base64,UklGRjiBCQBXQVZFZm1...\n        },\n        \"text\": \"Morse code is dit and dash\",\n        \"speed\": \"5 WPM\",\n        \"tone\": \"700 Hz\",\n        \"translation\": {\n            \"source\": \"english\",\n            \"destination\": \"morse audio\"\n        }\n    }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Morse"
        ],
        "operationId": "translate.morse.audio.get"
      }
    },
    "/translate/morse2english": {
      "get": {
        "description": "Translate from Morse code to English.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n    \"success\": {\n        \"total\": 1\n    },\n    \"contents\": {\n        \"translated\": \"morse    code    is    a    dit    and    dah \",\n        \"text\": \"-- --- .-. ... .     -.-. --- -.. .     .. ...     .-     -.. .. -     .- -. -..     -.. .- .... \",\n        \"translation\": {\n            \"source\": \"morse\",\n            \"destination\": \"english\"\n        }\n    }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Morse"
        ],
        "operationId": "translate.morse2english.get"
      }
    },
    "/translate/oldenglish": {
      "get": {
        "description": "Translate from English to Old English.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \" {Mr}. {Tim} {ate} bâm innor feorm, for ðý ðe {unfortunately} {what} swilc {ate} sw¯ær of hê oðcwelan.\",\n    \"text\": \"Mr. Tim ate a hearty meal, but unfortunately what he ate made him die.\",\n    \"translation\": \"oldenglish\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}  "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "English"
        ],
        "operationId": "translate.oldenglish.get"
      }
    },
    "/translate/piglatin": {
      "get": {
        "description": "Translate from English to Pig Latin.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"ig-Pay atin-Lay is-way used-way in-way ools-schay o-tay each-tay anguage-lay onstructs-cay. \",\n    \"text\": \"Pig Latin is used in schools to teach language constructs.\",\n    \"translation\": \"piglatin\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}              "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "PigLatin"
        ],
        "operationId": "translate.piglatin.get"
      }
    },
    "/translate/pirate": {
      "get": {
        "description": "Translate from English to Pirate Speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Ahoy matey, and a bottle of rum! me dear ol' mum, bless her black soul goes with me t' th' briny deep.\",\n    \"text\": \"Hello sir! my mother goes with me to the ocean.\",\n    \"translation\": \"pirate\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Characters"
        ],
        "operationId": "translate.pirate.get"
      }
    },
    "/translate/quneya": {
      "get": {
        "description": "Translate from English to Elvish Quenya Language.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Ni am Arwen - ni've túl ana help tye. Lar- mime óma. Túl at- ana i kal.\",\n    \"text\": \"I am Arwen - I've come to help you. Hear my voice... Come back to the light.\",\n    \"translation\": \"quenya\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}                       "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Elvish"
        ],
        "operationId": "translate.quneya.get"
      }
    },
    "/translate/shakespeare": {
      "get": {
        "description": "Translate from English to Shakespeare English.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Thou did giveth Mr. Tim a hearty meal,  but unfortunately what he englut did maketh him kicketh the bucket.\",\n    \"text\": \"You gave Mr. Tim a hearty meal, but unfortunately what he ate made him die.\",\n    \"translation\": \"shakespeare\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "English"
        ],
        "operationId": "translate.shakespeare.get"
      }
    },
    "/translate/sindarin": {
      "get": {
        "description": "Translate from English to Elvish Sindarin Language.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"I ambar na- changed; im tur- feel ha in i nen,  im tur- feel ha in i coe,  im tur- smell ha in i gwilith.\",\n    \"text\": \"The world is changed; I can feel it in the water, I can feel it in the earth, I can smell it in the air.\",\n    \"translation\": \"sindarin\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}  "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Elvish"
        ],
        "operationId": "translate.sindarin.get"
      }
    },
    "/translate/sith": {
      "get": {
        "description": "Translate from English to Sith Speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Nu went kia coruscant which meo ten parsekas salini!\",\n    \"text\": \"I went to coruscant which was ten parsec away!\",\n    \"translation\": \"sith\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Starwars"
        ],
        "operationId": "translate.sith.get"
      }
    },
    "/translate/uk2us": {
      "get": {
        "description": "Translate from UK English to US English.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"The artifacts of the behavioral elements canceled the commercialized monotone.\",\n    \"text\": \"The artefacts of the behavioural elements cancelled the commercialised monotone.\",\n    \"translation\": \"uk2us\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}                                         "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "English"
        ],
        "operationId": "translate.uk2us.get"
      }
    },
    "/translate/us2uk": {
      "get": {
        "description": "Translate from US English to UK English.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"He agonised over the ageing armoured cars.\",\n    \"text\": \"He agonized over the aging armored cars.\",\n    \"translation\": \"us2uk\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}  "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "English"
        ],
        "operationId": "translate.us2uk.get"
      }
    },
    "/translate/valspeak": {
      "get": {
        "description": "Translate from English to Valley Speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Bitchin' Mornin'. Come on nerd, fer shure just sayin'\",\n    \"text\": \"Good Morning. Come on man, just saying!\",\n    \"translation\": \"valspeak\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Dialect"
        ],
        "operationId": "translate.valspeak.get"
      }
    },
    "/translate/valyrian": {
      "get": {
        "description": "Translate from English to Valyrian.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Nyke Daenerys jelmāzmo hen se lentor targārien,  hen se ānogar hen uēpa valyrio. Valyrīha iksos issa muñnykeā ēngos.\",\n    \"text\": \"I am Daenerys Stormborn of the House Targaryen, of the blood of Old Valyria. Valyrian is my mother tongue.\",\n    \"translation\": \"valyrian\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Game Of Thrones"
        ],
        "operationId": "translate.valyrian.get"
      }
    },
    "/translate/vulcan": {
      "get": {
        "description": "Translate from English to Startrek Vulcan Language.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Lau I leralmin ik I ma ri thoroughly tizh-tor serving k' komihn? I talal ish-veh illogic heh duhik zherka wuh ek'kayik ornat.\",\n    \"text\": \"May I say that I have not thoroughly enjoyed serving with humans? I find their illogic and foolish emotions a constant irritant.\",\n    \"translation\": \"vulcan\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}  "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Startrek"
        ],
        "operationId": "translate.vulcan.get"
      }
    },
    "/translate/yoda": {
      "get": {
        "description": "Translate from English to Yoda Speak.",
        "parameters": [
          {
            "description": "Text to translate",
            "format": "string",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "application/js"
        ],
        "responses": {
          "200": {
            "description": "200  response",
            "examples": {
              "application/json": "{\n  \"success\": {\n    \"total\": 1\n  },\n  \"contents\": {\n    \"translated\": \"Lost a planet,  master obiwan has. \",\n    \"text\": \"Master Obiwan has lost a planet.\",\n    \"translation\": \"yoda\"\n  }\n}"
            }
          },
          "401": {
            "description": "401  response",
            "examples": {
              "application/json": "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n} "
            }
          }
        },
        "security": [
          {
            "X-Funtranslations-Api-Secret": []
          }
        ],
        "tags": [
          "Starwars"
        ],
        "operationId": "translate.yoda.get"
      }
    }
  }
}