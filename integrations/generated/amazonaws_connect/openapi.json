{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>Amazon Connect is a cloud-based contact center solution that makes it easy to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides rich metrics and real-time reporting that allow you to optimize contact routing. You can also resolve customer issues more efficiently by putting customers in touch with the right agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create and limits to the number of requests that you can make per second. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>To connect programmatically to an AWS service, you use an endpoint. For a list of Amazon Connect endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/connect_region.html\">Amazon Connect Endpoints</a>.</p> <note> <p>Working with contact flows? Check out the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html\">Amazon Connect Flow language</a>.</p> </note>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Connect Service",
    "version": "2017-08-08",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/connect-2017-08-08.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "connect",
    "x-datafire": {
      "name": "amazonaws_connect",
      "type": "openapi"
    }
  },
  "host": "connect.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/contact-flows-summary/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The type of contact flow.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/ContactFlowType"
            },
            "maxItems": 10,
            "name": "contactFlowTypes",
            "required": false,
            "type": "array"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListContactFlowsResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Provides information about the contact flows for the specified Amazon Connect instance.</p> <p>You can also create and update contact flows using the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html\">Amazon Connect Flow language</a>.</p> <p>For more information about contact flows, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/concepts-contact-flows.html\">Contact Flows</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "ListContactFlows"
      }
    },
    "/contact-flows/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Content": {
                  "description": "The content of the contact flow. ",
                  "type": "string"
                },
                "Description": {
                  "description": "The description of the contact flow. ",
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the contact flow.",
                  "minLength": 1,
                  "type": "string"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "One or more tags.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                },
                "Type": {
                  "description": "The type of the contact flow. For descriptions of the available types, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types\">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator Guide</i>.",
                  "enum": [
                    "CONTACT_FLOW",
                    "CUSTOMER_QUEUE",
                    "CUSTOMER_HOLD",
                    "CUSTOMER_WHISPER",
                    "AGENT_HOLD",
                    "AGENT_WHISPER",
                    "OUTBOUND_WHISPER",
                    "AGENT_TRANSFER",
                    "QUEUE_TRANSFER"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "Name",
                "Type",
                "Content"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateContactFlowResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidContactFlowException",
            "schema": {
              "$ref": "#/definitions/InvalidContactFlowException"
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "483": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "486": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "487": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Creates a contact flow for the specified Amazon Connect instance.</p> <p>You can also create and update contact flows using the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html\">Amazon Connect Flow language</a>.</p>",
        "operationId": "CreateContactFlow"
      }
    },
    "/contact-flows/{InstanceId}/{ContactFlowId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the contact flow.",
            "in": "path",
            "maxLength": 500,
            "name": "ContactFlowId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeContactFlowResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ContactFlowNotPublishedException",
            "schema": {
              "$ref": "#/definitions/ContactFlowNotPublishedException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "485": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Describes the specified contact flow.</p> <p>You can also create and update contact flows using the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html\">Amazon Connect Flow language</a>.</p>",
        "operationId": "DescribeContactFlow"
      }
    },
    "/contact-flows/{InstanceId}/{ContactFlowId}/content": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the contact flow.",
            "in": "path",
            "maxLength": 500,
            "name": "ContactFlowId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Content": {
                  "description": "The JSON string that represents contact flow’s content. For an example, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/flow-language-example.html\">Example contact flow in Amazon Connect Flow language</a> in the <i>Amazon Connect Administrator Guide</i>. ",
                  "type": "string"
                }
              },
              "required": [
                "Content"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidContactFlowException",
            "schema": {
              "$ref": "#/definitions/InvalidContactFlowException"
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "485": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Updates the specified contact flow.</p> <p>You can also create and update contact flows using the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html\">Amazon Connect Flow language</a>.</p>",
        "operationId": "UpdateContactFlowContent"
      }
    },
    "/contact-flows/{InstanceId}/{ContactFlowId}/name": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the contact flow.",
            "in": "path",
            "maxLength": 500,
            "name": "ContactFlowId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Description": {
                  "description": "The description of the contact flow.",
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the contact flow.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "485": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>The name of the contact flow.</p> <p>You can also create and update contact flows using the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html\">Amazon Connect Flow language</a>.</p>",
        "operationId": "UpdateContactFlowName"
      }
    },
    "/contact/attributes": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Attributes": {
                  "additionalProperties": {
                    "$ref": "#/definitions/AttributeValue"
                  },
                  "description": "<p>The Amazon Connect attributes. These attributes can be accessed in contact flows just like any other contact attributes.</p> <p>You can have up to 32,768 UTF-8 bytes across all attributes for a contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>",
                  "type": "object"
                },
                "InitialContactId": {
                  "description": "The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "InstanceId": {
                  "description": "The identifier of the Amazon Connect instance.",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "InitialContactId",
                "InstanceId",
                "Attributes"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateContactAttributesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Creates or updates the contact attributes associated with the specified contact.</p> <p>You can add or update attributes for both ongoing and completed contacts. For example, you can update the customer's name or the reason the customer called while the call is active, or add notes about steps that the agent took during the call that are displayed to the next agent that takes the call. You can also update attributes for a contact using data from your CRM application and save the data with the contact in Amazon Connect. You could also flag calls for additional analysis, such as legal review or identifying abusive callers.</p> <p>Contact attributes are available in Amazon Connect for 24 months, and are then deleted.</p> <p> <b>Important:</b> You cannot use the operation to update attributes for contacts that occurred prior to the release of the API, September 12, 2018. You can update attributes only for contacts that started after the release of the API. If you attempt to update attributes for a contact that occurred prior to the release of the API, a 400 error is returned. This applies also to queued callbacks that were initiated prior to the release of the API but are still active in your instance.</p>",
        "operationId": "UpdateContactAttributes"
      }
    },
    "/contact/attributes/{InstanceId}/{InitialContactId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the initial contact.",
            "in": "path",
            "maxLength": 256,
            "minLength": 1,
            "name": "InitialContactId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetContactAttributesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Retrieves the contact attributes for the specified contact.",
        "operationId": "GetContactAttributes"
      }
    },
    "/contact/chat": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Attributes": {
                  "additionalProperties": {
                    "$ref": "#/definitions/AttributeValue"
                  },
                  "description": "<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes. </p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>",
                  "type": "object"
                },
                "ClientToken": {
                  "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
                  "maxLength": 500,
                  "type": "string"
                },
                "ContactFlowId": {
                  "description": "<p>The identifier of the contact flow for initiating the chat. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>",
                  "maxLength": 500,
                  "type": "string"
                },
                "InitialMessage": {
                  "description": "A chat message.",
                  "properties": {
                    "Content": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ChatContent"
                        },
                        {
                          "description": "The content of the chat message."
                        }
                      ]
                    },
                    "ContentType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ChatContentType"
                        },
                        {
                          "description": "The type of the content. Supported types are text/plain."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "InstanceId": {
                  "description": "The identifier of the Amazon Connect instance.",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                },
                "ParticipantDetails": {
                  "description": "The customer's details.",
                  "properties": {
                    "DisplayName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DisplayName"
                        },
                        {
                          "description": "Display name of the participant."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "InstanceId",
                "ContactFlowId",
                "ParticipantDetails"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartChatContactResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "<p>Initiates a contact flow to start a new chat for the customer. Response of this API provides a token required to obtain credentials from the <a href=\"https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html\">CreateParticipantConnection</a> API in the Amazon Connect Participant Service.</p> <p>When a new chat contact is successfully created, clients need to subscribe to the participant’s connection for the created chat within 5 minutes. This is achieved by invoking <a href=\"https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html\">CreateParticipantConnection</a> with WEBSOCKET and CONNECTION_CREDENTIALS. </p> <p>A 429 error occurs in two situations:</p> <ul> <li> <p>API rate limit is exceeded. API TPS throttling returns a <code>TooManyRequests</code> exception from the API Gateway.</p> </li> <li> <p>The <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">quota for concurrent active chats</a> is exceeded. Active chat throttling returns a <code>LimitExceededException</code>.</p> </li> </ul> <p>For more information about how chat works, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/chat.html\">Chat</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "StartChatContact"
      }
    },
    "/contact/outbound-voice": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Attributes": {
                  "additionalProperties": {
                    "$ref": "#/definitions/AttributeValue"
                  },
                  "description": "<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>",
                  "type": "object"
                },
                "ClientToken": {
                  "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. If the contact is disconnected, a new contact is started.",
                  "maxLength": 500,
                  "type": "string"
                },
                "ContactFlowId": {
                  "description": "<p>The identifier of the contact flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>",
                  "maxLength": 500,
                  "type": "string"
                },
                "DestinationPhoneNumber": {
                  "description": "The phone number of the customer, in E.164 format.",
                  "type": "string"
                },
                "InstanceId": {
                  "description": "The identifier of the Amazon Connect instance.",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                },
                "QueueId": {
                  "description": "The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.",
                  "type": "string"
                },
                "SourcePhoneNumber": {
                  "description": "The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.",
                  "type": "string"
                }
              },
              "required": [
                "DestinationPhoneNumber",
                "ContactFlowId",
                "InstanceId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartOutboundVoiceContactResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "DestinationNotAllowedException",
            "schema": {
              "$ref": "#/definitions/DestinationNotAllowedException"
            }
          },
          "486": {
            "description": "OutboundContactNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OutboundContactNotPermittedException"
            }
          }
        },
        "description": "<p>This API places an outbound call to a contact, and then initiates the contact flow. It performs the actions in the contact flow that's specified (in <code>ContactFlowId</code>).</p> <p>Agents are not involved in initiating the outbound API (that is, dialing the contact). If the contact flow places an outbound call to a contact, and then puts the contact in queue, that's when the call is routed to the agent, like any other inbound case.</p> <p>There is a 60 second dialing timeout for this operation. If the call is not connected after 60 seconds, it fails.</p> <note> <p>UK numbers with a 447 prefix are not allowed by default. Before you can dial these UK mobile numbers, you must submit a service quota increase request. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>. </p> </note>",
        "operationId": "StartOutboundVoiceContact"
      }
    },
    "/contact/resume-recording": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ContactId": {
                  "description": "The identifier of the contact.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "InitialContactId": {
                  "description": "The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "InstanceId": {
                  "description": "The identifier of the Amazon Connect instance.",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "InstanceId",
                "ContactId",
                "InitialContactId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResumeContactRecordingResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>When a contact is being recorded, and the recording has been suspended using SuspendContactRecording, this API resumes recording the call.</p> <p>Only voice recordings are supported at this time.</p>",
        "operationId": "ResumeContactRecording"
      }
    },
    "/contact/start-recording": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ContactId": {
                  "description": "The identifier of the contact.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "InitialContactId": {
                  "description": "The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "InstanceId": {
                  "description": "The identifier of the Amazon Connect instance.",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                },
                "VoiceRecordingConfiguration": {
                  "description": "Contains information about the recording configuration settings.",
                  "properties": {
                    "VoiceRecordingTrack": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/VoiceRecordingTrack"
                        },
                        {
                          "description": "Identifies which track is being recorded."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "InstanceId",
                "ContactId",
                "InitialContactId",
                "VoiceRecordingConfiguration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartContactRecordingResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>This API starts recording the contact when the agent joins the call. StartContactRecording is a one-time action. For example, if you use StopContactRecording to stop recording an ongoing call, you can't use StartContactRecording to restart it. For scenarios where the recording has started and you want to suspend and resume it, such as when collecting sensitive information (for example, a credit card number), use SuspendContactRecording and ResumeContactRecording.</p> <p>You can use this API to override the recording behavior configured in the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/set-recording-behavior.html\">Set recording behavior</a> block.</p> <p>Only voice recordings are supported at this time.</p>",
        "operationId": "StartContactRecording"
      }
    },
    "/contact/stop": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ContactId": {
                  "description": "The ID of the contact.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "InstanceId": {
                  "description": "The identifier of the Amazon Connect instance.",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "ContactId",
                "InstanceId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopContactResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ContactNotFoundException",
            "schema": {
              "$ref": "#/definitions/ContactNotFoundException"
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Ends the specified contact.",
        "operationId": "StopContact"
      }
    },
    "/contact/stop-recording": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ContactId": {
                  "description": "The identifier of the contact.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "InitialContactId": {
                  "description": "The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "InstanceId": {
                  "description": "The identifier of the Amazon Connect instance.",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "InstanceId",
                "ContactId",
                "InitialContactId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopContactRecordingResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>When a contact is being recorded, this API stops recording the call. StopContactRecording is a one-time action. If you use StopContactRecording to stop recording an ongoing call, you can't use StartContactRecording to restart it. For scenarios where the recording has started and you want to suspend it for sensitive information (for example, to collect a credit card number), and then restart it, use SuspendContactRecording and ResumeContactRecording.</p> <p>Only voice recordings are supported at this time.</p>",
        "operationId": "StopContactRecording"
      }
    },
    "/contact/suspend-recording": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ContactId": {
                  "description": "The identifier of the contact.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "InitialContactId": {
                  "description": "The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "InstanceId": {
                  "description": "The identifier of the Amazon Connect instance.",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "InstanceId",
                "ContactId",
                "InitialContactId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SuspendContactRecordingResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>When a contact is being recorded, this API suspends recording the call. For example, you might suspend the call recording while collecting sensitive information, such as a credit card number. Then use ResumeContactRecording to restart recording. </p> <p>The period of time that the recording is suspended is filled with silence in the final recording. </p> <p>Only voice recordings are supported at this time.</p>",
        "operationId": "SuspendContactRecording"
      }
    },
    "/contact/task": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Attributes": {
                  "additionalProperties": {
                    "$ref": "#/definitions/AttributeValue"
                  },
                  "description": "<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>",
                  "type": "object"
                },
                "ClientToken": {
                  "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
                  "maxLength": 500,
                  "type": "string"
                },
                "ContactFlowId": {
                  "description": "<p>The identifier of the contact flow for initiating the tasks. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>",
                  "maxLength": 500,
                  "type": "string"
                },
                "Description": {
                  "description": "A description of the task that is shown to an agent in the Contact Control Panel (CCP).",
                  "maxLength": 4096,
                  "minLength": 0,
                  "type": "string"
                },
                "InstanceId": {
                  "description": "The identifier of the Amazon Connect instance.",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                },
                "Name": {
                  "description": "The name of a task that is shown to an agent in the Contact Control Panel (CCP).",
                  "maxLength": 512,
                  "minLength": 0,
                  "type": "string"
                },
                "PreviousContactId": {
                  "description": "The identifier of the previous chat, voice, or task contact. ",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "References": {
                  "additionalProperties": {
                    "$ref": "#/definitions/Reference"
                  },
                  "description": "A formatted URL that is shown to an agent in the Contact Control Panel (CCP).",
                  "type": "object"
                }
              },
              "required": [
                "InstanceId",
                "ContactFlowId",
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartTaskContactResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "485": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Initiates a contact flow to start a new task.",
        "operationId": "StartTaskContact"
      }
    },
    "/hours-of-operations-summary/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListHoursOfOperationsResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Provides information about the hours of operation for the specified Amazon Connect instance.</p> <p>For more information about hours of operation, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/set-hours-operation.html\">Set the Hours of Operation for a Queue</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "ListHoursOfOperations"
      }
    },
    "/instance": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 10,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListInstancesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Return a list of instances which are in active state, creation-in-progress state, and failed state. Instances that aren't successfully created (they are in a failed state) are returned only for 24 hours after the CreateInstance API was invoked.</p>",
        "operationId": "ListInstances"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ClientToken": {
                  "description": "The idempotency token.",
                  "maxLength": 500,
                  "type": "string"
                },
                "DirectoryId": {
                  "description": "The identifier for the directory.",
                  "maxLength": 12,
                  "minLength": 12,
                  "pattern": "^d-[0-9a-f]{10}$",
                  "type": "string"
                },
                "IdentityManagementType": {
                  "description": "The type of identity management for your Amazon Connect users.",
                  "enum": [
                    "SAML",
                    "CONNECT_MANAGED",
                    "EXISTING_DIRECTORY"
                  ],
                  "type": "string"
                },
                "InboundCallsEnabled": {
                  "description": "Whether your contact center handles incoming contacts.",
                  "type": "boolean"
                },
                "InstanceAlias": {
                  "description": "The name for your instance.",
                  "format": "password",
                  "maxLength": 62,
                  "minLength": 1,
                  "pattern": "^(?!d-)([\\da-zA-Z]+)([-]*[\\da-zA-Z])*$",
                  "type": "string"
                },
                "OutboundCallsEnabled": {
                  "description": "Whether your contact center allows outbound calls.",
                  "type": "boolean"
                }
              },
              "required": [
                "IdentityManagementType",
                "InboundCallsEnabled",
                "OutboundCallsEnabled"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateInstanceResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "482": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Initiates an Amazon Connect instance with all the supported channels enabled. It does not attach any storage (such as Amazon S3, or Kinesis) or allow for any configurations on features such as Contact Lens for Amazon Connect. </p>",
        "operationId": "CreateInstance"
      }
    },
    "/instance/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Deletes the Amazon Connect instance.</p>",
        "operationId": "DeleteInstance"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeInstanceResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Returns the current state of the specified instance identifier. It tracks the instance while it is being created and returns an error status if applicable. </p> <p>If an instance is not created successfully, the instance status reason field returns details relevant to the reason. The instance in a failed state is returned only for 24 hours after the CreateInstance API was invoked.</p>",
        "operationId": "DescribeInstance"
      }
    },
    "/instance/{InstanceId}/approved-origin": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Origin": {
                  "description": "The domain to add to your allow list.",
                  "maxLength": 267,
                  "type": "string"
                }
              },
              "required": [
                "Origin"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "484": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "485": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "486": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Associates an approved origin to an Amazon Connect instance.",
        "operationId": "AssociateApprovedOrigin"
      }
    },
    "/instance/{InstanceId}/approved-origin#origin": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The domain URL of the integrated application.",
            "in": "query",
            "maxLength": 267,
            "name": "origin",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Revokes access to integrated applications from Amazon Connect.",
        "operationId": "DisassociateApprovedOrigin"
      }
    },
    "/instance/{InstanceId}/approved-origins": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 25,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListApprovedOriginsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Returns a paginated list of all approved origins associated with the instance.",
        "operationId": "ListApprovedOrigins"
      }
    },
    "/instance/{InstanceId}/attribute/{AttributeType}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The type of attribute.",
            "enum": [
              "INBOUND_CALLS",
              "OUTBOUND_CALLS",
              "CONTACTFLOW_LOGS",
              "CONTACT_LENS",
              "AUTO_RESOLVE_BEST_VOICES",
              "USE_CUSTOM_TTS_VOICES",
              "EARLY_MEDIA"
            ],
            "in": "path",
            "name": "AttributeType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeInstanceAttributeResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Describes the specified instance attribute.",
        "operationId": "DescribeInstanceAttribute"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The type of attribute.",
            "enum": [
              "INBOUND_CALLS",
              "OUTBOUND_CALLS",
              "CONTACTFLOW_LOGS",
              "CONTACT_LENS",
              "AUTO_RESOLVE_BEST_VOICES",
              "USE_CUSTOM_TTS_VOICES",
              "EARLY_MEDIA"
            ],
            "in": "path",
            "name": "AttributeType",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Value": {
                  "description": "The value for the attribute. Maximum character limit is 100. ",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "Value"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the value for the specified attribute type.</p>",
        "operationId": "UpdateInstanceAttribute"
      }
    },
    "/instance/{InstanceId}/attributes": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 7,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListInstanceAttributesResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all attribute types for the given instance.</p>",
        "operationId": "ListInstanceAttributes"
      }
    },
    "/instance/{InstanceId}/integration-associations": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListIntegrationAssociationsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Provides summary information about the AppIntegration associations for the specified Amazon Connect instance.</p>",
        "operationId": "ListIntegrationAssociations"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "IntegrationArn": {
                  "description": "The Amazon Resource Name (ARN) of the integration.",
                  "type": "string"
                },
                "IntegrationType": {
                  "description": "The type of information to be ingested.",
                  "enum": [
                    "EVENT"
                  ],
                  "type": "string"
                },
                "SourceApplicationName": {
                  "description": "The name of the external application.",
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9_ -]+$",
                  "type": "string"
                },
                "SourceApplicationUrl": {
                  "description": "The URL for the external application.",
                  "maxLength": 2000,
                  "minLength": 1,
                  "type": "string"
                },
                "SourceType": {
                  "description": "The type of the data source.",
                  "enum": [
                    "SALESFORCE",
                    "ZENDESK"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "IntegrationType",
                "IntegrationArn",
                "SourceApplicationUrl",
                "SourceApplicationName",
                "SourceType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateIntegrationAssociationResponse"
            }
          },
          "480": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Create an AppIntegration association with anAmazon Connect instance.</p>",
        "operationId": "CreateIntegrationAssociation"
      }
    },
    "/instance/{InstanceId}/integration-associations/{IntegrationAssociationId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier for the AppIntegration association.",
            "in": "path",
            "maxLength": 200,
            "minLength": 1,
            "name": "IntegrationAssociationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Deletes an AppIntegration association from an Amazon Connect instance. The association must not have any use cases associated with it.</p>",
        "operationId": "DeleteIntegrationAssociation"
      }
    },
    "/instance/{InstanceId}/integration-associations/{IntegrationAssociationId}/use-cases": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier for the integration association.",
            "in": "path",
            "maxLength": 200,
            "minLength": 1,
            "name": "IntegrationAssociationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListUseCasesResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>List the use cases. </p>",
        "operationId": "ListUseCases"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier for the AppIntegration association.",
            "in": "path",
            "maxLength": 200,
            "minLength": 1,
            "name": "IntegrationAssociationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "UseCaseType": {
                  "description": "The type of use case to associate to the AppIntegration association. Each AppIntegration association can have only one of each use case type.",
                  "enum": [
                    "RULES_EVALUATION"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "UseCaseType"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateUseCaseResponse"
            }
          },
          "480": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Creates a use case for an AppIntegration association.</p>",
        "operationId": "CreateUseCase"
      }
    },
    "/instance/{InstanceId}/integration-associations/{IntegrationAssociationId}/use-cases/{UseCaseId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier for the AppIntegration association.",
            "in": "path",
            "maxLength": 200,
            "minLength": 1,
            "name": "IntegrationAssociationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier for the use case.",
            "in": "path",
            "maxLength": 200,
            "minLength": 1,
            "name": "UseCaseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Deletes a use case from an AppIntegration association.</p>",
        "operationId": "DeleteUseCase"
      }
    },
    "/instance/{InstanceId}/lambda-function": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "FunctionArn": {
                  "description": "The Amazon Resource Name (ARN) for the Lambda function being associated. Maximum number of characters allowed is 140.",
                  "maxLength": 140,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "FunctionArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "484": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "485": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "486": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Allows the specified Amazon Connect instance to access the specified Lambda function.",
        "operationId": "AssociateLambdaFunction"
      }
    },
    "/instance/{InstanceId}/lambda-function#functionArn": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance..",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Amazon Resource Name (ARN) of the Lambda function being disassociated.",
            "in": "query",
            "maxLength": 140,
            "minLength": 1,
            "name": "functionArn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Remove the Lambda function from the drop-down options available in the relevant contact flow blocks.",
        "operationId": "DisassociateLambdaFunction"
      }
    },
    "/instance/{InstanceId}/lambda-functions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 25,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListLambdaFunctionsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Returns a paginated list of all the Lambda functions that show up in the drop-down options in the relevant contact flow blocks.",
        "operationId": "ListLambdaFunctions"
      }
    },
    "/instance/{InstanceId}/lex-bot": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "LexBot": {
                  "description": "Configuration information of an Amazon Lex bot.",
                  "properties": {
                    "LexRegion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/LexRegion"
                        },
                        {
                          "description": "The Region the Amazon Lex bot was created in."
                        }
                      ]
                    },
                    "Name": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BotName"
                        },
                        {
                          "description": "The name of the Amazon Lex bot."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "LexBot"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "484": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "485": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "486": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Allows the specified Amazon Connect instance to access the specified Amazon Lex bot.",
        "operationId": "AssociateLexBot"
      }
    },
    "/instance/{InstanceId}/lex-bot#botName&lexRegion": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the Amazon Lex bot. Maximum character limit of 50.",
            "in": "query",
            "maxLength": 50,
            "name": "botName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Region in which the Amazon Lex bot has been created.",
            "in": "query",
            "maxLength": 60,
            "name": "lexRegion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Revokes authorization from the specified instance to access the specified Amazon Lex bot.",
        "operationId": "DisassociateLexBot"
      }
    },
    "/instance/{InstanceId}/lex-bots": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 25,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListLexBotsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Returns a paginated list of all the Amazon Lex bots currently associated with the instance.",
        "operationId": "ListLexBots"
      }
    },
    "/instance/{InstanceId}/security-key": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Key": {
                  "description": "A valid security key in PEM format.",
                  "maxLength": 1024,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "Key"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateSecurityKeyResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "484": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "485": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "486": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Associates a security key to the instance.",
        "operationId": "AssociateSecurityKey"
      }
    },
    "/instance/{InstanceId}/security-key/{AssociationId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "AssociationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Deletes the specified security key.",
        "operationId": "DisassociateSecurityKey"
      }
    },
    "/instance/{InstanceId}/security-keys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 2,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSecurityKeysResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Returns a paginated list of all security keys associated with the instance.",
        "operationId": "ListSecurityKeys"
      }
    },
    "/instance/{InstanceId}/storage-config": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ResourceType": {
                  "description": "A valid resource type.",
                  "enum": [
                    "CHAT_TRANSCRIPTS",
                    "CALL_RECORDINGS",
                    "SCHEDULED_REPORTS",
                    "MEDIA_STREAMS",
                    "CONTACT_TRACE_RECORDS",
                    "AGENT_EVENTS"
                  ],
                  "type": "string"
                },
                "StorageConfig": {
                  "description": "The storage configuration for the instance.",
                  "properties": {
                    "AssociationId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AssociationId"
                        },
                        {
                          "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID."
                        }
                      ]
                    },
                    "KinesisFirehoseConfig": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KinesisFirehoseConfig"
                        },
                        {
                          "description": "The configuration of the Kinesis Firehose delivery stream."
                        }
                      ]
                    },
                    "KinesisStreamConfig": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KinesisStreamConfig"
                        },
                        {
                          "description": "The configuration of the Kinesis data stream."
                        }
                      ]
                    },
                    "KinesisVideoStreamConfig": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KinesisVideoStreamConfig"
                        },
                        {
                          "description": "The configuration of the Kinesis video stream."
                        }
                      ]
                    },
                    "S3Config": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Config"
                        },
                        {
                          "description": "The S3 configuration."
                        }
                      ]
                    },
                    "StorageType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StorageType"
                        },
                        {
                          "description": "A valid storage type."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "ResourceType",
                "StorageConfig"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateInstanceStorageConfigResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "484": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>Associates a storage resource type for the first time. You can only associate one type of storage configuration in a single call. This means, for example, that you can't define an instance with multiple S3 buckets for storing chat transcripts.</p> <p>This API does not create a resource that doesn't exist. It only associates it to the instance. Ensure that the resource being specified in the storage configuration, like an Amazon S3 bucket, exists when being used for association.</p>",
        "operationId": "AssociateInstanceStorageConfig"
      }
    },
    "/instance/{InstanceId}/storage-config/{AssociationId}#resourceType": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "AssociationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A valid resource type.",
            "enum": [
              "CHAT_TRANSCRIPTS",
              "CALL_RECORDINGS",
              "SCHEDULED_REPORTS",
              "MEDIA_STREAMS",
              "CONTACT_TRACE_RECORDS",
              "AGENT_EVENTS"
            ],
            "in": "query",
            "name": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Removes the storage type configurations for the specified resource type and association ID.",
        "operationId": "DisassociateInstanceStorageConfig"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "AssociationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A valid resource type.",
            "enum": [
              "CHAT_TRANSCRIPTS",
              "CALL_RECORDINGS",
              "SCHEDULED_REPORTS",
              "MEDIA_STREAMS",
              "CONTACT_TRACE_RECORDS",
              "AGENT_EVENTS"
            ],
            "in": "query",
            "name": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeInstanceStorageConfigResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Retrieves the current storage configurations for the specified resource type, association ID, and instance ID.",
        "operationId": "DescribeInstanceStorageConfig"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "AssociationId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A valid resource type.",
            "enum": [
              "CHAT_TRANSCRIPTS",
              "CALL_RECORDINGS",
              "SCHEDULED_REPORTS",
              "MEDIA_STREAMS",
              "CONTACT_TRACE_RECORDS",
              "AGENT_EVENTS"
            ],
            "in": "query",
            "name": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "StorageConfig": {
                  "description": "The storage configuration for the instance.",
                  "properties": {
                    "AssociationId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AssociationId"
                        },
                        {
                          "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID."
                        }
                      ]
                    },
                    "KinesisFirehoseConfig": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KinesisFirehoseConfig"
                        },
                        {
                          "description": "The configuration of the Kinesis Firehose delivery stream."
                        }
                      ]
                    },
                    "KinesisStreamConfig": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KinesisStreamConfig"
                        },
                        {
                          "description": "The configuration of the Kinesis data stream."
                        }
                      ]
                    },
                    "KinesisVideoStreamConfig": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KinesisVideoStreamConfig"
                        },
                        {
                          "description": "The configuration of the Kinesis video stream."
                        }
                      ]
                    },
                    "S3Config": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Config"
                        },
                        {
                          "description": "The S3 configuration."
                        }
                      ]
                    },
                    "StorageType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StorageType"
                        },
                        {
                          "description": "A valid storage type."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "StorageConfig"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates an existing configuration for a resource type. This API is idempotent.</p>",
        "operationId": "UpdateInstanceStorageConfig"
      }
    },
    "/instance/{InstanceId}/storage-configs#resourceType": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A valid resource type.",
            "enum": [
              "CHAT_TRANSCRIPTS",
              "CALL_RECORDINGS",
              "SCHEDULED_REPORTS",
              "MEDIA_STREAMS",
              "CONTACT_TRACE_RECORDS",
              "AGENT_EVENTS"
            ],
            "in": "query",
            "name": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 10,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListInstanceStorageConfigsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of storage configs for the identified instance and resource type.</p>",
        "operationId": "ListInstanceStorageConfigs"
      }
    },
    "/metrics/current/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "CurrentMetrics": {
                  "description": "<p>The metrics to retrieve. Specify the name and unit for each metric. The following metrics are available. For a description of all the metrics, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html\">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>AGENTS_AFTER_CONTACT_WORK</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#aftercallwork-real-time\">ACW</a> </p> </dd> <dt>AGENTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#available-real-time\">Available</a> </p> </dd> <dt>AGENTS_ERROR</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#error-real-time\">Error</a> </p> </dd> <dt>AGENTS_NON_PRODUCTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#non-productive-time-real-time\">NPT (Non-Productive Time)</a> </p> </dd> <dt>AGENTS_ON_CALL</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time\">On contact</a> </p> </dd> <dt>AGENTS_ON_CONTACT</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time\">On contact</a> </p> </dd> <dt>AGENTS_ONLINE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#online-real-time\">Online</a> </p> </dd> <dt>AGENTS_STAFFED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#staffed-real-time\">Staffed</a> </p> </dd> <dt>CONTACTS_IN_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#in-queue-real-time\">In queue</a> </p> </dd> <dt>CONTACTS_SCHEDULED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#scheduled-real-time\">Scheduled</a> </p> </dd> <dt>OLDEST_CONTACT_AGE</dt> <dd> <p>Unit: SECONDS</p> <p>When you use groupings, Unit says SECONDS but the Value is returned in MILLISECONDS. For example, if you get a response like this:</p> <p> <code>{ \"Metric\": { \"Name\": \"OLDEST_CONTACT_AGE\", \"Unit\": \"SECONDS\" }, \"Value\": 24113.0 </code>}</p> <p>The actual OLDEST_CONTACT_AGE is 24 seconds.</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#oldest-real-time\">Oldest</a> </p> </dd> <dt>SLOTS_ACTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#active-real-time\">Active</a> </p> </dd> <dt>SLOTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#availability-real-time\">Availability</a> </p> </dd> </dl>",
                  "items": {
                    "$ref": "#/definitions/CurrentMetric"
                  },
                  "type": "array"
                },
                "Filters": {
                  "description": "Contains the filter to apply when retrieving metrics.",
                  "properties": {
                    "Channels": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Channels"
                        },
                        {
                          "description": "The channel to use to filter the metrics."
                        }
                      ]
                    },
                    "Queues": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Queues"
                        },
                        {
                          "description": "The queues to use to filter the metrics. You can specify up to 100 queues per request."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Groupings": {
                  "description": "<p>The grouping applied to the metrics returned. For example, when grouped by <code>QUEUE</code>, the metrics returned apply to each queue rather than aggregated for all queues. If you group by <code>CHANNEL</code>, you should include a Channels filter. VOICE, CHAT, and TASK channels are supported.</p> <p>If no <code>Grouping</code> is included in the request, a summary of metrics is returned.</p>",
                  "items": {
                    "$ref": "#/definitions/Grouping"
                  },
                  "maxItems": 2,
                  "type": "array"
                },
                "MaxResults": {
                  "description": "The maximimum number of results to return per page.",
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>",
                  "type": "string"
                }
              },
              "required": [
                "Filters",
                "CurrentMetrics"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetCurrentMetricDataResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Gets the real-time metric data from the specified Amazon Connect instance.</p> <p>For a description of each metric, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html\">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "GetCurrentMetricData"
      }
    },
    "/metrics/historical/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "EndTime": {
                  "description": "<p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be specified using an interval of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p> <p>The time range between the start and end time must be less than 24 hours.</p>",
                  "format": "date-time",
                  "type": "string"
                },
                "Filters": {
                  "description": "Contains the filter to apply when retrieving metrics.",
                  "properties": {
                    "Channels": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Channels"
                        },
                        {
                          "description": "The channel to use to filter the metrics."
                        }
                      ]
                    },
                    "Queues": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Queues"
                        },
                        {
                          "description": "The queues to use to filter the metrics. You can specify up to 100 queues per request."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Groupings": {
                  "description": "<p>The grouping applied to the metrics returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values returned apply to the metrics for each queue rather than aggregated for all queues.</p> <p>The only supported grouping is <code>QUEUE</code>.</p> <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>",
                  "items": {
                    "$ref": "#/definitions/Grouping"
                  },
                  "maxItems": 2,
                  "type": "array"
                },
                "HistoricalMetrics": {
                  "description": "<p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The following historical metrics are available. For a description of each metric, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html\">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>ABANDON_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>AFTER_CONTACT_WORK_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>API_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CALLBACK_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_ABANDONED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_CONSULTED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_INCOMING</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_OUTBOUND</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HOLD_ABANDONS</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_MISSED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_QUEUED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>HANDLE_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_AND_HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>OCCUPANCY</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> </dd> <dt>QUEUE_ANSWER_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>QUEUED_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: MAX</p> </dd> <dt>SERVICE_LEVEL</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> <p>Threshold: Only \"Less than\" comparisons are supported, with the following service level thresholds: 15, 20, 25, 30, 45, 60, 90, 120, 180, 240, 300, 600</p> </dd> </dl>",
                  "items": {
                    "$ref": "#/definitions/HistoricalMetric"
                  },
                  "type": "array"
                },
                "MaxResults": {
                  "description": "The maximimum number of results to return per page.",
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
                  "type": "string"
                },
                "StartTime": {
                  "description": "<p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes, such as 10:05, 10:10, 10:15.</p> <p>The start time cannot be earlier than 24 hours before the time of the request. Historical metrics are available only for 24 hours.</p>",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "StartTime",
                "EndTime",
                "Filters",
                "HistoricalMetrics"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetMetricDataResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Gets historical metric data from the specified Amazon Connect instance.</p> <p>For a description of each historical metric, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html\">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "GetMetricData"
      }
    },
    "/phone-numbers-summary/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The type of phone number.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/PhoneNumberType"
            },
            "maxItems": 2,
            "name": "phoneNumberTypes",
            "required": false,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "The ISO country code.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/PhoneNumberCountryCode"
            },
            "maxItems": 10,
            "name": "phoneNumberCountryCodes",
            "required": false,
            "type": "array"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListPhoneNumbersResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Provides information about the phone numbers for the specified Amazon Connect instance. </p> <p>For more information about phone numbers, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html\">Set Up Phone Numbers for Your Contact Center</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "ListPhoneNumbers"
      }
    },
    "/prompts-summary/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return per page.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListPromptsResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Provides information about the prompts for the specified Amazon Connect instance.",
        "operationId": "ListPrompts"
      }
    },
    "/queues-summary/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The type of queue.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/QueueType"
            },
            "maxItems": 2,
            "name": "queueTypes",
            "required": false,
            "type": "array"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListQueuesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Provides information about the queues for the specified Amazon Connect instance.</p> <p>For more information about queues, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/concepts-queues-standard-and-agent.html\">Queues: Standard and Agent</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "ListQueues"
      }
    },
    "/routing-profiles-summary/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRoutingProfilesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Provides summary information about the routing profiles for the specified Amazon Connect instance.</p> <p>For more information about routing profiles, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing.html\">Routing Profiles</a> and <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/routing-profiles.html\">Create a Routing Profile</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "ListRoutingProfiles"
      }
    },
    "/routing-profiles/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DefaultOutboundQueueId": {
                  "description": "The default outbound queue for the routing profile.",
                  "type": "string"
                },
                "Description": {
                  "description": "Description of the routing profile. Must not be more than 250 characters.",
                  "maxLength": 250,
                  "minLength": 1,
                  "type": "string"
                },
                "MediaConcurrencies": {
                  "description": "The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.",
                  "items": {
                    "$ref": "#/definitions/MediaConcurrency"
                  },
                  "type": "array"
                },
                "Name": {
                  "description": "The name of the routing profile. Must not be more than 127 characters.",
                  "maxLength": 127,
                  "minLength": 1,
                  "type": "string"
                },
                "QueueConfigs": {
                  "description": "The inbound queues associated with the routing profile. If no queue is added, the agent can only make outbound calls.",
                  "items": {
                    "$ref": "#/definitions/RoutingProfileQueueConfig"
                  },
                  "maxItems": 10,
                  "minItems": 1,
                  "type": "array"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "One or more tags.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "Name",
                "Description",
                "DefaultOutboundQueueId",
                "MediaConcurrencies"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRoutingProfileResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Creates a new routing profile.",
        "operationId": "CreateRoutingProfile"
      }
    },
    "/routing-profiles/{InstanceId}/{RoutingProfileId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the routing profile.",
            "in": "path",
            "name": "RoutingProfileId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeRoutingProfileResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Describes the specified routing profile.",
        "operationId": "DescribeRoutingProfile"
      }
    },
    "/routing-profiles/{InstanceId}/{RoutingProfileId}/associate-queues": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the routing profile.",
            "in": "path",
            "name": "RoutingProfileId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "QueueConfigs": {
                  "description": "The queues to associate with this routing profile.",
                  "items": {
                    "$ref": "#/definitions/RoutingProfileQueueConfig"
                  },
                  "maxItems": 10,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "QueueConfigs"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Associates a set of queues with a routing profile.",
        "operationId": "AssociateRoutingProfileQueues"
      }
    },
    "/routing-profiles/{InstanceId}/{RoutingProfileId}/concurrency": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the routing profile.",
            "in": "path",
            "name": "RoutingProfileId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MediaConcurrencies": {
                  "description": "The channels agents can handle in the Contact Control Panel (CCP).",
                  "items": {
                    "$ref": "#/definitions/MediaConcurrency"
                  },
                  "type": "array"
                }
              },
              "required": [
                "MediaConcurrencies"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Updates the channels that agents can handle in the Contact Control Panel (CCP) for a routing profile.",
        "operationId": "UpdateRoutingProfileConcurrency"
      }
    },
    "/routing-profiles/{InstanceId}/{RoutingProfileId}/default-outbound-queue": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the routing profile.",
            "in": "path",
            "name": "RoutingProfileId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DefaultOutboundQueueId": {
                  "description": "The identifier for the default outbound queue.",
                  "type": "string"
                }
              },
              "required": [
                "DefaultOutboundQueueId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Updates the default outbound queue of a routing profile.",
        "operationId": "UpdateRoutingProfileDefaultOutboundQueue"
      }
    },
    "/routing-profiles/{InstanceId}/{RoutingProfileId}/disassociate-queues": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the routing profile.",
            "in": "path",
            "name": "RoutingProfileId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "QueueReferences": {
                  "description": "The queues to disassociate from this routing profile.",
                  "items": {
                    "$ref": "#/definitions/RoutingProfileQueueReference"
                  },
                  "type": "array"
                }
              },
              "required": [
                "QueueReferences"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Disassociates a set of queues from a routing profile.",
        "operationId": "DisassociateRoutingProfileQueues"
      }
    },
    "/routing-profiles/{InstanceId}/{RoutingProfileId}/name": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the routing profile.",
            "in": "path",
            "name": "RoutingProfileId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Description": {
                  "description": "The description of the routing profile. Must not be more than 250 characters.",
                  "maxLength": 250,
                  "minLength": 1,
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the routing profile. Must not be more than 127 characters.",
                  "maxLength": 127,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "485": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Updates the name and description of a routing profile. The request accepts the following data in JSON format. At least <code>Name</code> or <code>Description</code> must be provided.",
        "operationId": "UpdateRoutingProfileName"
      }
    },
    "/routing-profiles/{InstanceId}/{RoutingProfileId}/queues": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the routing profile.",
            "in": "path",
            "name": "RoutingProfileId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRoutingProfileQueuesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "List the queues associated with a routing profile.",
        "operationId": "ListRoutingProfileQueues"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the routing profile.",
            "in": "path",
            "name": "RoutingProfileId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "QueueConfigs": {
                  "description": "The queues to be updated for this routing profile. Queues must first be associated to the routing profile. You can do this using AssociateRoutingProfileQueues.",
                  "items": {
                    "$ref": "#/definitions/RoutingProfileQueueConfig"
                  },
                  "maxItems": 10,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "QueueConfigs"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Updates the properties associated with a set of queues for a routing profile.",
        "operationId": "UpdateRoutingProfileQueues"
      }
    },
    "/security-profiles-summary/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSecurityProfilesResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Provides summary information about the security profiles for the specified Amazon Connect instance.</p> <p>For more information about security profiles, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html\">Security Profiles</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "ListSecurityProfiles"
      }
    },
    "/tags/{resourceArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the resource.",
            "in": "path",
            "name": "resourceArn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>Lists the tags for the specified resource.</p> <p>For sample policies that use tags, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html\">Amazon Connect Identity-Based Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "ListTagsForResource"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the resource.",
            "in": "path",
            "name": "resourceArn",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "One or more tags. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "<p>Adds the specified tags to the specified resource.</p> <p>The supported resource types are users, routing profiles, and contact flows.</p> <p>For sample policies that use tags, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html\">Amazon Connect Identity-Based Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "TagResource"
      }
    },
    "/tags/{resourceArn}#tagKeys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) of the resource.",
            "in": "path",
            "name": "resourceArn",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The tag keys.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/TagKey"
            },
            "maxItems": 200,
            "minItems": 1,
            "name": "tagKeys",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          }
        },
        "description": "Removes the specified tags from the specified resource.",
        "operationId": "UntagResource"
      }
    },
    "/user-hierarchy-groups-summary/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListUserHierarchyGroupsResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Provides summary information about the hierarchy groups for the specified Amazon Connect instance.</p> <p>For more information about agent hierarchies, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/agent-hierarchy.html\">Set Up Agent Hierarchies</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "ListUserHierarchyGroups"
      }
    },
    "/user-hierarchy-groups/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name of the user hierarchy group. Must not be more than 100 characters.",
                  "type": "string"
                },
                "ParentGroupId": {
                  "description": "The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateUserHierarchyGroupResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Creates a new user hierarchy group.",
        "operationId": "CreateUserHierarchyGroup"
      }
    },
    "/user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the hierarchy group.",
            "in": "path",
            "name": "HierarchyGroupId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ResourceInUseException",
            "schema": {
              "$ref": "#/definitions/ResourceInUseException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "485": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Deletes an existing user hierarchy group. It must not be associated with any agents or have any active child groups.",
        "operationId": "DeleteUserHierarchyGroup"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the hierarchy group.",
            "in": "path",
            "name": "HierarchyGroupId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeUserHierarchyGroupResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Describes the specified hierarchy group.",
        "operationId": "DescribeUserHierarchyGroup"
      }
    },
    "/user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}/name": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the hierarchy group.",
            "in": "path",
            "name": "HierarchyGroupId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name of the hierarchy group. Must not be more than 100 characters.",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "485": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Updates the name of the user hierarchy group. ",
        "operationId": "UpdateUserHierarchyGroupName"
      }
    },
    "/user-hierarchy-structure/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeUserHierarchyStructureResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Describes the hierarchy structure of the specified Amazon Connect instance.",
        "operationId": "DescribeUserHierarchyStructure"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "HierarchyStructure": {
                  "description": "Contains information about the level hierarchy to update.",
                  "properties": {
                    "LevelFive": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/HierarchyLevelUpdate"
                        },
                        {
                          "description": "The update for level five."
                        }
                      ]
                    },
                    "LevelFour": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/HierarchyLevelUpdate"
                        },
                        {
                          "description": "The update for level four."
                        }
                      ]
                    },
                    "LevelOne": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/HierarchyLevelUpdate"
                        },
                        {
                          "description": "The update for level one."
                        }
                      ]
                    },
                    "LevelThree": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/HierarchyLevelUpdate"
                        },
                        {
                          "description": "The update for level three."
                        }
                      ]
                    },
                    "LevelTwo": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/HierarchyLevelUpdate"
                        },
                        {
                          "description": "The update for level two."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "HierarchyStructure"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ResourceInUseException",
            "schema": {
              "$ref": "#/definitions/ResourceInUseException"
            }
          },
          "484": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "485": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Updates the user hierarchy structure: add, remove, and rename user hierarchy levels.",
        "operationId": "UpdateUserHierarchyStructure"
      }
    },
    "/user/federate/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetFederationTokenResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "UserNotFoundException",
            "schema": {
              "$ref": "#/definitions/UserNotFoundException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          },
          "485": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          }
        },
        "description": "Retrieves a token for federation.",
        "operationId": "GetFederationToken"
      }
    },
    "/users-summary/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximimum number of results to return per page.",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListUsersResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Provides summary information about the users for the specified Amazon Connect instance.",
        "operationId": "ListUsers"
      }
    },
    "/users/{InstanceId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DirectoryUserId": {
                  "description": "<p>The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory.</p> <p>This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.</p>",
                  "type": "string"
                },
                "HierarchyGroupId": {
                  "description": "The identifier of the hierarchy group for the user.",
                  "type": "string"
                },
                "IdentityInfo": {
                  "description": "Contains information about the identity of a user.",
                  "properties": {
                    "Email": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Email"
                        },
                        {
                          "description": "The email address. If you are using SAML for identity management and include this parameter, an error is returned."
                        }
                      ]
                    },
                    "FirstName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AgentFirstName"
                        },
                        {
                          "description": "The first name. This is required if you are using Amazon Connect or SAML for identity management."
                        }
                      ]
                    },
                    "LastName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AgentLastName"
                        },
                        {
                          "description": "The last name. This is required if you are using Amazon Connect or SAML for identity management."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Password": {
                  "description": "The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.",
                  "pattern": "/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\S]{8,64}$/",
                  "type": "string"
                },
                "PhoneConfig": {
                  "description": "Contains information about the phone configuration settings for a user.",
                  "properties": {
                    "AfterContactWorkTimeLimit": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AfterContactWorkTimeLimit"
                        },
                        {
                          "description": "The After Call Work (ACW) timeout setting, in seconds."
                        }
                      ]
                    },
                    "AutoAccept": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AutoAccept"
                        },
                        {
                          "description": "The Auto accept setting."
                        }
                      ]
                    },
                    "DeskPhoneNumber": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/PhoneNumber"
                        },
                        {
                          "description": "The phone number for the user's desk phone."
                        }
                      ]
                    },
                    "PhoneType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/PhoneType"
                        },
                        {
                          "description": "The phone type."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "RoutingProfileId": {
                  "description": "The identifier of the routing profile for the user.",
                  "type": "string"
                },
                "SecurityProfileIds": {
                  "description": "The identifier of the security profile for the user.",
                  "items": {
                    "$ref": "#/definitions/SecurityProfileId"
                  },
                  "maxItems": 10,
                  "minItems": 1,
                  "type": "array"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "One or more tags.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                },
                "Username": {
                  "description": "The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\\@]+.",
                  "maxLength": 100,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "Username",
                "PhoneConfig",
                "SecurityProfileIds",
                "RoutingProfileId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "DuplicateResourceException",
            "schema": {
              "$ref": "#/definitions/DuplicateResourceException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "485": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "486": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Creates a user account for the specified Amazon Connect instance.</p> <p>For information about how to create user accounts using the Amazon Connect console, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/user-management.html\">Add Users</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "CreateUser"
      }
    },
    "/users/{InstanceId}/{UserId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the user.",
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Deletes a user account from the specified Amazon Connect instance.</p> <p>For information about what happens to a user's data when their account is deleted, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/delete-users.html\">Delete Users from Your Amazon Connect Instance</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
        "operationId": "DeleteUser"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the user account.",
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeUserResponse"
            }
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Describes the specified user account. You can find the instance ID in the console (it’s the final part of the ARN). The console does not display the user IDs. Instead, list the users and note the IDs provided in the output.",
        "operationId": "DescribeUser"
      }
    },
    "/users/{InstanceId}/{UserId}/hierarchy": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the user account.",
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "HierarchyGroupId": {
                  "description": "The identifier of the hierarchy group.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Assigns the specified hierarchy group to the specified user.",
        "operationId": "UpdateUserHierarchy"
      }
    },
    "/users/{InstanceId}/{UserId}/identity-info": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the user account.",
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "IdentityInfo": {
                  "description": "Contains information about the identity of a user.",
                  "properties": {
                    "Email": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Email"
                        },
                        {
                          "description": "The email address. If you are using SAML for identity management and include this parameter, an error is returned."
                        }
                      ]
                    },
                    "FirstName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AgentFirstName"
                        },
                        {
                          "description": "The first name. This is required if you are using Amazon Connect or SAML for identity management."
                        }
                      ]
                    },
                    "LastName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AgentLastName"
                        },
                        {
                          "description": "The last name. This is required if you are using Amazon Connect or SAML for identity management."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "IdentityInfo"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "<p>Updates the identity information for the specified user.</p> <important> <p>Someone with the ability to invoke <code>UpdateUserIndentityInfo</code> can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. We strongly recommend limiting who has the ability to invoke <code>UpdateUserIndentityInfo</code>. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html\">Best Practices for Security Profiles</a> in the <i>Amazon Connect Administrator Guide</i>.</p> </important>",
        "operationId": "UpdateUserIdentityInfo"
      }
    },
    "/users/{InstanceId}/{UserId}/phone-config": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the user account.",
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "PhoneConfig": {
                  "description": "Contains information about the phone configuration settings for a user.",
                  "properties": {
                    "AfterContactWorkTimeLimit": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AfterContactWorkTimeLimit"
                        },
                        {
                          "description": "The After Call Work (ACW) timeout setting, in seconds."
                        }
                      ]
                    },
                    "AutoAccept": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AutoAccept"
                        },
                        {
                          "description": "The Auto accept setting."
                        }
                      ]
                    },
                    "DeskPhoneNumber": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/PhoneNumber"
                        },
                        {
                          "description": "The phone number for the user's desk phone."
                        }
                      ]
                    },
                    "PhoneType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/PhoneType"
                        },
                        {
                          "description": "The phone type."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "PhoneConfig"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Updates the phone configuration settings for the specified user.",
        "operationId": "UpdateUserPhoneConfig"
      }
    },
    "/users/{InstanceId}/{UserId}/routing-profile": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the user account.",
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "RoutingProfileId": {
                  "description": "The identifier of the routing profile for the user.",
                  "type": "string"
                }
              },
              "required": [
                "RoutingProfileId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Assigns the specified routing profile to the specified user.",
        "operationId": "UpdateUserRoutingProfile"
      }
    },
    "/users/{InstanceId}/{UserId}/security-profiles": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the user account.",
            "in": "path",
            "name": "UserId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Amazon Connect instance.",
            "in": "path",
            "maxLength": 100,
            "minLength": 1,
            "name": "InstanceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "SecurityProfileIds": {
                  "description": "The identifiers of the security profiles for the user.",
                  "items": {
                    "$ref": "#/definitions/SecurityProfileId"
                  },
                  "maxItems": 10,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "SecurityProfileIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "InternalServiceException",
            "schema": {
              "$ref": "#/definitions/InternalServiceException"
            }
          }
        },
        "description": "Assigns the specified security profiles to the specified user.",
        "operationId": "UpdateUserSecurityProfiles"
      }
    }
  },
  "definitions": {
    "ARN": {
      "type": "string"
    },
    "AfterContactWorkTimeLimit": {
      "minimum": 0,
      "type": "integer"
    },
    "AgentFirstName": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "AgentLastName": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "AgentUsername": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "AssociateApprovedOriginRequest": {
      "properties": {
        "Origin": {
          "allOf": [
            {
              "$ref": "#/definitions/Origin"
            },
            {
              "description": "The domain to add to your allow list."
            }
          ]
        }
      },
      "required": [
        "Origin"
      ],
      "title": "AssociateApprovedOriginRequest",
      "type": "object"
    },
    "AssociateInstanceStorageConfigRequest": {
      "properties": {
        "ResourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceStorageResourceType"
            },
            {
              "description": "A valid resource type."
            }
          ]
        },
        "StorageConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceStorageConfig"
            },
            {
              "description": "A valid storage type."
            }
          ]
        }
      },
      "required": [
        "ResourceType",
        "StorageConfig"
      ],
      "title": "AssociateInstanceStorageConfigRequest",
      "type": "object"
    },
    "AssociateInstanceStorageConfigResponse": {
      "properties": {
        "AssociationId": {
          "allOf": [
            {
              "$ref": "#/definitions/AssociationId"
            },
            {
              "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID."
            }
          ]
        }
      },
      "type": "object"
    },
    "AssociateLambdaFunctionRequest": {
      "properties": {
        "FunctionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/FunctionArn"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the Lambda function being associated. Maximum number of characters allowed is 140."
            }
          ]
        }
      },
      "required": [
        "FunctionArn"
      ],
      "title": "AssociateLambdaFunctionRequest",
      "type": "object"
    },
    "AssociateLexBotRequest": {
      "properties": {
        "LexBot": {
          "allOf": [
            {
              "$ref": "#/definitions/LexBot"
            },
            {
              "description": "The Amazon Lex box to associate with the instance."
            }
          ]
        }
      },
      "required": [
        "LexBot"
      ],
      "title": "AssociateLexBotRequest",
      "type": "object"
    },
    "AssociateRoutingProfileQueuesRequest": {
      "properties": {
        "QueueConfigs": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileQueueConfigList"
            },
            {
              "description": "The queues to associate with this routing profile."
            }
          ]
        }
      },
      "required": [
        "QueueConfigs"
      ],
      "title": "AssociateRoutingProfileQueuesRequest",
      "type": "object"
    },
    "AssociateSecurityKeyRequest": {
      "properties": {
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/PEM"
            },
            {
              "description": "A valid security key in PEM format."
            }
          ]
        }
      },
      "required": [
        "Key"
      ],
      "title": "AssociateSecurityKeyRequest",
      "type": "object"
    },
    "AssociateSecurityKeyResponse": {
      "properties": {
        "AssociationId": {
          "allOf": [
            {
              "$ref": "#/definitions/AssociationId"
            },
            {
              "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID."
            }
          ]
        }
      },
      "type": "object"
    },
    "AssociationId": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "Attribute": {
      "description": "A toggle for an individual feature at the instance level.",
      "properties": {
        "AttributeType": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceAttributeType"
            },
            {
              "description": "The type of attribute."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceAttributeValue"
            },
            {
              "description": "The value of the attribute."
            }
          ]
        }
      },
      "type": "object"
    },
    "AttributeName": {
      "maxLength": 32767,
      "minLength": 1,
      "type": "string"
    },
    "AttributeValue": {
      "maxLength": 32767,
      "minLength": 0,
      "type": "string"
    },
    "Attributes": {
      "additionalProperties": {
        "$ref": "#/definitions/AttributeValue"
      },
      "type": "object"
    },
    "AttributesList": {
      "items": {
        "$ref": "#/definitions/Attribute"
      },
      "type": "array"
    },
    "AutoAccept": {
      "type": "boolean"
    },
    "BotName": {
      "maxLength": 50,
      "type": "string"
    },
    "BucketName": {
      "maxLength": 128,
      "minLength": 1,
      "type": "string"
    },
    "Channel": {
      "enum": [
        "VOICE",
        "CHAT",
        "TASK"
      ],
      "type": "string"
    },
    "Channels": {
      "items": {
        "$ref": "#/definitions/Channel"
      },
      "maxItems": 3,
      "type": "array"
    },
    "ChatContent": {
      "maxLength": 1024,
      "minLength": 1,
      "type": "string"
    },
    "ChatContentType": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "ChatMessage": {
      "description": "A chat message.",
      "properties": {
        "Content": {
          "allOf": [
            {
              "$ref": "#/definitions/ChatContent"
            },
            {
              "description": "The content of the chat message."
            }
          ]
        },
        "ContentType": {
          "allOf": [
            {
              "$ref": "#/definitions/ChatContentType"
            },
            {
              "description": "The type of the content. Supported types are text/plain."
            }
          ]
        }
      },
      "required": [
        "ContentType",
        "Content"
      ],
      "type": "object"
    },
    "ClientToken": {
      "maxLength": 500,
      "type": "string"
    },
    "Comparison": {
      "enum": [
        "LT"
      ],
      "type": "string"
    },
    "Concurrency": {
      "maximum": 5,
      "minimum": 1,
      "type": "integer"
    },
    "ContactFlow": {
      "description": "Contains information about a contact flow.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the contact flow."
            }
          ]
        },
        "Content": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowContent"
            },
            {
              "description": "The content of the contact flow."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowDescription"
            },
            {
              "description": "The description of the contact flow."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowId"
            },
            {
              "description": "The identifier of the contact flow."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowName"
            },
            {
              "description": "The name of the contact flow."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "One or more tags."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowType"
            },
            {
              "description": "The type of the contact flow. For descriptions of the available types, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types\">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator Guide</i>."
            }
          ]
        }
      },
      "type": "object"
    },
    "ContactFlowContent": {
      "type": "string"
    },
    "ContactFlowDescription": {
      "type": "string"
    },
    "ContactFlowId": {
      "maxLength": 500,
      "type": "string"
    },
    "ContactFlowName": {
      "minLength": 1,
      "type": "string"
    },
    "ContactFlowNotPublishedException": {},
    "ContactFlowSummary": {
      "description": "<p>Contains summary information about a contact flow.</p> <p>You can also create and update contact flows using the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html\">Amazon Connect Flow language</a>.</p>",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the contact flow."
            }
          ]
        },
        "ContactFlowType": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowType"
            },
            {
              "description": "The type of contact flow."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowId"
            },
            {
              "description": "The identifier of the contact flow."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowName"
            },
            {
              "description": "The name of the contact flow."
            }
          ]
        }
      },
      "type": "object"
    },
    "ContactFlowSummaryList": {
      "items": {
        "$ref": "#/definitions/ContactFlowSummary"
      },
      "type": "array"
    },
    "ContactFlowType": {
      "enum": [
        "CONTACT_FLOW",
        "CUSTOMER_QUEUE",
        "CUSTOMER_HOLD",
        "CUSTOMER_WHISPER",
        "AGENT_HOLD",
        "AGENT_WHISPER",
        "OUTBOUND_WHISPER",
        "AGENT_TRANSFER",
        "QUEUE_TRANSFER"
      ],
      "type": "string"
    },
    "ContactFlowTypes": {
      "items": {
        "$ref": "#/definitions/ContactFlowType"
      },
      "maxItems": 10,
      "type": "array"
    },
    "ContactId": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "ContactNotFoundException": {},
    "ContactReferences": {
      "additionalProperties": {
        "$ref": "#/definitions/Reference"
      },
      "type": "object"
    },
    "CreateContactFlowRequest": {
      "properties": {
        "Content": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowContent"
            },
            {
              "description": "The content of the contact flow. "
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowDescription"
            },
            {
              "description": "The description of the contact flow. "
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowName"
            },
            {
              "description": "The name of the contact flow."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "One or more tags."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowType"
            },
            {
              "description": "The type of the contact flow. For descriptions of the available types, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types\">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator Guide</i>."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Type",
        "Content"
      ],
      "title": "CreateContactFlowRequest",
      "type": "object"
    },
    "CreateContactFlowResponse": {
      "properties": {
        "ContactFlowArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the contact flow."
            }
          ]
        },
        "ContactFlowId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowId"
            },
            {
              "description": "The identifier of the contact flow."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateInstanceRequest": {
      "properties": {
        "ClientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientToken"
            },
            {
              "description": "The idempotency token."
            }
          ]
        },
        "DirectoryId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryId"
            },
            {
              "description": "The identifier for the directory."
            }
          ]
        },
        "IdentityManagementType": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryType"
            },
            {
              "description": "The type of identity management for your Amazon Connect users."
            }
          ]
        },
        "InboundCallsEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/InboundCallsEnabled"
            },
            {
              "description": "Whether your contact center handles incoming contacts."
            }
          ]
        },
        "InstanceAlias": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryAlias"
            },
            {
              "description": "The name for your instance."
            }
          ]
        },
        "OutboundCallsEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/OutboundCallsEnabled"
            },
            {
              "description": "Whether your contact center allows outbound calls."
            }
          ]
        }
      },
      "required": [
        "IdentityManagementType",
        "InboundCallsEnabled",
        "OutboundCallsEnabled"
      ],
      "title": "CreateInstanceRequest",
      "type": "object"
    },
    "CreateInstanceResponse": {
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the instance."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier for the instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateIntegrationAssociationRequest": {
      "properties": {
        "IntegrationArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the integration."
            }
          ]
        },
        "IntegrationType": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegrationType"
            },
            {
              "description": "The type of information to be ingested."
            }
          ]
        },
        "SourceApplicationName": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceApplicationName"
            },
            {
              "description": "The name of the external application."
            }
          ]
        },
        "SourceApplicationUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/URI"
            },
            {
              "description": "The URL for the external application."
            }
          ]
        },
        "SourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceType"
            },
            {
              "description": "The type of the data source."
            }
          ]
        }
      },
      "required": [
        "IntegrationType",
        "IntegrationArn",
        "SourceApplicationUrl",
        "SourceApplicationName",
        "SourceType"
      ],
      "title": "CreateIntegrationAssociationRequest",
      "type": "object"
    },
    "CreateIntegrationAssociationResponse": {
      "properties": {
        "IntegrationAssociationArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the association."
            }
          ]
        },
        "IntegrationAssociationId": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegrationAssociationId"
            },
            {
              "description": "The identifier for the association."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateRoutingProfileRequest": {
      "properties": {
        "DefaultOutboundQueueId": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueId"
            },
            {
              "description": "The default outbound queue for the routing profile."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileDescription"
            },
            {
              "description": "Description of the routing profile. Must not be more than 250 characters."
            }
          ]
        },
        "MediaConcurrencies": {
          "allOf": [
            {
              "$ref": "#/definitions/MediaConcurrencies"
            },
            {
              "description": "The channels agents can handle in the Contact Control Panel (CCP) for this routing profile."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileName"
            },
            {
              "description": "The name of the routing profile. Must not be more than 127 characters."
            }
          ]
        },
        "QueueConfigs": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileQueueConfigList"
            },
            {
              "description": "The inbound queues associated with the routing profile. If no queue is added, the agent can only make outbound calls."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "One or more tags."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Description",
        "DefaultOutboundQueueId",
        "MediaConcurrencies"
      ],
      "title": "CreateRoutingProfileRequest",
      "type": "object"
    },
    "CreateRoutingProfileResponse": {
      "properties": {
        "RoutingProfileArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the routing profile."
            }
          ]
        },
        "RoutingProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileId"
            },
            {
              "description": "The identifier of the routing profile."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateUseCaseRequest": {
      "properties": {
        "UseCaseType": {
          "allOf": [
            {
              "$ref": "#/definitions/UseCaseType"
            },
            {
              "description": "The type of use case to associate to the AppIntegration association. Each AppIntegration association can have only one of each use case type."
            }
          ]
        }
      },
      "required": [
        "UseCaseType"
      ],
      "title": "CreateUseCaseRequest",
      "type": "object"
    },
    "CreateUseCaseResponse": {
      "properties": {
        "UseCaseArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the use case."
            }
          ]
        },
        "UseCaseId": {
          "allOf": [
            {
              "$ref": "#/definitions/UseCaseId"
            },
            {
              "description": "The identifier of the use case."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateUserHierarchyGroupRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupName"
            },
            {
              "description": "The name of the user hierarchy group. Must not be more than 100 characters."
            }
          ]
        },
        "ParentGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupId"
            },
            {
              "description": "The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "CreateUserHierarchyGroupRequest",
      "type": "object"
    },
    "CreateUserHierarchyGroupResponse": {
      "properties": {
        "HierarchyGroupArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the hierarchy group. "
            }
          ]
        },
        "HierarchyGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupId"
            },
            {
              "description": "The identifier of the hierarchy group."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateUserRequest": {
      "properties": {
        "DirectoryUserId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryUserId"
            },
            {
              "description": "<p>The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory.</p> <p>This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.</p>"
            }
          ]
        },
        "HierarchyGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupId"
            },
            {
              "description": "The identifier of the hierarchy group for the user."
            }
          ]
        },
        "IdentityInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/UserIdentityInfo"
            },
            {
              "description": "The information about the identity of the user."
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/Password"
            },
            {
              "description": "The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password."
            }
          ]
        },
        "PhoneConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/UserPhoneConfig"
            },
            {
              "description": "The phone settings for the user."
            }
          ]
        },
        "RoutingProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileId"
            },
            {
              "description": "The identifier of the routing profile for the user."
            }
          ]
        },
        "SecurityProfileIds": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityProfileIds"
            },
            {
              "description": "The identifier of the security profile for the user."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "One or more tags."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/AgentUsername"
            },
            {
              "description": "The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\\@]+."
            }
          ]
        }
      },
      "required": [
        "Username",
        "PhoneConfig",
        "SecurityProfileIds",
        "RoutingProfileId"
      ],
      "title": "CreateUserRequest",
      "type": "object"
    },
    "CreateUserResponse": {
      "properties": {
        "UserArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the user account."
            }
          ]
        },
        "UserId": {
          "allOf": [
            {
              "$ref": "#/definitions/UserId"
            },
            {
              "description": "The identifier of the user account."
            }
          ]
        }
      },
      "type": "object"
    },
    "Credentials": {
      "description": "Contains credentials to use for federation.",
      "properties": {
        "AccessToken": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityToken"
            },
            {
              "description": "An access token generated for a federated user to access Amazon Connect."
            }
          ]
        },
        "AccessTokenExpiration": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "A token generated with an expiration time for the session a user is logged in to Amazon Connect."
            }
          ]
        },
        "RefreshToken": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityToken"
            },
            {
              "description": "Renews a token generated for a user to access the Amazon Connect instance."
            }
          ]
        },
        "RefreshTokenExpiration": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "Renews the expiration timer for a generated token."
            }
          ]
        }
      },
      "type": "object"
    },
    "CurrentMetric": {
      "description": "Contains information about a real-time metric. For a description of each metric, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html\">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/CurrentMetricName"
            },
            {
              "description": "The name of the metric."
            }
          ]
        },
        "Unit": {
          "allOf": [
            {
              "$ref": "#/definitions/Unit"
            },
            {
              "description": "The unit for the metric."
            }
          ]
        }
      },
      "type": "object"
    },
    "CurrentMetricData": {
      "description": "Contains the data for a real-time metric.",
      "properties": {
        "Metric": {
          "allOf": [
            {
              "$ref": "#/definitions/CurrentMetric"
            },
            {
              "description": "Information about the metric."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/Value"
            },
            {
              "description": "The value of the metric."
            }
          ]
        }
      },
      "type": "object"
    },
    "CurrentMetricDataCollections": {
      "items": {
        "$ref": "#/definitions/CurrentMetricData"
      },
      "type": "array"
    },
    "CurrentMetricName": {
      "description": "The current metric names.",
      "enum": [
        "AGENTS_ONLINE",
        "AGENTS_AVAILABLE",
        "AGENTS_ON_CALL",
        "AGENTS_NON_PRODUCTIVE",
        "AGENTS_AFTER_CONTACT_WORK",
        "AGENTS_ERROR",
        "AGENTS_STAFFED",
        "CONTACTS_IN_QUEUE",
        "OLDEST_CONTACT_AGE",
        "CONTACTS_SCHEDULED",
        "AGENTS_ON_CONTACT",
        "SLOTS_ACTIVE",
        "SLOTS_AVAILABLE"
      ],
      "type": "string"
    },
    "CurrentMetricResult": {
      "description": "Contains information about a set of real-time metrics.",
      "properties": {
        "Collections": {
          "allOf": [
            {
              "$ref": "#/definitions/CurrentMetricDataCollections"
            },
            {
              "description": "The set of metrics."
            }
          ]
        },
        "Dimensions": {
          "allOf": [
            {
              "$ref": "#/definitions/Dimensions"
            },
            {
              "description": "The dimensions for the metrics."
            }
          ]
        }
      },
      "type": "object"
    },
    "CurrentMetricResults": {
      "items": {
        "$ref": "#/definitions/CurrentMetricResult"
      },
      "type": "array"
    },
    "CurrentMetrics": {
      "items": {
        "$ref": "#/definitions/CurrentMetric"
      },
      "type": "array"
    },
    "Delay": {
      "maximum": 9999,
      "minimum": 0,
      "type": "integer"
    },
    "DeleteInstanceRequest": {
      "properties": {},
      "title": "DeleteInstanceRequest",
      "type": "object"
    },
    "DeleteIntegrationAssociationRequest": {
      "properties": {},
      "title": "DeleteIntegrationAssociationRequest",
      "type": "object"
    },
    "DeleteUseCaseRequest": {
      "properties": {},
      "title": "DeleteUseCaseRequest",
      "type": "object"
    },
    "DeleteUserHierarchyGroupRequest": {
      "properties": {},
      "title": "DeleteUserHierarchyGroupRequest",
      "type": "object"
    },
    "DeleteUserRequest": {
      "properties": {},
      "title": "DeleteUserRequest",
      "type": "object"
    },
    "DescribeContactFlowRequest": {
      "properties": {},
      "title": "DescribeContactFlowRequest",
      "type": "object"
    },
    "DescribeContactFlowResponse": {
      "properties": {
        "ContactFlow": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlow"
            },
            {
              "description": "Information about the contact flow."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeInstanceAttributeRequest": {
      "properties": {},
      "title": "DescribeInstanceAttributeRequest",
      "type": "object"
    },
    "DescribeInstanceAttributeResponse": {
      "properties": {
        "Attribute": {
          "allOf": [
            {
              "$ref": "#/definitions/Attribute"
            },
            {
              "description": "The type of attribute."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeInstanceRequest": {
      "properties": {},
      "title": "DescribeInstanceRequest",
      "type": "object"
    },
    "DescribeInstanceResponse": {
      "properties": {
        "Instance": {
          "allOf": [
            {
              "$ref": "#/definitions/Instance"
            },
            {
              "description": "The name of the instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeInstanceStorageConfigRequest": {
      "properties": {},
      "title": "DescribeInstanceStorageConfigRequest",
      "type": "object"
    },
    "DescribeInstanceStorageConfigResponse": {
      "properties": {
        "StorageConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceStorageConfig"
            },
            {
              "description": "A valid storage type."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeRoutingProfileRequest": {
      "properties": {},
      "title": "DescribeRoutingProfileRequest",
      "type": "object"
    },
    "DescribeRoutingProfileResponse": {
      "properties": {
        "RoutingProfile": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfile"
            },
            {
              "description": "The routing profile."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeUserHierarchyGroupRequest": {
      "properties": {},
      "title": "DescribeUserHierarchyGroupRequest",
      "type": "object"
    },
    "DescribeUserHierarchyGroupResponse": {
      "properties": {
        "HierarchyGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroup"
            },
            {
              "description": "Information about the hierarchy group."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeUserHierarchyStructureRequest": {
      "properties": {},
      "title": "DescribeUserHierarchyStructureRequest",
      "type": "object"
    },
    "DescribeUserHierarchyStructureResponse": {
      "properties": {
        "HierarchyStructure": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyStructure"
            },
            {
              "description": "Information about the hierarchy structure."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeUserRequest": {
      "properties": {},
      "title": "DescribeUserRequest",
      "type": "object"
    },
    "DescribeUserResponse": {
      "properties": {
        "User": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "description": "Information about the user account and configuration settings."
            }
          ]
        }
      },
      "type": "object"
    },
    "Description": {
      "maxLength": 4096,
      "minLength": 0,
      "type": "string"
    },
    "DestinationNotAllowedException": {},
    "Dimensions": {
      "description": "Contains information about the dimensions for a set of metrics.",
      "properties": {
        "Channel": {
          "allOf": [
            {
              "$ref": "#/definitions/Channel"
            },
            {
              "description": "The channel used for grouping and filters."
            }
          ]
        },
        "Queue": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueReference"
            },
            {
              "description": "Information about the queue for which metrics are returned."
            }
          ]
        }
      },
      "type": "object"
    },
    "DirectoryAlias": {
      "format": "password",
      "maxLength": 62,
      "minLength": 1,
      "pattern": "^(?!d-)([\\da-zA-Z]+)([-]*[\\da-zA-Z])*$",
      "type": "string"
    },
    "DirectoryId": {
      "maxLength": 12,
      "minLength": 12,
      "pattern": "^d-[0-9a-f]{10}$",
      "type": "string"
    },
    "DirectoryType": {
      "enum": [
        "SAML",
        "CONNECT_MANAGED",
        "EXISTING_DIRECTORY"
      ],
      "type": "string"
    },
    "DirectoryUserId": {
      "type": "string"
    },
    "DisassociateApprovedOriginRequest": {
      "properties": {},
      "title": "DisassociateApprovedOriginRequest",
      "type": "object"
    },
    "DisassociateInstanceStorageConfigRequest": {
      "properties": {},
      "title": "DisassociateInstanceStorageConfigRequest",
      "type": "object"
    },
    "DisassociateLambdaFunctionRequest": {
      "properties": {},
      "title": "DisassociateLambdaFunctionRequest",
      "type": "object"
    },
    "DisassociateLexBotRequest": {
      "properties": {},
      "title": "DisassociateLexBotRequest",
      "type": "object"
    },
    "DisassociateRoutingProfileQueuesRequest": {
      "properties": {
        "QueueReferences": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileQueueReferenceList"
            },
            {
              "description": "The queues to disassociate from this routing profile."
            }
          ]
        }
      },
      "required": [
        "QueueReferences"
      ],
      "title": "DisassociateRoutingProfileQueuesRequest",
      "type": "object"
    },
    "DisassociateSecurityKeyRequest": {
      "properties": {},
      "title": "DisassociateSecurityKeyRequest",
      "type": "object"
    },
    "DisplayName": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "DuplicateResourceException": {},
    "Email": {
      "type": "string"
    },
    "EncryptionConfig": {
      "description": "The encryption configuration.",
      "properties": {
        "EncryptionType": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionType"
            },
            {
              "description": "The type of encryption."
            }
          ]
        },
        "KeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/KeyId"
            },
            {
              "description": "The identifier of the encryption key."
            }
          ]
        }
      },
      "required": [
        "EncryptionType",
        "KeyId"
      ],
      "type": "object"
    },
    "EncryptionType": {
      "enum": [
        "KMS"
      ],
      "type": "string"
    },
    "Filters": {
      "description": "Contains the filter to apply when retrieving metrics.",
      "properties": {
        "Channels": {
          "allOf": [
            {
              "$ref": "#/definitions/Channels"
            },
            {
              "description": "The channel to use to filter the metrics."
            }
          ]
        },
        "Queues": {
          "allOf": [
            {
              "$ref": "#/definitions/Queues"
            },
            {
              "description": "The queues to use to filter the metrics. You can specify up to 100 queues per request."
            }
          ]
        }
      },
      "type": "object"
    },
    "FunctionArn": {
      "maxLength": 140,
      "minLength": 1,
      "type": "string"
    },
    "FunctionArnsList": {
      "items": {
        "$ref": "#/definitions/FunctionArn"
      },
      "type": "array"
    },
    "GetContactAttributesRequest": {
      "properties": {},
      "title": "GetContactAttributesRequest",
      "type": "object"
    },
    "GetContactAttributesResponse": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/Attributes"
            },
            {
              "description": "Information about the attributes."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetCurrentMetricDataRequest": {
      "properties": {
        "CurrentMetrics": {
          "allOf": [
            {
              "$ref": "#/definitions/CurrentMetrics"
            },
            {
              "description": "<p>The metrics to retrieve. Specify the name and unit for each metric. The following metrics are available. For a description of all the metrics, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html\">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>AGENTS_AFTER_CONTACT_WORK</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#aftercallwork-real-time\">ACW</a> </p> </dd> <dt>AGENTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#available-real-time\">Available</a> </p> </dd> <dt>AGENTS_ERROR</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#error-real-time\">Error</a> </p> </dd> <dt>AGENTS_NON_PRODUCTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#non-productive-time-real-time\">NPT (Non-Productive Time)</a> </p> </dd> <dt>AGENTS_ON_CALL</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time\">On contact</a> </p> </dd> <dt>AGENTS_ON_CONTACT</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time\">On contact</a> </p> </dd> <dt>AGENTS_ONLINE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#online-real-time\">Online</a> </p> </dd> <dt>AGENTS_STAFFED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#staffed-real-time\">Staffed</a> </p> </dd> <dt>CONTACTS_IN_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#in-queue-real-time\">In queue</a> </p> </dd> <dt>CONTACTS_SCHEDULED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#scheduled-real-time\">Scheduled</a> </p> </dd> <dt>OLDEST_CONTACT_AGE</dt> <dd> <p>Unit: SECONDS</p> <p>When you use groupings, Unit says SECONDS but the Value is returned in MILLISECONDS. For example, if you get a response like this:</p> <p> <code>{ \"Metric\": { \"Name\": \"OLDEST_CONTACT_AGE\", \"Unit\": \"SECONDS\" }, \"Value\": 24113.0 </code>}</p> <p>The actual OLDEST_CONTACT_AGE is 24 seconds.</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#oldest-real-time\">Oldest</a> </p> </dd> <dt>SLOTS_ACTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#active-real-time\">Active</a> </p> </dd> <dt>SLOTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#availability-real-time\">Availability</a> </p> </dd> </dl>"
            }
          ]
        },
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/Filters"
            },
            {
              "description": "The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is retrieved only for the resources associated with the queues or channels included in the filter. You can include both queue IDs and queue ARNs in the same request. VOICE, CHAT, and TASK channels are supported."
            }
          ]
        },
        "Groupings": {
          "allOf": [
            {
              "$ref": "#/definitions/Groupings"
            },
            {
              "description": "<p>The grouping applied to the metrics returned. For example, when grouped by <code>QUEUE</code>, the metrics returned apply to each queue rather than aggregated for all queues. If you group by <code>CHANNEL</code>, you should include a Channels filter. VOICE, CHAT, and TASK channels are supported.</p> <p>If no <code>Grouping</code> is included in the request, a summary of metrics is returned.</p>"
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResult100"
            },
            {
              "description": "The maximimum number of results to return per page."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>"
            }
          ]
        }
      },
      "required": [
        "Filters",
        "CurrentMetrics"
      ],
      "title": "GetCurrentMetricDataRequest",
      "type": "object"
    },
    "GetCurrentMetricDataResponse": {
      "properties": {
        "DataSnapshotTime": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "The time at which the metrics were retrieved and cached for pagination."
            }
          ]
        },
        "MetricResults": {
          "allOf": [
            {
              "$ref": "#/definitions/CurrentMetricResults"
            },
            {
              "description": "Information about the real-time metrics."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "<p>If there are additional results, this is the token for the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "GetFederationTokenRequest": {
      "properties": {},
      "title": "GetFederationTokenRequest",
      "type": "object"
    },
    "GetFederationTokenResponse": {
      "properties": {
        "Credentials": {
          "allOf": [
            {
              "$ref": "#/definitions/Credentials"
            },
            {
              "description": "The credentials to use for federation."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetMetricDataRequest": {
      "properties": {
        "EndTime": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "<p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be specified using an interval of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p> <p>The time range between the start and end time must be less than 24 hours.</p>"
            }
          ]
        },
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/Filters"
            },
            {
              "description": "The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is retrieved only for the resources associated with the queues or channels included in the filter. You can include both queue IDs and queue ARNs in the same request. VOICE, CHAT, and TASK channels are supported."
            }
          ]
        },
        "Groupings": {
          "allOf": [
            {
              "$ref": "#/definitions/Groupings"
            },
            {
              "description": "<p>The grouping applied to the metrics returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values returned apply to the metrics for each queue rather than aggregated for all queues.</p> <p>The only supported grouping is <code>QUEUE</code>.</p> <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>"
            }
          ]
        },
        "HistoricalMetrics": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoricalMetrics"
            },
            {
              "description": "<p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The following historical metrics are available. For a description of each metric, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html\">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>ABANDON_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>AFTER_CONTACT_WORK_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>API_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CALLBACK_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_ABANDONED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_CONSULTED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_INCOMING</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_OUTBOUND</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HOLD_ABANDONS</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_MISSED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_QUEUED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>HANDLE_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_AND_HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>OCCUPANCY</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> </dd> <dt>QUEUE_ANSWER_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>QUEUED_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: MAX</p> </dd> <dt>SERVICE_LEVEL</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> <p>Threshold: Only \"Less than\" comparisons are supported, with the following service level thresholds: 15, 20, 25, 30, 45, 60, 90, 120, 180, 240, 300, 600</p> </dd> </dl>"
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResult100"
            },
            {
              "description": "The maximimum number of results to return per page."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results."
            }
          ]
        },
        "StartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "<p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes, such as 10:05, 10:10, 10:15.</p> <p>The start time cannot be earlier than 24 hours before the time of the request. Historical metrics are available only for 24 hours.</p>"
            }
          ]
        }
      },
      "required": [
        "StartTime",
        "EndTime",
        "Filters",
        "HistoricalMetrics"
      ],
      "title": "GetMetricDataRequest",
      "type": "object"
    },
    "GetMetricDataResponse": {
      "properties": {
        "MetricResults": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoricalMetricResults"
            },
            {
              "description": "<p>Information about the historical metrics.</p> <p>If no grouping is specified, a summary of metric data is returned.</p>"
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "<p>If there are additional results, this is the token for the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "Grouping": {
      "enum": [
        "QUEUE",
        "CHANNEL"
      ],
      "type": "string"
    },
    "Groupings": {
      "items": {
        "$ref": "#/definitions/Grouping"
      },
      "maxItems": 2,
      "type": "array"
    },
    "HierarchyGroup": {
      "description": "Contains information about a hierarchy group.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the hierarchy group."
            }
          ]
        },
        "HierarchyPath": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyPath"
            },
            {
              "description": "Information about the levels in the hierarchy group."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupId"
            },
            {
              "description": "The identifier of the hierarchy group."
            }
          ]
        },
        "LevelId": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevelId"
            },
            {
              "description": "The identifier of the level in the hierarchy group."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupName"
            },
            {
              "description": "The name of the hierarchy group."
            }
          ]
        }
      },
      "type": "object"
    },
    "HierarchyGroupId": {
      "type": "string"
    },
    "HierarchyGroupName": {
      "type": "string"
    },
    "HierarchyGroupSummary": {
      "description": "Contains summary information about a hierarchy group.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the hierarchy group."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupId"
            },
            {
              "description": "The identifier of the hierarchy group."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupName"
            },
            {
              "description": "The name of the hierarchy group."
            }
          ]
        }
      },
      "type": "object"
    },
    "HierarchyGroupSummaryList": {
      "items": {
        "$ref": "#/definitions/HierarchyGroupSummary"
      },
      "type": "array"
    },
    "HierarchyLevel": {
      "description": "Contains information about a hierarchy level.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the hierarchy level."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevelId"
            },
            {
              "description": "The identifier of the hierarchy level."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevelName"
            },
            {
              "description": "The name of the hierarchy level."
            }
          ]
        }
      },
      "type": "object"
    },
    "HierarchyLevelId": {
      "type": "string"
    },
    "HierarchyLevelName": {
      "type": "string"
    },
    "HierarchyLevelUpdate": {
      "description": "Contains information about the hierarchy level to update.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevelName"
            },
            {
              "description": "The name of the user hierarchy level. Must not be more than 50 characters."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "HierarchyPath": {
      "description": "Contains information about the levels of a hierarchy group.",
      "properties": {
        "LevelFive": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupSummary"
            },
            {
              "description": "Information about level five."
            }
          ]
        },
        "LevelFour": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupSummary"
            },
            {
              "description": "Information about level four."
            }
          ]
        },
        "LevelOne": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupSummary"
            },
            {
              "description": "Information about level one."
            }
          ]
        },
        "LevelThree": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupSummary"
            },
            {
              "description": "Information about level three."
            }
          ]
        },
        "LevelTwo": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupSummary"
            },
            {
              "description": "Information about level two."
            }
          ]
        }
      },
      "type": "object"
    },
    "HierarchyStructure": {
      "description": "Contains information about a hierarchy structure.",
      "properties": {
        "LevelFive": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevel"
            },
            {
              "description": "Information about level five."
            }
          ]
        },
        "LevelFour": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevel"
            },
            {
              "description": "Information about level four."
            }
          ]
        },
        "LevelOne": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevel"
            },
            {
              "description": "Information about level one."
            }
          ]
        },
        "LevelThree": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevel"
            },
            {
              "description": "Information about level three."
            }
          ]
        },
        "LevelTwo": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevel"
            },
            {
              "description": "Information about level two."
            }
          ]
        }
      },
      "type": "object"
    },
    "HierarchyStructureUpdate": {
      "description": "Contains information about the level hierarchy to update.",
      "properties": {
        "LevelFive": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevelUpdate"
            },
            {
              "description": "The update for level five."
            }
          ]
        },
        "LevelFour": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevelUpdate"
            },
            {
              "description": "The update for level four."
            }
          ]
        },
        "LevelOne": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevelUpdate"
            },
            {
              "description": "The update for level one."
            }
          ]
        },
        "LevelThree": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevelUpdate"
            },
            {
              "description": "The update for level three."
            }
          ]
        },
        "LevelTwo": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyLevelUpdate"
            },
            {
              "description": "The update for level two."
            }
          ]
        }
      },
      "type": "object"
    },
    "HistoricalMetric": {
      "description": "Contains information about a historical metric. For a description of each metric, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html\">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoricalMetricName"
            },
            {
              "description": "The name of the metric."
            }
          ]
        },
        "Statistic": {
          "allOf": [
            {
              "$ref": "#/definitions/Statistic"
            },
            {
              "description": "The statistic for the metric."
            }
          ]
        },
        "Threshold": {
          "allOf": [
            {
              "$ref": "#/definitions/Threshold"
            },
            {
              "description": "The threshold for the metric, used with service level metrics."
            }
          ]
        },
        "Unit": {
          "allOf": [
            {
              "$ref": "#/definitions/Unit"
            },
            {
              "description": "The unit for the metric."
            }
          ]
        }
      },
      "type": "object"
    },
    "HistoricalMetricData": {
      "description": "Contains the data for a historical metric.",
      "properties": {
        "Metric": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoricalMetric"
            },
            {
              "description": "Information about the metric."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/Value"
            },
            {
              "description": "The value of the metric."
            }
          ]
        }
      },
      "type": "object"
    },
    "HistoricalMetricDataCollections": {
      "items": {
        "$ref": "#/definitions/HistoricalMetricData"
      },
      "type": "array"
    },
    "HistoricalMetricName": {
      "description": "The historical metric names.",
      "enum": [
        "CONTACTS_QUEUED",
        "CONTACTS_HANDLED",
        "CONTACTS_ABANDONED",
        "CONTACTS_CONSULTED",
        "CONTACTS_AGENT_HUNG_UP_FIRST",
        "CONTACTS_HANDLED_INCOMING",
        "CONTACTS_HANDLED_OUTBOUND",
        "CONTACTS_HOLD_ABANDONS",
        "CONTACTS_TRANSFERRED_IN",
        "CONTACTS_TRANSFERRED_OUT",
        "CONTACTS_TRANSFERRED_IN_FROM_QUEUE",
        "CONTACTS_TRANSFERRED_OUT_FROM_QUEUE",
        "CONTACTS_MISSED",
        "CALLBACK_CONTACTS_HANDLED",
        "API_CONTACTS_HANDLED",
        "OCCUPANCY",
        "HANDLE_TIME",
        "AFTER_CONTACT_WORK_TIME",
        "QUEUED_TIME",
        "ABANDON_TIME",
        "QUEUE_ANSWER_TIME",
        "HOLD_TIME",
        "INTERACTION_TIME",
        "INTERACTION_AND_HOLD_TIME",
        "SERVICE_LEVEL"
      ],
      "type": "string"
    },
    "HistoricalMetricResult": {
      "description": "Contains information about the historical metrics retrieved.",
      "properties": {
        "Collections": {
          "allOf": [
            {
              "$ref": "#/definitions/HistoricalMetricDataCollections"
            },
            {
              "description": "The set of metrics."
            }
          ]
        },
        "Dimensions": {
          "allOf": [
            {
              "$ref": "#/definitions/Dimensions"
            },
            {
              "description": "The dimension for the metrics."
            }
          ]
        }
      },
      "type": "object"
    },
    "HistoricalMetricResults": {
      "items": {
        "$ref": "#/definitions/HistoricalMetricResult"
      },
      "type": "array"
    },
    "HistoricalMetrics": {
      "items": {
        "$ref": "#/definitions/HistoricalMetric"
      },
      "type": "array"
    },
    "Hours": {
      "maximum": 87600,
      "minimum": 0,
      "type": "integer"
    },
    "HoursOfOperationId": {
      "type": "string"
    },
    "HoursOfOperationName": {
      "type": "string"
    },
    "HoursOfOperationSummary": {
      "description": "Contains summary information about hours of operation for a contact center.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the hours of operation."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/HoursOfOperationId"
            },
            {
              "description": "The identifier of the hours of operation."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/HoursOfOperationName"
            },
            {
              "description": "The name of the hours of operation."
            }
          ]
        }
      },
      "type": "object"
    },
    "HoursOfOperationSummaryList": {
      "items": {
        "$ref": "#/definitions/HoursOfOperationSummary"
      },
      "type": "array"
    },
    "InboundCallsEnabled": {
      "type": "boolean"
    },
    "Instance": {
      "description": "The Amazon Connect instance.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the instance."
            }
          ]
        },
        "CreatedTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "When the instance was created."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        },
        "IdentityManagementType": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryType"
            },
            {
              "description": "The identity management type."
            }
          ]
        },
        "InboundCallsEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/InboundCallsEnabled"
            },
            {
              "description": "Whether inbound calls are enabled."
            }
          ]
        },
        "InstanceAlias": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryAlias"
            },
            {
              "description": "The alias of instance."
            }
          ]
        },
        "InstanceStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceStatus"
            },
            {
              "description": "The state of the instance."
            }
          ]
        },
        "OutboundCallsEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/OutboundCallsEnabled"
            },
            {
              "description": "Whether outbound calls are enabled."
            }
          ]
        },
        "ServiceRole": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The service role of the instance."
            }
          ]
        },
        "StatusReason": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceStatusReason"
            },
            {
              "description": "Relevant details why the instance was not successfully created. "
            }
          ]
        }
      },
      "type": "object"
    },
    "InstanceAttributeType": {
      "enum": [
        "INBOUND_CALLS",
        "OUTBOUND_CALLS",
        "CONTACTFLOW_LOGS",
        "CONTACT_LENS",
        "AUTO_RESOLVE_BEST_VOICES",
        "USE_CUSTOM_TTS_VOICES",
        "EARLY_MEDIA"
      ],
      "type": "string"
    },
    "InstanceAttributeValue": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "InstanceId": {
      "maxLength": 100,
      "minLength": 1,
      "type": "string"
    },
    "InstanceStatus": {
      "enum": [
        "CREATION_IN_PROGRESS",
        "ACTIVE",
        "CREATION_FAILED"
      ],
      "type": "string"
    },
    "InstanceStatusReason": {
      "description": "Relevant details why the instance was not successfully created.",
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The message."
            }
          ]
        }
      },
      "type": "object"
    },
    "InstanceStorageConfig": {
      "description": "The storage configuration for the instance.",
      "properties": {
        "AssociationId": {
          "allOf": [
            {
              "$ref": "#/definitions/AssociationId"
            },
            {
              "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID."
            }
          ]
        },
        "KinesisFirehoseConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/KinesisFirehoseConfig"
            },
            {
              "description": "The configuration of the Kinesis Firehose delivery stream."
            }
          ]
        },
        "KinesisStreamConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/KinesisStreamConfig"
            },
            {
              "description": "The configuration of the Kinesis data stream."
            }
          ]
        },
        "KinesisVideoStreamConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/KinesisVideoStreamConfig"
            },
            {
              "description": "The configuration of the Kinesis video stream."
            }
          ]
        },
        "S3Config": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Config"
            },
            {
              "description": "The S3 configuration."
            }
          ]
        },
        "StorageType": {
          "allOf": [
            {
              "$ref": "#/definitions/StorageType"
            },
            {
              "description": "A valid storage type."
            }
          ]
        }
      },
      "required": [
        "StorageType"
      ],
      "type": "object"
    },
    "InstanceStorageConfigs": {
      "items": {
        "$ref": "#/definitions/InstanceStorageConfig"
      },
      "type": "array"
    },
    "InstanceStorageResourceType": {
      "enum": [
        "CHAT_TRANSCRIPTS",
        "CALL_RECORDINGS",
        "SCHEDULED_REPORTS",
        "MEDIA_STREAMS",
        "CONTACT_TRACE_RECORDS",
        "AGENT_EVENTS"
      ],
      "type": "string"
    },
    "InstanceSummary": {
      "description": "Information about the instance.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the instance."
            }
          ]
        },
        "CreatedTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "When the instance was created."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the instance."
            }
          ]
        },
        "IdentityManagementType": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryType"
            },
            {
              "description": "The identity management type of the instance."
            }
          ]
        },
        "InboundCallsEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/InboundCallsEnabled"
            },
            {
              "description": "Whether inbound calls are enabled."
            }
          ]
        },
        "InstanceAlias": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryAlias"
            },
            {
              "description": "The alias of the instance."
            }
          ]
        },
        "InstanceStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceStatus"
            },
            {
              "description": "The state of the instance."
            }
          ]
        },
        "OutboundCallsEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/OutboundCallsEnabled"
            },
            {
              "description": "Whether outbound calls are enabled."
            }
          ]
        },
        "ServiceRole": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The service role of the instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "InstanceSummaryList": {
      "items": {
        "$ref": "#/definitions/InstanceSummary"
      },
      "type": "array"
    },
    "IntegrationAssociationId": {
      "maxLength": 200,
      "minLength": 1,
      "type": "string"
    },
    "IntegrationAssociationSummary": {
      "description": "Contains summary information about the associated AppIntegrations.",
      "properties": {
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        },
        "IntegrationArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the AppIntegration."
            }
          ]
        },
        "IntegrationAssociationArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the AppIntegration association."
            }
          ]
        },
        "IntegrationAssociationId": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegrationAssociationId"
            },
            {
              "description": "The identifier for the AppIntegration association."
            }
          ]
        },
        "IntegrationType": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegrationType"
            },
            {
              "description": "The integration type."
            }
          ]
        },
        "SourceApplicationName": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceApplicationName"
            },
            {
              "description": "The user-provided, friendly name for the external application."
            }
          ]
        },
        "SourceApplicationUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/URI"
            },
            {
              "description": "The URL for the external application."
            }
          ]
        },
        "SourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/SourceType"
            },
            {
              "description": "The name of the source."
            }
          ]
        }
      },
      "type": "object"
    },
    "IntegrationAssociationSummaryList": {
      "items": {
        "$ref": "#/definitions/IntegrationAssociationSummary"
      },
      "type": "array"
    },
    "IntegrationType": {
      "enum": [
        "EVENT"
      ],
      "type": "string"
    },
    "InternalServiceException": {},
    "InvalidContactFlowException": {},
    "InvalidParameterException": {},
    "InvalidRequestException": {},
    "KeyId": {
      "maxLength": 128,
      "minLength": 1,
      "type": "string"
    },
    "KinesisFirehoseConfig": {
      "description": "Configuration information of a Kinesis Firehose delivery stream.",
      "properties": {
        "FirehoseArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the delivery stream."
            }
          ]
        }
      },
      "required": [
        "FirehoseArn"
      ],
      "type": "object"
    },
    "KinesisStreamConfig": {
      "description": "Configuration information of a Kinesis data stream.",
      "properties": {
        "StreamArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the data stream."
            }
          ]
        }
      },
      "required": [
        "StreamArn"
      ],
      "type": "object"
    },
    "KinesisVideoStreamConfig": {
      "description": "Configuration information of a Kinesis video stream.",
      "properties": {
        "EncryptionConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionConfig"
            },
            {
              "description": "The encryption configuration."
            }
          ]
        },
        "Prefix": {
          "allOf": [
            {
              "$ref": "#/definitions/Prefix"
            },
            {
              "description": "The prefix of the video stream."
            }
          ]
        },
        "RetentionPeriodHours": {
          "allOf": [
            {
              "$ref": "#/definitions/Hours"
            },
            {
              "description": "<p>The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p>"
            }
          ]
        }
      },
      "required": [
        "Prefix",
        "RetentionPeriodHours",
        "EncryptionConfig"
      ],
      "type": "object"
    },
    "LexBot": {
      "description": "Configuration information of an Amazon Lex bot.",
      "properties": {
        "LexRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/LexRegion"
            },
            {
              "description": "The Region the Amazon Lex bot was created in."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/BotName"
            },
            {
              "description": "The name of the Amazon Lex bot."
            }
          ]
        }
      },
      "type": "object"
    },
    "LexBotsList": {
      "items": {
        "$ref": "#/definitions/LexBot"
      },
      "type": "array"
    },
    "LexRegion": {
      "maxLength": 60,
      "type": "string"
    },
    "LimitExceededException": {},
    "ListApprovedOriginsRequest": {
      "properties": {},
      "title": "ListApprovedOriginsRequest",
      "type": "object"
    },
    "ListApprovedOriginsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "Origins": {
          "allOf": [
            {
              "$ref": "#/definitions/OriginsList"
            },
            {
              "description": "The approved origins."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListContactFlowsRequest": {
      "properties": {},
      "title": "ListContactFlowsRequest",
      "type": "object"
    },
    "ListContactFlowsResponse": {
      "properties": {
        "ContactFlowSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowSummaryList"
            },
            {
              "description": "Information about the contact flows."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListHoursOfOperationsRequest": {
      "properties": {},
      "title": "ListHoursOfOperationsRequest",
      "type": "object"
    },
    "ListHoursOfOperationsResponse": {
      "properties": {
        "HoursOfOperationSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/HoursOfOperationSummaryList"
            },
            {
              "description": "Information about the hours of operation."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListInstanceAttributesRequest": {
      "properties": {},
      "title": "ListInstanceAttributesRequest",
      "type": "object"
    },
    "ListInstanceAttributesResponse": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AttributesList"
            },
            {
              "description": "The attribute types."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListInstanceStorageConfigsRequest": {
      "properties": {},
      "title": "ListInstanceStorageConfigsRequest",
      "type": "object"
    },
    "ListInstanceStorageConfigsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "StorageConfigs": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceStorageConfigs"
            },
            {
              "description": "A valid storage type."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListInstancesRequest": {
      "properties": {},
      "title": "ListInstancesRequest",
      "type": "object"
    },
    "ListInstancesResponse": {
      "properties": {
        "InstanceSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceSummaryList"
            },
            {
              "description": "Information about the instances."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListIntegrationAssociationsRequest": {
      "properties": {},
      "title": "ListIntegrationAssociationsRequest",
      "type": "object"
    },
    "ListIntegrationAssociationsResponse": {
      "properties": {
        "IntegrationAssociationSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegrationAssociationSummaryList"
            },
            {
              "description": "The AppIntegration associations."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListLambdaFunctionsRequest": {
      "properties": {},
      "title": "ListLambdaFunctionsRequest",
      "type": "object"
    },
    "ListLambdaFunctionsResponse": {
      "properties": {
        "LambdaFunctions": {
          "allOf": [
            {
              "$ref": "#/definitions/FunctionArnsList"
            },
            {
              "description": "The Lambdafunction ARNs associated with the specified instance."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListLexBotsRequest": {
      "properties": {},
      "title": "ListLexBotsRequest",
      "type": "object"
    },
    "ListLexBotsResponse": {
      "properties": {
        "LexBots": {
          "allOf": [
            {
              "$ref": "#/definitions/LexBotsList"
            },
            {
              "description": "The the names and regions of the Amazon Lex bots associated with the specified instance."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListPhoneNumbersRequest": {
      "properties": {},
      "title": "ListPhoneNumbersRequest",
      "type": "object"
    },
    "ListPhoneNumbersResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "PhoneNumberSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberSummaryList"
            },
            {
              "description": "Information about the phone numbers."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListPromptsRequest": {
      "properties": {},
      "title": "ListPromptsRequest",
      "type": "object"
    },
    "ListPromptsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "PromptSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/PromptSummaryList"
            },
            {
              "description": "Information about the prompts."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListQueuesRequest": {
      "properties": {},
      "title": "ListQueuesRequest",
      "type": "object"
    },
    "ListQueuesResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "QueueSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueSummaryList"
            },
            {
              "description": "Information about the queues."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListRoutingProfileQueuesRequest": {
      "properties": {},
      "title": "ListRoutingProfileQueuesRequest",
      "type": "object"
    },
    "ListRoutingProfileQueuesResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "RoutingProfileQueueConfigSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileQueueConfigSummaryList"
            },
            {
              "description": "Information about the routing profiles."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListRoutingProfilesRequest": {
      "properties": {},
      "title": "ListRoutingProfilesRequest",
      "type": "object"
    },
    "ListRoutingProfilesResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "RoutingProfileSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileSummaryList"
            },
            {
              "description": "Information about the routing profiles."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListSecurityKeysRequest": {
      "properties": {},
      "title": "ListSecurityKeysRequest",
      "type": "object"
    },
    "ListSecurityKeysResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "SecurityKeys": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityKeysList"
            },
            {
              "description": "The security keys."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListSecurityProfilesRequest": {
      "properties": {},
      "title": "ListSecurityProfilesRequest",
      "type": "object"
    },
    "ListSecurityProfilesResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "SecurityProfileSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityProfileSummaryList"
            },
            {
              "description": "Information about the security profiles."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "properties": {},
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Information about the tags."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListUseCasesRequest": {
      "description": "Provides summary information about the use cases for the specified Amazon Connect AppIntegration association.",
      "properties": {},
      "title": "ListUseCasesRequest",
      "type": "object"
    },
    "ListUseCasesResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "UseCaseSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/UseCaseSummaryList"
            },
            {
              "description": "The use cases."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListUserHierarchyGroupsRequest": {
      "properties": {},
      "title": "ListUserHierarchyGroupsRequest",
      "type": "object"
    },
    "ListUserHierarchyGroupsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "UserHierarchyGroupSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupSummaryList"
            },
            {
              "description": "Information about the hierarchy groups."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListUsersRequest": {
      "properties": {},
      "title": "ListUsersRequest",
      "type": "object"
    },
    "ListUsersResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "If there are additional results, this is the token for the next set of results."
            }
          ]
        },
        "UserSummaryList": {
          "allOf": [
            {
              "$ref": "#/definitions/UserSummaryList"
            },
            {
              "description": "Information about the users."
            }
          ]
        }
      },
      "type": "object"
    },
    "MaxResult10": {
      "maximum": 10,
      "minimum": 1,
      "type": "integer"
    },
    "MaxResult100": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "MaxResult1000": {
      "maximum": 1000,
      "minimum": 1,
      "type": "integer"
    },
    "MaxResult2": {
      "maximum": 2,
      "minimum": 1,
      "type": "integer"
    },
    "MaxResult25": {
      "maximum": 25,
      "minimum": 1,
      "type": "integer"
    },
    "MaxResult7": {
      "maximum": 7,
      "minimum": 1,
      "type": "integer"
    },
    "MediaConcurrencies": {
      "items": {
        "$ref": "#/definitions/MediaConcurrency"
      },
      "type": "array"
    },
    "MediaConcurrency": {
      "description": "Contains information about which channels are supported, and how many contacts an agent can have on a channel simultaneously.",
      "properties": {
        "Channel": {
          "allOf": [
            {
              "$ref": "#/definitions/Channel"
            },
            {
              "description": "The channels that agents can handle in the Contact Control Panel (CCP)."
            }
          ]
        },
        "Concurrency": {
          "allOf": [
            {
              "$ref": "#/definitions/Concurrency"
            },
            {
              "description": "The number of contacts an agent can have on a channel simultaneously."
            }
          ]
        }
      },
      "required": [
        "Channel",
        "Concurrency"
      ],
      "type": "object"
    },
    "Name": {
      "maxLength": 512,
      "minLength": 0,
      "type": "string"
    },
    "NextToken": {
      "type": "string"
    },
    "Origin": {
      "maxLength": 267,
      "type": "string"
    },
    "OriginsList": {
      "items": {
        "$ref": "#/definitions/Origin"
      },
      "type": "array"
    },
    "OutboundCallsEnabled": {
      "type": "boolean"
    },
    "OutboundContactNotPermittedException": {},
    "PEM": {
      "maxLength": 1024,
      "minLength": 1,
      "type": "string"
    },
    "ParticipantDetails": {
      "description": "The customer's details.",
      "properties": {
        "DisplayName": {
          "allOf": [
            {
              "$ref": "#/definitions/DisplayName"
            },
            {
              "description": "Display name of the participant."
            }
          ]
        }
      },
      "required": [
        "DisplayName"
      ],
      "type": "object"
    },
    "ParticipantId": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "ParticipantToken": {
      "maxLength": 1000,
      "minLength": 1,
      "type": "string"
    },
    "Password": {
      "pattern": "/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\S]{8,64}$/",
      "type": "string"
    },
    "PhoneNumber": {
      "type": "string"
    },
    "PhoneNumberCountryCode": {
      "enum": [
        "AF",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BA",
        "BW",
        "BR",
        "IO",
        "VG",
        "BN",
        "BG",
        "BF",
        "BI",
        "KH",
        "CM",
        "CA",
        "CV",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CK",
        "CR",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "CD",
        "DK",
        "DJ",
        "DM",
        "DO",
        "TL",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "PF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "CI",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MK",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "AN",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "KP",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "CG",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "KR",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SZ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "VI",
        "UG",
        "UA",
        "AE",
        "GB",
        "US",
        "UY",
        "UZ",
        "VU",
        "VA",
        "VE",
        "VN",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW"
      ],
      "type": "string"
    },
    "PhoneNumberCountryCodes": {
      "items": {
        "$ref": "#/definitions/PhoneNumberCountryCode"
      },
      "maxItems": 10,
      "type": "array"
    },
    "PhoneNumberId": {
      "type": "string"
    },
    "PhoneNumberSummary": {
      "description": "Contains summary information about a phone number for a contact center.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the phone number."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberId"
            },
            {
              "description": "The identifier of the phone number."
            }
          ]
        },
        "PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumber"
            },
            {
              "description": "The phone number."
            }
          ]
        },
        "PhoneNumberCountryCode": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberCountryCode"
            },
            {
              "description": "The ISO country code."
            }
          ]
        },
        "PhoneNumberType": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberType"
            },
            {
              "description": "The type of phone number."
            }
          ]
        }
      },
      "type": "object"
    },
    "PhoneNumberSummaryList": {
      "items": {
        "$ref": "#/definitions/PhoneNumberSummary"
      },
      "type": "array"
    },
    "PhoneNumberType": {
      "enum": [
        "TOLL_FREE",
        "DID"
      ],
      "type": "string"
    },
    "PhoneNumberTypes": {
      "items": {
        "$ref": "#/definitions/PhoneNumberType"
      },
      "maxItems": 2,
      "type": "array"
    },
    "PhoneType": {
      "enum": [
        "SOFT_PHONE",
        "DESK_PHONE"
      ],
      "type": "string"
    },
    "Prefix": {
      "maxLength": 128,
      "minLength": 1,
      "type": "string"
    },
    "Priority": {
      "maximum": 99,
      "minimum": 1,
      "type": "integer"
    },
    "PromptId": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "PromptName": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "PromptSummary": {
      "description": "Contains information about the prompt.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the prompt."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/PromptId"
            },
            {
              "description": "The identifier of the prompt."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/PromptName"
            },
            {
              "description": "The name of the prompt."
            }
          ]
        }
      },
      "type": "object"
    },
    "PromptSummaryList": {
      "items": {
        "$ref": "#/definitions/PromptSummary"
      },
      "type": "array"
    },
    "QueueId": {
      "type": "string"
    },
    "QueueName": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "QueueReference": {
      "description": "Contains information about a queue resource for which metrics are returned.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the queue."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueId"
            },
            {
              "description": "The identifier of the queue."
            }
          ]
        }
      },
      "type": "object"
    },
    "QueueSummary": {
      "description": "Contains summary information about a queue.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the queue."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueId"
            },
            {
              "description": "The identifier of the queue."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueName"
            },
            {
              "description": "The name of the queue."
            }
          ]
        },
        "QueueType": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueType"
            },
            {
              "description": "The type of queue."
            }
          ]
        }
      },
      "type": "object"
    },
    "QueueSummaryList": {
      "items": {
        "$ref": "#/definitions/QueueSummary"
      },
      "type": "array"
    },
    "QueueType": {
      "enum": [
        "STANDARD",
        "AGENT"
      ],
      "type": "string"
    },
    "QueueTypes": {
      "items": {
        "$ref": "#/definitions/QueueType"
      },
      "maxItems": 2,
      "type": "array"
    },
    "Queues": {
      "items": {
        "$ref": "#/definitions/QueueId"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array"
    },
    "Reference": {
      "description": "A link that an agent selects to complete a given task. You can have up to 4,096 UTF-8 bytes across all references for a contact.",
      "properties": {
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/ReferenceType"
            },
            {
              "description": "A valid URL."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/ReferenceValue"
            },
            {
              "description": "A formatted URL that will be shown to an agent in the Contact Control Panel (CCP)"
            }
          ]
        }
      },
      "required": [
        "Value",
        "Type"
      ],
      "type": "object"
    },
    "ReferenceKey": {
      "maxLength": 4096,
      "minLength": 1,
      "type": "string"
    },
    "ReferenceType": {
      "enum": [
        "URL"
      ],
      "type": "string"
    },
    "ReferenceValue": {
      "maxLength": 4096,
      "minLength": 0,
      "type": "string"
    },
    "ResourceConflictException": {},
    "ResourceInUseException": {},
    "ResourceNotFoundException": {},
    "ResumeContactRecordingRequest": {
      "properties": {
        "ContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of the contact."
            }
          ]
        },
        "InitialContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        }
      },
      "required": [
        "InstanceId",
        "ContactId",
        "InitialContactId"
      ],
      "title": "ResumeContactRecordingRequest",
      "type": "object"
    },
    "ResumeContactRecordingResponse": {
      "properties": {},
      "type": "object"
    },
    "RoutingProfile": {
      "description": "Contains information about a routing profile.",
      "properties": {
        "DefaultOutboundQueueId": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueId"
            },
            {
              "description": "The identifier of the default outbound queue for this routing profile."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileDescription"
            },
            {
              "description": "The description of the routing profile."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        },
        "MediaConcurrencies": {
          "allOf": [
            {
              "$ref": "#/definitions/MediaConcurrencies"
            },
            {
              "description": "The channels agents can handle in the Contact Control Panel (CCP) for this routing profile."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileName"
            },
            {
              "description": "The name of the routing profile."
            }
          ]
        },
        "RoutingProfileArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the routing profile."
            }
          ]
        },
        "RoutingProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileId"
            },
            {
              "description": "The identifier of the routing profile."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "One or more tags."
            }
          ]
        }
      },
      "type": "object"
    },
    "RoutingProfileDescription": {
      "maxLength": 250,
      "minLength": 1,
      "type": "string"
    },
    "RoutingProfileId": {
      "type": "string"
    },
    "RoutingProfileName": {
      "maxLength": 127,
      "minLength": 1,
      "type": "string"
    },
    "RoutingProfileQueueConfig": {
      "description": "Contains information about the queue and channel for which priority and delay can be set.",
      "properties": {
        "Delay": {
          "allOf": [
            {
              "$ref": "#/definitions/Delay"
            },
            {
              "description": "The delay, in seconds, a contact should be in the queue before they are routed to an available agent. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html\">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>."
            }
          ]
        },
        "Priority": {
          "allOf": [
            {
              "$ref": "#/definitions/Priority"
            },
            {
              "description": "The order in which contacts are to be handled for the queue. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html\">Queues: priority and delay</a>."
            }
          ]
        },
        "QueueReference": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileQueueReference"
            },
            {
              "description": "Contains information about a queue resource."
            }
          ]
        }
      },
      "required": [
        "QueueReference",
        "Priority",
        "Delay"
      ],
      "type": "object"
    },
    "RoutingProfileQueueConfigList": {
      "items": {
        "$ref": "#/definitions/RoutingProfileQueueConfig"
      },
      "maxItems": 10,
      "minItems": 1,
      "type": "array"
    },
    "RoutingProfileQueueConfigSummary": {
      "description": "Contains summary information about a routing profile queue.",
      "properties": {
        "Channel": {
          "allOf": [
            {
              "$ref": "#/definitions/Channel"
            },
            {
              "description": "The channels this queue supports."
            }
          ]
        },
        "Delay": {
          "allOf": [
            {
              "$ref": "#/definitions/Delay"
            },
            {
              "description": "The delay, in seconds, that a contact should be in the queue before they are routed to an available agent. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html\">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>."
            }
          ]
        },
        "Priority": {
          "allOf": [
            {
              "$ref": "#/definitions/Priority"
            },
            {
              "description": "The order in which contacts are to be handled for the queue. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html\">Queues: priority and delay</a>."
            }
          ]
        },
        "QueueArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the queue."
            }
          ]
        },
        "QueueId": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueId"
            },
            {
              "description": "The identifier of the queue."
            }
          ]
        },
        "QueueName": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueName"
            },
            {
              "description": "The name of the queue."
            }
          ]
        }
      },
      "required": [
        "QueueId",
        "QueueArn",
        "QueueName",
        "Priority",
        "Delay",
        "Channel"
      ],
      "type": "object"
    },
    "RoutingProfileQueueConfigSummaryList": {
      "items": {
        "$ref": "#/definitions/RoutingProfileQueueConfigSummary"
      },
      "type": "array"
    },
    "RoutingProfileQueueReference": {
      "description": "Contains the channel and queue identifier for a routing profile.",
      "properties": {
        "Channel": {
          "allOf": [
            {
              "$ref": "#/definitions/Channel"
            },
            {
              "description": "The channels agents can handle in the Contact Control Panel (CCP) for this routing profile."
            }
          ]
        },
        "QueueId": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueId"
            },
            {
              "description": "The identifier of the queue."
            }
          ]
        }
      },
      "required": [
        "QueueId",
        "Channel"
      ],
      "type": "object"
    },
    "RoutingProfileQueueReferenceList": {
      "items": {
        "$ref": "#/definitions/RoutingProfileQueueReference"
      },
      "type": "array"
    },
    "RoutingProfileSummary": {
      "description": "Contains summary information about a routing profile.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the routing profile."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileId"
            },
            {
              "description": "The identifier of the routing profile."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileName"
            },
            {
              "description": "The name of the routing profile."
            }
          ]
        }
      },
      "type": "object"
    },
    "RoutingProfileSummaryList": {
      "items": {
        "$ref": "#/definitions/RoutingProfileSummary"
      },
      "type": "array"
    },
    "S3Config": {
      "description": "Information about the S3 storage type.",
      "properties": {
        "BucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketName"
            },
            {
              "description": "The S3 bucket name."
            }
          ]
        },
        "BucketPrefix": {
          "allOf": [
            {
              "$ref": "#/definitions/Prefix"
            },
            {
              "description": "The S3 bucket prefix."
            }
          ]
        },
        "EncryptionConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionConfig"
            },
            {
              "description": "The S3 encryption configuration."
            }
          ]
        }
      },
      "required": [
        "BucketName",
        "BucketPrefix"
      ],
      "type": "object"
    },
    "SecurityKey": {
      "description": "Configuration information of the security key.",
      "properties": {
        "AssociationId": {
          "allOf": [
            {
              "$ref": "#/definitions/AssociationId"
            },
            {
              "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID."
            }
          ]
        },
        "CreationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "description": "When the security key was created."
            }
          ]
        },
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/PEM"
            },
            {
              "description": "The key of the security key."
            }
          ]
        }
      },
      "type": "object"
    },
    "SecurityKeysList": {
      "items": {
        "$ref": "#/definitions/SecurityKey"
      },
      "type": "array"
    },
    "SecurityProfileId": {
      "type": "string"
    },
    "SecurityProfileIds": {
      "items": {
        "$ref": "#/definitions/SecurityProfileId"
      },
      "maxItems": 10,
      "minItems": 1,
      "type": "array"
    },
    "SecurityProfileName": {
      "type": "string"
    },
    "SecurityProfileSummary": {
      "description": "Contains information about a security profile.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the security profile."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityProfileId"
            },
            {
              "description": "The identifier of the security profile."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityProfileName"
            },
            {
              "description": "The name of the security profile."
            }
          ]
        }
      },
      "type": "object"
    },
    "SecurityProfileSummaryList": {
      "items": {
        "$ref": "#/definitions/SecurityProfileSummary"
      },
      "type": "array"
    },
    "SecurityToken": {
      "format": "password",
      "type": "string"
    },
    "ServiceQuotaExceededException": {},
    "SourceApplicationName": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9_ -]+$",
      "type": "string"
    },
    "SourceType": {
      "enum": [
        "SALESFORCE",
        "ZENDESK"
      ],
      "type": "string"
    },
    "StartChatContactRequest": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/Attributes"
            },
            {
              "description": "<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes. </p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>"
            }
          ]
        },
        "ClientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientToken"
            },
            {
              "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request."
            }
          ]
        },
        "ContactFlowId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowId"
            },
            {
              "description": "<p>The identifier of the contact flow for initiating the chat. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>"
            }
          ]
        },
        "InitialMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/ChatMessage"
            },
            {
              "description": "The initial message to be sent to the newly created chat."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        },
        "ParticipantDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/ParticipantDetails"
            },
            {
              "description": "Information identifying the participant."
            }
          ]
        }
      },
      "required": [
        "InstanceId",
        "ContactFlowId",
        "ParticipantDetails"
      ],
      "title": "StartChatContactRequest",
      "type": "object"
    },
    "StartChatContactResponse": {
      "properties": {
        "ContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of this contact within the Amazon Connect instance. "
            }
          ]
        },
        "ParticipantId": {
          "allOf": [
            {
              "$ref": "#/definitions/ParticipantId"
            },
            {
              "description": "The identifier for a chat participant. The participantId for a chat participant is the same throughout the chat lifecycle."
            }
          ]
        },
        "ParticipantToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ParticipantToken"
            },
            {
              "description": "The token used by the chat participant to call <a href=\"https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html\">CreateParticipantConnection</a>. The participant token is valid for the lifetime of a chat participant."
            }
          ]
        }
      },
      "type": "object"
    },
    "StartContactRecordingRequest": {
      "properties": {
        "ContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of the contact."
            }
          ]
        },
        "InitialContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        },
        "VoiceRecordingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceRecordingConfiguration"
            },
            {
              "description": "Who is being recorded."
            }
          ]
        }
      },
      "required": [
        "InstanceId",
        "ContactId",
        "InitialContactId",
        "VoiceRecordingConfiguration"
      ],
      "title": "StartContactRecordingRequest",
      "type": "object"
    },
    "StartContactRecordingResponse": {
      "properties": {},
      "type": "object"
    },
    "StartOutboundVoiceContactRequest": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/Attributes"
            },
            {
              "description": "<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>"
            }
          ]
        },
        "ClientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientToken"
            },
            {
              "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. If the contact is disconnected, a new contact is started."
            }
          ]
        },
        "ContactFlowId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowId"
            },
            {
              "description": "<p>The identifier of the contact flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>"
            }
          ]
        },
        "DestinationPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumber"
            },
            {
              "description": "The phone number of the customer, in E.164 format."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        },
        "QueueId": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueId"
            },
            {
              "description": "The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number."
            }
          ]
        },
        "SourcePhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumber"
            },
            {
              "description": "The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue."
            }
          ]
        }
      },
      "required": [
        "DestinationPhoneNumber",
        "ContactFlowId",
        "InstanceId"
      ],
      "title": "StartOutboundVoiceContactRequest",
      "type": "object"
    },
    "StartOutboundVoiceContactResponse": {
      "properties": {
        "ContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of this contact within the Amazon Connect instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "StartTaskContactRequest": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/Attributes"
            },
            {
              "description": "<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>"
            }
          ]
        },
        "ClientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientToken"
            },
            {
              "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request."
            }
          ]
        },
        "ContactFlowId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowId"
            },
            {
              "description": "<p>The identifier of the contact flow for initiating the tasks. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>"
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "A description of the task that is shown to an agent in the Contact Control Panel (CCP)."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "The name of a task that is shown to an agent in the Contact Control Panel (CCP)."
            }
          ]
        },
        "PreviousContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of the previous chat, voice, or task contact. "
            }
          ]
        },
        "References": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactReferences"
            },
            {
              "description": "A formatted URL that is shown to an agent in the Contact Control Panel (CCP)."
            }
          ]
        }
      },
      "required": [
        "InstanceId",
        "ContactFlowId",
        "Name"
      ],
      "title": "StartTaskContactRequest",
      "type": "object"
    },
    "StartTaskContactResponse": {
      "properties": {
        "ContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of this contact within the Amazon Connect instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "Statistic": {
      "enum": [
        "SUM",
        "MAX",
        "AVG"
      ],
      "type": "string"
    },
    "StopContactRecordingRequest": {
      "properties": {
        "ContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of the contact."
            }
          ]
        },
        "InitialContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        }
      },
      "required": [
        "InstanceId",
        "ContactId",
        "InitialContactId"
      ],
      "title": "StopContactRecordingRequest",
      "type": "object"
    },
    "StopContactRecordingResponse": {
      "properties": {},
      "type": "object"
    },
    "StopContactRequest": {
      "properties": {
        "ContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The ID of the contact."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        }
      },
      "required": [
        "ContactId",
        "InstanceId"
      ],
      "title": "StopContactRequest",
      "type": "object"
    },
    "StopContactResponse": {
      "properties": {},
      "type": "object"
    },
    "StorageType": {
      "enum": [
        "S3",
        "KINESIS_VIDEO_STREAM",
        "KINESIS_STREAM",
        "KINESIS_FIREHOSE"
      ],
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "SuspendContactRecordingRequest": {
      "properties": {
        "ContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of the contact."
            }
          ]
        },
        "InitialContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        }
      },
      "required": [
        "InstanceId",
        "ContactId",
        "InitialContactId"
      ],
      "title": "SuspendContactRecordingRequest",
      "type": "object"
    },
    "SuspendContactRecordingResponse": {
      "properties": {},
      "type": "object"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 200,
      "minItems": 1,
      "type": "array"
    },
    "TagMap": {
      "additionalProperties": {
        "$ref": "#/definitions/TagValue"
      },
      "maxProperties": 200,
      "minProperties": 1,
      "type": "object"
    },
    "TagResourceRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "One or more tags. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }."
            }
          ]
        }
      },
      "required": [
        "tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagValue": {
      "maxLength": 256,
      "type": "string"
    },
    "Threshold": {
      "description": "Contains information about the threshold for service level metrics.",
      "properties": {
        "Comparison": {
          "allOf": [
            {
              "$ref": "#/definitions/Comparison"
            },
            {
              "description": "The type of comparison. Only \"less than\" (LT) comparisons are supported."
            }
          ]
        },
        "ThresholdValue": {
          "allOf": [
            {
              "$ref": "#/definitions/ThresholdValue"
            },
            {
              "description": "The threshold value to compare."
            }
          ]
        }
      },
      "type": "object"
    },
    "ThresholdValue": {
      "format": "double",
      "type": "number"
    },
    "ThrottlingException": {},
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "URI": {
      "maxLength": 2000,
      "minLength": 1,
      "type": "string"
    },
    "Unit": {
      "enum": [
        "SECONDS",
        "COUNT",
        "PERCENT"
      ],
      "type": "string"
    },
    "UntagResourceRequest": {
      "properties": {},
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UpdateContactAttributesRequest": {
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/Attributes"
            },
            {
              "description": "<p>The Amazon Connect attributes. These attributes can be accessed in contact flows just like any other contact attributes.</p> <p>You can have up to 32,768 UTF-8 bytes across all attributes for a contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>"
            }
          ]
        },
        "InitialContactId": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactId"
            },
            {
              "description": "The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The identifier of the Amazon Connect instance."
            }
          ]
        }
      },
      "required": [
        "InitialContactId",
        "InstanceId",
        "Attributes"
      ],
      "title": "UpdateContactAttributesRequest",
      "type": "object"
    },
    "UpdateContactAttributesResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateContactFlowContentRequest": {
      "properties": {
        "Content": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowContent"
            },
            {
              "description": "The JSON string that represents contact flow’s content. For an example, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/flow-language-example.html\">Example contact flow in Amazon Connect Flow language</a> in the <i>Amazon Connect Administrator Guide</i>. "
            }
          ]
        }
      },
      "required": [
        "Content"
      ],
      "title": "UpdateContactFlowContentRequest",
      "type": "object"
    },
    "UpdateContactFlowNameRequest": {
      "properties": {
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowDescription"
            },
            {
              "description": "The description of the contact flow."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactFlowName"
            },
            {
              "description": "The name of the contact flow."
            }
          ]
        }
      },
      "title": "UpdateContactFlowNameRequest",
      "type": "object"
    },
    "UpdateInstanceAttributeRequest": {
      "properties": {
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceAttributeValue"
            },
            {
              "description": "The value for the attribute. Maximum character limit is 100. "
            }
          ]
        }
      },
      "required": [
        "Value"
      ],
      "title": "UpdateInstanceAttributeRequest",
      "type": "object"
    },
    "UpdateInstanceStorageConfigRequest": {
      "properties": {
        "StorageConfig": {
          "$ref": "#/definitions/InstanceStorageConfig"
        }
      },
      "required": [
        "StorageConfig"
      ],
      "title": "UpdateInstanceStorageConfigRequest",
      "type": "object"
    },
    "UpdateRoutingProfileConcurrencyRequest": {
      "properties": {
        "MediaConcurrencies": {
          "allOf": [
            {
              "$ref": "#/definitions/MediaConcurrencies"
            },
            {
              "description": "The channels agents can handle in the Contact Control Panel (CCP)."
            }
          ]
        }
      },
      "required": [
        "MediaConcurrencies"
      ],
      "title": "UpdateRoutingProfileConcurrencyRequest",
      "type": "object"
    },
    "UpdateRoutingProfileDefaultOutboundQueueRequest": {
      "properties": {
        "DefaultOutboundQueueId": {
          "allOf": [
            {
              "$ref": "#/definitions/QueueId"
            },
            {
              "description": "The identifier for the default outbound queue."
            }
          ]
        }
      },
      "required": [
        "DefaultOutboundQueueId"
      ],
      "title": "UpdateRoutingProfileDefaultOutboundQueueRequest",
      "type": "object"
    },
    "UpdateRoutingProfileNameRequest": {
      "properties": {
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileDescription"
            },
            {
              "description": "The description of the routing profile. Must not be more than 250 characters."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileName"
            },
            {
              "description": "The name of the routing profile. Must not be more than 127 characters."
            }
          ]
        }
      },
      "title": "UpdateRoutingProfileNameRequest",
      "type": "object"
    },
    "UpdateRoutingProfileQueuesRequest": {
      "properties": {
        "QueueConfigs": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileQueueConfigList"
            },
            {
              "description": "The queues to be updated for this routing profile. Queues must first be associated to the routing profile. You can do this using AssociateRoutingProfileQueues."
            }
          ]
        }
      },
      "required": [
        "QueueConfigs"
      ],
      "title": "UpdateRoutingProfileQueuesRequest",
      "type": "object"
    },
    "UpdateUserHierarchyGroupNameRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupName"
            },
            {
              "description": "The name of the hierarchy group. Must not be more than 100 characters."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "UpdateUserHierarchyGroupNameRequest",
      "type": "object"
    },
    "UpdateUserHierarchyRequest": {
      "properties": {
        "HierarchyGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupId"
            },
            {
              "description": "The identifier of the hierarchy group."
            }
          ]
        }
      },
      "title": "UpdateUserHierarchyRequest",
      "type": "object"
    },
    "UpdateUserHierarchyStructureRequest": {
      "properties": {
        "HierarchyStructure": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyStructureUpdate"
            },
            {
              "description": "The hierarchy levels to update."
            }
          ]
        }
      },
      "required": [
        "HierarchyStructure"
      ],
      "title": "UpdateUserHierarchyStructureRequest",
      "type": "object"
    },
    "UpdateUserIdentityInfoRequest": {
      "properties": {
        "IdentityInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/UserIdentityInfo"
            },
            {
              "description": "The identity information for the user."
            }
          ]
        }
      },
      "required": [
        "IdentityInfo"
      ],
      "title": "UpdateUserIdentityInfoRequest",
      "type": "object"
    },
    "UpdateUserPhoneConfigRequest": {
      "properties": {
        "PhoneConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/UserPhoneConfig"
            },
            {
              "description": "Information about phone configuration settings for the user."
            }
          ]
        }
      },
      "required": [
        "PhoneConfig"
      ],
      "title": "UpdateUserPhoneConfigRequest",
      "type": "object"
    },
    "UpdateUserRoutingProfileRequest": {
      "properties": {
        "RoutingProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileId"
            },
            {
              "description": "The identifier of the routing profile for the user."
            }
          ]
        }
      },
      "required": [
        "RoutingProfileId"
      ],
      "title": "UpdateUserRoutingProfileRequest",
      "type": "object"
    },
    "UpdateUserSecurityProfilesRequest": {
      "properties": {
        "SecurityProfileIds": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityProfileIds"
            },
            {
              "description": "The identifiers of the security profiles for the user."
            }
          ]
        }
      },
      "required": [
        "SecurityProfileIds"
      ],
      "title": "UpdateUserSecurityProfilesRequest",
      "type": "object"
    },
    "UseCase": {
      "description": "Contains the use case.",
      "properties": {
        "UseCaseArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the use case."
            }
          ]
        },
        "UseCaseId": {
          "allOf": [
            {
              "$ref": "#/definitions/UseCaseId"
            },
            {
              "description": "The identifier for the use case."
            }
          ]
        },
        "UseCaseType": {
          "allOf": [
            {
              "$ref": "#/definitions/UseCaseType"
            },
            {
              "description": "The type of use case to associate to the AppIntegration association. Each AppIntegration association can have only one of each use case type."
            }
          ]
        }
      },
      "type": "object"
    },
    "UseCaseId": {
      "maxLength": 200,
      "minLength": 1,
      "type": "string"
    },
    "UseCaseSummaryList": {
      "items": {
        "$ref": "#/definitions/UseCase"
      },
      "type": "array"
    },
    "UseCaseType": {
      "enum": [
        "RULES_EVALUATION"
      ],
      "type": "string"
    },
    "User": {
      "description": "Contains information about a user account for a Amazon Connect instance.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the user account."
            }
          ]
        },
        "DirectoryUserId": {
          "allOf": [
            {
              "$ref": "#/definitions/DirectoryUserId"
            },
            {
              "description": "The identifier of the user account in the directory used for identity management."
            }
          ]
        },
        "HierarchyGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/HierarchyGroupId"
            },
            {
              "description": "The identifier of the hierarchy group for the user."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/UserId"
            },
            {
              "description": "The identifier of the user account."
            }
          ]
        },
        "IdentityInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/UserIdentityInfo"
            },
            {
              "description": "Information about the user identity."
            }
          ]
        },
        "PhoneConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/UserPhoneConfig"
            },
            {
              "description": "Information about the phone configuration for the user."
            }
          ]
        },
        "RoutingProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/RoutingProfileId"
            },
            {
              "description": "The identifier of the routing profile for the user."
            }
          ]
        },
        "SecurityProfileIds": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityProfileIds"
            },
            {
              "description": "The identifiers of the security profiles for the user."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/AgentUsername"
            },
            {
              "description": "The user name assigned to the user account."
            }
          ]
        }
      },
      "type": "object"
    },
    "UserId": {
      "type": "string"
    },
    "UserIdentityInfo": {
      "description": "Contains information about the identity of a user.",
      "properties": {
        "Email": {
          "allOf": [
            {
              "$ref": "#/definitions/Email"
            },
            {
              "description": "The email address. If you are using SAML for identity management and include this parameter, an error is returned."
            }
          ]
        },
        "FirstName": {
          "allOf": [
            {
              "$ref": "#/definitions/AgentFirstName"
            },
            {
              "description": "The first name. This is required if you are using Amazon Connect or SAML for identity management."
            }
          ]
        },
        "LastName": {
          "allOf": [
            {
              "$ref": "#/definitions/AgentLastName"
            },
            {
              "description": "The last name. This is required if you are using Amazon Connect or SAML for identity management."
            }
          ]
        }
      },
      "type": "object"
    },
    "UserNotFoundException": {},
    "UserPhoneConfig": {
      "description": "Contains information about the phone configuration settings for a user.",
      "properties": {
        "AfterContactWorkTimeLimit": {
          "allOf": [
            {
              "$ref": "#/definitions/AfterContactWorkTimeLimit"
            },
            {
              "description": "The After Call Work (ACW) timeout setting, in seconds."
            }
          ]
        },
        "AutoAccept": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoAccept"
            },
            {
              "description": "The Auto accept setting."
            }
          ]
        },
        "DeskPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumber"
            },
            {
              "description": "The phone number for the user's desk phone."
            }
          ]
        },
        "PhoneType": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneType"
            },
            {
              "description": "The phone type."
            }
          ]
        }
      },
      "required": [
        "PhoneType"
      ],
      "type": "object"
    },
    "UserSummary": {
      "description": "Contains summary information about a user.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ARN"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the user account."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/UserId"
            },
            {
              "description": "The identifier of the user account."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/AgentUsername"
            },
            {
              "description": "The Amazon Connect user name of the user account."
            }
          ]
        }
      },
      "type": "object"
    },
    "UserSummaryList": {
      "items": {
        "$ref": "#/definitions/UserSummary"
      },
      "type": "array"
    },
    "Value": {
      "format": "double",
      "type": "number"
    },
    "VoiceRecordingConfiguration": {
      "description": "Contains information about the recording configuration settings.",
      "properties": {
        "VoiceRecordingTrack": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceRecordingTrack"
            },
            {
              "description": "Identifies which track is being recorded."
            }
          ]
        }
      },
      "type": "object"
    },
    "VoiceRecordingTrack": {
      "enum": [
        "FROM_AGENT",
        "TO_AGENT",
        "ALL"
      ],
      "type": "string"
    },
    "timestamp": {
      "format": "date-time",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/connect/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}