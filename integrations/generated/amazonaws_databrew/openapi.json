{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "AWS Glue DataBrew is a visual, cloud-scale data-preparation service. DataBrew simplifies data preparation tasks, targeting data issues that are hard to spot and time-consuming to fix. DataBrew empowers users of all technical levels to visualize the data and perform one-click data transformations, with no coding required.",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Glue DataBrew",
    "version": "2017-07-25",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/databrew-2017-07-25.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "databrew",
    "x-datafire": {
      "name": "amazonaws_databrew",
      "type": "openapi"
    }
  },
  "host": "databrew.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/datasets": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of results to return in this request. ",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the NextToken value from the response object of the previous page call. ",
            "in": "query",
            "maxLength": 2000,
            "minLength": 1,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDatasetsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Lists all of the AWS Glue DataBrew datasets for the current AWS account.",
        "operationId": "ListDatasets"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "FormatOptions": {
                  "description": "Options that define how Microsoft Excel input is to be interpreted by DataBrew.",
                  "properties": {
                    "Excel": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ExcelOptions"
                        },
                        {
                          "description": "Options that define how Excel input is to be interpreted by DataBrew."
                        }
                      ]
                    },
                    "Json": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/JsonOptions"
                        },
                        {
                          "description": "Options that define how JSON input is to be interpreted by DataBrew."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Input": {
                  "description": "Information on how AWS Glue DataBrew can find data, in either the AWS Glue Data Catalog or Amazon S3.",
                  "properties": {
                    "DataCatalogInputDefinition": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DataCatalogInputDefinition"
                        },
                        {
                          "description": "The AWS Glue Data Catalog parameters for the data."
                        }
                      ]
                    },
                    "S3InputDefinition": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Location"
                        },
                        {
                          "description": "The Amazon S3 location where the data is stored."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Name": {
                  "description": "The name of the dataset to be created.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "Metadata tags to apply to this dataset.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "Name",
                "Input"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDatasetResponse"
            }
          },
          "480": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "481": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Creates a new AWS Glue DataBrew dataset for this AWS account.",
        "operationId": "CreateDataset"
      }
    },
    "/datasets/{name}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the dataset to be deleted.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteDatasetResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Deletes a dataset from AWS Glue DataBrew.",
        "operationId": "DeleteDataset"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the dataset to be described.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeDatasetResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Returns the definition of a specific AWS Glue DataBrew dataset that is in the current AWS account.",
        "operationId": "DescribeDataset"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the dataset to be updated.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "FormatOptions": {
                  "description": "Options that define how Microsoft Excel input is to be interpreted by DataBrew.",
                  "properties": {
                    "Excel": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ExcelOptions"
                        },
                        {
                          "description": "Options that define how Excel input is to be interpreted by DataBrew."
                        }
                      ]
                    },
                    "Json": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/JsonOptions"
                        },
                        {
                          "description": "Options that define how JSON input is to be interpreted by DataBrew."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Input": {
                  "description": "Information on how AWS Glue DataBrew can find data, in either the AWS Glue Data Catalog or Amazon S3.",
                  "properties": {
                    "DataCatalogInputDefinition": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DataCatalogInputDefinition"
                        },
                        {
                          "description": "The AWS Glue Data Catalog parameters for the data."
                        }
                      ]
                    },
                    "S3InputDefinition": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/S3Location"
                        },
                        {
                          "description": "The Amazon S3 location where the data is stored."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "Input"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateDatasetResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Modifies the definition of an existing AWS Glue DataBrew dataset in the current AWS account.",
        "operationId": "UpdateDataset"
      }
    },
    "/jobs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of a dataset. Using this parameter indicates to return only those jobs that act on the specified dataset.",
            "in": "query",
            "maxLength": 255,
            "minLength": 1,
            "name": "datasetName",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in this request. ",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the NextToken value from the response object of the previous page call. ",
            "in": "query",
            "maxLength": 2000,
            "minLength": 1,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The name of a project. Using this parameter indicates to return only those jobs that are associated with the specified project.",
            "in": "query",
            "maxLength": 255,
            "minLength": 1,
            "name": "projectName",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListJobsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Lists the AWS Glue DataBrew jobs in the current AWS account.",
        "operationId": "ListJobs"
      }
    },
    "/jobs/{name}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the job to be deleted.",
            "in": "path",
            "maxLength": 240,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteJobResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Deletes the specified AWS Glue DataBrew job from the current AWS account. The job can be for a recipe or for a profile.",
        "operationId": "DeleteJob"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the job to be described.",
            "in": "path",
            "maxLength": 240,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeJobResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Returns the definition of a specific AWS Glue DataBrew job that is in the current AWS account.",
        "operationId": "DescribeJob"
      }
    },
    "/jobs/{name}/jobRun/{runId}/stopJobRun": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the job to be stopped.",
            "in": "path",
            "maxLength": 240,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the job run to be stopped.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "runId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopJobRunResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Stops the specified job from running in the current AWS account.",
        "operationId": "StopJobRun"
      }
    },
    "/jobs/{name}/jobRuns": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the job.",
            "in": "path",
            "maxLength": 240,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in this request. ",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A token generated by AWS Glue DataBrew that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the NextToken value from the response object of the previous page call. ",
            "in": "query",
            "maxLength": 2000,
            "minLength": 1,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListJobRunsResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Lists all of the previous runs of a particular AWS Glue DataBrew job in the current AWS account.",
        "operationId": "ListJobRuns"
      }
    },
    "/jobs/{name}/startJobRun": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the job to be run.",
            "in": "path",
            "maxLength": 240,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartJobRunResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Runs an AWS Glue DataBrew job that exists in the current AWS account.",
        "operationId": "StartJobRun"
      }
    },
    "/profileJobs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DatasetName": {
                  "description": "The name of the dataset that this job is to act upon.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "EncryptionKeyArn": {
                  "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.",
                  "maxLength": 2048,
                  "minLength": 20,
                  "type": "string"
                },
                "EncryptionMode": {
                  "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - para&gt;<code>SSE-KMS</code> - server-side encryption with AWS KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>",
                  "enum": [
                    "SSE-KMS",
                    "SSE-S3"
                  ],
                  "type": "string"
                },
                "LogSubscription": {
                  "description": "A value that enables or disables Amazon CloudWatch logging for the current AWS account. If logging is enabled, CloudWatch writes one log stream for each job run.",
                  "enum": [
                    "ENABLE",
                    "DISABLE"
                  ],
                  "type": "string"
                },
                "MaxCapacity": {
                  "description": "The maximum number of nodes that DataBrew can use when the job processes data.",
                  "type": "integer"
                },
                "MaxRetries": {
                  "description": "The maximum number of times to retry the job after a job run fails.",
                  "minimum": 0,
                  "type": "integer"
                },
                "Name": {
                  "description": "The name of the job to be created.",
                  "maxLength": 240,
                  "minLength": 1,
                  "type": "string"
                },
                "OutputLocation": {
                  "description": "An Amazon S3 location (bucket name an object key) where DataBrew can read input data, or write output from a job.",
                  "properties": {
                    "Bucket": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Bucket"
                        },
                        {
                          "description": "The S3 bucket name."
                        }
                      ]
                    },
                    "Key": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Key"
                        },
                        {
                          "description": "The unique name of the object in the bucket."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "RoleArn": {
                  "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be assumed for this request.",
                  "maxLength": 2048,
                  "minLength": 20,
                  "type": "string"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "Metadata tags to apply to this job.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                },
                "Timeout": {
                  "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.",
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "required": [
                "DatasetName",
                "Name",
                "OutputLocation",
                "RoleArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateProfileJobResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Creates a new job to profile an AWS Glue DataBrew dataset that exists in the current AWS account.",
        "operationId": "CreateProfileJob"
      }
    },
    "/profileJobs/{name}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the job to be updated.",
            "in": "path",
            "maxLength": 240,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "EncryptionKeyArn": {
                  "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.",
                  "maxLength": 2048,
                  "minLength": 20,
                  "type": "string"
                },
                "EncryptionMode": {
                  "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with AWS KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>",
                  "enum": [
                    "SSE-KMS",
                    "SSE-S3"
                  ],
                  "type": "string"
                },
                "LogSubscription": {
                  "description": "A value that enables or disables Amazon CloudWatch logging for the current AWS account. If logging is enabled, CloudWatch writes one log stream for each job run.",
                  "enum": [
                    "ENABLE",
                    "DISABLE"
                  ],
                  "type": "string"
                },
                "MaxCapacity": {
                  "description": "The maximum number of nodes that DataBrew can use when the job processes data.",
                  "type": "integer"
                },
                "MaxRetries": {
                  "description": "The maximum number of times to retry the job after a job run fails.",
                  "minimum": 0,
                  "type": "integer"
                },
                "OutputLocation": {
                  "description": "An Amazon S3 location (bucket name an object key) where DataBrew can read input data, or write output from a job.",
                  "properties": {
                    "Bucket": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Bucket"
                        },
                        {
                          "description": "The S3 bucket name."
                        }
                      ]
                    },
                    "Key": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Key"
                        },
                        {
                          "description": "The unique name of the object in the bucket."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "RoleArn": {
                  "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be assumed for this request.",
                  "maxLength": 2048,
                  "minLength": 20,
                  "type": "string"
                },
                "Timeout": {
                  "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.",
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "required": [
                "OutputLocation",
                "RoleArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateProfileJobResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Modifies the definition of an existing AWS Glue DataBrew job in the current AWS account.",
        "operationId": "UpdateProfileJob"
      }
    },
    "/projects": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A pagination token that can be used in a subsequent request.",
            "in": "query",
            "maxLength": 2000,
            "minLength": 1,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in this request. ",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListProjectsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Lists all of the DataBrew projects in the current AWS account.",
        "operationId": "ListProjects"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DatasetName": {
                  "description": "The name of the dataset to associate this project with.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "Name": {
                  "description": "A unique name for the new project.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "RecipeName": {
                  "description": "The name of an existing recipe to associate with the project.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "RoleArn": {
                  "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be assumed for this request.",
                  "maxLength": 2048,
                  "minLength": 20,
                  "type": "string"
                },
                "Sample": {
                  "description": "Represents the sample size and sampling type for AWS Glue DataBrew to use for interactive data analysis.",
                  "properties": {
                    "Size": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SampleSize"
                        },
                        {
                          "description": "The number of rows in the sample."
                        }
                      ]
                    },
                    "Type": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SampleType"
                        },
                        {
                          "description": "The way in which DataBrew obtains rows from a dataset."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "Metadata tags to apply to this project.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "DatasetName",
                "Name",
                "RecipeName",
                "RoleArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateProjectResponse"
            }
          },
          "480": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "481": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "482": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "483": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Creates a new AWS Glue DataBrew project in the current AWS account.",
        "operationId": "CreateProject"
      }
    },
    "/projects/{name}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the project to be deleted.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteProjectResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Deletes an existing AWS Glue DataBrew project from the current AWS account.",
        "operationId": "DeleteProject"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the project to be described.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeProjectResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Returns the definition of a specific AWS Glue DataBrew project that is in the current AWS account.",
        "operationId": "DescribeProject"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the project to be updated.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "RoleArn": {
                  "description": "The Amazon Resource Name (ARN) of the IAM role to be assumed for this request.",
                  "maxLength": 2048,
                  "minLength": 20,
                  "type": "string"
                },
                "Sample": {
                  "description": "Represents the sample size and sampling type for AWS Glue DataBrew to use for interactive data analysis.",
                  "properties": {
                    "Size": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SampleSize"
                        },
                        {
                          "description": "The number of rows in the sample."
                        }
                      ]
                    },
                    "Type": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SampleType"
                        },
                        {
                          "description": "The way in which DataBrew obtains rows from a dataset."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "RoleArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateProjectResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Modifies the definition of an existing AWS Glue DataBrew project in the current AWS account.",
        "operationId": "UpdateProject"
      }
    },
    "/projects/{name}/sendProjectSessionAction": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the project to apply the action to.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ClientSessionId": {
                  "description": "A unique identifier for an interactive session that's currently open and ready for work. The action will be performed on this session.",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
                  "type": "string"
                },
                "Preview": {
                  "description": "Returns the result of the recipe step, without applying it. The result isn't added to the view frame stack.",
                  "type": "boolean"
                },
                "RecipeStep": {
                  "description": "Represents a single step to be performed in an AWS Glue DataBrew recipe.",
                  "properties": {
                    "Action": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/RecipeAction"
                        },
                        {
                          "description": "The particular action to be performed in the recipe step."
                        }
                      ]
                    },
                    "ConditionExpressions": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ConditionExpressionList"
                        },
                        {
                          "description": "<p>One or more conditions that must be met, in order for the recipe step to succeed.</p> <note> <p>All of the conditions in the array must be met. In other words, all of the conditions must be combined using a logical AND operation.</p> </note>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "StepIndex": {
                  "description": "The index from which to preview a step. This index is used to preview the result of steps that have already been applied, so that the resulting view frame is from earlier in the view frame stack.",
                  "minimum": 0,
                  "type": "integer"
                },
                "ViewFrame": {
                  "description": "Represents the data being being transformed during an AWS Glue DataBrew project session.",
                  "properties": {
                    "ColumnRange": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ColumnRange"
                        },
                        {
                          "description": "The number of columns to include in the view frame, beginning with the <code>StartColumnIndex</code> value and ignoring any columns in the <code>HiddenColumns</code> list."
                        }
                      ]
                    },
                    "HiddenColumns": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/HiddenColumnList"
                        },
                        {
                          "description": "A list of columns to hide in the view frame."
                        }
                      ]
                    },
                    "StartColumnIndex": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StartColumnIndex"
                        },
                        {
                          "description": "The starting index for the range of columns to return in the view frame."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SendProjectSessionActionResponse"
            }
          },
          "480": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Performs a recipe step within an interactive AWS Glue DataBrew session that's currently open.",
        "operationId": "SendProjectSessionAction"
      }
    },
    "/projects/{name}/startProjectSession": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the project to act upon.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AssumeControl": {
                  "description": "A value that, if true, enables you to take control of a session, even if a different client is currently accessing the project.",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartProjectSessionResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Creates an interactive session, enabling you to manipulate an AWS Glue DataBrew project.",
        "operationId": "StartProjectSession"
      }
    },
    "/recipeJobs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DatasetName": {
                  "description": "The name of the dataset that this job processes.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "EncryptionKeyArn": {
                  "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.",
                  "maxLength": 2048,
                  "minLength": 20,
                  "type": "string"
                },
                "EncryptionMode": {
                  "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with AWS KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>",
                  "enum": [
                    "SSE-KMS",
                    "SSE-S3"
                  ],
                  "type": "string"
                },
                "LogSubscription": {
                  "description": "A value that enables or disables Amazon CloudWatch logging for the current AWS account. If logging is enabled, CloudWatch writes one log stream for each job run.",
                  "enum": [
                    "ENABLE",
                    "DISABLE"
                  ],
                  "type": "string"
                },
                "MaxCapacity": {
                  "description": "The maximum number of nodes that DataBrew can consume when the job processes data.",
                  "type": "integer"
                },
                "MaxRetries": {
                  "description": "The maximum number of times to retry the job after a job run fails.",
                  "minimum": 0,
                  "type": "integer"
                },
                "Name": {
                  "description": "A unique name for the job.",
                  "maxLength": 240,
                  "minLength": 1,
                  "type": "string"
                },
                "Outputs": {
                  "description": "One or more artifacts that represent the output from running the job.",
                  "items": {
                    "$ref": "#/definitions/Output"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "ProjectName": {
                  "description": "Either the name of an existing project, or a combination of a recipe and a dataset to associate with the recipe.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "RecipeReference": {
                  "description": "Represents all of the attributes of an AWS Glue DataBrew recipe.",
                  "properties": {
                    "Name": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/RecipeName"
                        },
                        {
                          "description": "The name of the recipe."
                        }
                      ]
                    },
                    "RecipeVersion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/RecipeVersion"
                        },
                        {
                          "description": "The identifier for the version for the recipe. "
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "RoleArn": {
                  "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be assumed for this request.",
                  "maxLength": 2048,
                  "minLength": 20,
                  "type": "string"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "Metadata tags to apply to this job dataset.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                },
                "Timeout": {
                  "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.",
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "required": [
                "Name",
                "Outputs",
                "RoleArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRecipeJobResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Creates a new job for an existing AWS Glue DataBrew recipe in the current AWS account. You can create a standalone job using either a project, or a combination of a recipe and a dataset.",
        "operationId": "CreateRecipeJob"
      }
    },
    "/recipeJobs/{name}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the job to update.",
            "in": "path",
            "maxLength": 240,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "EncryptionKeyArn": {
                  "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.",
                  "maxLength": 2048,
                  "minLength": 20,
                  "type": "string"
                },
                "EncryptionMode": {
                  "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with AWS KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>",
                  "enum": [
                    "SSE-KMS",
                    "SSE-S3"
                  ],
                  "type": "string"
                },
                "LogSubscription": {
                  "description": "A value that enables or disables Amazon CloudWatch logging for the current AWS account. If logging is enabled, CloudWatch writes one log stream for each job run.",
                  "enum": [
                    "ENABLE",
                    "DISABLE"
                  ],
                  "type": "string"
                },
                "MaxCapacity": {
                  "description": "The maximum number of nodes that DataBrew can consume when the job processes data.",
                  "type": "integer"
                },
                "MaxRetries": {
                  "description": "The maximum number of times to retry the job after a job run fails.",
                  "minimum": 0,
                  "type": "integer"
                },
                "Outputs": {
                  "description": "One or more artifacts that represent the output from running the job. ",
                  "items": {
                    "$ref": "#/definitions/Output"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "RoleArn": {
                  "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be assumed for this request.",
                  "maxLength": 2048,
                  "minLength": 20,
                  "type": "string"
                },
                "Timeout": {
                  "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.",
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "required": [
                "Outputs",
                "RoleArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateRecipeJobResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Modifies the definition of an existing AWS Glue DataBrew recipe job in the current AWS account.",
        "operationId": "UpdateRecipeJob"
      }
    },
    "/recipeVersions#name": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of results to return in this request. ",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A pagination token that can be used in a subsequent request.",
            "in": "query",
            "maxLength": 2000,
            "minLength": 1,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The name of the recipe for which to return version information.",
            "in": "query",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRecipeVersionsResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Lists all of the versions of a particular AWS Glue DataBrew recipe in the current AWS account.",
        "operationId": "ListRecipeVersions"
      }
    },
    "/recipes": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of results to return in this request. ",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A pagination token that can be used in a subsequent request.",
            "in": "query",
            "maxLength": 2000,
            "minLength": 1,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "A version identifier. Using this parameter indicates to return only those recipes that have this version identifier.",
            "in": "query",
            "maxLength": 16,
            "minLength": 1,
            "name": "recipeVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRecipesResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Lists all of the AWS Glue DataBrew recipes in the current AWS account.",
        "operationId": "ListRecipes"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Description": {
                  "description": "A description for the recipe.",
                  "maxLength": 1024,
                  "type": "string"
                },
                "Name": {
                  "description": "A unique name for the recipe.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "Steps": {
                  "description": "An array containing the steps to be performed by the recipe. Each recipe step consists of one recipe action and (optionally) an array of condition expressions.",
                  "items": {
                    "$ref": "#/definitions/RecipeStep"
                  },
                  "type": "array"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "Metadata tags to apply to this recipe.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "Name",
                "Steps"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRecipeResponse"
            }
          },
          "480": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "481": {
            "description": "ServiceQuotaExceededException",
            "schema": {
              "$ref": "#/definitions/ServiceQuotaExceededException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Creates a new AWS Glue DataBrew recipe for the current AWS account.",
        "operationId": "CreateRecipe"
      }
    },
    "/recipes/{name}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the recipe to be described.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The recipe version identifier. If this parameter isn't specified, then the latest published version is returned.",
            "in": "query",
            "maxLength": 16,
            "minLength": 1,
            "name": "recipeVersion",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeRecipeResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Returns the definition of a specific AWS Glue DataBrew recipe that is in the current AWS account.",
        "operationId": "DescribeRecipe"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the recipe to be updated.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Description": {
                  "description": "A description of the recipe.",
                  "maxLength": 1024,
                  "type": "string"
                },
                "Steps": {
                  "description": "One or more steps to be performed by the recipe. Each step consists of an action, and the conditions under which the action should succeed.",
                  "items": {
                    "$ref": "#/definitions/RecipeStep"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateRecipeResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Modifies the definition of the latest working version of an AWS Glue DataBrew recipe in the current AWS account.",
        "operationId": "UpdateRecipe"
      }
    },
    "/recipes/{name}/batchDeleteRecipeVersion": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the recipe to be modified.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "RecipeVersions": {
                  "description": "An array of version identifiers to be deleted.",
                  "items": {
                    "$ref": "#/definitions/RecipeVersion"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "RecipeVersions"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeleteRecipeVersionResponse"
            }
          },
          "480": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Deletes one or more versions of a recipe at a time.",
        "operationId": "BatchDeleteRecipeVersion"
      }
    },
    "/recipes/{name}/publishRecipe": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the recipe to be published.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Description": {
                  "description": "A description of the recipe to be published, for this version of the recipe.",
                  "maxLength": 1024,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PublishRecipeResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Publishes a new major version of an AWS Glue DataBrew recipe that exists in the current AWS account.",
        "operationId": "PublishRecipe"
      }
    },
    "/recipes/{name}/recipeVersion/{recipeVersion}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the recipe to be deleted.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The version of the recipe to be deleted.",
            "in": "path",
            "maxLength": 16,
            "minLength": 1,
            "name": "recipeVersion",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteRecipeVersionResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Deletes a single version of an AWS Glue DataBrew recipe.",
        "operationId": "DeleteRecipeVersion"
      }
    },
    "/schedules": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the job that these schedules apply to.",
            "in": "query",
            "maxLength": 240,
            "minLength": 1,
            "name": "jobName",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in this request. ",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "maxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A pagination token that can be used in a subsequent request.",
            "in": "query",
            "maxLength": 2000,
            "minLength": 1,
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSchedulesResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Lists the AWS Glue DataBrew schedules in the current AWS account.",
        "operationId": "ListSchedules"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "CronExpression": {
                  "description": "The date or dates and time or times, in <code>cron</code> format, when the jobs are to be run.",
                  "maxLength": 512,
                  "minLength": 1,
                  "type": "string"
                },
                "JobNames": {
                  "description": "The name or names of one or more jobs to be run.",
                  "items": {
                    "$ref": "#/definitions/JobName"
                  },
                  "maxItems": 50,
                  "type": "array"
                },
                "Name": {
                  "description": "A unique name for the schedule.",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "Metadata tags to apply to this schedule.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "CronExpression",
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateScheduleResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Creates a new schedule for one or more AWS Glue DataBrew jobs. Jobs can be run at a specific date and time, or at regular intervals.",
        "operationId": "CreateSchedule"
      }
    },
    "/schedules/{name}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the schedule to be deleted.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteScheduleResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Deletes the specified AWS Glue DataBrew schedule from the current AWS account.",
        "operationId": "DeleteSchedule"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the schedule to be described.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeScheduleResponse"
            }
          },
          "480": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "481": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Returns the definition of a specific AWS Glue DataBrew schedule that is in the current AWS account.",
        "operationId": "DescribeSchedule"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The name of the schedule to update.",
            "in": "path",
            "maxLength": 255,
            "minLength": 1,
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "CronExpression": {
                  "description": "The date or dates and time or times, in <code>cron</code> format, when the jobs are to be run.",
                  "maxLength": 512,
                  "minLength": 1,
                  "type": "string"
                },
                "JobNames": {
                  "description": "The name or names of one or more jobs to be run for this schedule.",
                  "items": {
                    "$ref": "#/definitions/JobName"
                  },
                  "maxItems": 50,
                  "type": "array"
                }
              },
              "required": [
                "CronExpression"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateScheduleResponse"
            }
          },
          "480": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Modifies the definition of an existing AWS Glue DataBrew schedule in the current AWS account.",
        "operationId": "UpdateSchedule"
      }
    },
    "/tags/{ResourceArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Resource Name (ARN) string that uniquely identifies the DataBrew resource. ",
            "in": "path",
            "maxLength": 2048,
            "minLength": 20,
            "name": "ResourceArn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Lists all the tags for an AWS Glue DataBrew resource. ",
        "operationId": "ListTagsForResource"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The DataBrew resource to which tags should be added. The value for this parameter is an Amazon Resource Name (ARN). For DataBrew, you can tag a dataset, a job, a project, or a recipe.",
            "in": "path",
            "maxLength": 2048,
            "minLength": 20,
            "name": "ResourceArn",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "One or more tags to be assigned to the resource.",
                  "maxProperties": 200,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "Tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Adds metadata tags to an AWS Glue DataBrew resource, such as a dataset, job, project, or recipe.",
        "operationId": "TagResource"
      }
    },
    "/tags/{ResourceArn}#tagKeys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An DataBrew resource from which you want to remove a tag or tags. The value for this parameter is an Amazon Resource Name (ARN). ",
            "in": "path",
            "maxLength": 2048,
            "minLength": 20,
            "name": "ResourceArn",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The tag keys (names) of one or more tags to be removed.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/TagKey"
            },
            "maxItems": 200,
            "minItems": 1,
            "name": "tagKeys",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceResponse"
            }
          },
          "480": {
            "description": "InternalServerException",
            "schema": {
              "$ref": "#/definitions/InternalServerException"
            }
          },
          "481": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "482": {
            "description": "ValidationException",
            "schema": {
              "$ref": "#/definitions/ValidationException"
            }
          }
        },
        "description": "Removes metadata tags from an AWS Glue DataBrew resource.",
        "operationId": "UntagResource"
      }
    }
  },
  "definitions": {
    "AccessDeniedException": {},
    "AccountId": {
      "maxLength": 255,
      "type": "string"
    },
    "ActionId": {
      "type": "integer"
    },
    "Arn": {
      "maxLength": 2048,
      "minLength": 20,
      "type": "string"
    },
    "AssumeControl": {
      "type": "boolean"
    },
    "Attempt": {
      "type": "integer"
    },
    "BatchDeleteRecipeVersionRequest": {
      "properties": {
        "RecipeVersions": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeVersionList"
            },
            {
              "description": "An array of version identifiers to be deleted."
            }
          ]
        }
      },
      "required": [
        "RecipeVersions"
      ],
      "title": "BatchDeleteRecipeVersionRequest",
      "type": "object"
    },
    "BatchDeleteRecipeVersionResponse": {
      "properties": {
        "Errors": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeErrorList"
            },
            {
              "description": "Errors, if any, that were encountered when deleting the recipe versions."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The name of the recipe that was modified."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "Bucket": {
      "maxLength": 63,
      "minLength": 3,
      "type": "string"
    },
    "CatalogId": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "ClientSessionId": {
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
      "type": "string"
    },
    "ColumnName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "ColumnNameList": {
      "items": {
        "$ref": "#/definitions/ColumnName"
      },
      "maxItems": 200,
      "type": "array"
    },
    "ColumnRange": {
      "maximum": 20,
      "minimum": 0,
      "type": "integer"
    },
    "CompressionFormat": {
      "enum": [
        "GZIP",
        "LZ4",
        "SNAPPY",
        "BZIP2",
        "DEFLATE",
        "LZO",
        "BROTLI",
        "ZSTD",
        "ZLIB"
      ],
      "type": "string"
    },
    "Condition": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^[A-Z\\_]+$",
      "type": "string"
    },
    "ConditionExpression": {
      "description": "<p>Represents an individual condition that evaluates to true or false.</p> <p>Conditions are used with recipe actions: The action is only performed for column values where the condition evaluates to true.</p> <p>If a recipe requires more than one condition, then the recipe must specify multiple <code>ConditionExpression</code> elements. Each condition is applied to the rows in a dataset first, before the recipe action is performed.</p>",
      "properties": {
        "Condition": {
          "allOf": [
            {
              "$ref": "#/definitions/Condition"
            },
            {
              "description": "A specific condition to apply to a recipe action. For more information, see <a href=\"https://docs.aws.amazon.com/databrew/latest/dg/recipe-structure.html\">Recipe structure</a> in the <i>AWS Glue DataBrew Developer Guide</i>."
            }
          ]
        },
        "TargetColumn": {
          "allOf": [
            {
              "$ref": "#/definitions/TargetColumn"
            },
            {
              "description": "A column to apply this condition to, within an AWS Glue DataBrew dataset."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/ConditionValue"
            },
            {
              "description": "A value that the condition must evaluate to for the condition to succeed."
            }
          ]
        }
      },
      "required": [
        "Condition",
        "TargetColumn"
      ],
      "type": "object"
    },
    "ConditionExpressionList": {
      "items": {
        "$ref": "#/definitions/ConditionExpression"
      },
      "type": "array"
    },
    "ConditionValue": {
      "maxLength": 1024,
      "type": "string"
    },
    "ConflictException": {},
    "CreateDatasetRequest": {
      "properties": {
        "FormatOptions": {
          "$ref": "#/definitions/FormatOptions"
        },
        "Input": {
          "$ref": "#/definitions/Input"
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The name of the dataset to be created."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags to apply to this dataset."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Input"
      ],
      "title": "CreateDatasetRequest",
      "type": "object"
    },
    "CreateDatasetResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The name of the dataset that you created."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "CreateProfileJobRequest": {
      "properties": {
        "DatasetName": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The name of the dataset that this job is to act upon."
            }
          ]
        },
        "EncryptionKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionKeyArn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job."
            }
          ]
        },
        "EncryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            },
            {
              "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - para&gt;<code>SSE-KMS</code> - server-side encryption with AWS KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>"
            }
          ]
        },
        "LogSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/LogSubscription"
            },
            {
              "description": "A value that enables or disables Amazon CloudWatch logging for the current AWS account. If logging is enabled, CloudWatch writes one log stream for each job run."
            }
          ]
        },
        "MaxCapacity": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxCapacity"
            },
            {
              "description": "The maximum number of nodes that DataBrew can use when the job processes data."
            }
          ]
        },
        "MaxRetries": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxRetries"
            },
            {
              "description": "The maximum number of times to retry the job after a job run fails."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/JobName"
            },
            {
              "description": "The name of the job to be created."
            }
          ]
        },
        "OutputLocation": {
          "$ref": "#/definitions/S3Location"
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be assumed for this request."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags to apply to this job."
            }
          ]
        },
        "Timeout": {
          "allOf": [
            {
              "$ref": "#/definitions/Timeout"
            },
            {
              "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>."
            }
          ]
        }
      },
      "required": [
        "DatasetName",
        "Name",
        "OutputLocation",
        "RoleArn"
      ],
      "title": "CreateProfileJobRequest",
      "type": "object"
    },
    "CreateProfileJobResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/JobName"
            },
            {
              "description": "The name of the job that was created."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "CreateProjectRequest": {
      "properties": {
        "DatasetName": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The name of the dataset to associate this project with."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "A unique name for the new project."
            }
          ]
        },
        "RecipeName": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The name of an existing recipe to associate with the project."
            }
          ]
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be assumed for this request."
            }
          ]
        },
        "Sample": {
          "$ref": "#/definitions/Sample"
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags to apply to this project."
            }
          ]
        }
      },
      "required": [
        "DatasetName",
        "Name",
        "RecipeName",
        "RoleArn"
      ],
      "title": "CreateProjectRequest",
      "type": "object"
    },
    "CreateProjectResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The name of the project that you created."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "CreateRecipeJobRequest": {
      "properties": {
        "DatasetName": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The name of the dataset that this job processes."
            }
          ]
        },
        "EncryptionKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionKeyArn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job."
            }
          ]
        },
        "EncryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            },
            {
              "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with AWS KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>"
            }
          ]
        },
        "LogSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/LogSubscription"
            },
            {
              "description": "A value that enables or disables Amazon CloudWatch logging for the current AWS account. If logging is enabled, CloudWatch writes one log stream for each job run."
            }
          ]
        },
        "MaxCapacity": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxCapacity"
            },
            {
              "description": "The maximum number of nodes that DataBrew can consume when the job processes data."
            }
          ]
        },
        "MaxRetries": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxRetries"
            },
            {
              "description": "The maximum number of times to retry the job after a job run fails."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/JobName"
            },
            {
              "description": "A unique name for the job."
            }
          ]
        },
        "Outputs": {
          "allOf": [
            {
              "$ref": "#/definitions/OutputList"
            },
            {
              "description": "One or more artifacts that represent the output from running the job."
            }
          ]
        },
        "ProjectName": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "Either the name of an existing project, or a combination of a recipe and a dataset to associate with the recipe."
            }
          ]
        },
        "RecipeReference": {
          "$ref": "#/definitions/RecipeReference"
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be assumed for this request."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags to apply to this job dataset."
            }
          ]
        },
        "Timeout": {
          "allOf": [
            {
              "$ref": "#/definitions/Timeout"
            },
            {
              "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Outputs",
        "RoleArn"
      ],
      "title": "CreateRecipeJobRequest",
      "type": "object"
    },
    "CreateRecipeJobResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/JobName"
            },
            {
              "description": "The name of the job that you created."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "CreateRecipeRequest": {
      "properties": {
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeDescription"
            },
            {
              "description": "A description for the recipe."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "A unique name for the recipe."
            }
          ]
        },
        "Steps": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeStepList"
            },
            {
              "description": "An array containing the steps to be performed by the recipe. Each recipe step consists of one recipe action and (optionally) an array of condition expressions."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags to apply to this recipe."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Steps"
      ],
      "title": "CreateRecipeRequest",
      "type": "object"
    },
    "CreateRecipeResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The name of the recipe that you created."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "CreateScheduleRequest": {
      "properties": {
        "CronExpression": {
          "allOf": [
            {
              "$ref": "#/definitions/CronExpression"
            },
            {
              "description": "The date or dates and time or times, in <code>cron</code> format, when the jobs are to be run."
            }
          ]
        },
        "JobNames": {
          "allOf": [
            {
              "$ref": "#/definitions/JobNameList"
            },
            {
              "description": "The name or names of one or more jobs to be run."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleName"
            },
            {
              "description": "A unique name for the schedule."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags to apply to this schedule."
            }
          ]
        }
      },
      "required": [
        "CronExpression",
        "Name"
      ],
      "title": "CreateScheduleRequest",
      "type": "object"
    },
    "CreateScheduleResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleName"
            },
            {
              "description": "The name of the schedule that was created."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "CreatedBy": {
      "type": "string"
    },
    "CronExpression": {
      "maxLength": 512,
      "minLength": 1,
      "type": "string"
    },
    "DataCatalogInputDefinition": {
      "description": "Represents how metadata stored in the AWS Glue Data Catalog is defined in an AWS Glue DataBrew dataset. ",
      "properties": {
        "CatalogId": {
          "allOf": [
            {
              "$ref": "#/definitions/CatalogId"
            },
            {
              "description": "The unique identifier of the AWS account that holds the Data Catalog that stores the data."
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/DatabaseName"
            },
            {
              "description": "The name of a database in the Data Catalog."
            }
          ]
        },
        "TableName": {
          "allOf": [
            {
              "$ref": "#/definitions/TableName"
            },
            {
              "description": "The name of a database table in the Data Catalog. This table corresponds to a DataBrew dataset."
            }
          ]
        },
        "TempDirectory": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Location"
            },
            {
              "description": "An Amazon location that AWS Glue Data Catalog can use as a temporary directory."
            }
          ]
        }
      },
      "required": [
        "DatabaseName",
        "TableName"
      ],
      "type": "object"
    },
    "DatabaseName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "Dataset": {
      "description": "Represents a dataset that can be processed by AWS Glue DataBrew.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The ID of the AWS account that owns the dataset."
            }
          ]
        },
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the dataset was created."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": "The identifier (the user name) of the user who created the dataset."
            }
          ]
        },
        "FormatOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/FormatOptions"
            },
            {
              "description": "Options that define how DataBrew interprets the data in the dataset."
            }
          ]
        },
        "Input": {
          "allOf": [
            {
              "$ref": "#/definitions/Input"
            },
            {
              "description": "Information on how DataBrew can find the dataset, in either the AWS Glue Data Catalog or Amazon S3."
            }
          ]
        },
        "LastModifiedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastModifiedBy"
            },
            {
              "description": "The identifier (the user name) of the user who last modified the dataset."
            }
          ]
        },
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The last modification date and time of the dataset."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The unique name of the dataset."
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The unique Amazon Resource Name (ARN) for the dataset."
            }
          ]
        },
        "Source": {
          "allOf": [
            {
              "$ref": "#/definitions/Source"
            },
            {
              "description": "The location of the data for the dataset, either Amazon S3 or the AWS Glue Data Catalog."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags that have been applied to the dataset."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Input"
      ],
      "type": "object"
    },
    "DatasetList": {
      "items": {
        "$ref": "#/definitions/Dataset"
      },
      "type": "array"
    },
    "DatasetName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "Date": {
      "format": "date-time",
      "type": "string"
    },
    "DeleteDatasetRequest": {
      "properties": {},
      "title": "DeleteDatasetRequest",
      "type": "object"
    },
    "DeleteDatasetResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The name of the dataset that you deleted."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DeleteJobRequest": {
      "properties": {},
      "title": "DeleteJobRequest",
      "type": "object"
    },
    "DeleteJobResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/JobName"
            },
            {
              "description": "The name of the job that you deleted."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DeleteProjectRequest": {
      "properties": {},
      "title": "DeleteProjectRequest",
      "type": "object"
    },
    "DeleteProjectResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The name of the project that you deleted."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DeleteRecipeVersionRequest": {
      "properties": {},
      "title": "DeleteRecipeVersionRequest",
      "type": "object"
    },
    "DeleteRecipeVersionResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The name of the recipe that was deleted."
            }
          ]
        },
        "RecipeVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeVersion"
            },
            {
              "description": "The version of the recipe that was deleted."
            }
          ]
        }
      },
      "required": [
        "Name",
        "RecipeVersion"
      ],
      "type": "object"
    },
    "DeleteScheduleRequest": {
      "properties": {},
      "title": "DeleteScheduleRequest",
      "type": "object"
    },
    "DeleteScheduleResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleName"
            },
            {
              "description": "The name of the schedule that was deleted."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DescribeDatasetRequest": {
      "properties": {},
      "title": "DescribeDatasetRequest",
      "type": "object"
    },
    "DescribeDatasetResponse": {
      "properties": {
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the dataset was created."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": "The identifier (user name) of the user who created the dataset."
            }
          ]
        },
        "FormatOptions": {
          "$ref": "#/definitions/FormatOptions"
        },
        "Input": {
          "$ref": "#/definitions/Input"
        },
        "LastModifiedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastModifiedBy"
            },
            {
              "description": "The identifier (user name) of the user who last modified the dataset."
            }
          ]
        },
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the dataset was last modified."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The name of the dataset."
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the dataset."
            }
          ]
        },
        "Source": {
          "allOf": [
            {
              "$ref": "#/definitions/Source"
            },
            {
              "description": "The location of the data for this dataset, Amazon S3 or the AWS Glue Data Catalog."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags associated with this dataset."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Input"
      ],
      "type": "object"
    },
    "DescribeJobRequest": {
      "properties": {},
      "title": "DescribeJobRequest",
      "type": "object"
    },
    "DescribeJobResponse": {
      "properties": {
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the job was created."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": "The identifier (user name) of the user associated with the creation of the job."
            }
          ]
        },
        "DatasetName": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The dataset that the job acts upon."
            }
          ]
        },
        "EncryptionKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionKeyArn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job."
            }
          ]
        },
        "EncryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            },
            {
              "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with AWS KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>"
            }
          ]
        },
        "LastModifiedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastModifiedBy"
            },
            {
              "description": "The identifier (user name) of the user who last modified the job."
            }
          ]
        },
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the job was last modified."
            }
          ]
        },
        "LogSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/LogSubscription"
            },
            {
              "description": "A value that indicates whether Amazon CloudWatch logging is enabled for this job."
            }
          ]
        },
        "MaxCapacity": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxCapacity"
            },
            {
              "description": "The maximum number of nodes that AWS Glue DataBrew can consume when the job processes data."
            }
          ]
        },
        "MaxRetries": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxRetries"
            },
            {
              "description": "The maximum number of times to retry the job after a job run fails."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/JobName"
            },
            {
              "description": "The name of the job."
            }
          ]
        },
        "Outputs": {
          "allOf": [
            {
              "$ref": "#/definitions/OutputList"
            },
            {
              "description": "One or more artifacts that represent the output from running the job."
            }
          ]
        },
        "ProjectName": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The DataBrew project associated with this job."
            }
          ]
        },
        "RecipeReference": {
          "$ref": "#/definitions/RecipeReference"
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the job."
            }
          ]
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the AWS Identity and Access Management (IAM) role that was assumed for this request."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags associated with this job."
            }
          ]
        },
        "Timeout": {
          "allOf": [
            {
              "$ref": "#/definitions/Timeout"
            },
            {
              "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/JobType"
            },
            {
              "description": "<p>The job type, which must be one of the following:</p> <ul> <li> <p> <code>PROFILE</code> - The job analyzes the dataset to determine its size, data types, data distribution, and more.</p> </li> <li> <p> <code>RECIPE</code> - The job applies one or more transformations to a dataset.</p> </li> </ul>"
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DescribeProjectRequest": {
      "properties": {},
      "title": "DescribeProjectRequest",
      "type": "object"
    },
    "DescribeProjectResponse": {
      "properties": {
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the project was created."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": "The identifier (user name) of the user who created the project."
            }
          ]
        },
        "DatasetName": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The dataset associated with the project."
            }
          ]
        },
        "LastModifiedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastModifiedBy"
            },
            {
              "description": "The identifier (user name) of the user who last modified the project."
            }
          ]
        },
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the project was last modified."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The name of the project."
            }
          ]
        },
        "OpenDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time when the project was opened. "
            }
          ]
        },
        "OpenedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/OpenedBy"
            },
            {
              "description": "The identifier (user name) of the user that opened the project for use. "
            }
          ]
        },
        "RecipeName": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The recipe associated with this job."
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the project."
            }
          ]
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the AWS Identity and Access Management (IAM) role that was assumed for this request."
            }
          ]
        },
        "Sample": {
          "$ref": "#/definitions/Sample"
        },
        "SessionStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/SessionStatus"
            },
            {
              "description": "<p>Describes the current state of the session:</p> <ul> <li> <p> <code>PROVISIONING</code> - allocating resources for the session.</p> </li> <li> <p> <code>INITIALIZING</code> - getting the session ready for first use.</p> </li> <li> <p> <code>ASSIGNED</code> - the session is ready for use.</p> </li> </ul>"
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags associated with this project."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DescribeRecipeRequest": {
      "properties": {},
      "title": "DescribeRecipeRequest",
      "type": "object"
    },
    "DescribeRecipeResponse": {
      "properties": {
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the recipe was created."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": "The identifier (user name) of the user who created the recipe."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeDescription"
            },
            {
              "description": "The description of the recipe."
            }
          ]
        },
        "LastModifiedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastModifiedBy"
            },
            {
              "description": "The identifier (user name) of the user who last modified the recipe."
            }
          ]
        },
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the recipe was last modified."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The name of the recipe."
            }
          ]
        },
        "ProjectName": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The name of the project associated with this recipe."
            }
          ]
        },
        "PublishedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/PublishedBy"
            },
            {
              "description": "The identifier (user name) of the user who last published the recipe."
            }
          ]
        },
        "PublishedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time when the recipe was last published."
            }
          ]
        },
        "RecipeVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeVersion"
            },
            {
              "description": "The recipe version identifier."
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The ARN of the recipe."
            }
          ]
        },
        "Steps": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeStepList"
            },
            {
              "description": "One or more steps to be performed by the recipe. Each step consists of an action, and the conditions under which the action should succeed."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags associated with this project."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DescribeScheduleRequest": {
      "properties": {},
      "title": "DescribeScheduleRequest",
      "type": "object"
    },
    "DescribeScheduleResponse": {
      "properties": {
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the schedule was created."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": "The identifier (user name) of the user who created the schedule. "
            }
          ]
        },
        "CronExpression": {
          "allOf": [
            {
              "$ref": "#/definitions/CronExpression"
            },
            {
              "description": "The date or dates and time or times, in <code>cron</code> format, when the jobs are to be run for the schedule."
            }
          ]
        },
        "JobNames": {
          "allOf": [
            {
              "$ref": "#/definitions/JobNameList"
            },
            {
              "description": "The name or names of one or more jobs to be run by using the schedule."
            }
          ]
        },
        "LastModifiedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastModifiedBy"
            },
            {
              "description": "The identifier (user name) of the user who last modified the schedule."
            }
          ]
        },
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the schedule was last modified."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleName"
            },
            {
              "description": "The name of the schedule."
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the schedule."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags associated with this schedule."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "EncryptionKeyArn": {
      "maxLength": 2048,
      "minLength": 20,
      "type": "string"
    },
    "EncryptionMode": {
      "enum": [
        "SSE-KMS",
        "SSE-S3"
      ],
      "type": "string"
    },
    "ErrorCode": {
      "pattern": "^[1-5][0-9][0-9]$",
      "type": "string"
    },
    "ExcelOptions": {
      "description": "Options that define how DataBrew will interpret a Microsoft Excel file, when creating a dataset from that file.",
      "properties": {
        "SheetIndexes": {
          "allOf": [
            {
              "$ref": "#/definitions/SheetIndexList"
            },
            {
              "description": "Specifies one or more sheet numbers in the Excel file, which will be included in the dataset."
            }
          ]
        },
        "SheetNames": {
          "allOf": [
            {
              "$ref": "#/definitions/SheetNameList"
            },
            {
              "description": "Specifies one or more named sheets in the Excel file, which will be included in the dataset."
            }
          ]
        }
      },
      "type": "object"
    },
    "ExecutionTime": {
      "type": "integer"
    },
    "FormatOptions": {
      "description": "Options that define how Microsoft Excel input is to be interpreted by DataBrew.",
      "properties": {
        "Excel": {
          "allOf": [
            {
              "$ref": "#/definitions/ExcelOptions"
            },
            {
              "description": "Options that define how Excel input is to be interpreted by DataBrew."
            }
          ]
        },
        "Json": {
          "allOf": [
            {
              "$ref": "#/definitions/JsonOptions"
            },
            {
              "description": "Options that define how JSON input is to be interpreted by DataBrew."
            }
          ]
        }
      },
      "type": "object"
    },
    "HiddenColumnList": {
      "items": {
        "$ref": "#/definitions/ColumnName"
      },
      "type": "array"
    },
    "Input": {
      "description": "Information on how AWS Glue DataBrew can find data, in either the AWS Glue Data Catalog or Amazon S3.",
      "properties": {
        "DataCatalogInputDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/DataCatalogInputDefinition"
            },
            {
              "description": "The AWS Glue Data Catalog parameters for the data."
            }
          ]
        },
        "S3InputDefinition": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Location"
            },
            {
              "description": "The Amazon S3 location where the data is stored."
            }
          ]
        }
      },
      "type": "object"
    },
    "InternalServerException": {},
    "Job": {
      "description": "Represents all of the attributes of an AWS Glue DataBrew job.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The ID of the AWS account that owns the job."
            }
          ]
        },
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the job was created."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": "The identifier (the user name) of the user who created the job."
            }
          ]
        },
        "DatasetName": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "A dataset that the job is to process."
            }
          ]
        },
        "EncryptionKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionKeyArn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect a job."
            }
          ]
        },
        "EncryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            },
            {
              "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with AWS KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>"
            }
          ]
        },
        "LastModifiedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastModifiedBy"
            },
            {
              "description": "The identifier (the user name) of the user who last modified the job."
            }
          ]
        },
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The modification date and time of the job."
            }
          ]
        },
        "LogSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/LogSubscription"
            },
            {
              "description": "The current status of Amazon CloudWatch logging for the job."
            }
          ]
        },
        "MaxCapacity": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxCapacity"
            },
            {
              "description": "The maximum number of nodes that can be consumed when the job processes data."
            }
          ]
        },
        "MaxRetries": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxRetries"
            },
            {
              "description": "The maximum number of times to retry the job after a job run fails."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/JobName"
            },
            {
              "description": "The unique name of the job."
            }
          ]
        },
        "Outputs": {
          "allOf": [
            {
              "$ref": "#/definitions/OutputList"
            },
            {
              "description": "One or more artifacts that represent output from running the job."
            }
          ]
        },
        "ProjectName": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The name of the project that the job is associated with."
            }
          ]
        },
        "RecipeReference": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeReference"
            },
            {
              "description": "A set of steps that the job runs."
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The unique Amazon Resource Name (ARN) for the job."
            }
          ]
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the role that will be assumed for this job."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags that have been applied to the job."
            }
          ]
        },
        "Timeout": {
          "allOf": [
            {
              "$ref": "#/definitions/Timeout"
            },
            {
              "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/JobType"
            },
            {
              "description": "<p>The job type of the job, which must be one of the following:</p> <ul> <li> <p> <code>PROFILE</code> - A job to analyze a dataset, to determine its size, data types, data distribution, and more.</p> </li> <li> <p> <code>RECIPE</code> - A job to apply one or more transformations to a dataset.</p> </li> </ul>"
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "JobList": {
      "items": {
        "$ref": "#/definitions/Job"
      },
      "type": "array"
    },
    "JobName": {
      "maxLength": 240,
      "minLength": 1,
      "type": "string"
    },
    "JobNameList": {
      "items": {
        "$ref": "#/definitions/JobName"
      },
      "maxItems": 50,
      "type": "array"
    },
    "JobRun": {
      "description": "Represents one run of an AWS Glue DataBrew job.",
      "properties": {
        "Attempt": {
          "allOf": [
            {
              "$ref": "#/definitions/Attempt"
            },
            {
              "description": "The number of times that DataBrew has attempted to run the job."
            }
          ]
        },
        "CompletedOn": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time when the job completed processing."
            }
          ]
        },
        "DatasetName": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The name of the dataset for the job to process."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/JobRunErrorMessage"
            },
            {
              "description": "A message indicating an error (if any) that was encountered when the job ran."
            }
          ]
        },
        "ExecutionTime": {
          "allOf": [
            {
              "$ref": "#/definitions/ExecutionTime"
            },
            {
              "description": "The amount of time, in seconds, during which a job run consumed resources."
            }
          ]
        },
        "JobName": {
          "allOf": [
            {
              "$ref": "#/definitions/JobName"
            },
            {
              "description": "The name of the job being processed during this run."
            }
          ]
        },
        "LogGroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/LogGroupName"
            },
            {
              "description": "The name of an Amazon CloudWatch log group, where the job writes diagnostic messages when it runs."
            }
          ]
        },
        "LogSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/LogSubscription"
            },
            {
              "description": "The current status of Amazon CloudWatch logging for the job run."
            }
          ]
        },
        "Outputs": {
          "allOf": [
            {
              "$ref": "#/definitions/OutputList"
            },
            {
              "description": "One or more output artifacts from a job run."
            }
          ]
        },
        "RecipeReference": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeReference"
            },
            {
              "description": "The set of steps processed by the job."
            }
          ]
        },
        "RunId": {
          "allOf": [
            {
              "$ref": "#/definitions/JobRunId"
            },
            {
              "description": "The unique identifier of the job run."
            }
          ]
        },
        "StartedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/StartedBy"
            },
            {
              "description": "The identifier (the user name) of the user who initiated the job run. "
            }
          ]
        },
        "StartedOn": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time when the job run began. "
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/JobRunState"
            },
            {
              "description": "The current state of the job run entity itself."
            }
          ]
        }
      },
      "type": "object"
    },
    "JobRunErrorMessage": {
      "type": "string"
    },
    "JobRunId": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "JobRunList": {
      "items": {
        "$ref": "#/definitions/JobRun"
      },
      "type": "array"
    },
    "JobRunState": {
      "enum": [
        "STARTING",
        "RUNNING",
        "STOPPING",
        "STOPPED",
        "SUCCEEDED",
        "FAILED",
        "TIMEOUT"
      ],
      "type": "string"
    },
    "JobType": {
      "enum": [
        "PROFILE",
        "RECIPE"
      ],
      "type": "string"
    },
    "JsonOptions": {
      "description": "Represents the JSON-specific options that define how input is to be interpreted by AWS Glue DataBrew.",
      "properties": {
        "MultiLine": {
          "allOf": [
            {
              "$ref": "#/definitions/MultiLine"
            },
            {
              "description": "A value that specifies whether JSON input contains embedded new line characters."
            }
          ]
        }
      },
      "type": "object"
    },
    "Key": {
      "maxLength": 1280,
      "minLength": 1,
      "type": "string"
    },
    "LastModifiedBy": {
      "type": "string"
    },
    "ListDatasetsRequest": {
      "properties": {},
      "title": "ListDatasetsRequest",
      "type": "object"
    },
    "ListDatasetsResponse": {
      "properties": {
        "Datasets": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetList"
            },
            {
              "description": "A list of datasets that are defined in the current AWS account."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call. "
            }
          ]
        }
      },
      "required": [
        "Datasets"
      ],
      "type": "object"
    },
    "ListJobRunsRequest": {
      "properties": {},
      "title": "ListJobRunsRequest",
      "type": "object"
    },
    "ListJobRunsResponse": {
      "properties": {
        "JobRuns": {
          "allOf": [
            {
              "$ref": "#/definitions/JobRunList"
            },
            {
              "description": "A list of job runs that have occurred for the specified job."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call. "
            }
          ]
        }
      },
      "required": [
        "JobRuns"
      ],
      "type": "object"
    },
    "ListJobsRequest": {
      "properties": {},
      "title": "ListJobsRequest",
      "type": "object"
    },
    "ListJobsResponse": {
      "properties": {
        "Jobs": {
          "allOf": [
            {
              "$ref": "#/definitions/JobList"
            },
            {
              "description": "A list of jobs that are defined in the current AWS account."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call. "
            }
          ]
        }
      },
      "required": [
        "Jobs"
      ],
      "type": "object"
    },
    "ListProjectsRequest": {
      "properties": {},
      "title": "ListProjectsRequest",
      "type": "object"
    },
    "ListProjectsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the NextToken value from the response object of the previous page call. "
            }
          ]
        },
        "Projects": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectList"
            },
            {
              "description": "A list of projects that are defined in the current AWS account."
            }
          ]
        }
      },
      "required": [
        "Projects"
      ],
      "type": "object"
    },
    "ListRecipeVersionsRequest": {
      "properties": {},
      "title": "ListRecipeVersionsRequest",
      "type": "object"
    },
    "ListRecipeVersionsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the NextToken value from the response object of the previous page call. "
            }
          ]
        },
        "Recipes": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeList"
            },
            {
              "description": "A list of versions for the specified recipe."
            }
          ]
        }
      },
      "required": [
        "Recipes"
      ],
      "type": "object"
    },
    "ListRecipesRequest": {
      "properties": {},
      "title": "ListRecipesRequest",
      "type": "object"
    },
    "ListRecipesResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the NextToken value from the response object of the previous page call. "
            }
          ]
        },
        "Recipes": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeList"
            },
            {
              "description": "A list of recipes that are defined in the current AWS account."
            }
          ]
        }
      },
      "required": [
        "Recipes"
      ],
      "type": "object"
    },
    "ListSchedulesRequest": {
      "properties": {},
      "title": "ListSchedulesRequest",
      "type": "object"
    },
    "ListSchedulesResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the NextToken value from the response object of the previous page call. "
            }
          ]
        },
        "Schedules": {
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleList"
            },
            {
              "description": "A list of schedules in the current AWS account."
            }
          ]
        }
      },
      "required": [
        "Schedules"
      ],
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "properties": {},
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "A list of tags associated with the DataBrew resource."
            }
          ]
        }
      },
      "type": "object"
    },
    "LogGroupName": {
      "maxLength": 512,
      "minLength": 1,
      "type": "string"
    },
    "LogSubscription": {
      "enum": [
        "ENABLE",
        "DISABLE"
      ],
      "type": "string"
    },
    "MaxCapacity": {
      "type": "integer"
    },
    "MaxResults100": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "MaxRetries": {
      "minimum": 0,
      "type": "integer"
    },
    "MultiLine": {
      "type": "boolean"
    },
    "NextToken": {
      "maxLength": 2000,
      "minLength": 1,
      "type": "string"
    },
    "OpenedBy": {
      "type": "string"
    },
    "Operation": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^[A-Z\\_]+$",
      "type": "string"
    },
    "Output": {
      "description": "Represents individual output from a particular job run.",
      "properties": {
        "CompressionFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/CompressionFormat"
            },
            {
              "description": "The compression algorithm used to compress the output text of the job."
            }
          ]
        },
        "Format": {
          "allOf": [
            {
              "$ref": "#/definitions/OutputFormat"
            },
            {
              "description": "The data format of the output of the job."
            }
          ]
        },
        "Location": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Location"
            },
            {
              "description": "The location in Amazon S3 where the job writes its output."
            }
          ]
        },
        "Overwrite": {
          "allOf": [
            {
              "$ref": "#/definitions/OverwriteOutput"
            },
            {
              "description": "A value that, if true, means that any data in the location specified for output is overwritten with new output."
            }
          ]
        },
        "PartitionColumns": {
          "allOf": [
            {
              "$ref": "#/definitions/ColumnNameList"
            },
            {
              "description": "The names of one or more partition columns for the output of the job."
            }
          ]
        }
      },
      "required": [
        "Location"
      ],
      "type": "object"
    },
    "OutputFormat": {
      "enum": [
        "CSV",
        "JSON",
        "PARQUET",
        "GLUEPARQUET",
        "AVRO",
        "ORC",
        "XML"
      ],
      "type": "string"
    },
    "OutputList": {
      "items": {
        "$ref": "#/definitions/Output"
      },
      "minItems": 1,
      "type": "array"
    },
    "OverwriteOutput": {
      "type": "boolean"
    },
    "ParameterMap": {
      "additionalProperties": {
        "$ref": "#/definitions/ParameterValue"
      },
      "type": "object"
    },
    "ParameterName": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^[A-Za-z0-9]+$",
      "type": "string"
    },
    "ParameterValue": {
      "maxLength": 8192,
      "minLength": 1,
      "type": "string"
    },
    "Preview": {
      "type": "boolean"
    },
    "Project": {
      "description": "Represents all of the attributes of an AWS Glue DataBrew project.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The ID of the AWS account that owns the project."
            }
          ]
        },
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the project was created."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": "The identifier (the user name) of the user who crated the project."
            }
          ]
        },
        "DatasetName": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The dataset that the project is to act upon."
            }
          ]
        },
        "LastModifiedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastModifiedBy"
            },
            {
              "description": "The identifier (user name) of the user who last modified the project."
            }
          ]
        },
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The last modification date and time for the project."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The unique name of a project."
            }
          ]
        },
        "OpenDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time when the project was opened."
            }
          ]
        },
        "OpenedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/OpenedBy"
            },
            {
              "description": "The identifier (the user name) of the user that opened the project for use."
            }
          ]
        },
        "RecipeName": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The name of a recipe that will be developed during a project session."
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the project."
            }
          ]
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the role that will be assumed for this project."
            }
          ]
        },
        "Sample": {
          "allOf": [
            {
              "$ref": "#/definitions/Sample"
            },
            {
              "description": "The sample size and sampling type to apply to the data. If this parameter isn't specified, then the sample will consiste of the first 500 rows from the dataset."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags that have been applied to the project."
            }
          ]
        }
      },
      "required": [
        "Name",
        "RecipeName"
      ],
      "type": "object"
    },
    "ProjectList": {
      "items": {
        "$ref": "#/definitions/Project"
      },
      "type": "array"
    },
    "ProjectName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "PublishRecipeRequest": {
      "properties": {
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeDescription"
            },
            {
              "description": "A description of the recipe to be published, for this version of the recipe."
            }
          ]
        }
      },
      "title": "PublishRecipeRequest",
      "type": "object"
    },
    "PublishRecipeResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The name of the recipe that you published."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "PublishedBy": {
      "type": "string"
    },
    "Recipe": {
      "description": "Represents one or more actions to be performed on an AWS Glue DataBrew dataset.",
      "properties": {
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the recipe was created."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": "The identifier (the user name) of the user who created the recipe."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeDescription"
            },
            {
              "description": "The description of the recipe."
            }
          ]
        },
        "LastModifiedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastModifiedBy"
            },
            {
              "description": "The identifier (user name) of the user who last modified the recipe."
            }
          ]
        },
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The last modification date and time of the recipe."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The unique name for the recipe."
            }
          ]
        },
        "ProjectName": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The name of the project that the recipe is associated with."
            }
          ]
        },
        "PublishedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/PublishedBy"
            },
            {
              "description": "The identifier (the user name) of the user who published the recipe."
            }
          ]
        },
        "PublishedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time when the recipe was published."
            }
          ]
        },
        "RecipeVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeVersion"
            },
            {
              "description": "The identifier for the version for the recipe. "
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) for the recipe."
            }
          ]
        },
        "Steps": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeStepList"
            },
            {
              "description": "A list of steps that are defined by the recipe."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags that have been applied to the recipe."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "RecipeAction": {
      "description": "Represents a transformation and associated parameters that are used to apply a change to an AWS Glue DataBrew dataset. For more information, see <a href=\"https://docs.aws.amazon.com/databrew/latest/dg/recipe-structure.html\">Recipe structure</a> and <a href=\"https://docs.aws.amazon.com/databrew/latest/dg/recipe-actions-reference.html\">ecipe actions reference</a> .",
      "properties": {
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/Operation"
            },
            {
              "description": "The name of a valid DataBrew transformation to be performed on the data."
            }
          ]
        },
        "Parameters": {
          "allOf": [
            {
              "$ref": "#/definitions/ParameterMap"
            },
            {
              "description": "Contextual parameters for the transformation."
            }
          ]
        }
      },
      "required": [
        "Operation"
      ],
      "type": "object"
    },
    "RecipeDescription": {
      "maxLength": 1024,
      "type": "string"
    },
    "RecipeErrorList": {
      "items": {
        "$ref": "#/definitions/RecipeVersionErrorDetail"
      },
      "type": "array"
    },
    "RecipeErrorMessage": {
      "type": "string"
    },
    "RecipeList": {
      "items": {
        "$ref": "#/definitions/Recipe"
      },
      "type": "array"
    },
    "RecipeName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "RecipeReference": {
      "description": "Represents all of the attributes of an AWS Glue DataBrew recipe.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The name of the recipe."
            }
          ]
        },
        "RecipeVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeVersion"
            },
            {
              "description": "The identifier for the version for the recipe. "
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "RecipeStep": {
      "description": "Represents a single step to be performed in an AWS Glue DataBrew recipe.",
      "properties": {
        "Action": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeAction"
            },
            {
              "description": "The particular action to be performed in the recipe step."
            }
          ]
        },
        "ConditionExpressions": {
          "allOf": [
            {
              "$ref": "#/definitions/ConditionExpressionList"
            },
            {
              "description": "<p>One or more conditions that must be met, in order for the recipe step to succeed.</p> <note> <p>All of the conditions in the array must be met. In other words, all of the conditions must be combined using a logical AND operation.</p> </note>"
            }
          ]
        }
      },
      "required": [
        "Action"
      ],
      "type": "object"
    },
    "RecipeStepList": {
      "items": {
        "$ref": "#/definitions/RecipeStep"
      },
      "type": "array"
    },
    "RecipeVersion": {
      "maxLength": 16,
      "minLength": 1,
      "type": "string"
    },
    "RecipeVersionErrorDetail": {
      "description": "Represents any errors encountered when attempting to delete multiple recipe versions.",
      "properties": {
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorCode"
            },
            {
              "description": "The HTTP status code for the error."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeErrorMessage"
            },
            {
              "description": "The text of the error message."
            }
          ]
        },
        "RecipeVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeVersion"
            },
            {
              "description": "The identifier for the recipe version associated with this error."
            }
          ]
        }
      },
      "type": "object"
    },
    "RecipeVersionList": {
      "items": {
        "$ref": "#/definitions/RecipeVersion"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "ResourceNotFoundException": {},
    "Result": {
      "type": "string"
    },
    "S3Location": {
      "description": "An Amazon S3 location (bucket name an object key) where DataBrew can read input data, or write output from a job.",
      "properties": {
        "Bucket": {
          "allOf": [
            {
              "$ref": "#/definitions/Bucket"
            },
            {
              "description": "The S3 bucket name."
            }
          ]
        },
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/Key"
            },
            {
              "description": "The unique name of the object in the bucket."
            }
          ]
        }
      },
      "required": [
        "Bucket"
      ],
      "type": "object"
    },
    "Sample": {
      "description": "Represents the sample size and sampling type for AWS Glue DataBrew to use for interactive data analysis.",
      "properties": {
        "Size": {
          "allOf": [
            {
              "$ref": "#/definitions/SampleSize"
            },
            {
              "description": "The number of rows in the sample."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/SampleType"
            },
            {
              "description": "The way in which DataBrew obtains rows from a dataset."
            }
          ]
        }
      },
      "required": [
        "Type"
      ],
      "type": "object"
    },
    "SampleSize": {
      "maximum": 5000,
      "minimum": 1,
      "type": "integer"
    },
    "SampleType": {
      "enum": [
        "FIRST_N",
        "LAST_N",
        "RANDOM"
      ],
      "type": "string"
    },
    "Schedule": {
      "description": "Represents one or more dates and times when a job is to run.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The ID of the AWS account that owns the schedule."
            }
          ]
        },
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the schedule was created."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/CreatedBy"
            },
            {
              "description": "The identifier (the user name) of the user who created the schedule."
            }
          ]
        },
        "CronExpression": {
          "allOf": [
            {
              "$ref": "#/definitions/CronExpression"
            },
            {
              "description": "The date(s) and time(s), in <code>cron</code> format, when the job will run."
            }
          ]
        },
        "JobNames": {
          "allOf": [
            {
              "$ref": "#/definitions/JobNameList"
            },
            {
              "description": "A list of jobs to be run, according to the schedule."
            }
          ]
        },
        "LastModifiedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/LastModifiedBy"
            },
            {
              "description": "The identifier (the user name) of the user who last modified the schedule."
            }
          ]
        },
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time when the schedule was last modified."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleName"
            },
            {
              "description": "The name of the schedule."
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the schedule."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "Metadata tags that have been applied to the schedule."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "ScheduleList": {
      "items": {
        "$ref": "#/definitions/Schedule"
      },
      "type": "array"
    },
    "ScheduleName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "SendProjectSessionActionRequest": {
      "properties": {
        "ClientSessionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientSessionId"
            },
            {
              "description": "A unique identifier for an interactive session that's currently open and ready for work. The action will be performed on this session."
            }
          ]
        },
        "Preview": {
          "allOf": [
            {
              "$ref": "#/definitions/Preview"
            },
            {
              "description": "Returns the result of the recipe step, without applying it. The result isn't added to the view frame stack."
            }
          ]
        },
        "RecipeStep": {
          "$ref": "#/definitions/RecipeStep"
        },
        "StepIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/StepIndex"
            },
            {
              "description": "The index from which to preview a step. This index is used to preview the result of steps that have already been applied, so that the resulting view frame is from earlier in the view frame stack."
            }
          ]
        },
        "ViewFrame": {
          "$ref": "#/definitions/ViewFrame"
        }
      },
      "title": "SendProjectSessionActionRequest",
      "type": "object"
    },
    "SendProjectSessionActionResponse": {
      "properties": {
        "ActionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionId"
            },
            {
              "description": "A unique identifier for the action that was performed."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The name of the project that was affected by the action."
            }
          ]
        },
        "Result": {
          "allOf": [
            {
              "$ref": "#/definitions/Result"
            },
            {
              "description": "A message indicating the result of performing the action."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "ServiceQuotaExceededException": {},
    "SessionStatus": {
      "enum": [
        "ASSIGNED",
        "FAILED",
        "INITIALIZING",
        "PROVISIONING",
        "READY",
        "RECYCLING",
        "ROTATING",
        "TERMINATED",
        "TERMINATING",
        "UPDATING"
      ],
      "type": "string"
    },
    "SheetIndex": {
      "maximum": 200,
      "minimum": 0,
      "type": "integer"
    },
    "SheetIndexList": {
      "items": {
        "$ref": "#/definitions/SheetIndex"
      },
      "maxItems": 1,
      "minItems": 1,
      "type": "array"
    },
    "SheetName": {
      "maxLength": 31,
      "minLength": 1,
      "type": "string"
    },
    "SheetNameList": {
      "items": {
        "$ref": "#/definitions/SheetName"
      },
      "maxItems": 1,
      "minItems": 1,
      "type": "array"
    },
    "Source": {
      "enum": [
        "S3",
        "DATA-CATALOG"
      ],
      "type": "string"
    },
    "StartColumnIndex": {
      "minimum": 0,
      "type": "integer"
    },
    "StartJobRunRequest": {
      "properties": {},
      "title": "StartJobRunRequest",
      "type": "object"
    },
    "StartJobRunResponse": {
      "properties": {
        "RunId": {
          "allOf": [
            {
              "$ref": "#/definitions/JobRunId"
            },
            {
              "description": "A system-generated identifier for this particular job run."
            }
          ]
        }
      },
      "required": [
        "RunId"
      ],
      "type": "object"
    },
    "StartProjectSessionRequest": {
      "properties": {
        "AssumeControl": {
          "allOf": [
            {
              "$ref": "#/definitions/AssumeControl"
            },
            {
              "description": "A value that, if true, enables you to take control of a session, even if a different client is currently accessing the project."
            }
          ]
        }
      },
      "title": "StartProjectSessionRequest",
      "type": "object"
    },
    "StartProjectSessionResponse": {
      "properties": {
        "ClientSessionId": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientSessionId"
            },
            {
              "description": "A system-generated identifier for the session."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The name of the project to be acted upon."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "StartedBy": {
      "type": "string"
    },
    "StepIndex": {
      "minimum": 0,
      "type": "integer"
    },
    "StopJobRunRequest": {
      "properties": {},
      "title": "StopJobRunRequest",
      "type": "object"
    },
    "StopJobRunResponse": {
      "properties": {
        "RunId": {
          "allOf": [
            {
              "$ref": "#/definitions/JobRunId"
            },
            {
              "description": "The ID of the job run that you stopped."
            }
          ]
        }
      },
      "required": [
        "RunId"
      ],
      "type": "object"
    },
    "TableName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 200,
      "minItems": 1,
      "type": "array"
    },
    "TagMap": {
      "additionalProperties": {
        "$ref": "#/definitions/TagValue"
      },
      "maxProperties": 200,
      "minProperties": 1,
      "type": "object"
    },
    "TagResourceRequest": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "One or more tags to be assigned to the resource."
            }
          ]
        }
      },
      "required": [
        "Tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "TagValue": {
      "maxLength": 256,
      "type": "string"
    },
    "TargetColumn": {
      "maxLength": 1024,
      "minLength": 1,
      "type": "string"
    },
    "Timeout": {
      "minimum": 0,
      "type": "integer"
    },
    "UntagResourceRequest": {
      "properties": {},
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UntagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateDatasetRequest": {
      "properties": {
        "FormatOptions": {
          "$ref": "#/definitions/FormatOptions"
        },
        "Input": {
          "$ref": "#/definitions/Input"
        }
      },
      "required": [
        "Input"
      ],
      "title": "UpdateDatasetRequest",
      "type": "object"
    },
    "UpdateDatasetResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/DatasetName"
            },
            {
              "description": "The name of the dataset that you updated."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "UpdateProfileJobRequest": {
      "properties": {
        "EncryptionKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionKeyArn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job."
            }
          ]
        },
        "EncryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            },
            {
              "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with AWS KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>"
            }
          ]
        },
        "LogSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/LogSubscription"
            },
            {
              "description": "A value that enables or disables Amazon CloudWatch logging for the current AWS account. If logging is enabled, CloudWatch writes one log stream for each job run."
            }
          ]
        },
        "MaxCapacity": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxCapacity"
            },
            {
              "description": "The maximum number of nodes that DataBrew can use when the job processes data."
            }
          ]
        },
        "MaxRetries": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxRetries"
            },
            {
              "description": "The maximum number of times to retry the job after a job run fails."
            }
          ]
        },
        "OutputLocation": {
          "$ref": "#/definitions/S3Location"
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be assumed for this request."
            }
          ]
        },
        "Timeout": {
          "allOf": [
            {
              "$ref": "#/definitions/Timeout"
            },
            {
              "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>."
            }
          ]
        }
      },
      "required": [
        "OutputLocation",
        "RoleArn"
      ],
      "title": "UpdateProfileJobRequest",
      "type": "object"
    },
    "UpdateProfileJobResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/JobName"
            },
            {
              "description": "The name of the job that was updated."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "UpdateProjectRequest": {
      "properties": {
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the IAM role to be assumed for this request."
            }
          ]
        },
        "Sample": {
          "$ref": "#/definitions/Sample"
        }
      },
      "required": [
        "RoleArn"
      ],
      "title": "UpdateProjectRequest",
      "type": "object"
    },
    "UpdateProjectResponse": {
      "properties": {
        "LastModifiedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Date"
            },
            {
              "description": "The date and time that the project was last modified."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ProjectName"
            },
            {
              "description": "The name of the project that you updated."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "UpdateRecipeJobRequest": {
      "properties": {
        "EncryptionKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionKeyArn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job."
            }
          ]
        },
        "EncryptionMode": {
          "allOf": [
            {
              "$ref": "#/definitions/EncryptionMode"
            },
            {
              "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with AWS KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>"
            }
          ]
        },
        "LogSubscription": {
          "allOf": [
            {
              "$ref": "#/definitions/LogSubscription"
            },
            {
              "description": "A value that enables or disables Amazon CloudWatch logging for the current AWS account. If logging is enabled, CloudWatch writes one log stream for each job run."
            }
          ]
        },
        "MaxCapacity": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxCapacity"
            },
            {
              "description": "The maximum number of nodes that DataBrew can consume when the job processes data."
            }
          ]
        },
        "MaxRetries": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxRetries"
            },
            {
              "description": "The maximum number of times to retry the job after a job run fails."
            }
          ]
        },
        "Outputs": {
          "allOf": [
            {
              "$ref": "#/definitions/OutputList"
            },
            {
              "description": "One or more artifacts that represent the output from running the job. "
            }
          ]
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be assumed for this request."
            }
          ]
        },
        "Timeout": {
          "allOf": [
            {
              "$ref": "#/definitions/Timeout"
            },
            {
              "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>."
            }
          ]
        }
      },
      "required": [
        "Outputs",
        "RoleArn"
      ],
      "title": "UpdateRecipeJobRequest",
      "type": "object"
    },
    "UpdateRecipeJobResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/JobName"
            },
            {
              "description": "The name of the job that you updated."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "UpdateRecipeRequest": {
      "properties": {
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeDescription"
            },
            {
              "description": "A description of the recipe."
            }
          ]
        },
        "Steps": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeStepList"
            },
            {
              "description": "One or more steps to be performed by the recipe. Each step consists of an action, and the conditions under which the action should succeed."
            }
          ]
        }
      },
      "title": "UpdateRecipeRequest",
      "type": "object"
    },
    "UpdateRecipeResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/RecipeName"
            },
            {
              "description": "The name of the recipe that was updated."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "UpdateScheduleRequest": {
      "properties": {
        "CronExpression": {
          "allOf": [
            {
              "$ref": "#/definitions/CronExpression"
            },
            {
              "description": "The date or dates and time or times, in <code>cron</code> format, when the jobs are to be run."
            }
          ]
        },
        "JobNames": {
          "allOf": [
            {
              "$ref": "#/definitions/JobNameList"
            },
            {
              "description": "The name or names of one or more jobs to be run for this schedule."
            }
          ]
        }
      },
      "required": [
        "CronExpression"
      ],
      "title": "UpdateScheduleRequest",
      "type": "object"
    },
    "UpdateScheduleResponse": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ScheduleName"
            },
            {
              "description": "The name of the schedule that was updated."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "ValidationException": {},
    "ViewFrame": {
      "description": "Represents the data being being transformed during an AWS Glue DataBrew project session.",
      "properties": {
        "ColumnRange": {
          "allOf": [
            {
              "$ref": "#/definitions/ColumnRange"
            },
            {
              "description": "The number of columns to include in the view frame, beginning with the <code>StartColumnIndex</code> value and ignoring any columns in the <code>HiddenColumns</code> list."
            }
          ]
        },
        "HiddenColumns": {
          "allOf": [
            {
              "$ref": "#/definitions/HiddenColumnList"
            },
            {
              "description": "A list of columns to hide in the view frame."
            }
          ]
        },
        "StartColumnIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/StartColumnIndex"
            },
            {
              "description": "The starting index for the range of columns to return in the view frame."
            }
          ]
        }
      },
      "required": [
        "StartColumnIndex"
      ],
      "type": "object"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/databrew/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}