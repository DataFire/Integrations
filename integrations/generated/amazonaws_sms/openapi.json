{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<fullname>AWS Server Migration Service</fullname> <p>AWS Server Migration Service (AWS SMS) makes it easier and faster for you to migrate your on-premises workloads to AWS. To learn more about AWS SMS, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/server-migration-service/\">AWS Server Migration Service product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/server-migration-service/latest/userguide/\">AWS Server Migration Service User Guide</a> </p> </li> </ul>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS Server Migration Service",
    "version": "2016-10-24",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sms-2016-10-24.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "sms",
    "x-datafire": {
      "name": "amazonaws_sms",
      "type": "openapi"
    }
  },
  "host": "sms.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.CreateApp": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.CreateApp"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAppRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAppResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Creates an application. An application consists of one or more server groups. Each server group contain one or more servers.",
        "operationId": "CreateApp"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.CreateReplicationJob": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.CreateReplicationJob"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReplicationJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateReplicationJobResponse"
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "481": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "482": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "483": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          },
          "484": {
            "description": "ServerCannotBeReplicatedException",
            "schema": {
              "$ref": "#/definitions/ServerCannotBeReplicatedException"
            }
          },
          "485": {
            "description": "ReplicationJobAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/ReplicationJobAlreadyExistsException"
            }
          },
          "486": {
            "description": "NoConnectorsAvailableException",
            "schema": {
              "$ref": "#/definitions/NoConnectorsAvailableException"
            }
          },
          "487": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "488": {
            "description": "TemporarilyUnavailableException",
            "schema": {
              "$ref": "#/definitions/TemporarilyUnavailableException"
            }
          }
        },
        "description": "Creates a replication job. The replication job schedules periodic replication runs to replicate your server to AWS. Each replication run creates an Amazon Machine Image (AMI).",
        "operationId": "CreateReplicationJob"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteApp": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.DeleteApp"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAppRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAppResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Deletes the specified application. Optionally deletes the launched stack associated with the application and all AWS SMS replication jobs for servers in the application.",
        "operationId": "DeleteApp"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppLaunchConfiguration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.DeleteAppLaunchConfiguration"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAppLaunchConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAppLaunchConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Deletes the launch configuration for the specified application.",
        "operationId": "DeleteAppLaunchConfiguration"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppReplicationConfiguration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.DeleteAppReplicationConfiguration"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAppReplicationConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAppReplicationConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Deletes the replication configuration for the specified application.",
        "operationId": "DeleteAppReplicationConfiguration"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppValidationConfiguration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.DeleteAppValidationConfiguration"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAppValidationConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAppValidationConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Deletes the validation configuration for the specified application.",
        "operationId": "DeleteAppValidationConfiguration"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteReplicationJob": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.DeleteReplicationJob"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteReplicationJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteReplicationJobResponse"
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "481": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "482": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "483": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          },
          "484": {
            "description": "ReplicationJobNotFoundException",
            "schema": {
              "$ref": "#/definitions/ReplicationJobNotFoundException"
            }
          }
        },
        "description": "<p>Deletes the specified replication job.</p> <p>After you delete a replication job, there are no further replication runs. AWS deletes the contents of the Amazon S3 bucket used to store AWS SMS artifacts. The AMIs created by the replication runs are not deleted.</p>",
        "operationId": "DeleteReplicationJob"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteServerCatalog": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.DeleteServerCatalog"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteServerCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteServerCatalogResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "483": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          }
        },
        "description": "Deletes all servers from your server catalog.",
        "operationId": "DeleteServerCatalog"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DisassociateConnector": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.DisassociateConnector"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisassociateConnectorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateConnectorResponse"
            }
          },
          "480": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "481": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "482": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          },
          "483": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          }
        },
        "description": "<p>Disassociates the specified connector from AWS SMS.</p> <p>After you disassociate a connector, it is no longer available to support replication jobs.</p>",
        "operationId": "DisassociateConnector"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GenerateChangeSet": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GenerateChangeSet"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateChangeSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GenerateChangeSetResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Generates a target change set for a currently launched stack and writes it to an Amazon S3 object in the customer’s Amazon S3 bucket.",
        "operationId": "GenerateChangeSet"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GenerateTemplate": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GenerateTemplate"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GenerateTemplateResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Generates an AWS CloudFormation template based on the current launch configuration and writes it to an Amazon S3 object in the customer’s Amazon S3 bucket.",
        "operationId": "GenerateTemplate"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetApp": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GetApp"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAppRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAppResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Retrieve information about the specified application.",
        "operationId": "GetApp"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppLaunchConfiguration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GetAppLaunchConfiguration"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAppLaunchConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAppLaunchConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Retrieves the application launch configuration associated with the specified application.",
        "operationId": "GetAppLaunchConfiguration"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppReplicationConfiguration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GetAppReplicationConfiguration"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAppReplicationConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAppReplicationConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Retrieves the application replication configuration associated with the specified application.",
        "operationId": "GetAppReplicationConfiguration"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppValidationConfiguration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GetAppValidationConfiguration"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAppValidationConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAppValidationConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Retrieves information about a configuration for validating an application.",
        "operationId": "GetAppValidationConfiguration"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppValidationOutput": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GetAppValidationOutput"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAppValidationOutputRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAppValidationOutputResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Retrieves output from validating an application.",
        "operationId": "GetAppValidationOutput"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetConnectors": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GetConnectors"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConnectorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetConnectorsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          }
        },
        "description": "Describes the connectors registered with the AWS SMS.",
        "operationId": "GetConnectors"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetReplicationJobs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GetReplicationJobs"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReplicationJobsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetReplicationJobsResponse"
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "481": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "482": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          }
        },
        "description": "Describes the specified replication job or all of your replication jobs.",
        "operationId": "GetReplicationJobs"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetReplicationRuns": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GetReplicationRuns"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReplicationRunsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetReplicationRunsResponse"
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "481": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "482": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          }
        },
        "description": "Describes the replication runs for the specified replication job.",
        "operationId": "GetReplicationRuns"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetServers": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.GetServers"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetServersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetServersResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          }
        },
        "description": "<p>Describes the servers in your server catalog.</p> <p>Before you can describe your servers, you must import them using <a>ImportServerCatalog</a>.</p>",
        "operationId": "GetServers"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ImportAppCatalog": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.ImportAppCatalog"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportAppCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImportAppCatalogResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Allows application import from AWS Migration Hub.",
        "operationId": "ImportAppCatalog"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ImportServerCatalog": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.ImportServerCatalog"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportServerCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImportServerCatalogResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          },
          "482": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "483": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "484": {
            "description": "NoConnectorsAvailableException",
            "schema": {
              "$ref": "#/definitions/NoConnectorsAvailableException"
            }
          }
        },
        "description": "<p>Gathers a complete list of on-premises servers. Connectors must be installed and monitoring all servers to import.</p> <p>This call returns immediately, but might take additional time to retrieve all the servers.</p>",
        "operationId": "ImportServerCatalog"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.LaunchApp": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.LaunchApp"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LaunchAppRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LaunchAppResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Launches the specified application as a stack in AWS CloudFormation.",
        "operationId": "LaunchApp"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ListApps": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.ListApps"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListAppsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAppsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Retrieves summaries for all applications.",
        "operationId": "ListApps"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.NotifyAppValidationOutput": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.NotifyAppValidationOutput"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotifyAppValidationOutputRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotifyAppValidationOutputResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Provides information to AWS SMS about whether application validation is successful.",
        "operationId": "NotifyAppValidationOutput"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppLaunchConfiguration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.PutAppLaunchConfiguration"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutAppLaunchConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutAppLaunchConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Creates or updates the launch configuration for the specified application.",
        "operationId": "PutAppLaunchConfiguration"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppReplicationConfiguration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.PutAppReplicationConfiguration"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutAppReplicationConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutAppReplicationConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Creates or updates the replication configuration for the specified application.",
        "operationId": "PutAppReplicationConfiguration"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppValidationConfiguration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.PutAppValidationConfiguration"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutAppValidationConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutAppValidationConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Creates or updates a validation configuration for the specified application.",
        "operationId": "PutAppValidationConfiguration"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartAppReplication": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.StartAppReplication"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartAppReplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartAppReplicationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Starts replicating the specified application by creating replication jobs for each server in the application.",
        "operationId": "StartAppReplication"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartOnDemandAppReplication": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.StartOnDemandAppReplication"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartOnDemandAppReplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartOnDemandAppReplicationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Starts an on-demand replication run for the specified application.",
        "operationId": "StartOnDemandAppReplication"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartOnDemandReplicationRun": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.StartOnDemandReplicationRun"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartOnDemandReplicationRunRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartOnDemandReplicationRunResponse"
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "481": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "482": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "483": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          },
          "484": {
            "description": "ReplicationRunLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ReplicationRunLimitExceededException"
            }
          },
          "485": {
            "description": "DryRunOperationException",
            "schema": {
              "$ref": "#/definitions/DryRunOperationException"
            }
          }
        },
        "description": "<p>Starts an on-demand replication run for the specified replication job. This replication run starts immediately. This replication run is in addition to the ones already scheduled.</p> <p>There is a limit on the number of on-demand replications runs that you can request in a 24-hour period.</p>",
        "operationId": "StartOnDemandReplicationRun"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StopAppReplication": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.StopAppReplication"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StopAppReplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopAppReplicationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Stops replicating the specified application by deleting the replication job for each server in the application.",
        "operationId": "StopAppReplication"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.TerminateApp": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.TerminateApp"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TerminateAppRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TerminateAppResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Terminates the stack for the specified application.",
        "operationId": "TerminateApp"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.UpdateApp": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.UpdateApp"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAppRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAppResponse"
            }
          },
          "480": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "481": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "482": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "483": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "484": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        },
        "description": "Updates the specified application.",
        "operationId": "UpdateApp"
      }
    },
    "/#X-Amz-Target=AWSServerMigrationService_V2016_10_24.UpdateReplicationJob": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "AWSServerMigrationService_V2016_10_24.UpdateReplicationJob"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateReplicationJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateReplicationJobResponse"
            }
          },
          "480": {
            "description": "InvalidParameterException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterException"
            }
          },
          "481": {
            "description": "MissingRequiredParameterException",
            "schema": {
              "$ref": "#/definitions/MissingRequiredParameterException"
            }
          },
          "482": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          },
          "483": {
            "description": "UnauthorizedOperationException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedOperationException"
            }
          },
          "484": {
            "description": "ServerCannotBeReplicatedException",
            "schema": {
              "$ref": "#/definitions/ServerCannotBeReplicatedException"
            }
          },
          "485": {
            "description": "ReplicationJobNotFoundException",
            "schema": {
              "$ref": "#/definitions/ReplicationJobNotFoundException"
            }
          },
          "486": {
            "description": "InternalError",
            "schema": {
              "$ref": "#/definitions/InternalError"
            }
          },
          "487": {
            "description": "TemporarilyUnavailableException",
            "schema": {
              "$ref": "#/definitions/TemporarilyUnavailableException"
            }
          }
        },
        "description": "Updates the specified settings for the specified replication job.",
        "operationId": "UpdateReplicationJob"
      }
    }
  },
  "definitions": {
    "AmiId": {
      "type": "string"
    },
    "AppDescription": {
      "type": "string"
    },
    "AppId": {
      "type": "string"
    },
    "AppIdWithValidation": {
      "pattern": "^app-[0-9a-f]{17}$",
      "type": "string"
    },
    "AppIds": {
      "items": {
        "$ref": "#/definitions/AppId"
      },
      "type": "array"
    },
    "AppLaunchConfigurationStatus": {
      "enum": [
        "NOT_CONFIGURED",
        "CONFIGURED"
      ],
      "type": "string"
    },
    "AppLaunchStatus": {
      "enum": [
        "READY_FOR_CONFIGURATION",
        "CONFIGURATION_IN_PROGRESS",
        "CONFIGURATION_INVALID",
        "READY_FOR_LAUNCH",
        "VALIDATION_IN_PROGRESS",
        "LAUNCH_PENDING",
        "LAUNCH_IN_PROGRESS",
        "LAUNCHED",
        "PARTIALLY_LAUNCHED",
        "DELTA_LAUNCH_IN_PROGRESS",
        "DELTA_LAUNCH_FAILED",
        "LAUNCH_FAILED",
        "TERMINATE_IN_PROGRESS",
        "TERMINATE_FAILED",
        "TERMINATED"
      ],
      "type": "string"
    },
    "AppLaunchStatusMessage": {
      "type": "string"
    },
    "AppName": {
      "type": "string"
    },
    "AppReplicationConfigurationStatus": {
      "enum": [
        "NOT_CONFIGURED",
        "CONFIGURED"
      ],
      "type": "string"
    },
    "AppReplicationStatus": {
      "enum": [
        "READY_FOR_CONFIGURATION",
        "CONFIGURATION_IN_PROGRESS",
        "CONFIGURATION_INVALID",
        "READY_FOR_REPLICATION",
        "VALIDATION_IN_PROGRESS",
        "REPLICATION_PENDING",
        "REPLICATION_IN_PROGRESS",
        "REPLICATED",
        "PARTIALLY_REPLICATED",
        "DELTA_REPLICATION_IN_PROGRESS",
        "DELTA_REPLICATED",
        "DELTA_REPLICATION_FAILED",
        "REPLICATION_FAILED",
        "REPLICATION_STOPPING",
        "REPLICATION_STOP_FAILED",
        "REPLICATION_STOPPED"
      ],
      "type": "string"
    },
    "AppReplicationStatusMessage": {
      "type": "string"
    },
    "AppStatus": {
      "enum": [
        "CREATING",
        "ACTIVE",
        "UPDATING",
        "DELETING",
        "DELETED",
        "DELETE_FAILED"
      ],
      "type": "string"
    },
    "AppStatusMessage": {
      "type": "string"
    },
    "AppSummary": {
      "description": "Information about the application.",
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The unique ID of the application."
            }
          ]
        },
        "creationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The creation time of the application."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/AppDescription"
            },
            {
              "description": "The description of the application."
            }
          ]
        },
        "importedAppId": {
          "allOf": [
            {
              "$ref": "#/definitions/ImportedAppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        },
        "lastModified": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The last modified time of the application."
            }
          ]
        },
        "latestReplicationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The timestamp of the application's most recent successful replication."
            }
          ]
        },
        "launchConfigurationStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/AppLaunchConfigurationStatus"
            },
            {
              "description": "Status of the launch configuration."
            }
          ]
        },
        "launchDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/LaunchDetails"
            },
            {
              "description": "Details about the latest launch of the application."
            }
          ]
        },
        "launchStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/AppLaunchStatus"
            },
            {
              "description": "The launch status of the application."
            }
          ]
        },
        "launchStatusMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/AppLaunchStatusMessage"
            },
            {
              "description": "A message related to the launch status of the application."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AppName"
            },
            {
              "description": "The name of the application."
            }
          ]
        },
        "replicationConfigurationStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/AppReplicationConfigurationStatus"
            },
            {
              "description": "Status of the replication configuration."
            }
          ]
        },
        "replicationStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/AppReplicationStatus"
            },
            {
              "description": "The replication status of the application."
            }
          ]
        },
        "replicationStatusMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/AppReplicationStatusMessage"
            },
            {
              "description": "A message related to the replication status of the application."
            }
          ]
        },
        "roleName": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleName"
            },
            {
              "description": "The name of the service role in the customer's account used by AWS SMS."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/AppStatus"
            },
            {
              "description": "Status of the application."
            }
          ]
        },
        "statusMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/AppStatusMessage"
            },
            {
              "description": "A message related to the status of the application"
            }
          ]
        },
        "totalServerGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/TotalServerGroups"
            },
            {
              "description": "The number of server groups present in the application."
            }
          ]
        },
        "totalServers": {
          "allOf": [
            {
              "$ref": "#/definitions/TotalServers"
            },
            {
              "description": "The number of servers present in the application."
            }
          ]
        }
      },
      "type": "object"
    },
    "AppValidationConfiguration": {
      "description": "Configuration for validating an application.",
      "properties": {
        "appValidationStrategy": {
          "allOf": [
            {
              "$ref": "#/definitions/AppValidationStrategy"
            },
            {
              "description": "The validation strategy."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringWithMaxLen255"
            },
            {
              "description": "The name of the configuration."
            }
          ]
        },
        "ssmValidationParameters": {
          "allOf": [
            {
              "$ref": "#/definitions/SSMValidationParameters"
            },
            {
              "description": "The validation parameters."
            }
          ]
        },
        "validationId": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidationId"
            },
            {
              "description": "The ID of the validation."
            }
          ]
        }
      },
      "type": "object"
    },
    "AppValidationConfigurations": {
      "items": {
        "$ref": "#/definitions/AppValidationConfiguration"
      },
      "type": "array"
    },
    "AppValidationOutput": {
      "description": "Output from validating an application.",
      "properties": {
        "ssmOutput": {
          "allOf": [
            {
              "$ref": "#/definitions/SSMOutput"
            },
            {
              "description": "Output from using SSM to validate the application."
            }
          ]
        }
      },
      "type": "object"
    },
    "AppValidationStrategy": {
      "enum": [
        "SSM"
      ],
      "type": "string"
    },
    "Apps": {
      "items": {
        "$ref": "#/definitions/AppSummary"
      },
      "type": "array"
    },
    "AssociatePublicIpAddress": {
      "type": "boolean"
    },
    "AutoLaunch": {
      "type": "boolean"
    },
    "BucketName": {
      "type": "string"
    },
    "ClientToken": {
      "type": "string"
    },
    "Command": {
      "maxLength": 64000,
      "minLength": 1,
      "type": "string"
    },
    "Connector": {
      "description": "Represents a connector.",
      "properties": {
        "associatedOn": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time the connector was associated."
            }
          ]
        },
        "capabilityList": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectorCapabilityList"
            },
            {
              "description": "The capabilities of the connector."
            }
          ]
        },
        "connectorId": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectorId"
            },
            {
              "description": "The ID of the connector."
            }
          ]
        },
        "ipAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/IpAddress"
            },
            {
              "description": "The IP address of the connector."
            }
          ]
        },
        "macAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/MacAddress"
            },
            {
              "description": "The MAC address of the connector."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectorStatus"
            },
            {
              "description": "The status of the connector."
            }
          ]
        },
        "version": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectorVersion"
            },
            {
              "description": "The connector version."
            }
          ]
        },
        "vmManagerId": {
          "allOf": [
            {
              "$ref": "#/definitions/VmManagerId"
            },
            {
              "description": "The ID of the VM manager."
            }
          ]
        },
        "vmManagerName": {
          "allOf": [
            {
              "$ref": "#/definitions/VmManagerName"
            },
            {
              "description": "The name of the VM manager."
            }
          ]
        },
        "vmManagerType": {
          "allOf": [
            {
              "$ref": "#/definitions/VmManagerType"
            },
            {
              "description": "The VM management product."
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectorCapability": {
      "enum": [
        "VSPHERE",
        "SCVMM",
        "HYPERV-MANAGER",
        "SNAPSHOT_BATCHING",
        "SMS_OPTIMIZED"
      ],
      "type": "string"
    },
    "ConnectorCapabilityList": {
      "items": {
        "$ref": "#/definitions/ConnectorCapability"
      },
      "type": "array"
    },
    "ConnectorId": {
      "type": "string"
    },
    "ConnectorList": {
      "items": {
        "$ref": "#/definitions/Connector"
      },
      "type": "array"
    },
    "ConnectorStatus": {
      "enum": [
        "HEALTHY",
        "UNHEALTHY"
      ],
      "type": "string"
    },
    "ConnectorVersion": {
      "type": "string"
    },
    "CreateAppRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/Tags"
            },
            {
              "description": "The tags to be associated with the application."
            }
          ]
        },
        "clientToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientToken"
            },
            {
              "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of application creation."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/AppDescription"
            },
            {
              "description": "The description of the new application"
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AppName"
            },
            {
              "description": "The name of the new application."
            }
          ]
        },
        "roleName": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleName"
            },
            {
              "description": "The name of the service role in the customer's account to be used by AWS SMS."
            }
          ]
        },
        "serverGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroups"
            },
            {
              "description": "The server groups to include in the application."
            }
          ]
        }
      },
      "title": "CreateAppRequest",
      "type": "object"
    },
    "CreateAppResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/Tags"
            },
            {
              "description": "The tags associated with the application."
            }
          ]
        },
        "appSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/AppSummary"
            },
            {
              "description": "A summary description of the application."
            }
          ]
        },
        "serverGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroups"
            },
            {
              "description": "The server groups included in the application."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateReplicationJobRequest": {
      "properties": {
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The description of the replication job."
            }
          ]
        },
        "encrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Encrypted"
            },
            {
              "description": "Indicates whether the replication job produces encrypted AMIs."
            }
          ]
        },
        "frequency": {
          "allOf": [
            {
              "$ref": "#/definitions/Frequency"
            },
            {
              "description": "The time between consecutive replication runs, in hours."
            }
          ]
        },
        "kmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/KmsKeyId"
            },
            {
              "description": "<p>The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following:</p> <ul> <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring to the KMS key alias</p> </li> </ul> <p> If encrypted is <i>true</i> but a KMS key ID is not specified, the customer's default KMS key for Amazon EBS is used. </p>"
            }
          ]
        },
        "licenseType": {
          "allOf": [
            {
              "$ref": "#/definitions/LicenseType"
            },
            {
              "description": "The license type to be used for the AMI created by a successful replication run."
            }
          ]
        },
        "numberOfRecentAmisToKeep": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberOfRecentAmisToKeep"
            },
            {
              "description": "The maximum number of SMS-created AMIs to retain. The oldest is deleted after the maximum number is reached and a new AMI is created."
            }
          ]
        },
        "roleName": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleName"
            },
            {
              "description": "The name of the IAM role to be used by the AWS SMS."
            }
          ]
        },
        "runOnce": {
          "allOf": [
            {
              "$ref": "#/definitions/RunOnce"
            },
            {
              "description": "Indicates whether to run the replication job one time."
            }
          ]
        },
        "seedReplicationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The seed replication time."
            }
          ]
        },
        "serverId": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerId"
            },
            {
              "description": "The ID of the server."
            }
          ]
        }
      },
      "required": [
        "serverId",
        "seedReplicationTime"
      ],
      "title": "CreateReplicationJobRequest",
      "type": "object"
    },
    "CreateReplicationJobResponse": {
      "properties": {
        "replicationJobId": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobId"
            },
            {
              "description": "The unique identifier of the replication job."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteAppLaunchConfigurationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "title": "DeleteAppLaunchConfigurationRequest",
      "type": "object"
    },
    "DeleteAppLaunchConfigurationResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteAppReplicationConfigurationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "title": "DeleteAppReplicationConfigurationRequest",
      "type": "object"
    },
    "DeleteAppReplicationConfigurationResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteAppRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        },
        "forceStopAppReplication": {
          "allOf": [
            {
              "$ref": "#/definitions/ForceStopAppReplication"
            },
            {
              "description": "Indicates whether to stop all replication jobs corresponding to the servers in the application while deleting the application."
            }
          ]
        },
        "forceTerminateApp": {
          "allOf": [
            {
              "$ref": "#/definitions/ForceTerminateApp"
            },
            {
              "description": "Indicates whether to terminate the stack corresponding to the application while deleting the application."
            }
          ]
        }
      },
      "title": "DeleteAppRequest",
      "type": "object"
    },
    "DeleteAppResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteAppValidationConfigurationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppIdWithValidation"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "required": [
        "appId"
      ],
      "title": "DeleteAppValidationConfigurationRequest",
      "type": "object"
    },
    "DeleteAppValidationConfigurationResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteReplicationJobRequest": {
      "properties": {
        "replicationJobId": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobId"
            },
            {
              "description": "The ID of the replication job."
            }
          ]
        }
      },
      "required": [
        "replicationJobId"
      ],
      "title": "DeleteReplicationJobRequest",
      "type": "object"
    },
    "DeleteReplicationJobResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteServerCatalogRequest": {
      "properties": {},
      "title": "DeleteServerCatalogRequest",
      "type": "object"
    },
    "DeleteServerCatalogResponse": {
      "properties": {},
      "type": "object"
    },
    "Description": {
      "type": "string"
    },
    "DisassociateConnectorRequest": {
      "properties": {
        "connectorId": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectorId"
            },
            {
              "description": "The ID of the connector."
            }
          ]
        }
      },
      "required": [
        "connectorId"
      ],
      "title": "DisassociateConnectorRequest",
      "type": "object"
    },
    "DisassociateConnectorResponse": {
      "properties": {},
      "type": "object"
    },
    "DryRunOperationException": {},
    "EC2KeyName": {
      "type": "string"
    },
    "Encrypted": {
      "type": "boolean"
    },
    "ExecutionTimeoutSeconds": {
      "maximum": 28800,
      "minimum": 60,
      "type": "integer"
    },
    "ForceStopAppReplication": {
      "type": "boolean"
    },
    "ForceTerminateApp": {
      "type": "boolean"
    },
    "Frequency": {
      "type": "integer"
    },
    "GenerateChangeSetRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application associated with the change set."
            }
          ]
        },
        "changesetFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/OutputFormat"
            },
            {
              "description": "The format for the change set."
            }
          ]
        }
      },
      "title": "GenerateChangeSetRequest",
      "type": "object"
    },
    "GenerateChangeSetResponse": {
      "properties": {
        "s3Location": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Location"
            },
            {
              "description": "The location of the Amazon S3 object."
            }
          ]
        }
      },
      "type": "object"
    },
    "GenerateTemplateRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application associated with the AWS CloudFormation template."
            }
          ]
        },
        "templateFormat": {
          "allOf": [
            {
              "$ref": "#/definitions/OutputFormat"
            },
            {
              "description": "The format for generating the AWS CloudFormation template."
            }
          ]
        }
      },
      "title": "GenerateTemplateRequest",
      "type": "object"
    },
    "GenerateTemplateResponse": {
      "properties": {
        "s3Location": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Location"
            },
            {
              "description": "The location of the Amazon S3 object."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAppLaunchConfigurationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "title": "GetAppLaunchConfigurationRequest",
      "type": "object"
    },
    "GetAppLaunchConfigurationResponse": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        },
        "autoLaunch": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoLaunch"
            },
            {
              "description": "Indicates whether the application is configured to launch automatically after replication is complete."
            }
          ]
        },
        "roleName": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleName"
            },
            {
              "description": "The name of the service role in the customer's account that AWS CloudFormation uses to launch the application."
            }
          ]
        },
        "serverGroupLaunchConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupLaunchConfigurations"
            },
            {
              "description": "The launch configurations for server groups in this application."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAppReplicationConfigurationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "title": "GetAppReplicationConfigurationRequest",
      "type": "object"
    },
    "GetAppReplicationConfigurationResponse": {
      "properties": {
        "serverGroupReplicationConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupReplicationConfigurations"
            },
            {
              "description": "The replication configurations associated with server groups in this application."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAppRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "title": "GetAppRequest",
      "type": "object"
    },
    "GetAppResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/Tags"
            },
            {
              "description": "The tags associated with the application."
            }
          ]
        },
        "appSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/AppSummary"
            },
            {
              "description": "Information about the application."
            }
          ]
        },
        "serverGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroups"
            },
            {
              "description": "The server groups that belong to the application."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAppValidationConfigurationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppIdWithValidation"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "required": [
        "appId"
      ],
      "title": "GetAppValidationConfigurationRequest",
      "type": "object"
    },
    "GetAppValidationConfigurationResponse": {
      "properties": {
        "appValidationConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/AppValidationConfigurations"
            },
            {
              "description": "The configuration for application validation."
            }
          ]
        },
        "serverGroupValidationConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupValidationConfigurations"
            },
            {
              "description": "The configuration for instance validation."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAppValidationOutputRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppIdWithValidation"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "required": [
        "appId"
      ],
      "title": "GetAppValidationOutputRequest",
      "type": "object"
    },
    "GetAppValidationOutputResponse": {
      "properties": {
        "validationOutputList": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidationOutputList"
            },
            {
              "description": "The validation output."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetConnectorsRequest": {
      "properties": {
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "The maximum number of results to return in a single call. The default value is 50. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token for the next set of results."
            }
          ]
        }
      },
      "title": "GetConnectorsRequest",
      "type": "object"
    },
    "GetConnectorsResponse": {
      "properties": {
        "connectorList": {
          "allOf": [
            {
              "$ref": "#/definitions/ConnectorList"
            },
            {
              "description": "Information about the registered connectors."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token required to retrieve the next set of results. This value is null when there are no more results to return."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetReplicationJobsRequest": {
      "properties": {
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "The maximum number of results to return in a single call. The default value is 50. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token for the next set of results."
            }
          ]
        },
        "replicationJobId": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobId"
            },
            {
              "description": "The ID of the replication job."
            }
          ]
        }
      },
      "title": "GetReplicationJobsRequest",
      "type": "object"
    },
    "GetReplicationJobsResponse": {
      "properties": {
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token required to retrieve the next set of results. This value is null when there are no more results to return."
            }
          ]
        },
        "replicationJobList": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobList"
            },
            {
              "description": "Information about the replication jobs."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetReplicationRunsRequest": {
      "properties": {
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "The maximum number of results to return in a single call. The default value is 50. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token for the next set of results."
            }
          ]
        },
        "replicationJobId": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobId"
            },
            {
              "description": "The ID of the replication job."
            }
          ]
        }
      },
      "required": [
        "replicationJobId"
      ],
      "title": "GetReplicationRunsRequest",
      "type": "object"
    },
    "GetReplicationRunsResponse": {
      "properties": {
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token required to retrieve the next set of results. This value is null when there are no more results to return."
            }
          ]
        },
        "replicationJob": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJob"
            },
            {
              "description": "Information about the replication job."
            }
          ]
        },
        "replicationRunList": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationRunList"
            },
            {
              "description": "Information about the replication runs."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetServersRequest": {
      "properties": {
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "The maximum number of results to return in a single call. The default value is 50. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token for the next set of results."
            }
          ]
        },
        "vmServerAddressList": {
          "allOf": [
            {
              "$ref": "#/definitions/VmServerAddressList"
            },
            {
              "description": "The server addresses."
            }
          ]
        }
      },
      "title": "GetServersRequest",
      "type": "object"
    },
    "GetServersResponse": {
      "properties": {
        "lastModifiedOn": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time when the server was last modified."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token required to retrieve the next set of results. This value is null when there are no more results to return."
            }
          ]
        },
        "serverCatalogStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerCatalogStatus"
            },
            {
              "description": "The status of the server catalog."
            }
          ]
        },
        "serverList": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerList"
            },
            {
              "description": "Information about the servers."
            }
          ]
        }
      },
      "type": "object"
    },
    "ImportAppCatalogRequest": {
      "properties": {
        "roleName": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleName"
            },
            {
              "description": "The name of the service role. If you omit this parameter, we create a service-linked role for AWS Migration Hub in your account. Otherwise, the role that you provide must have the <a href=\"https://docs.aws.amazon.com/migrationhub/latest/ug/new-customer-setup.html#sms-managed\">policy and trust policy</a> described in the <i>AWS Migration Hub User Guide</i>."
            }
          ]
        }
      },
      "title": "ImportAppCatalogRequest",
      "type": "object"
    },
    "ImportAppCatalogResponse": {
      "properties": {},
      "type": "object"
    },
    "ImportServerCatalogRequest": {
      "properties": {},
      "title": "ImportServerCatalogRequest",
      "type": "object"
    },
    "ImportServerCatalogResponse": {
      "properties": {},
      "type": "object"
    },
    "ImportedAppId": {
      "type": "string"
    },
    "InstanceId": {
      "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)",
      "type": "string"
    },
    "InstanceType": {
      "type": "string"
    },
    "InternalError": {},
    "InvalidParameterException": {},
    "IpAddress": {
      "type": "string"
    },
    "KmsKeyId": {
      "type": "string"
    },
    "LaunchAppRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "title": "LaunchAppRequest",
      "type": "object"
    },
    "LaunchAppResponse": {
      "properties": {},
      "type": "object"
    },
    "LaunchDetails": {
      "description": "Details about the latest launch of an application.",
      "properties": {
        "latestLaunchTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The latest time that this application was launched successfully."
            }
          ]
        },
        "stackId": {
          "allOf": [
            {
              "$ref": "#/definitions/StackId"
            },
            {
              "description": "The ID of the latest stack launched for this application."
            }
          ]
        },
        "stackName": {
          "allOf": [
            {
              "$ref": "#/definitions/StackName"
            },
            {
              "description": "The name of the latest stack launched for this application."
            }
          ]
        }
      },
      "type": "object"
    },
    "LaunchOrder": {
      "type": "integer"
    },
    "LicenseType": {
      "enum": [
        "AWS",
        "BYOL"
      ],
      "type": "string"
    },
    "ListAppsRequest": {
      "properties": {
        "appIds": {
          "allOf": [
            {
              "$ref": "#/definitions/AppIds"
            },
            {
              "description": "The unique application IDs."
            }
          ]
        },
        "maxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "The maximum number of results to return in a single call. The default value is 100. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. "
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token for the next set of results."
            }
          ]
        }
      },
      "title": "ListAppsRequest",
      "type": "object"
    },
    "ListAppsResponse": {
      "properties": {
        "apps": {
          "allOf": [
            {
              "$ref": "#/definitions/Apps"
            },
            {
              "description": "The application summaries."
            }
          ]
        },
        "nextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token required to retrieve the next set of results. This value is null when there are no more results to return."
            }
          ]
        }
      },
      "type": "object"
    },
    "LogicalId": {
      "type": "string"
    },
    "MacAddress": {
      "type": "string"
    },
    "MaxResults": {
      "type": "integer"
    },
    "MissingRequiredParameterException": {},
    "NextToken": {
      "type": "string"
    },
    "NoConnectorsAvailableException": {},
    "NonEmptyStringWithMaxLen255": {
      "maxLength": 255,
      "minLength": 1,
      "pattern": "^[\\S]+$",
      "type": "string"
    },
    "NotificationContext": {
      "description": "Contains the status of validating an application.",
      "properties": {
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidationStatus"
            },
            {
              "description": "The status of the validation."
            }
          ]
        },
        "statusMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidationStatusMessage"
            },
            {
              "description": "The status message."
            }
          ]
        },
        "validationId": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidationId"
            },
            {
              "description": "The ID of the validation."
            }
          ]
        }
      },
      "type": "object"
    },
    "NotifyAppValidationOutputRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppIdWithValidation"
            },
            {
              "description": "The ID of the application."
            }
          ]
        },
        "notificationContext": {
          "allOf": [
            {
              "$ref": "#/definitions/NotificationContext"
            },
            {
              "description": "The notification information."
            }
          ]
        }
      },
      "required": [
        "appId"
      ],
      "title": "NotifyAppValidationOutputRequest",
      "type": "object"
    },
    "NotifyAppValidationOutputResponse": {
      "properties": {},
      "type": "object"
    },
    "NumberOfRecentAmisToKeep": {
      "type": "integer"
    },
    "OperationNotPermittedException": {},
    "OutputFormat": {
      "enum": [
        "JSON",
        "YAML"
      ],
      "type": "string"
    },
    "PutAppLaunchConfigurationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        },
        "autoLaunch": {
          "allOf": [
            {
              "$ref": "#/definitions/AutoLaunch"
            },
            {
              "description": "Indicates whether the application is configured to launch automatically after replication is complete."
            }
          ]
        },
        "roleName": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleName"
            },
            {
              "description": "The name of service role in the customer's account that AWS CloudFormation uses to launch the application."
            }
          ]
        },
        "serverGroupLaunchConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupLaunchConfigurations"
            },
            {
              "description": "Information about the launch configurations for server groups in the application."
            }
          ]
        }
      },
      "title": "PutAppLaunchConfigurationRequest",
      "type": "object"
    },
    "PutAppLaunchConfigurationResponse": {
      "properties": {},
      "type": "object"
    },
    "PutAppReplicationConfigurationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        },
        "serverGroupReplicationConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupReplicationConfigurations"
            },
            {
              "description": "Information about the replication configurations for server groups in the application."
            }
          ]
        }
      },
      "title": "PutAppReplicationConfigurationRequest",
      "type": "object"
    },
    "PutAppReplicationConfigurationResponse": {
      "properties": {},
      "type": "object"
    },
    "PutAppValidationConfigurationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppIdWithValidation"
            },
            {
              "description": "The ID of the application."
            }
          ]
        },
        "appValidationConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/AppValidationConfigurations"
            },
            {
              "description": "The configuration for application validation."
            }
          ]
        },
        "serverGroupValidationConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupValidationConfigurations"
            },
            {
              "description": "The configuration for instance validation."
            }
          ]
        }
      },
      "required": [
        "appId"
      ],
      "title": "PutAppValidationConfigurationRequest",
      "type": "object"
    },
    "PutAppValidationConfigurationResponse": {
      "properties": {},
      "type": "object"
    },
    "ReplicationJob": {
      "description": "Represents a replication job.",
      "properties": {
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The description of the replication job."
            }
          ]
        },
        "encrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Encrypted"
            },
            {
              "description": "Indicates whether the replication job should produce encrypted AMIs."
            }
          ]
        },
        "frequency": {
          "allOf": [
            {
              "$ref": "#/definitions/Frequency"
            },
            {
              "description": "The time between consecutive replication runs, in hours."
            }
          ]
        },
        "kmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/KmsKeyId"
            },
            {
              "description": "<p>The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following: </p> <ul> <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring to the KMS key alias</p> </li> </ul> <p>If encrypted is enabled but a KMS key ID is not specified, the customer's default KMS key for Amazon EBS is used.</p>"
            }
          ]
        },
        "latestAmiId": {
          "allOf": [
            {
              "$ref": "#/definitions/AmiId"
            },
            {
              "description": "The ID of the latest Amazon Machine Image (AMI)."
            }
          ]
        },
        "licenseType": {
          "allOf": [
            {
              "$ref": "#/definitions/LicenseType"
            },
            {
              "description": "The license type to be used for the AMI created by a successful replication run."
            }
          ]
        },
        "nextReplicationRunStartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The start time of the next replication run."
            }
          ]
        },
        "numberOfRecentAmisToKeep": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberOfRecentAmisToKeep"
            },
            {
              "description": "The number of recent AMIs to keep in the customer's account for a replication job. By default, the value is set to zero, meaning that all AMIs are kept."
            }
          ]
        },
        "replicationJobId": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobId"
            },
            {
              "description": "The ID of the replication job."
            }
          ]
        },
        "replicationRunList": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationRunList"
            },
            {
              "description": "Information about the replication runs."
            }
          ]
        },
        "roleName": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleName"
            },
            {
              "description": "The name of the IAM role to be used by AWS SMS."
            }
          ]
        },
        "runOnce": {
          "allOf": [
            {
              "$ref": "#/definitions/RunOnce"
            },
            {
              "description": "Indicates whether to run the replication job one time."
            }
          ]
        },
        "seedReplicationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The seed replication time."
            }
          ]
        },
        "serverId": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerId"
            },
            {
              "description": "The ID of the server."
            }
          ]
        },
        "serverType": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerType"
            },
            {
              "description": "The type of server."
            }
          ]
        },
        "state": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobState"
            },
            {
              "description": "The state of the replication job."
            }
          ]
        },
        "statusMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobStatusMessage"
            },
            {
              "description": "The description of the current status of the replication job."
            }
          ]
        },
        "vmServer": {
          "allOf": [
            {
              "$ref": "#/definitions/VmServer"
            },
            {
              "description": "Information about the VM server."
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationJobAlreadyExistsException": {},
    "ReplicationJobId": {
      "type": "string"
    },
    "ReplicationJobList": {
      "items": {
        "$ref": "#/definitions/ReplicationJob"
      },
      "type": "array"
    },
    "ReplicationJobNotFoundException": {},
    "ReplicationJobState": {
      "enum": [
        "PENDING",
        "ACTIVE",
        "FAILED",
        "DELETING",
        "DELETED",
        "COMPLETED",
        "PAUSED_ON_FAILURE",
        "FAILING"
      ],
      "type": "string"
    },
    "ReplicationJobStatusMessage": {
      "type": "string"
    },
    "ReplicationJobTerminated": {
      "type": "boolean"
    },
    "ReplicationRun": {
      "description": "Represents a replication run.",
      "properties": {
        "amiId": {
          "allOf": [
            {
              "$ref": "#/definitions/AmiId"
            },
            {
              "description": "The ID of the Amazon Machine Image (AMI) from the replication run."
            }
          ]
        },
        "completedTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The completion time of the last replication run."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The description of the replication run."
            }
          ]
        },
        "encrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Encrypted"
            },
            {
              "description": "Indicates whether the replication run should produce an encrypted AMI."
            }
          ]
        },
        "kmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/KmsKeyId"
            },
            {
              "description": "<p>The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following:</p> <ul> <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring to the KMS key alias</p> </li> </ul> <p> If encrypted is <i>true</i> but a KMS key ID is not specified, the customer's default KMS key for Amazon EBS is used. </p>"
            }
          ]
        },
        "replicationRunId": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationRunId"
            },
            {
              "description": "The ID of the replication run."
            }
          ]
        },
        "scheduledStartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The start time of the next replication run."
            }
          ]
        },
        "stageDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationRunStageDetails"
            },
            {
              "description": "Details about the current stage of the replication run."
            }
          ]
        },
        "state": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationRunState"
            },
            {
              "description": "The state of the replication run."
            }
          ]
        },
        "statusMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationRunStatusMessage"
            },
            {
              "description": "The description of the current status of the replication job."
            }
          ]
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationRunType"
            },
            {
              "description": "The type of replication run."
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationRunId": {
      "type": "string"
    },
    "ReplicationRunLimitExceededException": {},
    "ReplicationRunList": {
      "items": {
        "$ref": "#/definitions/ReplicationRun"
      },
      "type": "array"
    },
    "ReplicationRunStage": {
      "type": "string"
    },
    "ReplicationRunStageDetails": {
      "description": "Details of the current stage of a replication run.",
      "properties": {
        "stage": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationRunStage"
            },
            {
              "description": "The current stage of a replication run."
            }
          ]
        },
        "stageProgress": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationRunStageProgress"
            },
            {
              "description": "The progress of the current stage of a replication run."
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationRunStageProgress": {
      "type": "string"
    },
    "ReplicationRunState": {
      "enum": [
        "PENDING",
        "MISSED",
        "ACTIVE",
        "FAILED",
        "COMPLETED",
        "DELETING",
        "DELETED"
      ],
      "type": "string"
    },
    "ReplicationRunStatusMessage": {
      "type": "string"
    },
    "ReplicationRunType": {
      "enum": [
        "ON_DEMAND",
        "AUTOMATIC"
      ],
      "type": "string"
    },
    "RoleName": {
      "type": "string"
    },
    "RunOnce": {
      "type": "boolean"
    },
    "S3BucketName": {
      "maxLength": 63,
      "minLength": 3,
      "type": "string"
    },
    "S3KeyName": {
      "maxLength": 1024,
      "type": "string"
    },
    "S3Location": {
      "description": "Location of an Amazon S3 object.",
      "properties": {
        "bucket": {
          "allOf": [
            {
              "$ref": "#/definitions/S3BucketName"
            },
            {
              "description": "The Amazon S3 bucket name."
            }
          ]
        },
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/S3KeyName"
            },
            {
              "description": "The Amazon S3 bucket key."
            }
          ]
        }
      },
      "type": "object"
    },
    "SSMOutput": {
      "description": "Contains the location of validation output.",
      "properties": {
        "s3Location": {
          "$ref": "#/definitions/S3Location"
        }
      },
      "type": "object"
    },
    "SSMValidationParameters": {
      "description": "Contains validation parameters.",
      "properties": {
        "command": {
          "allOf": [
            {
              "$ref": "#/definitions/Command"
            },
            {
              "description": "The command to run the validation script"
            }
          ]
        },
        "executionTimeoutSeconds": {
          "allOf": [
            {
              "$ref": "#/definitions/ExecutionTimeoutSeconds"
            },
            {
              "description": "The timeout interval, in seconds."
            }
          ]
        },
        "instanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceId"
            },
            {
              "description": "The ID of the instance. The instance must have the following tag: UserForSMSApplicationValidation=true."
            }
          ]
        },
        "outputS3BucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/BucketName"
            },
            {
              "description": "The name of the S3 bucket for output."
            }
          ]
        },
        "scriptType": {
          "allOf": [
            {
              "$ref": "#/definitions/ScriptType"
            },
            {
              "description": "The type of validation script."
            }
          ]
        },
        "source": {
          "allOf": [
            {
              "$ref": "#/definitions/Source"
            },
            {
              "description": "The location of the validation script."
            }
          ]
        }
      },
      "type": "object"
    },
    "ScriptType": {
      "enum": [
        "SHELL_SCRIPT",
        "POWERSHELL_SCRIPT"
      ],
      "type": "string"
    },
    "SecurityGroup": {
      "type": "string"
    },
    "Server": {
      "description": "Represents a server.",
      "properties": {
        "replicationJobId": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobId"
            },
            {
              "description": "The ID of the replication job."
            }
          ]
        },
        "replicationJobTerminated": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobTerminated"
            },
            {
              "description": "Indicates whether the replication job is deleted or failed."
            }
          ]
        },
        "serverId": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerId"
            },
            {
              "description": "The ID of the server."
            }
          ]
        },
        "serverType": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerType"
            },
            {
              "description": "The type of server."
            }
          ]
        },
        "vmServer": {
          "allOf": [
            {
              "$ref": "#/definitions/VmServer"
            },
            {
              "description": "Information about the VM server."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerCannotBeReplicatedException": {},
    "ServerCatalogStatus": {
      "enum": [
        "NOT_IMPORTED",
        "IMPORTING",
        "AVAILABLE",
        "DELETED",
        "EXPIRED"
      ],
      "type": "string"
    },
    "ServerGroup": {
      "description": "Logical grouping of servers.",
      "properties": {
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupName"
            },
            {
              "description": "The name of a server group."
            }
          ]
        },
        "serverGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupId"
            },
            {
              "description": "The ID of a server group."
            }
          ]
        },
        "serverList": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerList"
            },
            {
              "description": "The servers that belong to a server group."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerGroupId": {
      "type": "string"
    },
    "ServerGroupLaunchConfiguration": {
      "description": "Launch configuration for a server group.",
      "properties": {
        "launchOrder": {
          "allOf": [
            {
              "$ref": "#/definitions/LaunchOrder"
            },
            {
              "description": "The launch order of servers in the server group."
            }
          ]
        },
        "serverGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupId"
            },
            {
              "description": "The ID of the server group with which the launch configuration is associated."
            }
          ]
        },
        "serverLaunchConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerLaunchConfigurations"
            },
            {
              "description": "The launch configuration for servers in the server group."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerGroupLaunchConfigurations": {
      "items": {
        "$ref": "#/definitions/ServerGroupLaunchConfiguration"
      },
      "type": "array"
    },
    "ServerGroupName": {
      "type": "string"
    },
    "ServerGroupReplicationConfiguration": {
      "description": "Replication configuration for a server group.",
      "properties": {
        "serverGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupId"
            },
            {
              "description": "The ID of the server group with which this replication configuration is associated."
            }
          ]
        },
        "serverReplicationConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerReplicationConfigurations"
            },
            {
              "description": "The replication configuration for servers in the server group."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerGroupReplicationConfigurations": {
      "items": {
        "$ref": "#/definitions/ServerGroupReplicationConfiguration"
      },
      "type": "array"
    },
    "ServerGroupValidationConfiguration": {
      "description": "Configuration for validating an instance.",
      "properties": {
        "serverGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroupId"
            },
            {
              "description": "The ID of the server group."
            }
          ]
        },
        "serverValidationConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerValidationConfigurations"
            },
            {
              "description": "The validation configuration."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerGroupValidationConfigurations": {
      "items": {
        "$ref": "#/definitions/ServerGroupValidationConfiguration"
      },
      "type": "array"
    },
    "ServerGroups": {
      "items": {
        "$ref": "#/definitions/ServerGroup"
      },
      "type": "array"
    },
    "ServerId": {
      "type": "string"
    },
    "ServerLaunchConfiguration": {
      "description": "Launch configuration for a server.",
      "properties": {
        "associatePublicIpAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/AssociatePublicIpAddress"
            },
            {
              "description": "Indicates whether a publicly accessible IP address is created when launching the server."
            }
          ]
        },
        "configureScript": {
          "$ref": "#/definitions/S3Location"
        },
        "configureScriptType": {
          "allOf": [
            {
              "$ref": "#/definitions/ScriptType"
            },
            {
              "description": "The type of configuration script."
            }
          ]
        },
        "ec2KeyName": {
          "allOf": [
            {
              "$ref": "#/definitions/EC2KeyName"
            },
            {
              "description": "The name of the Amazon EC2 SSH key to be used for connecting to the launched server."
            }
          ]
        },
        "iamInstanceProfileName": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleName"
            },
            {
              "description": "The name of the IAM instance profile."
            }
          ]
        },
        "instanceType": {
          "allOf": [
            {
              "$ref": "#/definitions/InstanceType"
            },
            {
              "description": "The instance type to use when launching the server."
            }
          ]
        },
        "logicalId": {
          "allOf": [
            {
              "$ref": "#/definitions/LogicalId"
            },
            {
              "description": "The logical ID of the server in the AWS CloudFormation template."
            }
          ]
        },
        "securityGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityGroup"
            },
            {
              "description": "The ID of the security group that applies to the launched server."
            }
          ]
        },
        "server": {
          "allOf": [
            {
              "$ref": "#/definitions/Server"
            },
            {
              "description": "The ID of the server with which the launch configuration is associated."
            }
          ]
        },
        "subnet": {
          "allOf": [
            {
              "$ref": "#/definitions/Subnet"
            },
            {
              "description": "The ID of the subnet the server should be launched into."
            }
          ]
        },
        "userData": {
          "allOf": [
            {
              "$ref": "#/definitions/UserData"
            },
            {
              "description": "Location of the user-data script to be executed when launching the server."
            }
          ]
        },
        "vpc": {
          "allOf": [
            {
              "$ref": "#/definitions/VPC"
            },
            {
              "description": "The ID of the VPC into which the server should be launched."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerLaunchConfigurations": {
      "items": {
        "$ref": "#/definitions/ServerLaunchConfiguration"
      },
      "type": "array"
    },
    "ServerList": {
      "items": {
        "$ref": "#/definitions/Server"
      },
      "type": "array"
    },
    "ServerReplicationConfiguration": {
      "description": "Replication configuration of a server.",
      "properties": {
        "server": {
          "allOf": [
            {
              "$ref": "#/definitions/Server"
            },
            {
              "description": "The ID of the server with which this replication configuration is associated."
            }
          ]
        },
        "serverReplicationParameters": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerReplicationParameters"
            },
            {
              "description": "The parameters for replicating the server."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerReplicationConfigurations": {
      "items": {
        "$ref": "#/definitions/ServerReplicationConfiguration"
      },
      "type": "array"
    },
    "ServerReplicationParameters": {
      "description": "The replication parameters for replicating a server.",
      "properties": {
        "encrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Encrypted"
            },
            {
              "description": "Indicates whether the replication job produces encrypted AMIs."
            }
          ]
        },
        "frequency": {
          "allOf": [
            {
              "$ref": "#/definitions/Frequency"
            },
            {
              "description": "The frequency of creating replication jobs for the server."
            }
          ]
        },
        "kmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/KmsKeyId"
            },
            {
              "description": "<p>The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following:</p> <ul> <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring to the KMS key alias</p> </li> </ul> <p>If encrypted is enabled but a KMS key ID is not specified, the customer's default KMS key for Amazon EBS is used.</p>"
            }
          ]
        },
        "licenseType": {
          "allOf": [
            {
              "$ref": "#/definitions/LicenseType"
            },
            {
              "description": "The license type for creating a replication job for the server."
            }
          ]
        },
        "numberOfRecentAmisToKeep": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberOfRecentAmisToKeep"
            },
            {
              "description": "The number of recent AMIs to keep when creating a replication job for this server."
            }
          ]
        },
        "runOnce": {
          "allOf": [
            {
              "$ref": "#/definitions/RunOnce"
            },
            {
              "description": "Indicates whether to run the replication job one time."
            }
          ]
        },
        "seedTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The seed time for creating a replication job for the server."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerType": {
      "enum": [
        "VIRTUAL_MACHINE"
      ],
      "type": "string"
    },
    "ServerValidationConfiguration": {
      "description": "Configuration for validating an instance.",
      "properties": {
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringWithMaxLen255"
            },
            {
              "description": "The name of the configuration."
            }
          ]
        },
        "server": {
          "$ref": "#/definitions/Server"
        },
        "serverValidationStrategy": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerValidationStrategy"
            },
            {
              "description": "The validation strategy."
            }
          ]
        },
        "userDataValidationParameters": {
          "allOf": [
            {
              "$ref": "#/definitions/UserDataValidationParameters"
            },
            {
              "description": "The validation parameters."
            }
          ]
        },
        "validationId": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidationId"
            },
            {
              "description": "The ID of the validation."
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerValidationConfigurations": {
      "items": {
        "$ref": "#/definitions/ServerValidationConfiguration"
      },
      "type": "array"
    },
    "ServerValidationOutput": {
      "description": "Contains output from validating an instance.",
      "properties": {
        "server": {
          "$ref": "#/definitions/Server"
        }
      },
      "type": "object"
    },
    "ServerValidationStrategy": {
      "enum": [
        "USERDATA"
      ],
      "type": "string"
    },
    "Source": {
      "description": "Contains the location of a validation script.",
      "properties": {
        "s3Location": {
          "$ref": "#/definitions/S3Location"
        }
      },
      "type": "object"
    },
    "StackId": {
      "type": "string"
    },
    "StackName": {
      "type": "string"
    },
    "StartAppReplicationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "title": "StartAppReplicationRequest",
      "type": "object"
    },
    "StartAppReplicationResponse": {
      "properties": {},
      "type": "object"
    },
    "StartOnDemandAppReplicationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The description of the replication run."
            }
          ]
        }
      },
      "required": [
        "appId"
      ],
      "title": "StartOnDemandAppReplicationRequest",
      "type": "object"
    },
    "StartOnDemandAppReplicationResponse": {
      "properties": {},
      "type": "object"
    },
    "StartOnDemandReplicationRunRequest": {
      "properties": {
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The description of the replication run."
            }
          ]
        },
        "replicationJobId": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobId"
            },
            {
              "description": "The ID of the replication job."
            }
          ]
        }
      },
      "required": [
        "replicationJobId"
      ],
      "title": "StartOnDemandReplicationRunRequest",
      "type": "object"
    },
    "StartOnDemandReplicationRunResponse": {
      "properties": {
        "replicationRunId": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationRunId"
            },
            {
              "description": "The ID of the replication run."
            }
          ]
        }
      },
      "type": "object"
    },
    "StopAppReplicationRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "title": "StopAppReplicationRequest",
      "type": "object"
    },
    "StopAppReplicationResponse": {
      "properties": {},
      "type": "object"
    },
    "Subnet": {
      "type": "string"
    },
    "Tag": {
      "description": "Key/value pair that can be assigned to an application.",
      "properties": {
        "key": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKey"
            },
            {
              "description": "The tag key."
            }
          ]
        },
        "value": {
          "allOf": [
            {
              "$ref": "#/definitions/TagValue"
            },
            {
              "description": "The tag value."
            }
          ]
        }
      },
      "type": "object"
    },
    "TagKey": {
      "type": "string"
    },
    "TagValue": {
      "type": "string"
    },
    "Tags": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TemporarilyUnavailableException": {},
    "TerminateAppRequest": {
      "properties": {
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        }
      },
      "title": "TerminateAppRequest",
      "type": "object"
    },
    "TerminateAppResponse": {
      "properties": {},
      "type": "object"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "TotalServerGroups": {
      "type": "integer"
    },
    "TotalServers": {
      "type": "integer"
    },
    "UnauthorizedOperationException": {},
    "UpdateAppRequest": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/Tags"
            },
            {
              "description": "The tags to associate with the application."
            }
          ]
        },
        "appId": {
          "allOf": [
            {
              "$ref": "#/definitions/AppId"
            },
            {
              "description": "The ID of the application."
            }
          ]
        },
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/AppDescription"
            },
            {
              "description": "The new description of the application."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/AppName"
            },
            {
              "description": "The new name of the application."
            }
          ]
        },
        "roleName": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleName"
            },
            {
              "description": "The name of the service role in the customer's account used by AWS SMS."
            }
          ]
        },
        "serverGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroups"
            },
            {
              "description": "The server groups in the application to update."
            }
          ]
        }
      },
      "title": "UpdateAppRequest",
      "type": "object"
    },
    "UpdateAppResponse": {
      "properties": {
        "tags": {
          "allOf": [
            {
              "$ref": "#/definitions/Tags"
            },
            {
              "description": "The tags associated with the application."
            }
          ]
        },
        "appSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/AppSummary"
            },
            {
              "description": "A summary description of the application."
            }
          ]
        },
        "serverGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerGroups"
            },
            {
              "description": "The updated server groups in the application."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateReplicationJobRequest": {
      "properties": {
        "description": {
          "allOf": [
            {
              "$ref": "#/definitions/Description"
            },
            {
              "description": "The description of the replication job."
            }
          ]
        },
        "encrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Encrypted"
            },
            {
              "description": "When true, the replication job produces encrypted AMIs. For more information, <code>KmsKeyId</code>."
            }
          ]
        },
        "frequency": {
          "allOf": [
            {
              "$ref": "#/definitions/Frequency"
            },
            {
              "description": "The time between consecutive replication runs, in hours."
            }
          ]
        },
        "kmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/KmsKeyId"
            },
            {
              "description": "<p>The ID of the KMS key for replication jobs that produce encrypted AMIs. This value can be any of the following:</p> <ul> <li> <p>KMS key ID</p> </li> <li> <p>KMS key alias</p> </li> <li> <p>ARN referring to the KMS key ID</p> </li> <li> <p>ARN referring to the KMS key alias</p> </li> </ul> <p>If encrypted is enabled but a KMS key ID is not specified, the customer's default KMS key for Amazon EBS is used.</p>"
            }
          ]
        },
        "licenseType": {
          "allOf": [
            {
              "$ref": "#/definitions/LicenseType"
            },
            {
              "description": "The license type to be used for the AMI created by a successful replication run."
            }
          ]
        },
        "nextReplicationRunStartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The start time of the next replication run."
            }
          ]
        },
        "numberOfRecentAmisToKeep": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberOfRecentAmisToKeep"
            },
            {
              "description": "The maximum number of SMS-created AMIs to retain. The oldest is deleted after the maximum number is reached and a new AMI is created."
            }
          ]
        },
        "replicationJobId": {
          "allOf": [
            {
              "$ref": "#/definitions/ReplicationJobId"
            },
            {
              "description": "The ID of the replication job."
            }
          ]
        },
        "roleName": {
          "allOf": [
            {
              "$ref": "#/definitions/RoleName"
            },
            {
              "description": "The name of the IAM role to be used by AWS SMS."
            }
          ]
        }
      },
      "required": [
        "replicationJobId"
      ],
      "title": "UpdateReplicationJobRequest",
      "type": "object"
    },
    "UpdateReplicationJobResponse": {
      "properties": {},
      "type": "object"
    },
    "UserData": {
      "description": "A script that runs on first launch of an Amazon EC2 instance. Used for configuring the server during launch.",
      "properties": {
        "s3Location": {
          "allOf": [
            {
              "$ref": "#/definitions/S3Location"
            },
            {
              "description": "Amazon S3 location of the user-data script."
            }
          ]
        }
      },
      "type": "object"
    },
    "UserDataValidationParameters": {
      "description": "Contains validation parameters.",
      "properties": {
        "scriptType": {
          "allOf": [
            {
              "$ref": "#/definitions/ScriptType"
            },
            {
              "description": "The type of validation script."
            }
          ]
        },
        "source": {
          "allOf": [
            {
              "$ref": "#/definitions/Source"
            },
            {
              "description": "The location of the validation script."
            }
          ]
        }
      },
      "type": "object"
    },
    "VPC": {
      "type": "string"
    },
    "ValidationId": {
      "pattern": "^val-[0-9a-f]{17}$",
      "type": "string"
    },
    "ValidationOutput": {
      "description": "Contains validation output.",
      "properties": {
        "appValidationOutput": {
          "allOf": [
            {
              "$ref": "#/definitions/AppValidationOutput"
            },
            {
              "description": "The output from validating an application."
            }
          ]
        },
        "latestValidationTime": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The latest time that the validation was performed."
            }
          ]
        },
        "name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringWithMaxLen255"
            },
            {
              "description": "The name of the validation."
            }
          ]
        },
        "serverValidationOutput": {
          "allOf": [
            {
              "$ref": "#/definitions/ServerValidationOutput"
            },
            {
              "description": "The output from validation an instance."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidationStatus"
            },
            {
              "description": "The status of the validation."
            }
          ]
        },
        "statusMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidationStatusMessage"
            },
            {
              "description": "The status message."
            }
          ]
        },
        "validationId": {
          "allOf": [
            {
              "$ref": "#/definitions/ValidationId"
            },
            {
              "description": "The ID of the validation."
            }
          ]
        }
      },
      "type": "object"
    },
    "ValidationOutputList": {
      "items": {
        "$ref": "#/definitions/ValidationOutput"
      },
      "type": "array"
    },
    "ValidationStatus": {
      "enum": [
        "READY_FOR_VALIDATION",
        "PENDING",
        "IN_PROGRESS",
        "SUCCEEDED",
        "FAILED"
      ],
      "type": "string"
    },
    "ValidationStatusMessage": {
      "maxLength": 2500,
      "type": "string"
    },
    "VmId": {
      "type": "string"
    },
    "VmManagerId": {
      "type": "string"
    },
    "VmManagerName": {
      "type": "string"
    },
    "VmManagerType": {
      "enum": [
        "VSPHERE",
        "SCVMM",
        "HYPERV-MANAGER"
      ],
      "type": "string"
    },
    "VmName": {
      "type": "string"
    },
    "VmPath": {
      "type": "string"
    },
    "VmServer": {
      "description": "Represents a VM server.",
      "properties": {
        "vmManagerName": {
          "allOf": [
            {
              "$ref": "#/definitions/VmManagerName"
            },
            {
              "description": "The name of the VM manager."
            }
          ]
        },
        "vmManagerType": {
          "allOf": [
            {
              "$ref": "#/definitions/VmManagerType"
            },
            {
              "description": "The type of VM management product."
            }
          ]
        },
        "vmName": {
          "allOf": [
            {
              "$ref": "#/definitions/VmName"
            },
            {
              "description": "The name of the VM."
            }
          ]
        },
        "vmPath": {
          "allOf": [
            {
              "$ref": "#/definitions/VmPath"
            },
            {
              "description": "The VM folder path in the vCenter Server virtual machine inventory tree."
            }
          ]
        },
        "vmServerAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/VmServerAddress"
            },
            {
              "description": "The VM server location."
            }
          ]
        }
      },
      "type": "object"
    },
    "VmServerAddress": {
      "description": "Represents a VM server location.",
      "properties": {
        "vmId": {
          "allOf": [
            {
              "$ref": "#/definitions/VmId"
            },
            {
              "description": "The ID of the VM."
            }
          ]
        },
        "vmManagerId": {
          "allOf": [
            {
              "$ref": "#/definitions/VmManagerId"
            },
            {
              "description": "The ID of the VM manager."
            }
          ]
        }
      },
      "type": "object"
    },
    "VmServerAddressList": {
      "items": {
        "$ref": "#/definitions/VmServerAddress"
      },
      "type": "array"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/sms/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}