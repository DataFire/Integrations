{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "The Amazon API Gateway Management API allows you to directly manage runtime aspects of your deployed APIs. To use it, you must explicitly set the SDK's endpoint to point to the endpoint of your deployed API. The endpoint will be of the form https://{api-id}.execute-api.{region}.amazonaws.com/{stage}, or will be the endpoint corresponding to your API's custom domain and base path, if applicable.",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AmazonApiGatewayManagementApi",
    "version": "2018-11-29",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/apigatewaymanagementapi-2018-11-29.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "apigatewaymanagementapi",
    "x-datafire": {
      "name": "amazonaws_apigatewaymanagementapi",
      "type": "openapi"
    }
  },
  "host": "execute-api.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/@connections/{connectionId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "connectionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "GoneException",
            "schema": {
              "$ref": "#/definitions/GoneException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          }
        },
        "description": "Delete the connection with the provided id.",
        "operationId": "DeleteConnection"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "connectionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetConnectionResponse"
            }
          },
          "480": {
            "description": "GoneException",
            "schema": {
              "$ref": "#/definitions/GoneException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          }
        },
        "description": "Get information about the connection with the provided id.",
        "operationId": "GetConnection"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The identifier of the connection that a specific client is using.",
            "in": "path",
            "name": "connectionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Data": {
                  "description": "The data to be sent to the client specified by its connection id.",
                  "maxLength": 131072,
                  "type": "string"
                }
              },
              "required": [
                "Data"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "GoneException",
            "schema": {
              "$ref": "#/definitions/GoneException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "PayloadTooLargeException",
            "schema": {
              "$ref": "#/definitions/PayloadTooLargeException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          }
        },
        "description": "Sends the provided data to the specified connection.",
        "operationId": "PostToConnection"
      }
    }
  },
  "definitions": {
    "Data": {
      "description": "The data to be sent to the client specified by its connection id.",
      "maxLength": 131072,
      "type": "string"
    },
    "DeleteConnectionRequest": {
      "properties": {},
      "title": "DeleteConnectionRequest",
      "type": "object"
    },
    "ForbiddenException": {},
    "GetConnectionRequest": {
      "properties": {},
      "title": "GetConnectionRequest",
      "type": "object"
    },
    "GetConnectionResponse": {
      "properties": {
        "ConnectedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The time in ISO 8601 format for when the connection was established.",
              "xml": {
                "name": "connectedAt"
              }
            }
          ]
        },
        "Identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "xml": {
                "name": "identity"
              }
            }
          ]
        },
        "LastActiveAt": {
          "allOf": [
            {
              "$ref": "#/definitions/__timestampIso8601"
            },
            {
              "description": "The time in ISO 8601 format for when the connection was last active.",
              "xml": {
                "name": "lastActiveAt"
              }
            }
          ]
        }
      },
      "type": "object"
    },
    "GoneException": {},
    "Identity": {
      "properties": {
        "SourceIp": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The source IP address of the TCP connection making the request to API Gateway.",
              "xml": {
                "name": "sourceIp"
              }
            }
          ]
        },
        "UserAgent": {
          "allOf": [
            {
              "$ref": "#/definitions/__string"
            },
            {
              "description": "The User Agent of the API caller.",
              "xml": {
                "name": "userAgent"
              }
            }
          ]
        }
      },
      "required": [
        "SourceIp",
        "UserAgent"
      ],
      "type": "object"
    },
    "LimitExceededException": {},
    "PayloadTooLargeException": {},
    "PostToConnectionRequest": {
      "properties": {
        "Data": {
          "allOf": [
            {
              "$ref": "#/definitions/Data"
            },
            {
              "description": "The data to be sent to the client specified by its connection id."
            }
          ]
        }
      },
      "required": [
        "Data"
      ],
      "title": "PostToConnectionRequest",
      "type": "object"
    },
    "__string": {
      "type": "string"
    },
    "__timestampIso8601": {
      "format": "date-time",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/execute-api/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  }
}