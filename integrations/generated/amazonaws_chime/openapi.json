{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>The Amazon Chime API (application programming interface) is designed for developers to perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes. It also includes some server-side API actions to use with the Amazon Chime SDK. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.</p> <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls. We recommend using an AWS SDK or the AWS CLI. Each API operation includes links to information about using it with a language-specific AWS SDK or the AWS CLI.</p> <dl> <dt>Using an AWS SDK</dt> <dd> <p>You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the <a href=\"http://aws.amazon.com/developer/\">AWS Developer Center</a>.</p> </dd> <dt>Using the AWS CLI</dt> <dd> <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/installing.html\">Installing the AWS Command Line Interface</a> in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/chime/index.html\">Amazon Chime commands</a> in the <i>AWS CLI Command Reference</i>.</p> </dd> <dt>Using REST</dt> <dd> <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports Signature Version 4. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p> </dd> </dl> <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/security-iam.html\">Identity and Access Management for Amazon Chime</a> in the <i>Amazon Chime Administration Guide</i>.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Chime",
    "version": "2018-05-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/chime-2018-05-01.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "chime",
    "x-datafire": {
      "name": "amazonaws_chime",
      "type": "openapi"
    }
  },
  "host": "service.chime.aws.amazon.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/accounts": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Amazon Chime account name prefix with which to filter results.",
            "in": "query",
            "maxLength": 100,
            "minLength": 1,
            "name": "name",
            "pattern": ".*\\S.*",
            "required": false,
            "type": "string"
          },
          {
            "description": "User email address with which to filter results.",
            "format": "password",
            "in": "query",
            "name": "user-email",
            "pattern": ".+@.+\\..+",
            "required": false,
            "type": "string"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call. Defaults to 100.",
            "in": "query",
            "maximum": 200,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAccountsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the Amazon Chime accounts under the administrator's AWS account. You can filter accounts by account name prefix. To find out which Amazon Chime account a user belongs to, you can filter by the user's email address, which returns one account result.",
        "operationId": "ListAccounts"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name of the Amazon Chime account.",
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAccountResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates an Amazon Chime account under the administrator's AWS account. Only <code>Team</code> account types are currently supported for this action. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.",
        "operationId": "CreateAccount"
      }
    },
    "/accounts/{accountId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAccountResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "UnprocessableEntityException",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Deletes the specified Amazon Chime account. You must suspend all users before deleting a <code>Team</code> account. You can use the <a>BatchSuspendUser</a> action to do so.</p> <p>For <code>EnterpriseLWA</code> and <code>EnterpriseAD</code> accounts, you must release the claimed domains for your Amazon Chime account before deletion. As soon as you release the domain, all users under that account are suspended.</p> <p>Deleted accounts appear in your <code>Disabled</code> accounts list for 90 days. To restore a deleted account from your <code>Disabled</code> accounts list, you must contact AWS Support.</p> <p>After 90 days, deleted accounts are permanently removed from your <code>Disabled</code> accounts list.</p>",
        "operationId": "DeleteAccount"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAccountResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves details for the specified Amazon Chime account, such as account type and supported licenses.",
        "operationId": "GetAccount"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The new name for the specified Amazon Chime account.",
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAccountResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates account details for the specified Amazon Chime account. Currently, only account name updates are supported for this action.",
        "operationId": "UpdateAccount"
      }
    },
    "/accounts/{accountId}#operation=associate-signin-delegate-groups": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "associate-signin-delegate-groups"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "SigninDelegateGroups": {
                  "description": "The sign-in delegate groups.",
                  "items": {
                    "$ref": "#/definitions/SigninDelegateGroup"
                  },
                  "type": "array"
                }
              },
              "required": [
                "SigninDelegateGroups"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociateSigninDelegateGroupsWithAccountResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Associates the specified sign-in delegate groups with the specified Amazon Chime account.",
        "operationId": "AssociateSigninDelegateGroupsWithAccount"
      }
    },
    "/accounts/{accountId}#operation=disassociate-signin-delegate-groups": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "disassociate-signin-delegate-groups"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "GroupNames": {
                  "description": "The sign-in delegate group names.",
                  "items": {
                    "$ref": "#/definitions/String"
                  },
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "GroupNames"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateSigninDelegateGroupsFromAccountResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Disassociates the specified sign-in delegate groups from the specified Amazon Chime account.",
        "operationId": "DisassociateSigninDelegateGroupsFromAccount"
      }
    },
    "/accounts/{accountId}/bots": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call. The default is 10.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListBotsResponse"
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "485": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "486": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          }
        },
        "description": "Lists the bots associated with the administrator's Amazon Chime Enterprise account ID.",
        "operationId": "ListBots"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DisplayName": {
                  "description": "The bot display name.",
                  "format": "password",
                  "type": "string"
                },
                "Domain": {
                  "description": "The domain of the Amazon Chime Enterprise account.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "DisplayName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateBotResponse"
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "486": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "487": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          }
        },
        "description": "Creates a bot for an Amazon Chime Enterprise account.",
        "operationId": "CreateBot"
      }
    },
    "/accounts/{accountId}/bots/{botId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The bot ID.",
            "in": "path",
            "name": "botId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBotResponse"
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "485": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "486": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          }
        },
        "description": "Retrieves details for the specified bot, such as bot email address, bot type, status, and display name.",
        "operationId": "GetBot"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The bot ID.",
            "in": "path",
            "name": "botId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Disabled": {
                  "description": "When true, stops the specified bot from running in your account.",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateBotResponse"
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "486": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          }
        },
        "description": "Updates the status of the specified bot, such as starting or stopping the bot from running in your Amazon Chime Enterprise account.",
        "operationId": "UpdateBot"
      }
    },
    "/accounts/{accountId}/bots/{botId}#operation=regenerate-security-token": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The bot ID.",
            "in": "path",
            "name": "botId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "regenerate-security-token"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegenerateSecurityTokenResponse"
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "486": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          }
        },
        "description": "Regenerates the security token for a bot.",
        "operationId": "RegenerateSecurityToken"
      }
    },
    "/accounts/{accountId}/bots/{botId}/events-configuration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The bot ID.",
            "in": "path",
            "name": "botId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          }
        },
        "description": "Deletes the events configuration that allows a bot to receive outgoing events.",
        "operationId": "DeleteEventsConfiguration"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The bot ID.",
            "in": "path",
            "name": "botId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetEventsConfigurationResponse"
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "486": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        },
        "description": "Gets details for an events configuration that allows a bot to receive outgoing events, such as an HTTPS endpoint or Lambda function ARN. ",
        "operationId": "GetEventsConfiguration"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The bot ID.",
            "in": "path",
            "name": "botId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "LambdaFunctionArn": {
                  "description": "Lambda function ARN that allows the bot to receive outgoing events.",
                  "format": "password",
                  "type": "string"
                },
                "OutboundEventsHTTPSEndpoint": {
                  "description": "HTTPS endpoint that allows the bot to receive outgoing events.",
                  "format": "password",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutEventsConfigurationResponse"
            }
          },
          "480": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "481": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "486": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          }
        },
        "description": "Creates an events configuration that allows a bot to receive outgoing events sent by Amazon Chime. Choose either an HTTPS endpoint or a Lambda function ARN. For more information, see <a>Bot</a>.",
        "operationId": "PutEventsConfiguration"
      }
    },
    "/accounts/{accountId}/conversations/{conversationId}/messages/{messageId}#operation=redact": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The conversation ID.",
            "in": "path",
            "name": "conversationId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The message ID.",
            "in": "path",
            "name": "messageId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "redact"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RedactConversationMessageResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Redacts the specified message from the specified Amazon Chime conversation.",
        "operationId": "RedactConversationMessage"
      }
    },
    "/accounts/{accountId}/retention-settings": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetRetentionSettingsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Gets the retention settings for the specified Amazon Chime Enterprise account. For more information about retention settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html\">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>.",
        "operationId": "GetRetentionSettings"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "RetentionSettings": {
                  "description": "The retention settings for an Amazon Chime Enterprise account that determine how long to retain items such as chat room messages and chat conversation messages.",
                  "properties": {
                    "ConversationRetentionSettings": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ConversationRetentionSettings"
                        },
                        {
                          "description": "The chat conversation retention settings."
                        }
                      ]
                    },
                    "RoomRetentionSettings": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/RoomRetentionSettings"
                        },
                        {
                          "description": "The chat room retention settings."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "RetentionSettings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutRetentionSettingsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Puts retention settings for the specified Amazon Chime Enterprise account. We recommend using AWS CloudTrail to monitor usage of this API for your account. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/cloudtrail.html\">Logging Amazon Chime API Calls with AWS CloudTrail</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>To turn off existing retention settings, remove the number of days from the corresponding <b>RetentionDays</b> field in the <b>RetentionSettings</b> object. For more information about retention settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html\">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>.</p>",
        "operationId": "PutRetentionSettings"
      }
    },
    "/accounts/{accountId}/rooms": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The member ID (user ID or bot ID).",
            "in": "query",
            "name": "member-id",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRoomsResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the room details for the specified Amazon Chime Enterprise account. Optionally, filter the results by a member ID (user ID or bot ID) to see a list of rooms that the member belongs to.",
        "operationId": "ListRooms"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ClientRequestToken": {
                  "description": "The idempotency token for the request.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "pattern": "[-_a-zA-Z0-9]*",
                  "type": "string"
                },
                "Name": {
                  "description": "The room name.",
                  "format": "password",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRoomResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates a chat room for the specified Amazon Chime Enterprise account.",
        "operationId": "CreateRoom"
      }
    },
    "/accounts/{accountId}/rooms/{roomId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The chat room ID.",
            "in": "path",
            "name": "roomId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes a chat room in an Amazon Chime Enterprise account.",
        "operationId": "DeleteRoom"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The room ID.",
            "in": "path",
            "name": "roomId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetRoomResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves room details, such as the room name, for a room in an Amazon Chime Enterprise account.",
        "operationId": "GetRoom"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The room ID.",
            "in": "path",
            "name": "roomId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The room name.",
                  "format": "password",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateRoomResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates room details, such as the room name, for a room in an Amazon Chime Enterprise account.",
        "operationId": "UpdateRoom"
      }
    },
    "/accounts/{accountId}/rooms/{roomId}/memberships": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The room ID.",
            "in": "path",
            "name": "roomId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRoomMembershipsResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the membership details for the specified room in an Amazon Chime Enterprise account, such as the members' IDs, email addresses, and names.",
        "operationId": "ListRoomMemberships"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The room ID.",
            "in": "path",
            "name": "roomId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MemberId": {
                  "description": "The Amazon Chime member ID (user ID or bot ID).",
                  "pattern": ".*\\S.*",
                  "type": "string"
                },
                "Role": {
                  "description": "The role of the member.",
                  "enum": [
                    "Administrator",
                    "Member"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "MemberId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRoomMembershipResponse"
            }
          },
          "480": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "481": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "486": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "488": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Adds a member to a chat room in an Amazon Chime Enterprise account. A member can be either a user or a bot. The member role designates whether the member is a chat room administrator or a general chat room member.",
        "operationId": "CreateRoomMembership"
      }
    },
    "/accounts/{accountId}/rooms/{roomId}/memberships#operation=batch-create": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The room ID.",
            "in": "path",
            "name": "roomId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "batch-create"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MembershipItemList": {
                  "description": "The list of membership items.",
                  "items": {
                    "$ref": "#/definitions/MembershipItem"
                  },
                  "maxItems": 50,
                  "type": "array"
                }
              },
              "required": [
                "MembershipItemList"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchCreateRoomMembershipResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Adds up to 50 members to a chat room in an Amazon Chime Enterprise account. Members can be either users or bots. The member role designates whether the member is a chat room administrator or a general chat room member.",
        "operationId": "BatchCreateRoomMembership"
      }
    },
    "/accounts/{accountId}/rooms/{roomId}/memberships/{memberId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The room ID.",
            "in": "path",
            "name": "roomId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The member ID (user ID or bot ID).",
            "in": "path",
            "name": "memberId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Removes a member from a chat room in an Amazon Chime Enterprise account.",
        "operationId": "DeleteRoomMembership"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The room ID.",
            "in": "path",
            "name": "roomId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The member ID.",
            "in": "path",
            "name": "memberId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Role": {
                  "description": "The role of the member.",
                  "enum": [
                    "Administrator",
                    "Member"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateRoomMembershipResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates room membership details, such as the member role, for a room in an Amazon Chime Enterprise account. The member role designates whether the member is a chat room administrator or a general chat room member. The member role can be updated only for user IDs.",
        "operationId": "UpdateRoomMembership"
      }
    },
    "/accounts/{accountId}/rooms/{roomId}/messages/{messageId}#operation=redact": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The room ID.",
            "in": "path",
            "name": "roomId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The message ID.",
            "in": "path",
            "name": "messageId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "redact"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RedactRoomMessageResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Redacts the specified message from the specified Amazon Chime channel.",
        "operationId": "RedactRoomMessage"
      }
    },
    "/accounts/{accountId}/settings": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAccountSettingsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves account settings for the specified Amazon Chime account ID, such as remote control and dial out settings. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
        "operationId": "GetAccountSettings"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccountSettings": {
                  "description": "Settings related to the Amazon Chime account. This includes settings that start or stop remote control of shared screens, or start or stop the dial-out option in the Amazon Chime web application. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
                  "properties": {
                    "DisableRemoteControl": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Setting that stops or starts remote control of shared screens during meetings."
                        }
                      ]
                    },
                    "EnableDialOut": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "AccountSettings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAccountSettingsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates the settings for the specified Amazon Chime account. You can update settings for remote control of shared screens, or for the dial-out option. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
        "operationId": "UpdateAccountSettings"
      }
    },
    "/accounts/{accountId}/users": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional. The user email address used to filter results. Maximum 1.",
            "format": "password",
            "in": "query",
            "name": "user-email",
            "pattern": ".+@.+\\..+",
            "required": false,
            "type": "string"
          },
          {
            "description": "The user type.",
            "enum": [
              "PrivateUser",
              "SharedDevice"
            ],
            "in": "query",
            "name": "user-type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call. Defaults to 100.",
            "in": "query",
            "maximum": 200,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListUsersResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the users that belong to the specified Amazon Chime account. You can specify an email address to list only the user that the email address belongs to.",
        "operationId": "ListUsers"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "UpdateUserRequestItems": {
                  "description": "The request containing the user IDs and details to update.",
                  "items": {
                    "$ref": "#/definitions/UpdateUserRequestItem"
                  },
                  "maxItems": 20,
                  "type": "array"
                }
              },
              "required": [
                "UpdateUserRequestItems"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchUpdateUserResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates user details within the <a>UpdateUserRequestItem</a> object for up to 20 users for the specified Amazon Chime account. Currently, only <code>LicenseType</code> updates are supported for this action.",
        "operationId": "BatchUpdateUser"
      }
    },
    "/accounts/{accountId}/users#operation=add": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "add"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "UserEmailList": {
                  "description": "The user email addresses to which to send the email invitation.",
                  "items": {
                    "$ref": "#/definitions/EmailAddress"
                  },
                  "maxItems": 50,
                  "type": "array"
                },
                "UserType": {
                  "description": "The user type.",
                  "enum": [
                    "PrivateUser",
                    "SharedDevice"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "UserEmailList"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InviteUsersResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Sends email to a maximum of 50 users, inviting them to the specified Amazon Chime <code>Team</code> account. Only <code>Team</code> account types are currently supported for this action. ",
        "operationId": "InviteUsers"
      }
    },
    "/accounts/{accountId}/users#operation=create": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "create"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Email": {
                  "description": "The user's email address.",
                  "format": "password",
                  "pattern": ".+@.+\\..+",
                  "type": "string"
                },
                "UserType": {
                  "description": "The user type.",
                  "enum": [
                    "PrivateUser",
                    "SharedDevice"
                  ],
                  "type": "string"
                },
                "Username": {
                  "description": "The user name.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates a user under the specified Amazon Chime account.",
        "operationId": "CreateUser"
      }
    },
    "/accounts/{accountId}/users#operation=suspend": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "suspend"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "UserIdList": {
                  "description": "The request containing the user IDs to suspend.",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "maxItems": 50,
                  "type": "array"
                }
              },
              "required": [
                "UserIdList"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchSuspendUserResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Suspends up to 50 users from a <code>Team</code> or <code>EnterpriseLWA</code> Amazon Chime account. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>Users suspended from a <code>Team</code> account are disassociated from the account, but they can continue to use Amazon Chime as free users. To remove the suspension from suspended <code>Team</code> account users, invite them to the <code>Team</code> account again. You can use the <a>InviteUsers</a> action to do so.</p> <p>Users suspended from an <code>EnterpriseLWA</code> account are immediately signed out of Amazon Chime and can no longer sign in. To remove the suspension from suspended <code>EnterpriseLWA</code> account users, use the <a>BatchUnsuspendUser</a> action. </p> <p>To sign out users without suspending them, use the <a>LogoutUser</a> action.</p>",
        "operationId": "BatchSuspendUser"
      }
    },
    "/accounts/{accountId}/users#operation=unsuspend": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "unsuspend"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "UserIdList": {
                  "description": "The request containing the user IDs to unsuspend.",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "maxItems": 50,
                  "type": "array"
                }
              },
              "required": [
                "UserIdList"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchUnsuspendUserResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Removes the suspension from up to 50 previously suspended users for the specified Amazon Chime <code>EnterpriseLWA</code> account. Only users on <code>EnterpriseLWA</code> accounts can be unsuspended using this action. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>Previously suspended users who are unsuspended using this action are returned to <code>Registered</code> status. Users who are not previously suspended are ignored.</p>",
        "operationId": "BatchUnsuspendUser"
      }
    },
    "/accounts/{accountId}/users/{userId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user ID.",
            "in": "path",
            "name": "userId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetUserResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Retrieves details for the specified user ID, such as primary email address, license type, and personal meeting PIN.</p> <p>To retrieve user details with an email address instead of a user ID, use the <a>ListUsers</a> action, and then filter by email address.</p>",
        "operationId": "GetUser"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user ID.",
            "in": "path",
            "name": "userId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AlexaForBusinessMetadata": {
                  "description": "The Alexa for Business metadata associated with an Amazon Chime user, used to integrate Alexa for Business with a device.",
                  "properties": {
                    "AlexaForBusinessRoomArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SensitiveString"
                        },
                        {
                          "description": "The ARN of the room resource."
                        }
                      ]
                    },
                    "IsAlexaForBusinessEnabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Starts or stops Alexa for Business."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "LicenseType": {
                  "description": "The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to.",
                  "enum": [
                    "Basic",
                    "Plus",
                    "Pro",
                    "ProTrial"
                  ],
                  "type": "string"
                },
                "UserType": {
                  "description": "The user type.",
                  "enum": [
                    "PrivateUser",
                    "SharedDevice"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateUserResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates user details for a specified user ID. Currently, only <code>LicenseType</code> updates are supported for this action.",
        "operationId": "UpdateUser"
      }
    },
    "/accounts/{accountId}/users/{userId}#operation=associate-phone-number": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user ID.",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "associate-phone-number"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "E164PhoneNumber": {
                  "description": "The phone number, in E.164 format.",
                  "format": "password",
                  "pattern": "^\\+?[1-9]\\d{1,14}$",
                  "type": "string"
                }
              },
              "required": [
                "E164PhoneNumber"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociatePhoneNumberWithUserResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Associates a phone number with the specified Amazon Chime user.",
        "operationId": "AssociatePhoneNumberWithUser"
      }
    },
    "/accounts/{accountId}/users/{userId}#operation=disassociate-phone-number": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user ID.",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "disassociate-phone-number"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociatePhoneNumberFromUserResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Disassociates the primary provisioned phone number from the specified Amazon Chime user.",
        "operationId": "DisassociatePhoneNumberFromUser"
      }
    },
    "/accounts/{accountId}/users/{userId}#operation=logout": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user ID.",
            "in": "path",
            "name": "userId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "logout"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LogoutUserResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Logs out the specified user from all of the devices they are currently logged into.",
        "operationId": "LogoutUser"
      }
    },
    "/accounts/{accountId}/users/{userId}#operation=reset-personal-pin": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user ID.",
            "in": "path",
            "name": "userId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "reset-personal-pin"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResetPersonalPINResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Resets the personal meeting PIN for the specified user on an Amazon Chime account. Returns the <a>User</a> object with the updated personal meeting PIN.",
        "operationId": "ResetPersonalPIN"
      }
    },
    "/accounts/{accountId}/users/{userId}/settings": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user ID.",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetUserSettingsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves settings for the specified user ID, such as any associated phone number settings.",
        "operationId": "GetUserSettings"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime account ID.",
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The user ID.",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "UserSettings": {
                  "description": "Settings associated with an Amazon Chime user, including inbound and outbound calling and text messaging.",
                  "properties": {
                    "Telephony": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TelephonySettings"
                        },
                        {
                          "description": "The telephony settings associated with the user."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "UserSettings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates the settings for the specified user, such as phone number settings.",
        "operationId": "UpdateUserSettings"
      }
    },
    "/app-instance-users": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AppInstanceArn": {
                  "description": "The ARN of the app instance request.",
                  "maxLength": 1600,
                  "minLength": 5,
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "type": "string"
                },
                "AppInstanceUserId": {
                  "description": "The user ID of the app instance.",
                  "format": "password",
                  "maxLength": 50,
                  "minLength": 1,
                  "pattern": "[A-Za-z0-9][A-Za-z0-9\\:\\-\\_\\.\\@]{3,50}[A-Za-z0-9]",
                  "type": "string"
                },
                "ClientRequestToken": {
                  "description": "The token assigned to the user requesting an app instance.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "pattern": "[-_a-zA-Z0-9]*",
                  "type": "string"
                },
                "Metadata": {
                  "description": "The request's metadata. Limited to a 1KB string in UTF-8.",
                  "format": "password",
                  "maxLength": 1024,
                  "minLength": 0,
                  "pattern": ".*",
                  "type": "string"
                },
                "Name": {
                  "description": "The user's name.",
                  "format": "password",
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "AppInstanceArn",
                "AppInstanceUserId",
                "Name",
                "ClientRequestToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAppInstanceUserResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates a user under an Amazon Chime <code>AppInstance</code>. The request consists of a unique <code>appInstanceUserId</code> and <code>Name</code> for that user.",
        "operationId": "CreateAppInstanceUser"
      }
    },
    "/app-instance-users#app-instance-arn": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance.",
            "in": "query",
            "maxLength": 1600,
            "minLength": 5,
            "name": "app-instance-arn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of requests that you want returned.",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token passed by previous API calls until all requested users are returned.",
            "format": "password",
            "in": "query",
            "maxLength": 2048,
            "minLength": 0,
            "name": "next-token",
            "pattern": ".*",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAppInstanceUsersResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "List all <code>AppInstanceUsers</code> created under a single app instance.",
        "operationId": "ListAppInstanceUsers"
      }
    },
    "/app-instance-users/{appInstanceUserArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the user request being deleted.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceUserArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes an <code>AppInstanceUser</code>.",
        "operationId": "DeleteAppInstanceUser"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance user.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceUserArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeAppInstanceUserResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns the full details of an <code>AppInstanceUser</code>.",
        "operationId": "DescribeAppInstanceUser"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance user.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceUserArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Metadata": {
                  "description": "The metadata of the app instance user.",
                  "format": "password",
                  "maxLength": 1024,
                  "minLength": 0,
                  "pattern": ".*",
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the app instance user.",
                  "format": "password",
                  "maxLength": 100,
                  "minLength": 1,
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAppInstanceUserResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates the details for an <code>AppInstanceUser</code>. You can update names and metadata.",
        "operationId": "UpdateAppInstanceUser"
      }
    },
    "/app-instances": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of app instances that you want to return.",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token passed by previous API requests until you reach the maximum number of app instances.",
            "format": "password",
            "in": "query",
            "maxLength": 2048,
            "minLength": 0,
            "name": "next-token",
            "pattern": ".*",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAppInstancesResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists all Amazon Chime app instances created under a single AWS account.",
        "operationId": "ListAppInstances"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ClientRequestToken": {
                  "description": "The <code>ClientRequestToken</code> of the app instance.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "pattern": "[-_a-zA-Z0-9]*",
                  "type": "string"
                },
                "Metadata": {
                  "description": "The metadata of the app instance. Limited to a 1KB string in UTF-8.",
                  "format": "password",
                  "maxLength": 1024,
                  "minLength": 0,
                  "pattern": ".*",
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the app instance.",
                  "format": "password",
                  "maxLength": 256,
                  "minLength": 1,
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "type": "string"
                }
              },
              "required": [
                "Name",
                "ClientRequestToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAppInstanceResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates an Amazon Chime Messaging SDK <code>AppInstance</code> under an AWS Account. Only Messaging SDK customers use this API. <code>CreateAppInstance</code> supports <code>idempotency</code> behavior as described in the AWS API Standard.",
        "operationId": "CreateAppInstance"
      }
    },
    "/app-instances/{appInstanceArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes an <code>AppInstance</code> and all associated data asynchronously.",
        "operationId": "DeleteAppInstance"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeAppInstanceResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns the full details of an <code>AppInstance</code>.",
        "operationId": "DescribeAppInstance"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Metadata": {
                  "description": "The metadata that you want to change.",
                  "format": "password",
                  "maxLength": 1024,
                  "minLength": 0,
                  "pattern": ".*",
                  "type": "string"
                },
                "Name": {
                  "description": "The name that you want to change.",
                  "format": "password",
                  "maxLength": 256,
                  "minLength": 1,
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "type": "string"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateAppInstanceResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates <code>AppInstance</code> metadata.",
        "operationId": "UpdateAppInstance"
      }
    },
    "/app-instances/{appInstanceArn}/admins": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of administrators that you want to return.",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token returned from previous API requests until the number of administrators is reached.",
            "format": "password",
            "in": "query",
            "maxLength": 2048,
            "minLength": 0,
            "name": "next-token",
            "pattern": ".*",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAppInstanceAdminsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns a list of the administrators in the app instance.",
        "operationId": "ListAppInstanceAdmins"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AppInstanceAdminArn": {
                  "description": "The ARN of the administrator of the current app instance.",
                  "maxLength": 1600,
                  "minLength": 5,
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "type": "string"
                }
              },
              "required": [
                "AppInstanceAdminArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAppInstanceAdminResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Promotes an <code>AppInstanceUser</code> to an <code>AppInstanceAdmin</code>. The promoted user can perform the following actions. </p> <ul> <li> <p> <code>ChannelModerator</code> actions across all channels in the app instance.</p> </li> <li> <p> <code>DeleteChannelMessage</code> actions.</p> </li> </ul> <p>Only an <code>AppInstanceUser</code> can be promoted to an <code>AppInstanceAdmin</code> role.</p>",
        "operationId": "CreateAppInstanceAdmin"
      }
    },
    "/app-instances/{appInstanceArn}/admins/{appInstanceAdminArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance's administrator.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceAdminArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ARN of the app instance.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Demotes an <code>AppInstanceAdmin</code> to an <code>AppInstanceUser</code>. This action does not delete the user.",
        "operationId": "DeleteAppInstanceAdmin"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance administrator.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceAdminArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ARN of the app instance.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeAppInstanceAdminResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns the full details of an <code>AppInstanceAdmin</code>.",
        "operationId": "DescribeAppInstanceAdmin"
      }
    },
    "/app-instances/{appInstanceArn}/retention-settings": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAppInstanceRetentionSettingsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Gets the retention settings for an app instance.",
        "operationId": "GetAppInstanceRetentionSettings"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AppInstanceRetentionSettings": {
                  "description": "The length of time in days to retain messages.",
                  "properties": {
                    "ChannelRetentionSettings": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ChannelRetentionSettings"
                        },
                        {
                          "description": "The length of time in days to retain a channel."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "AppInstanceRetentionSettings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutAppInstanceRetentionSettingsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Sets the amount of time in days that a given app instance retains data.",
        "operationId": "PutAppInstanceRetentionSettings"
      }
    },
    "/app-instances/{appInstanceArn}/streaming-configurations": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the streaming configurations being deleted.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes the streaming configurations of an app instance.",
        "operationId": "DeleteAppInstanceStreamingConfigurations"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance. ",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAppInstanceStreamingConfigurationsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Gets the streaming settings for an app instance.",
        "operationId": "GetAppInstanceStreamingConfigurations"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "appInstanceArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AppInstanceStreamingConfigurations": {
                  "description": "The streaming configurations set for an app instance.",
                  "items": {
                    "$ref": "#/definitions/AppInstanceStreamingConfiguration"
                  },
                  "maxItems": 2,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "AppInstanceStreamingConfigurations"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutAppInstanceStreamingConfigurationsResponse"
            }
          },
          "480": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "481": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "The data streaming configurations of an app instance.",
        "operationId": "PutAppInstanceStreamingConfigurations"
      }
    },
    "/channels": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AppInstanceArn": {
                  "description": "The ARN of the channel request.",
                  "maxLength": 1600,
                  "minLength": 5,
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "type": "string"
                },
                "ClientRequestToken": {
                  "description": "The client token for the request. An <code>Idempotency</code> token.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "pattern": "[-_a-zA-Z0-9]*",
                  "type": "string"
                },
                "Metadata": {
                  "description": "The metadata of the creation request. Limited to 1KB and UTF-8.",
                  "format": "password",
                  "maxLength": 1024,
                  "minLength": 0,
                  "pattern": ".*",
                  "type": "string"
                },
                "Mode": {
                  "description": "The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.",
                  "enum": [
                    "UNRESTRICTED",
                    "RESTRICTED"
                  ],
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the channel.",
                  "format": "password",
                  "maxLength": 256,
                  "minLength": 1,
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "type": "string"
                },
                "Privacy": {
                  "description": "The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren't discoverable by users outside the channel. Public channels are discoverable by anyone in the app instance.",
                  "enum": [
                    "PUBLIC",
                    "PRIVATE"
                  ],
                  "type": "string"
                },
                "Tags": {
                  "description": "",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "AppInstanceArn",
                "Name",
                "ClientRequestToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateChannelResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Creates a channel to which you can add users and send messages.</p> <p> <b>Restriction</b>: You can't change a channel's privacy.</p>",
        "operationId": "CreateChannel"
      }
    },
    "/channels#app-instance-arn": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance.",
            "in": "query",
            "maxLength": 1600,
            "minLength": 5,
            "name": "app-instance-arn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The privacy setting. <code>PUBLIC</code> retrieves all the public channels. <code>PRIVATE</code> retrieves private channels. Only an app instance administrator can retrieve private channels.",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ],
            "in": "query",
            "name": "privacy",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of channels that you want to return.",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token passed by previous API calls until all requested channels are returned.",
            "format": "password",
            "in": "query",
            "maxLength": 2048,
            "minLength": 0,
            "name": "next-token",
            "pattern": ".*",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListChannelsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Lists all Channels created under a single Chime App as a paginated list. You can specify filters to narrow results.</p> <p class=\"title\"> <b>Functionality &amp; restrictions</b> </p> <ul> <li> <p>Use privacy = <code>PUBLIC</code> to retrieve all public channels in the account</p> </li> <li> <p>Only an <code>AppInstanceAdmin</code> can set privacy = <code>PRIVATE</code> to list the private channels in an account.</p> </li> </ul>",
        "operationId": "ListChannels"
      }
    },
    "/channels#scope=app-instance-user-memberships": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the app instance users",
            "in": "query",
            "maxLength": 1600,
            "minLength": 5,
            "name": "app-instance-user-arn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of users that you want returned. ",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token returned from previous API requests until the number of channel memberships is reached.",
            "format": "password",
            "in": "query",
            "maxLength": 2048,
            "minLength": 0,
            "name": "next-token",
            "pattern": ".*",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "app-instance-user-memberships"
            ],
            "in": "query",
            "name": "scope",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListChannelMembershipsForAppInstanceUserResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists all channels that a particular <code>AppInstanceUser</code> is a part of. Only an <code>AppInstanceAdmin</code> can call the API with a user ARN that is not their own.",
        "operationId": "ListChannelMembershipsForAppInstanceUser"
      }
    },
    "/channels#scope=app-instance-user-moderated-channels": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the user in the moderated channel.",
            "in": "query",
            "maxLength": 1600,
            "minLength": 5,
            "name": "app-instance-user-arn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of channels in the request.",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token returned from previous API requests until the number of channels moderated by the user is reached.",
            "format": "password",
            "in": "query",
            "maxLength": 2048,
            "minLength": 0,
            "name": "next-token",
            "pattern": ".*",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "app-instance-user-moderated-channels"
            ],
            "in": "query",
            "name": "scope",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListChannelsModeratedByAppInstanceUserResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "A list of the channels moderated by an app instance user.",
        "operationId": "ListChannelsModeratedByAppInstanceUser"
      }
    },
    "/channels/{channelArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel being deleted.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Immediately makes a channel and its memberships inaccessible and marks them for deletion. This is an irreversible process.",
        "operationId": "DeleteChannel"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeChannelResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns the full details of a channel in an Amazon Chime app instance.",
        "operationId": "DescribeChannel"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Metadata": {
                  "description": "The metadata of the channel.",
                  "format": "password",
                  "maxLength": 1024,
                  "minLength": 0,
                  "pattern": ".*",
                  "type": "string"
                },
                "Mode": {
                  "description": "The mode of the update request.",
                  "enum": [
                    "UNRESTRICTED",
                    "RESTRICTED"
                  ],
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the channel.",
                  "format": "password",
                  "maxLength": 256,
                  "minLength": 1,
                  "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
                  "type": "string"
                }
              },
              "required": [
                "Name",
                "Mode"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateChannelResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Update a channel's attributes.</p> <p> <b>Restriction</b>: You can't change a channel's privacy.</p>",
        "operationId": "UpdateChannel"
      }
    },
    "/channels/{channelArn}#scope=app-instance-user-membership&app-instance-user-arn": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel to which the user belongs.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ARN of the user in a channel.",
            "in": "query",
            "maxLength": 1600,
            "minLength": 5,
            "name": "app-instance-user-arn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "app-instance-user-membership"
            ],
            "in": "query",
            "name": "scope",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeChannelMembershipForAppInstanceUserResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns the details of a channel based on the membership of the <code>AppInstanceUser</code> specified.",
        "operationId": "DescribeChannelMembershipForAppInstanceUser"
      }
    },
    "/channels/{channelArn}#scope=app-instance-user-moderated-channel&app-instance-user-arn": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the moderated channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ARN of the app instance user in the moderated channel.",
            "in": "query",
            "maxLength": 1600,
            "minLength": 5,
            "name": "app-instance-user-arn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "app-instance-user-moderated-channel"
            ],
            "in": "query",
            "name": "scope",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeChannelModeratedByAppInstanceUserResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns the full details of a channel moderated by the specified <code>AppInstanceUser</code>.",
        "operationId": "DescribeChannelModeratedByAppInstanceUser"
      }
    },
    "/channels/{channelArn}/bans": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of bans that you want returned.",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token passed by previous API calls until all requested bans are returned.",
            "format": "password",
            "in": "query",
            "maxLength": 2048,
            "minLength": 0,
            "name": "next-token",
            "pattern": ".*",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListChannelBansResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists all the users banned from a particular channel.",
        "operationId": "ListChannelBans"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the ban request.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MemberArn": {
                  "description": "The ARN of the member being banned.",
                  "maxLength": 1600,
                  "minLength": 5,
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "type": "string"
                }
              },
              "required": [
                "MemberArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateChannelBanResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Permanently bans a member from a channel. Moderators can't add banned members to a channel. To undo a ban, you first have to <code>DeleteChannelBan</code>, and then <code>CreateChannelMembership</code>. Bans are cleaned up when you delete users or channels. </p> <p>If you ban a user who is already part of a channel, that user is automatically kicked from the channel.</p>",
        "operationId": "CreateChannelBan"
      }
    },
    "/channels/{channelArn}/bans/{memberArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel from which the app instance user was banned.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ARN of the app instance user that you want to reinstate.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "memberArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Removes a user from a channel's ban list.",
        "operationId": "DeleteChannelBan"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel from which the user is banned.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ARN of the member being banned.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "memberArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeChannelBanResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns the full details of a channel ban.",
        "operationId": "DescribeChannelBan"
      }
    },
    "/channels/{channelArn}/memberships": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of channel memberships that you want returned.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned.",
            "enum": [
              "DEFAULT",
              "HIDDEN"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of channel memberships that you want returned.",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token passed by previous API calls until all requested channel memberships are returned..",
            "format": "password",
            "in": "query",
            "maxLength": 2048,
            "minLength": 0,
            "name": "next-token",
            "pattern": ".*",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListChannelMembershipsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists all channel memberships in a channel.",
        "operationId": "ListChannelMemberships"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel to which you're adding users.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MemberArn": {
                  "description": "The ARN of the member you want to add to the channel.",
                  "maxLength": 1600,
                  "minLength": 5,
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "type": "string"
                },
                "Type": {
                  "description": "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.",
                  "enum": [
                    "DEFAULT",
                    "HIDDEN"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "MemberArn",
                "Type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateChannelMembershipResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Adds a user to a channel. The <code>InvitedBy</code> response field is derived from the request header. A channel member can:</p> <ul> <li> <p>List messages</p> </li> <li> <p>Send messages</p> </li> <li> <p>Receive messages</p> </li> <li> <p>Edit their own messages</p> </li> <li> <p>Leave the channel</p> </li> </ul> <p>Privacy settings impact this action as follows:</p> <ul> <li> <p>Public Channels: You do not need to be a member to list messages, but you must be a member to send messages.</p> </li> <li> <p>Private Channels: You must be a member to list or send messages.</p> </li> </ul>",
        "operationId": "CreateChannelMembership"
      }
    },
    "/channels/{channelArn}/memberships/{memberArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel from which you want to remove the user.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ARN of the member that you're removing from the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "memberArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Removes a member from a channel.",
        "operationId": "DeleteChannelMembership"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ARN of the member.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "memberArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeChannelMembershipResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns the full details of a user's channel membership.",
        "operationId": "DescribeChannelMembership"
      }
    },
    "/channels/{channelArn}/messages": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The order in which you want messages sorted. Default is Descending, based on time created.",
            "enum": [
              "ASCENDING",
              "DESCENDING"
            ],
            "in": "query",
            "name": "sort-order",
            "required": false,
            "type": "string"
          },
          {
            "description": "The initial or starting time stamp for your requested messages. ",
            "format": "date-time",
            "in": "query",
            "name": "not-before",
            "required": false,
            "type": "string"
          },
          {
            "description": "The final or ending time stamp for your requested messages.",
            "format": "date-time",
            "in": "query",
            "name": "not-after",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of messages that you want returned.",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token passed by previous API calls until all requested messages are returned.",
            "format": "password",
            "in": "query",
            "maxLength": 2048,
            "minLength": 0,
            "name": "next-token",
            "pattern": ".*",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListChannelMessagesResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>List all the messages in a channel. Returns a paginated list of <code>ChannelMessages</code>. Sorted in descending order by default, based on the creation timestamp.</p> <note> <p>Redacted messages appear in the results as empty, since they are only redacted, not deleted. Deleted messages do not appear in the results. This action always returns the latest version of an edited message.</p> </note>",
        "operationId": "ListChannelMessages"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ClientRequestToken": {
                  "description": "The <code>Idempotency</code> token for each client request.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "pattern": "[-_a-zA-Z0-9]*",
                  "type": "string"
                },
                "Content": {
                  "description": "The content of the message.",
                  "format": "password",
                  "maxLength": 4096,
                  "minLength": 1,
                  "pattern": "[\\s\\S]*",
                  "type": "string"
                },
                "Metadata": {
                  "description": "The optional metadata for each message. ",
                  "format": "password",
                  "maxLength": 1024,
                  "minLength": 0,
                  "pattern": ".*",
                  "type": "string"
                },
                "Persistence": {
                  "description": "Boolean that controls whether the message is persisted on the back end. Required.",
                  "enum": [
                    "PERSISTENT",
                    "NON_PERSISTENT"
                  ],
                  "type": "string"
                },
                "Type": {
                  "description": "The type of message, <code>STANDARD</code> or <code>CONTROL</code>.",
                  "enum": [
                    "STANDARD",
                    "CONTROL"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "Content",
                "Type",
                "Persistence",
                "ClientRequestToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SendChannelMessageResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Sends a message to a particular channel that the member is a part of.</p> <note> <p> <code>STANDARD</code> messages can contain 4KB of data and the 1KB of metadata. <code>CONTROL</code> messages can contain 30 bytes of data and no metadata.</p> </note>",
        "operationId": "SendChannelMessage"
      }
    },
    "/channels/{channelArn}/messages/{messageId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the message being deleted.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "messageId",
            "pattern": "[-_a-zA-Z0-9]*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes a channel message. Only admins can perform this action. Deletion makes messages inaccessible immediately. A background process deletes any revisions created by <code>UpdateChannelMessage</code>.",
        "operationId": "DeleteChannelMessage"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the message.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "messageId",
            "pattern": "[-_a-zA-Z0-9]*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetChannelMessageResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Gets the full details of a channel message.",
        "operationId": "GetChannelMessage"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID string of the message being updated.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "messageId",
            "pattern": "[-_a-zA-Z0-9]*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Content": {
                  "description": "The content of the message being updated.",
                  "format": "password",
                  "maxLength": 4096,
                  "minLength": 0,
                  "pattern": "[\\s\\S]*",
                  "type": "string"
                },
                "Metadata": {
                  "description": "The metadata of the message being updated.",
                  "format": "password",
                  "maxLength": 1024,
                  "minLength": 0,
                  "pattern": ".*",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateChannelMessageResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates the content of a message.",
        "operationId": "UpdateChannelMessage"
      }
    },
    "/channels/{channelArn}/messages/{messageId}#operation=redact": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel containing the messages that you want to redact.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the message being redacted.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "messageId",
            "pattern": "[-_a-zA-Z0-9]*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "redact"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RedactChannelMessageResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Redacts message content, but not metadata. The message exists in the back end, but the action returns null content, and the state shows as redacted.",
        "operationId": "RedactChannelMessage"
      }
    },
    "/channels/{channelArn}/moderators": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of moderators that you want returned.",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token passed by previous API calls until all requested moderators are returned.",
            "format": "password",
            "in": "query",
            "maxLength": 2048,
            "minLength": 0,
            "name": "next-token",
            "pattern": ".*",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListChannelModeratorsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists all the moderators for a channel.",
        "operationId": "ListChannelModerators"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ChannelModeratorArn": {
                  "description": "The ARN of the moderator.",
                  "maxLength": 1600,
                  "minLength": 5,
                  "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
                  "type": "string"
                }
              },
              "required": [
                "ChannelModeratorArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateChannelModeratorResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "484": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Creates a new <code>ChannelModerator</code>. A channel moderator can:</p> <ul> <li> <p>Add and remove other members of the channel.</p> </li> <li> <p>Add and remove other moderators of the channel.</p> </li> <li> <p>Add and remove user bans for the channel.</p> </li> <li> <p>Redact messages in the channel.</p> </li> <li> <p>List messages in the channel.</p> </li> </ul>",
        "operationId": "CreateChannelModerator"
      }
    },
    "/channels/{channelArn}/moderators/{channelModeratorArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ARN of the moderator being deleted.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelModeratorArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes a channel moderator.",
        "operationId": "DeleteChannelModerator"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ARN of the channel moderator.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelModeratorArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeChannelModeratorResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns the full details of a single ChannelModerator.",
        "operationId": "DescribeChannelModerator"
      }
    },
    "/channels/{channelArn}/readMarker": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the channel.",
            "in": "path",
            "maxLength": 1600,
            "minLength": 5,
            "name": "channelArn",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateChannelReadMarkerResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Sets the timestamp to the point when a user last read messages in a channel.",
        "operationId": "UpdateChannelReadMarker"
      }
    },
    "/endpoints/messaging-session": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetMessagingSessionEndpointResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "484": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "The endpoint for the messaging session.",
        "operationId": "GetMessagingSessionEndpoint"
      }
    },
    "/meetings": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListMeetingsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists up to 100 active Amazon Chime SDK meetings. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId": "ListMeetings"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ClientRequestToken": {
                  "description": "The unique identifier for the client request. Use a different token for different meetings.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "pattern": "[-_a-zA-Z0-9]*",
                  "type": "string"
                },
                "ExternalMeetingId": {
                  "description": "The external meeting ID.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "type": "string"
                },
                "MediaRegion": {
                  "description": "<p>The Region in which to create the meeting. Default: <code>us-east-1</code>.</p> <p>Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>.</p>",
                  "type": "string"
                },
                "MeetingHostId": {
                  "description": "Reserved.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "type": "string"
                },
                "NotificationsConfiguration": {
                  "description": "The configuration for resource targets to receive notifications when Amazon Chime SDK meeting and attendee events occur. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>).",
                  "properties": {
                    "SnsTopicArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The SNS topic ARN."
                        }
                      ]
                    },
                    "SqsQueueArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The SQS queue ARN."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Tags": {
                  "description": "The tag key-value pairs.",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "ClientRequestToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateMeetingResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html\">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime Developer Guide</i>. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId": "CreateMeeting"
      }
    },
    "/meetings#operation=create-attendees": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "create-attendees"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Attendees": {
                  "description": "The request containing the attendees to create.",
                  "items": {
                    "$ref": "#/definitions/CreateAttendeeRequestItem"
                  },
                  "maxItems": 10,
                  "minItems": 1,
                  "type": "array"
                },
                "ClientRequestToken": {
                  "description": "The unique identifier for the client request. Use a different token for different meetings.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "pattern": "[-_a-zA-Z0-9]*",
                  "type": "string"
                },
                "ExternalMeetingId": {
                  "description": "The external meeting ID.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "type": "string"
                },
                "MediaRegion": {
                  "description": "<p>The Region in which to create the meeting. Default: <code>us-east-1</code>.</p> <p>Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>.</p>",
                  "type": "string"
                },
                "MeetingHostId": {
                  "description": "Reserved.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "type": "string"
                },
                "NotificationsConfiguration": {
                  "description": "The configuration for resource targets to receive notifications when Amazon Chime SDK meeting and attendee events occur. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>).",
                  "properties": {
                    "SnsTopicArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The SNS topic ARN."
                        }
                      ]
                    },
                    "SqsQueueArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Arn"
                        },
                        {
                          "description": "The SQS queue ARN."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Tags": {
                  "description": "The tag key-value pairs.",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "ClientRequestToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateMeetingWithAttendeesResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html\">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime Developer Guide</i>. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId": "CreateMeetingWithAttendees"
      }
    },
    "/meetings/{meetingId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes the specified Amazon Chime SDK meeting. When a meeting is deleted, its attendees are also deleted and clients can no longer join it. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId": "DeleteMeeting"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetMeetingResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId": "GetMeeting"
      }
    },
    "/meetings/{meetingId}/attendees": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAttendeesResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId": "ListAttendees"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ExternalUserId": {
                  "description": "The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application. If you create an attendee with the same external user id, the service returns the existing record.",
                  "format": "password",
                  "maxLength": 64,
                  "minLength": 2,
                  "type": "string"
                },
                "Tags": {
                  "description": "The tag key-value pairs.",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  },
                  "maxItems": 10,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "ExternalUserId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAttendeeResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId": "CreateAttendee"
      }
    },
    "/meetings/{meetingId}/attendees#operation=batch-create": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "batch-create"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Attendees": {
                  "description": "The request containing the attendees to create.",
                  "items": {
                    "$ref": "#/definitions/CreateAttendeeRequestItem"
                  },
                  "type": "array"
                }
              },
              "required": [
                "Attendees"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchCreateAttendeeResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates up to 100 new attendees for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. ",
        "operationId": "BatchCreateAttendee"
      }
    },
    "/meetings/{meetingId}/attendees/{attendeeId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Amazon Chime SDK attendee ID.",
            "in": "path",
            "name": "attendeeId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their <code>JoinToken</code>. Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId": "DeleteAttendee"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Amazon Chime SDK attendee ID.",
            "in": "path",
            "name": "attendeeId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetAttendeeResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.",
        "operationId": "GetAttendee"
      }
    },
    "/meetings/{meetingId}/attendees/{attendeeId}/tags": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Amazon Chime SDK attendee ID.",
            "in": "path",
            "name": "attendeeId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAttendeeTagsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the tags applied to an Amazon Chime SDK attendee resource.",
        "operationId": "ListAttendeeTags"
      }
    },
    "/meetings/{meetingId}/attendees/{attendeeId}/tags#operation=add": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Amazon Chime SDK attendee ID.",
            "in": "path",
            "name": "attendeeId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "add"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Tags": {
                  "description": "The tag key-value pairs.",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  },
                  "maxItems": 10,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "Tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Applies the specified tags to the specified Amazon Chime SDK attendee.",
        "operationId": "TagAttendee"
      }
    },
    "/meetings/{meetingId}/attendees/{attendeeId}/tags#operation=delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Amazon Chime SDK attendee ID.",
            "in": "path",
            "name": "attendeeId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "delete"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "TagKeys": {
                  "description": "The tag keys.",
                  "items": {
                    "$ref": "#/definitions/TagKey"
                  },
                  "maxItems": 10,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "TagKeys"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Untags the specified tags from the specified Amazon Chime SDK attendee.",
        "operationId": "UntagAttendee"
      }
    },
    "/meetings/{meetingId}/dial-outs": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "<p>The Amazon Chime SDK meeting ID.</p> <p>Type: String</p> <p>Pattern: [a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}</p> <p>Required: No</p>",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "FromPhoneNumber": {
                  "description": "Phone number used as the caller ID when the remote party receives a call.",
                  "format": "password",
                  "pattern": "^\\+?[1-9]\\d{1,14}$",
                  "type": "string"
                },
                "JoinToken": {
                  "description": "Token used by the Amazon Chime SDK attendee. Call the <a href=\"https://docs.aws.amazon.com/https:/docs.aws.amazon.com/chime/latest/APIReference/API_Attendee.html\"> CreateAttendee API</a> to get a join token. ",
                  "format": "password",
                  "maxLength": 2048,
                  "minLength": 2,
                  "pattern": "^[a-zA-Z0-9+/]+$",
                  "type": "string"
                },
                "ToPhoneNumber": {
                  "description": "Phone number called when inviting someone to a meeting.",
                  "format": "password",
                  "pattern": "^\\+?[1-9]\\d{1,14}$",
                  "type": "string"
                }
              },
              "required": [
                "FromPhoneNumber",
                "ToPhoneNumber",
                "JoinToken"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateMeetingDialOutResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Uses the join token and call metadata in a meeting request (From number, To number, and so forth) to initiate an outbound call to a public switched telephone network (PSTN) and joins them into Chime meeting. Also ensures that the From number belongs to the customer.</p> <p>To play welcome audio or implement an interactive voice response (IVR), use the <code>CreateSipMediaApplicationCall</code> API with the corresponding SIP media application ID.</p>",
        "operationId": "CreateMeetingDialOut"
      }
    },
    "/meetings/{meetingId}/tags": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListMeetingTagsResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the tags applied to an Amazon Chime SDK meeting resource.",
        "operationId": "ListMeetingTags"
      }
    },
    "/meetings/{meetingId}/tags#operation=add": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "add"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Tags": {
                  "description": "The tag key-value pairs.",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "Tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Applies the specified tags to the specified Amazon Chime SDK meeting.",
        "operationId": "TagMeeting"
      }
    },
    "/meetings/{meetingId}/tags#operation=delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime SDK meeting ID.",
            "in": "path",
            "name": "meetingId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "delete"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "TagKeys": {
                  "description": "The tag keys.",
                  "items": {
                    "$ref": "#/definitions/TagKey"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "TagKeys"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "483": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Untags the specified tags from the specified Amazon Chime SDK meeting.",
        "operationId": "UntagMeeting"
      }
    },
    "/phone-number-orders": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListPhoneNumberOrdersResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the phone number orders for the administrator's Amazon Chime account.",
        "operationId": "ListPhoneNumberOrders"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "E164PhoneNumbers": {
                  "description": "List of phone numbers, in E.164 format.",
                  "items": {
                    "$ref": "#/definitions/E164PhoneNumber"
                  },
                  "type": "array"
                },
                "ProductType": {
                  "description": "The phone number product type.",
                  "enum": [
                    "BusinessCalling",
                    "VoiceConnector"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "ProductType",
                "E164PhoneNumbers"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreatePhoneNumberOrderResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates an order for phone numbers to be provisioned. Choose from Amazon Chime Business Calling and Amazon Chime Voice Connector product types. For toll-free numbers, you must use the Amazon Chime Voice Connector product type.",
        "operationId": "CreatePhoneNumberOrder"
      }
    },
    "/phone-number-orders/{phoneNumberOrderId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID for the phone number order.",
            "in": "path",
            "name": "phoneNumberOrderId",
            "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetPhoneNumberOrderResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves details for the specified phone number order, such as order creation timestamp, phone numbers in E.164 format, product type, and order status.",
        "operationId": "GetPhoneNumberOrder"
      }
    },
    "/phone-numbers": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The phone number status.",
            "enum": [
              "AcquireInProgress",
              "AcquireFailed",
              "Unassigned",
              "Assigned",
              "ReleaseInProgress",
              "DeleteInProgress",
              "ReleaseFailed",
              "DeleteFailed"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "The phone number product type.",
            "enum": [
              "BusinessCalling",
              "VoiceConnector"
            ],
            "in": "query",
            "name": "product-type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The filter to use to limit the number of results.",
            "enum": [
              "AccountId",
              "UserId",
              "VoiceConnectorId",
              "VoiceConnectorGroupId",
              "SipRuleId"
            ],
            "in": "query",
            "name": "filter-name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The value to use for the filter.",
            "in": "query",
            "name": "filter-value",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListPhoneNumbersResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the phone numbers for the specified Amazon Chime account, Amazon Chime user, Amazon Chime Voice Connector, or Amazon Chime Voice Connector group.",
        "operationId": "ListPhoneNumbers"
      }
    },
    "/phone-numbers#operation=batch-delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "batch-delete"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "PhoneNumberIds": {
                  "description": "List of phone number IDs.",
                  "items": {
                    "$ref": "#/definitions/String"
                  },
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "PhoneNumberIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeletePhoneNumberResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Moves phone numbers into the <b>Deletion queue</b>. Phone numbers must be disassociated from any users or Amazon Chime Voice Connectors before they can be deleted.</p> <p>Phone numbers remain in the <b>Deletion queue</b> for 7 days before they are deleted permanently.</p>",
        "operationId": "BatchDeletePhoneNumber"
      }
    },
    "/phone-numbers#operation=batch-update": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "batch-update"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "UpdatePhoneNumberRequestItems": {
                  "description": "The request containing the phone number IDs and product types or calling names to update.",
                  "items": {
                    "$ref": "#/definitions/UpdatePhoneNumberRequestItem"
                  },
                  "type": "array"
                }
              },
              "required": [
                "UpdatePhoneNumberRequestItems"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchUpdatePhoneNumberResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Updates phone number product types or calling names. You can update one attribute at a time for each <code>UpdatePhoneNumberRequestItem</code>. For example, you can update either the product type or the calling name.</p> <p>For product types, choose from Amazon Chime Business Calling and Amazon Chime Voice Connector. For toll-free numbers, you must use the Amazon Chime Voice Connector product type.</p> <p>Updates to outbound calling names can take up to 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>",
        "operationId": "BatchUpdatePhoneNumber"
      }
    },
    "/phone-numbers/{phoneNumberId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The phone number ID.",
            "in": "path",
            "name": "phoneNumberId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Moves the specified phone number into the <b>Deletion queue</b>. A phone number must be disassociated from any users or Amazon Chime Voice Connectors before it can be deleted.</p> <p>Deleted phone numbers remain in the <b>Deletion queue</b> for 7 days before they are deleted permanently.</p>",
        "operationId": "DeletePhoneNumber"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The phone number ID.",
            "in": "path",
            "name": "phoneNumberId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetPhoneNumberResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves details for the specified phone number ID, such as associations, capabilities, and product type.",
        "operationId": "GetPhoneNumber"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The phone number ID.",
            "in": "path",
            "name": "phoneNumberId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "CallingName": {
                  "description": "The outbound calling name associated with the phone number.",
                  "format": "password",
                  "pattern": "^$|^[a-zA-Z0-9 ]{2,15}$",
                  "type": "string"
                },
                "ProductType": {
                  "description": "The product type.",
                  "enum": [
                    "BusinessCalling",
                    "VoiceConnector"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdatePhoneNumberResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Updates phone number details, such as product type or calling name, for the specified phone number ID. You can update one phone number detail at a time. For example, you can update either the product type or the calling name in one action.</p> <p>For toll-free numbers, you must use the Amazon Chime Voice Connector product type.</p> <p>Updates to outbound calling names can take up to 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>",
        "operationId": "UpdatePhoneNumber"
      }
    },
    "/phone-numbers/{phoneNumberId}#operation=restore": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The phone number.",
            "in": "path",
            "name": "phoneNumberId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "restore"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RestorePhoneNumberResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Moves a phone number from the <b>Deletion queue</b> back into the phone number <b>Inventory</b>.",
        "operationId": "RestorePhoneNumber"
      }
    },
    "/search#type=phone-numbers": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The area code used to filter results.",
            "in": "query",
            "name": "area-code",
            "required": false,
            "type": "string"
          },
          {
            "description": "The city used to filter results.",
            "in": "query",
            "name": "city",
            "required": false,
            "type": "string"
          },
          {
            "description": "The country used to filter results.",
            "in": "query",
            "name": "country",
            "required": false,
            "type": "string"
          },
          {
            "description": "The state used to filter results.",
            "in": "query",
            "name": "state",
            "required": false,
            "type": "string"
          },
          {
            "description": "The toll-free prefix that you use to filter results.",
            "in": "query",
            "maxLength": 3,
            "minLength": 3,
            "name": "toll-free-prefix",
            "pattern": "^8(00|33|44|55|66|77|88)$",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call.",
            "in": "query",
            "maximum": 500,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "phone-numbers"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchAvailablePhoneNumbersResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Searches phone numbers that can be ordered.",
        "operationId": "SearchAvailablePhoneNumbers"
      }
    },
    "/settings": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetGlobalSettingsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.",
        "operationId": "GetGlobalSettings"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "BusinessCalling": {
                  "description": "The Amazon Chime Business Calling settings for the administrator's AWS account. Includes any Amazon S3 buckets designated for storing call detail records.",
                  "properties": {
                    "CdrBucket": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/String"
                        },
                        {
                          "description": "The Amazon S3 bucket designated for call detail record storage."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "VoiceConnector": {
                  "description": "The Amazon Chime Voice Connector settings. Includes any Amazon S3 buckets designated for storing call detail records.",
                  "properties": {
                    "CdrBucket": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/String"
                        },
                        {
                          "description": "The Amazon S3 bucket designated for call detail record storage."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "BusinessCalling",
                "VoiceConnector"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.",
        "operationId": "UpdateGlobalSettings"
      }
    },
    "/settings/phone-number": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetPhoneNumberSettingsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves the phone number settings for the administrator's AWS account, such as the default outbound calling name.",
        "operationId": "GetPhoneNumberSettings"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "CallingName": {
                  "description": "The default outbound calling name for the account.",
                  "format": "password",
                  "pattern": "^$|^[a-zA-Z0-9 ]{2,15}$",
                  "type": "string"
                }
              },
              "required": [
                "CallingName"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates the phone number settings for the administrator's AWS account, such as the default outbound calling name. You can update the default outbound calling name once every seven days. Outbound calling names can take up to 72 hours to update.",
        "operationId": "UpdatePhoneNumberSettings"
      }
    },
    "/sip-media-applications": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of results to return in a single call. Defaults to 100.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "maxLength": 65535,
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSipMediaApplicationsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the SIP media applications under the administrator's AWS account.",
        "operationId": "ListSipMediaApplications"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AwsRegion": {
                  "description": "AWS Region assigned to the SIP media application.",
                  "type": "string"
                },
                "Endpoints": {
                  "description": "List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported.",
                  "items": {
                    "$ref": "#/definitions/SipMediaApplicationEndpoint"
                  },
                  "maxItems": 1,
                  "minItems": 1,
                  "type": "array"
                },
                "Name": {
                  "description": "The SIP media application name.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "AwsRegion",
                "Endpoints"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateSipMediaApplicationResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "488": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates a SIP media application.",
        "operationId": "CreateSipMediaApplication"
      }
    },
    "/sip-media-applications/{sipMediaApplicationId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The SIP media application ID.",
            "in": "path",
            "name": "sipMediaApplicationId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes a SIP media application.",
        "operationId": "DeleteSipMediaApplication"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The SIP media application ID.",
            "in": "path",
            "name": "sipMediaApplicationId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSipMediaApplicationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves the information for a SIP media application, including name, AWS Region, and endpoints.",
        "operationId": "GetSipMediaApplication"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The SIP media application ID.",
            "in": "path",
            "name": "sipMediaApplicationId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Endpoints": {
                  "description": "The new set of endpoints for the specified SIP media application.",
                  "items": {
                    "$ref": "#/definitions/SipMediaApplicationEndpoint"
                  },
                  "maxItems": 1,
                  "minItems": 1,
                  "type": "array"
                },
                "Name": {
                  "description": "The new name for the specified SIP media application.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateSipMediaApplicationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates the details for the specified SIP media application.",
        "operationId": "UpdateSipMediaApplication"
      }
    },
    "/sip-media-applications/{sipMediaApplicationId}/calls": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the SIP media application.",
            "in": "path",
            "name": "sipMediaApplicationId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "FromPhoneNumber": {
                  "description": "The phone number that a user calls from.",
                  "format": "password",
                  "pattern": "^\\+?[1-9]\\d{1,14}$",
                  "type": "string"
                },
                "ToPhoneNumber": {
                  "description": "The phone number that the user dials in order to connect to a meeting",
                  "format": "password",
                  "pattern": "^\\+?[1-9]\\d{1,14}$",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateSipMediaApplicationCallResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates an outbound call to a phone number from the phone number specified in the request, and it invokes the endpoint of the specified <code>sipMediaApplicationId</code>.",
        "operationId": "CreateSipMediaApplicationCall"
      }
    },
    "/sip-media-applications/{sipMediaApplicationId}/logging-configuration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the SIP media application.",
            "in": "path",
            "name": "sipMediaApplicationId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSipMediaApplicationLoggingConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Returns the logging configuration for the specified SIP media application.",
        "operationId": "GetSipMediaApplicationLoggingConfiguration"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ID of the specified SIP media application",
            "in": "path",
            "name": "sipMediaApplicationId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "SipMediaApplicationLoggingConfiguration": {
                  "description": "Logging configuration of the SIP media application.",
                  "properties": {
                    "EnableSipMediaApplicationMessageLogs": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "Enables application message logs for the SIP media application."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutSipMediaApplicationLoggingConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates the logging configuration for the specified SIP media application.",
        "operationId": "PutSipMediaApplicationLoggingConfiguration"
      }
    },
    "/sip-rules": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The SIP media application ID.",
            "in": "query",
            "name": "sip-media-application",
            "pattern": ".*\\S.*",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call. Defaults to 100.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "maxLength": 65535,
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListSipRulesResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the SIP rules under the administrator's AWS account.",
        "operationId": "ListSipRules"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Disabled": {
                  "description": "Enables or disables a rule. You must disable rules before you can delete them.",
                  "type": "boolean"
                },
                "Name": {
                  "description": "The name of the SIP rule.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "TargetApplications": {
                  "description": "List of SIP media applications with priority and AWS Region. Only one SIP application per AWS Region can be used.",
                  "items": {
                    "$ref": "#/definitions/SipRuleTargetApplication"
                  },
                  "maxItems": 25,
                  "minItems": 1,
                  "type": "array"
                },
                "TriggerType": {
                  "description": "The type of trigger whose value is assigned to the SIP rule in <code>TriggerValue</code>. Allowed trigger values are <code>RequestUriHostname</code> and <code>ToPhoneNumber</code>.",
                  "enum": [
                    "ToPhoneNumber",
                    "RequestUriHostname"
                  ],
                  "type": "string"
                },
                "TriggerValue": {
                  "description": "If <code>TriggerType</code> is <code>RequestUriHostname</code> then the value can be the outbound host name of an Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code> then the value can be a customer-owned phone number in E164 format. <code>SipRule</code> is triggered if the SIP application requests a host name, or a If <code>TriggerType</code> is <code>RequestUriHostname</code>, then the value can be the outbound hostname of an Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, then the value can be a customer-owned phone number in E164 format. <code>SipRule</code> is triggered if the SIP application requests a host name, or a <code>ToPhoneNumber</code> value matches the incoming SIP request.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "Name",
                "TriggerType",
                "TriggerValue",
                "TargetApplications"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateSipRuleResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "486": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "488": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates a SIP rule which can be used to run a SIP media application as a target for a specific trigger type.",
        "operationId": "CreateSipRule"
      }
    },
    "/sip-rules/{sipRuleId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The SIP rule ID.",
            "in": "path",
            "name": "sipRuleId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes a SIP rule. You must disable a SIP rule before you can delete it.",
        "operationId": "DeleteSipRule"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The SIP rule ID.",
            "in": "path",
            "name": "sipRuleId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetSipRuleResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves the details of a SIP rule, such as the rule ID, name, triggers, and target endpoints.",
        "operationId": "GetSipRule"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The SIP rule ID.",
            "in": "path",
            "name": "sipRuleId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Disabled": {
                  "description": "The new value specified to indicate whether the rule is disabled.",
                  "type": "boolean"
                },
                "Name": {
                  "description": "The new name for the specified SIP rule.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "TargetApplications": {
                  "description": "The new value of the list of target applications.",
                  "items": {
                    "$ref": "#/definitions/SipRuleTargetApplication"
                  },
                  "maxItems": 25,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateSipRuleResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "487": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "488": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates the details for the specified SIP rule.",
        "operationId": "UpdateSipRule"
      }
    },
    "/tags#arn": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The resource ARN.",
            "format": "password",
            "in": "query",
            "maxLength": 1024,
            "minLength": 1,
            "name": "arn",
            "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the tags applied to an Amazon Chime SDK meeting resource.",
        "operationId": "ListTagsForResource"
      }
    },
    "/tags#operation=tag-resource": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "tag-resource"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ResourceARN": {
                  "description": "The resource ARN.",
                  "format": "password",
                  "maxLength": 1024,
                  "minLength": 1,
                  "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
                  "type": "string"
                },
                "Tags": {
                  "description": "The tag key-value pairs.",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "ResourceARN",
                "Tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Applies the specified tags to the specified Amazon Chime SDK meeting resource.",
        "operationId": "TagResource"
      }
    },
    "/tags#operation=untag-resource": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "untag-resource"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ResourceARN": {
                  "description": "The resource ARN.",
                  "format": "password",
                  "maxLength": 1024,
                  "minLength": 1,
                  "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
                  "type": "string"
                },
                "TagKeys": {
                  "description": "The tag keys.",
                  "items": {
                    "$ref": "#/definitions/TagKey"
                  },
                  "maxItems": 50,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "ResourceARN",
                "TagKeys"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Untags the specified tags from the specified Amazon Chime SDK meeting resource.",
        "operationId": "UntagResource"
      }
    },
    "/voice-connector-groups": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListVoiceConnectorGroupsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the Amazon Chime Voice Connector groups for the administrator's AWS account.",
        "operationId": "ListVoiceConnectorGroups"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name of the Amazon Chime Voice Connector group.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "VoiceConnectorItems": {
                  "description": "The Amazon Chime Voice Connectors to route inbound calls to.",
                  "items": {
                    "$ref": "#/definitions/VoiceConnectorItem"
                  },
                  "type": "array"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateVoiceConnectorGroupResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by including <code>VoiceConnectorItems</code> in the request.</p> <p>You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.</p>",
        "operationId": "CreateVoiceConnectorGroup"
      }
    },
    "/voice-connector-groups/{voiceConnectorGroupId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector group ID.",
            "in": "path",
            "name": "voiceConnectorGroupId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes the specified Amazon Chime Voice Connector group. Any <code>VoiceConnectorItems</code> and phone numbers associated with the group must be removed before it can be deleted.",
        "operationId": "DeleteVoiceConnectorGroup"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector group ID.",
            "in": "path",
            "name": "voiceConnectorGroupId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetVoiceConnectorGroupResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves details for the specified Amazon Chime Voice Connector group, such as timestamps, name, and associated <code>VoiceConnectorItems</code>.",
        "operationId": "GetVoiceConnectorGroup"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector group ID.",
            "in": "path",
            "name": "voiceConnectorGroupId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name of the Amazon Chime Voice Connector group.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "VoiceConnectorItems": {
                  "description": "The <code>VoiceConnectorItems</code> to associate with the group.",
                  "items": {
                    "$ref": "#/definitions/VoiceConnectorItem"
                  },
                  "type": "array"
                }
              },
              "required": [
                "Name",
                "VoiceConnectorItems"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateVoiceConnectorGroupResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates details for the specified Amazon Chime Voice Connector group, such as the name and Amazon Chime Voice Connector priority ranking.",
        "operationId": "UpdateVoiceConnectorGroup"
      }
    },
    "/voice-connector-groups/{voiceConnectorGroupId}#operation=associate-phone-numbers": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector group ID.",
            "in": "path",
            "name": "voiceConnectorGroupId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "associate-phone-numbers"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "E164PhoneNumbers": {
                  "description": "List of phone numbers, in E.164 format.",
                  "items": {
                    "$ref": "#/definitions/E164PhoneNumber"
                  },
                  "type": "array"
                },
                "ForceAssociate": {
                  "description": "If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.",
                  "type": "boolean"
                }
              },
              "required": [
                "E164PhoneNumbers"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociatePhoneNumbersWithVoiceConnectorGroupResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Associates phone numbers with the specified Amazon Chime Voice Connector group.",
        "operationId": "AssociatePhoneNumbersWithVoiceConnectorGroup"
      }
    },
    "/voice-connector-groups/{voiceConnectorGroupId}#operation=disassociate-phone-numbers": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector group ID.",
            "in": "path",
            "name": "voiceConnectorGroupId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "disassociate-phone-numbers"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "E164PhoneNumbers": {
                  "description": "List of phone numbers, in E.164 format.",
                  "items": {
                    "$ref": "#/definitions/E164PhoneNumber"
                  },
                  "type": "array"
                }
              },
              "required": [
                "E164PhoneNumbers"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociatePhoneNumbersFromVoiceConnectorGroupResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector group.",
        "operationId": "DisassociatePhoneNumbersFromVoiceConnectorGroup"
      }
    },
    "/voice-connectors": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListVoiceConnectorsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "483": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "484": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "485": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the Amazon Chime Voice Connectors for the administrator's AWS account.",
        "operationId": "ListVoiceConnectors"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AwsRegion": {
                  "description": "The AWS Region in which the Amazon Chime Voice Connector is created. Default value: <code>us-east-1</code>.",
                  "enum": [
                    "us-east-1",
                    "us-west-2"
                  ],
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the Amazon Chime Voice Connector.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "RequireEncryption": {
                  "description": "When enabled, requires encryption for the Amazon Chime Voice Connector.",
                  "type": "boolean"
                }
              },
              "required": [
                "Name",
                "RequireEncryption"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateVoiceConnectorResponse"
            }
          },
          "480": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "481": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ResourceLimitExceededException",
            "schema": {
              "$ref": "#/definitions/ResourceLimitExceededException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Creates an Amazon Chime Voice Connector under the administrator's AWS account. You can choose to create an Amazon Chime Voice Connector in a specific AWS Region.</p> <p>Enabling <a>CreateVoiceConnectorRequest$RequireEncryption</a> configures your Amazon Chime Voice Connector to use TLS transport for SIP signaling and Secure RTP (SRTP) for media. Inbound calls use TLS transport, and unencrypted outbound calls are blocked.</p>",
        "operationId": "CreateVoiceConnector"
      }
    },
    "/voice-connectors/{voiceConnectorId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes the specified Amazon Chime Voice Connector. Any phone numbers associated with the Amazon Chime Voice Connector must be disassociated from it before it can be deleted.",
        "operationId": "DeleteVoiceConnector"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetVoiceConnectorResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves details for the specified Amazon Chime Voice Connector, such as timestamps, name, outbound host, and encryption requirements.",
        "operationId": "GetVoiceConnector"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Name": {
                  "description": "The name of the Amazon Chime Voice Connector.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "RequireEncryption": {
                  "description": "When enabled, requires encryption for the Amazon Chime Voice Connector.",
                  "type": "boolean"
                }
              },
              "required": [
                "Name",
                "RequireEncryption"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateVoiceConnectorResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates details for the specified Amazon Chime Voice Connector.",
        "operationId": "UpdateVoiceConnector"
      }
    },
    "/voice-connectors/{voiceConnectorId}#operation=associate-phone-numbers": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "associate-phone-numbers"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "E164PhoneNumbers": {
                  "description": "List of phone numbers, in E.164 format.",
                  "items": {
                    "$ref": "#/definitions/E164PhoneNumber"
                  },
                  "type": "array"
                },
                "ForceAssociate": {
                  "description": "If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.",
                  "type": "boolean"
                }
              },
              "required": [
                "E164PhoneNumbers"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociatePhoneNumbersWithVoiceConnectorResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Associates phone numbers with the specified Amazon Chime Voice Connector.",
        "operationId": "AssociatePhoneNumbersWithVoiceConnector"
      }
    },
    "/voice-connectors/{voiceConnectorId}#operation=disassociate-phone-numbers": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "disassociate-phone-numbers"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "E164PhoneNumbers": {
                  "description": "List of phone numbers, in E.164 format.",
                  "items": {
                    "$ref": "#/definitions/E164PhoneNumber"
                  },
                  "type": "array"
                }
              },
              "required": [
                "E164PhoneNumbers"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociatePhoneNumbersFromVoiceConnectorResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector.",
        "operationId": "DisassociatePhoneNumbersFromVoiceConnector"
      }
    },
    "/voice-connectors/{voiceConnectorId}/emergency-calling-configuration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes the emergency calling configuration details from the specified Amazon Chime Voice Connector.",
        "operationId": "DeleteVoiceConnectorEmergencyCallingConfiguration"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetVoiceConnectorEmergencyCallingConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Gets the emergency calling configuration details for the specified Amazon Chime Voice Connector.",
        "operationId": "GetVoiceConnectorEmergencyCallingConfiguration"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "EmergencyCallingConfiguration": {
                  "description": "The emergency calling configuration details associated with an Amazon Chime Voice Connector.",
                  "properties": {
                    "DNIS": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DNISEmergencyCallingConfigurationList"
                        },
                        {
                          "description": "The Dialed Number Identification Service (DNIS) emergency calling configuration details."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "EmergencyCallingConfiguration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutVoiceConnectorEmergencyCallingConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Puts emergency calling configuration details to the specified Amazon Chime Voice Connector, such as emergency phone numbers and calling countries. Origination and termination settings must be enabled for the Amazon Chime Voice Connector before emergency calling can be configured.",
        "operationId": "PutVoiceConnectorEmergencyCallingConfiguration"
      }
    },
    "/voice-connectors/{voiceConnectorId}/logging-configuration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetVoiceConnectorLoggingConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves the logging configuration details for the specified Amazon Chime Voice Connector. Shows whether SIP message logs are enabled for sending to Amazon CloudWatch.",
        "operationId": "GetVoiceConnectorLoggingConfiguration"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "LoggingConfiguration": {
                  "description": "The logging configuration associated with an Amazon Chime Voice Connector. Specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.",
                  "properties": {
                    "EnableSIPLogs": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "When true, enables SIP message logs for sending to Amazon CloudWatch Logs."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "LoggingConfiguration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutVoiceConnectorLoggingConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.",
        "operationId": "PutVoiceConnectorLoggingConfiguration"
      }
    },
    "/voice-connectors/{voiceConnectorId}/origination": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Deletes the origination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the origination settings.</p> </note>",
        "operationId": "DeleteVoiceConnectorOrigination"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetVoiceConnectorOriginationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves origination setting details for the specified Amazon Chime Voice Connector.",
        "operationId": "GetVoiceConnectorOrigination"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Origination": {
                  "description": "Origination settings enable your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector.",
                  "properties": {
                    "Disabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector."
                        }
                      ]
                    },
                    "Routes": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/OriginationRouteList"
                        },
                        {
                          "description": "The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "Origination"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutVoiceConnectorOriginationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Adds origination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off origination settings.</p> </note>",
        "operationId": "PutVoiceConnectorOrigination"
      }
    },
    "/voice-connectors/{voiceConnectorId}/programmable-numbers/proxy": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes the proxy configuration from the specified Amazon Chime Voice Connector.",
        "operationId": "DeleteVoiceConnectorProxy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime voice connector ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetVoiceConnectorProxyResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Gets the proxy configuration details for the specified Amazon Chime Voice Connector.",
        "operationId": "GetVoiceConnectorProxy"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime voice connector ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DefaultSessionExpiryMinutes": {
                  "description": "The default number of minutes allowed for proxy sessions.",
                  "type": "integer"
                },
                "Disabled": {
                  "description": "When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.",
                  "type": "boolean"
                },
                "FallBackPhoneNumber": {
                  "description": "The phone number to route calls to after a proxy session expires.",
                  "format": "password",
                  "pattern": "^\\+?[1-9]\\d{1,14}$",
                  "type": "string"
                },
                "PhoneNumberPoolCountries": {
                  "description": "The countries for proxy phone numbers to be selected from.",
                  "items": {
                    "$ref": "#/definitions/Country"
                  },
                  "maxItems": 100,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "DefaultSessionExpiryMinutes",
                "PhoneNumberPoolCountries"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutVoiceConnectorProxyResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "482": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "483": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "484": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Puts the specified proxy configuration to the specified Amazon Chime Voice Connector.",
        "operationId": "PutVoiceConnectorProxy"
      }
    },
    "/voice-connectors/{voiceConnectorId}/proxy-sessions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime voice connector ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The proxy session status.",
            "enum": [
              "Open",
              "InProgress",
              "Closed"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "The token to use to retrieve the next page of results.",
            "in": "query",
            "maxLength": 65535,
            "name": "next-token",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return in a single call.",
            "in": "query",
            "maximum": 99,
            "minimum": 1,
            "name": "max-results",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListProxySessionsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the proxy sessions for the specified Amazon Chime Voice Connector.",
        "operationId": "ListProxySessions"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime voice connector ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Capabilities": {
                  "description": "The proxy session capabilities.",
                  "items": {
                    "$ref": "#/definitions/Capability"
                  },
                  "type": "array"
                },
                "ExpiryMinutes": {
                  "description": "The number of minutes allowed for the proxy session.",
                  "minimum": 1,
                  "type": "integer"
                },
                "GeoMatchLevel": {
                  "description": "The preference for matching the country or area code of the proxy phone number with that of the first participant.",
                  "enum": [
                    "Country",
                    "AreaCode"
                  ],
                  "type": "string"
                },
                "GeoMatchParams": {
                  "description": "The country and area code for a proxy phone number in a proxy phone session.",
                  "properties": {
                    "AreaCode": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/AreaCode"
                        },
                        {
                          "description": "The area code."
                        }
                      ]
                    },
                    "Country": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Country"
                        },
                        {
                          "description": "The country."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Name": {
                  "description": "The name of the proxy session.",
                  "format": "password",
                  "pattern": "^$|^[a-zA-Z0-9 ]{0,30}$",
                  "type": "string"
                },
                "NumberSelectionBehavior": {
                  "description": "The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.",
                  "enum": [
                    "PreferSticky",
                    "AvoidSticky"
                  ],
                  "type": "string"
                },
                "ParticipantPhoneNumbers": {
                  "description": "The participant phone numbers.",
                  "items": {
                    "$ref": "#/definitions/E164PhoneNumber"
                  },
                  "maxItems": 2,
                  "minItems": 2,
                  "type": "array"
                }
              },
              "required": [
                "ParticipantPhoneNumbers",
                "Capabilities"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateProxySessionResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Creates a proxy session on the specified Amazon Chime Voice Connector for the specified participant phone numbers.",
        "operationId": "CreateProxySession"
      }
    },
    "/voice-connectors/{voiceConnectorId}/proxy-sessions/{proxySessionId}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime voice connector ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The proxy session ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "proxySessionId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes the specified proxy session from the specified Amazon Chime Voice Connector.",
        "operationId": "DeleteProxySession"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime voice connector ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The proxy session ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "proxySessionId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetProxySessionResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Gets the specified proxy session details for the specified Amazon Chime Voice Connector.",
        "operationId": "GetProxySession"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime voice connector ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "The proxy session ID.",
            "in": "path",
            "maxLength": 128,
            "minLength": 1,
            "name": "proxySessionId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Capabilities": {
                  "description": "The proxy session capabilities.",
                  "items": {
                    "$ref": "#/definitions/Capability"
                  },
                  "type": "array"
                },
                "ExpiryMinutes": {
                  "description": "The number of minutes allowed for the proxy session.",
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "required": [
                "Capabilities"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateProxySessionResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Updates the specified proxy session details, such as voice or SMS capabilities.",
        "operationId": "UpdateProxySession"
      }
    },
    "/voice-connectors/{voiceConnectorId}/streaming-configuration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes the streaming configuration for the specified Amazon Chime Voice Connector.",
        "operationId": "DeleteVoiceConnectorStreamingConfiguration"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetVoiceConnectorStreamingConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves the streaming configuration details for the specified Amazon Chime Voice Connector. Shows whether media streaming is enabled for sending to Amazon Kinesis. It also shows the retention period, in hours, for the Amazon Kinesis data.",
        "operationId": "GetVoiceConnectorStreamingConfiguration"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "StreamingConfiguration": {
                  "description": "The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours.",
                  "properties": {
                    "DataRetentionInHours": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DataRetentionInHours"
                        },
                        {
                          "description": "The retention period, in hours, for the Amazon Kinesis data."
                        }
                      ]
                    },
                    "Disabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "When true, media streaming to Amazon Kinesis is turned off."
                        }
                      ]
                    },
                    "StreamingNotificationTargets": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StreamingNotificationTargetList"
                        },
                        {
                          "description": "The streaming notification targets."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "StreamingConfiguration"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutVoiceConnectorStreamingConfigurationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Adds a streaming configuration for the specified Amazon Chime Voice Connector. The streaming configuration specifies whether media streaming is enabled for sending to Amazon Kinesis. It also sets the retention period, in hours, for the Amazon Kinesis data.",
        "operationId": "PutVoiceConnectorStreamingConfiguration"
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Deletes the termination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the termination settings.</p> </note>",
        "operationId": "DeleteVoiceConnectorTermination"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetVoiceConnectorTerminationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves termination setting details for the specified Amazon Chime Voice Connector.",
        "operationId": "GetVoiceConnectorTermination"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Termination": {
                  "description": "Termination settings enable your SIP hosts to make outbound calls using your Amazon Chime Voice Connector.",
                  "properties": {
                    "CallingRegions": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/CallingRegionList"
                        },
                        {
                          "description": "The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required."
                        }
                      ]
                    },
                    "CidrAllowedList": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringList"
                        },
                        {
                          "description": "The IP addresses allowed to make calls, in CIDR format. Required."
                        }
                      ]
                    },
                    "CpsLimit": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/CpsLimit"
                        },
                        {
                          "description": "The limit on calls per second. Max value based on account service quota. Default value of 1."
                        }
                      ]
                    },
                    "DefaultPhoneNumber": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/E164PhoneNumber"
                        },
                        {
                          "description": "The default caller ID phone number."
                        }
                      ]
                    },
                    "Disabled": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Boolean"
                        },
                        {
                          "description": "When termination settings are disabled, outbound calls can not be made."
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "Termination"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PutVoiceConnectorTerminationResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "485": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "486": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "487": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "<p>Adds termination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off termination settings.</p> </note>",
        "operationId": "PutVoiceConnectorTermination"
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination/credentials": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListVoiceConnectorTerminationCredentialsResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Lists the SIP credentials for the specified Amazon Chime Voice Connector.",
        "operationId": "ListVoiceConnectorTerminationCredentials"
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination/credentials#operation=delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "delete"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Usernames": {
                  "description": "The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format.",
                  "items": {
                    "$ref": "#/definitions/SensitiveString"
                  },
                  "type": "array"
                }
              },
              "required": [
                "Usernames"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Deletes the specified SIP credentials used by your equipment to authenticate during call termination.",
        "operationId": "DeleteVoiceConnectorTerminationCredentials"
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination/credentials#operation=put": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "enum": [
              "put"
            ],
            "in": "query",
            "name": "operation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Credentials": {
                  "description": "The termination SIP credentials.",
                  "items": {
                    "$ref": "#/definitions/Credential"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Adds termination SIP credentials for the specified Amazon Chime Voice Connector.",
        "operationId": "PutVoiceConnectorTerminationCredentials"
      }
    },
    "/voice-connectors/{voiceConnectorId}/termination/health": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Amazon Chime Voice Connector ID.",
            "in": "path",
            "name": "voiceConnectorId",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetVoiceConnectorTerminationHealthResponse"
            }
          },
          "480": {
            "description": "UnauthorizedClientException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedClientException"
            }
          },
          "481": {
            "description": "NotFoundException",
            "schema": {
              "$ref": "#/definitions/NotFoundException"
            }
          },
          "482": {
            "description": "ForbiddenException",
            "schema": {
              "$ref": "#/definitions/ForbiddenException"
            }
          },
          "483": {
            "description": "BadRequestException",
            "schema": {
              "$ref": "#/definitions/BadRequestException"
            }
          },
          "484": {
            "description": "ThrottledClientException",
            "schema": {
              "$ref": "#/definitions/ThrottledClientException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "ServiceFailureException",
            "schema": {
              "$ref": "#/definitions/ServiceFailureException"
            }
          }
        },
        "description": "Retrieves information about the last time a SIP <code>OPTIONS</code> ping was received from your SIP infrastructure for the specified Amazon Chime Voice Connector.",
        "operationId": "GetVoiceConnectorTerminationHealth"
      }
    }
  },
  "definitions": {
    "AccessDeniedException": {},
    "Account": {
      "description": "The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Chime account ID."
            }
          ]
        },
        "AccountType": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountType"
            },
            {
              "description": "The Amazon Chime account type. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>."
            }
          ]
        },
        "AwsAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The AWS account ID."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The Amazon Chime account creation timestamp, in ISO 8601 format."
            }
          ]
        },
        "DefaultLicense": {
          "allOf": [
            {
              "$ref": "#/definitions/License"
            },
            {
              "description": "The default license for the Amazon Chime account."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Chime account name."
            }
          ]
        },
        "SigninDelegateGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/SigninDelegateGroupList"
            },
            {
              "description": "The sign-in delegate groups associated with the account."
            }
          ]
        },
        "SupportedLicenses": {
          "allOf": [
            {
              "$ref": "#/definitions/LicenseList"
            },
            {
              "description": "Supported licenses for the Amazon Chime account."
            }
          ]
        }
      },
      "required": [
        "AwsAccountId",
        "AccountId",
        "Name"
      ],
      "type": "object"
    },
    "AccountList": {
      "items": {
        "$ref": "#/definitions/Account"
      },
      "type": "array"
    },
    "AccountName": {
      "maxLength": 100,
      "minLength": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "AccountSettings": {
      "description": "Settings related to the Amazon Chime account. This includes settings that start or stop remote control of shared screens, or start or stop the dial-out option in the Amazon Chime web application. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.",
      "properties": {
        "DisableRemoteControl": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Setting that stops or starts remote control of shared screens during meetings."
            }
          ]
        },
        "EnableDialOut": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Setting that allows meeting participants to choose the <b>Call me at a phone number</b> option. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html\">Join a Meeting without the Amazon Chime App</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "AccountType": {
      "enum": [
        "Team",
        "EnterpriseDirectory",
        "EnterpriseLWA",
        "EnterpriseOIDC"
      ],
      "type": "string"
    },
    "AlexaForBusinessMetadata": {
      "description": "The Alexa for Business metadata associated with an Amazon Chime user, used to integrate Alexa for Business with a device.",
      "properties": {
        "AlexaForBusinessRoomArn": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The ARN of the room resource."
            }
          ]
        },
        "IsAlexaForBusinessEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Starts or stops Alexa for Business."
            }
          ]
        }
      },
      "type": "object"
    },
    "Alpha2CountryCode": {
      "pattern": "[A-Z]{2}",
      "type": "string"
    },
    "AppInstance": {
      "description": "An instance of a Chime messaging application.",
      "properties": {
        "AppInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the messaging instance. "
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which an app instance was created. In epoch milliseconds."
            }
          ]
        },
        "LastUpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time an app instance was last updated. In epoch milliseconds."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of an app instance."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyResourceName"
            },
            {
              "description": "The name of an app instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "AppInstanceAdmin": {
      "description": "Promotes a user to the administrator role for the duration of an app instance.",
      "properties": {
        "Admin": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The name and metadata of the app instance administrator."
            }
          ]
        },
        "AppInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the app instance administrator."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which an administrator was created."
            }
          ]
        }
      },
      "type": "object"
    },
    "AppInstanceAdminList": {
      "items": {
        "$ref": "#/definitions/AppInstanceAdminSummary"
      },
      "type": "array"
    },
    "AppInstanceAdminSummary": {
      "description": "The identity and metadata of an administrator.",
      "properties": {
        "Admin": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The name and metadata of the app instance administrator."
            }
          ]
        }
      },
      "type": "object"
    },
    "AppInstanceDataType": {
      "enum": [
        "Channel",
        "ChannelMessage"
      ],
      "type": "string"
    },
    "AppInstanceList": {
      "items": {
        "$ref": "#/definitions/AppInstanceSummary"
      },
      "type": "array"
    },
    "AppInstanceRetentionSettings": {
      "description": "The length of time in days to retain messages.",
      "properties": {
        "ChannelRetentionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelRetentionSettings"
            },
            {
              "description": "The length of time in days to retain a channel."
            }
          ]
        }
      },
      "type": "object"
    },
    "AppInstanceStreamingConfiguration": {
      "description": "The streaming configuration of an app instance.",
      "properties": {
        "AppInstanceDataType": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceDataType"
            },
            {
              "description": "The data type of the app instance."
            }
          ]
        },
        "ResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The resource ARN."
            }
          ]
        }
      },
      "required": [
        "AppInstanceDataType",
        "ResourceArn"
      ],
      "type": "object"
    },
    "AppInstanceStreamingConfigurationList": {
      "items": {
        "$ref": "#/definitions/AppInstanceStreamingConfiguration"
      },
      "maxItems": 2,
      "minItems": 1,
      "type": "array"
    },
    "AppInstanceSummary": {
      "description": "The summary data for an app instance.",
      "properties": {
        "AppInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The app instance ARN."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of the app instance summary."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyResourceName"
            },
            {
              "description": "The name of the app instance summary."
            }
          ]
        }
      },
      "type": "object"
    },
    "AppInstanceUser": {
      "description": "The app instance user.",
      "properties": {
        "AppInstanceUserArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the app instance user."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which the app instance user was created."
            }
          ]
        },
        "LastUpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which the app instance user was last updated."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of the app instance user."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/UserName"
            },
            {
              "description": "The name of the app instance user."
            }
          ]
        }
      },
      "type": "object"
    },
    "AppInstanceUserList": {
      "items": {
        "$ref": "#/definitions/AppInstanceUserSummary"
      },
      "type": "array"
    },
    "AppInstanceUserMembershipSummary": {
      "description": "Lists the channels to which app instance users belong.",
      "properties": {
        "ReadMarkerTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which a summary was last read."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMembershipType"
            },
            {
              "description": "The type of channel summary, "
            }
          ]
        }
      },
      "type": "object"
    },
    "AppInstanceUserSummary": {
      "description": "The app instance user summary data .",
      "properties": {
        "AppInstanceUserArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the app instance user."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata in an app instance user summary."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/UserName"
            },
            {
              "description": "The name in an app instance user summary."
            }
          ]
        }
      },
      "type": "object"
    },
    "AreaCode": {
      "pattern": "^$|^[0-9]{3,3}$",
      "type": "string"
    },
    "Arn": {
      "format": "password",
      "maxLength": 1024,
      "minLength": 1,
      "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
      "type": "string"
    },
    "AssociatePhoneNumberWithUserRequest": {
      "properties": {
        "E164PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The phone number, in E.164 format."
            }
          ]
        }
      },
      "required": [
        "E164PhoneNumber"
      ],
      "title": "AssociatePhoneNumberWithUserRequest",
      "type": "object"
    },
    "AssociatePhoneNumberWithUserResponse": {
      "properties": {},
      "type": "object"
    },
    "AssociatePhoneNumbersWithVoiceConnectorGroupRequest": {
      "properties": {
        "E164PhoneNumbers": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumberList"
            },
            {
              "description": "List of phone numbers, in E.164 format."
            }
          ]
        },
        "ForceAssociate": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations."
            }
          ]
        }
      },
      "required": [
        "E164PhoneNumbers"
      ],
      "title": "AssociatePhoneNumbersWithVoiceConnectorGroupRequest",
      "type": "object"
    },
    "AssociatePhoneNumbersWithVoiceConnectorGroupResponse": {
      "properties": {
        "PhoneNumberErrors": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberErrorList"
            },
            {
              "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "AssociatePhoneNumbersWithVoiceConnectorRequest": {
      "properties": {
        "E164PhoneNumbers": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumberList"
            },
            {
              "description": "List of phone numbers, in E.164 format."
            }
          ]
        },
        "ForceAssociate": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations."
            }
          ]
        }
      },
      "required": [
        "E164PhoneNumbers"
      ],
      "title": "AssociatePhoneNumbersWithVoiceConnectorRequest",
      "type": "object"
    },
    "AssociatePhoneNumbersWithVoiceConnectorResponse": {
      "properties": {
        "PhoneNumberErrors": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberErrorList"
            },
            {
              "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "AssociateSigninDelegateGroupsWithAccountRequest": {
      "properties": {
        "SigninDelegateGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/SigninDelegateGroupList"
            },
            {
              "description": "The sign-in delegate groups."
            }
          ]
        }
      },
      "required": [
        "SigninDelegateGroups"
      ],
      "title": "AssociateSigninDelegateGroupsWithAccountRequest",
      "type": "object"
    },
    "AssociateSigninDelegateGroupsWithAccountResponse": {
      "properties": {},
      "type": "object"
    },
    "Attendee": {
      "description": "<p>An Amazon Chime SDK meeting attendee. Includes a unique <code>AttendeeId</code> and <code>JoinToken</code>. The <code>JoinToken</code> allows a client to authenticate and join as the specified attendee. The <code>JoinToken</code> expires when the meeting ends or when <a>DeleteAttendee</a> is called. After that, the attendee is unable to join the meeting.</p> <p>We recommend securely transferring each <code>JoinToken</code> from your server application to the client so that no other client has access to the token except for the one authorized to represent the attendee.</p>",
      "properties": {
        "AttendeeId": {
          "allOf": [
            {
              "$ref": "#/definitions/GuidString"
            },
            {
              "description": "The Amazon Chime SDK attendee ID."
            }
          ]
        },
        "ExternalUserId": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalUserIdType"
            },
            {
              "description": "The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application. If you create an attendee with the same external user id, the service returns the existing record."
            }
          ]
        },
        "JoinToken": {
          "allOf": [
            {
              "$ref": "#/definitions/JoinTokenString"
            },
            {
              "description": "The join token used by the Amazon Chime SDK attendee."
            }
          ]
        }
      },
      "type": "object"
    },
    "AttendeeList": {
      "items": {
        "$ref": "#/definitions/Attendee"
      },
      "type": "array"
    },
    "AttendeeTagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 10,
      "minItems": 1,
      "type": "array"
    },
    "AttendeeTagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 10,
      "minItems": 1,
      "type": "array"
    },
    "BadRequestException": {},
    "BatchCreateAttendeeErrorList": {
      "items": {
        "$ref": "#/definitions/CreateAttendeeError"
      },
      "type": "array"
    },
    "BatchCreateAttendeeRequest": {
      "properties": {
        "Attendees": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateAttendeeRequestItemList"
            },
            {
              "description": "The request containing the attendees to create."
            }
          ]
        }
      },
      "required": [
        "Attendees"
      ],
      "title": "BatchCreateAttendeeRequest",
      "type": "object"
    },
    "BatchCreateAttendeeResponse": {
      "properties": {
        "Attendees": {
          "allOf": [
            {
              "$ref": "#/definitions/AttendeeList"
            },
            {
              "description": "The attendee information, including attendees IDs and join tokens."
            }
          ]
        },
        "Errors": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchCreateAttendeeErrorList"
            },
            {
              "description": "If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchCreateRoomMembershipRequest": {
      "properties": {
        "MembershipItemList": {
          "allOf": [
            {
              "$ref": "#/definitions/MembershipItemList"
            },
            {
              "description": "The list of membership items."
            }
          ]
        }
      },
      "required": [
        "MembershipItemList"
      ],
      "title": "BatchCreateRoomMembershipRequest",
      "type": "object"
    },
    "BatchCreateRoomMembershipResponse": {
      "properties": {
        "Errors": {
          "allOf": [
            {
              "$ref": "#/definitions/MemberErrorList"
            },
            {
              "description": "If the action fails for one or more of the member IDs in the request, a list of the member IDs is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchDeletePhoneNumberRequest": {
      "properties": {
        "PhoneNumberIds": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "List of phone number IDs."
            }
          ]
        }
      },
      "required": [
        "PhoneNumberIds"
      ],
      "title": "BatchDeletePhoneNumberRequest",
      "type": "object"
    },
    "BatchDeletePhoneNumberResponse": {
      "properties": {
        "PhoneNumberErrors": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberErrorList"
            },
            {
              "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchSuspendUserRequest": {
      "properties": {
        "UserIdList": {
          "allOf": [
            {
              "$ref": "#/definitions/UserIdList"
            },
            {
              "description": "The request containing the user IDs to suspend."
            }
          ]
        }
      },
      "required": [
        "UserIdList"
      ],
      "title": "BatchSuspendUserRequest",
      "type": "object"
    },
    "BatchSuspendUserResponse": {
      "properties": {
        "UserErrors": {
          "allOf": [
            {
              "$ref": "#/definitions/UserErrorList"
            },
            {
              "description": "If the <a>BatchSuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchUnsuspendUserRequest": {
      "properties": {
        "UserIdList": {
          "allOf": [
            {
              "$ref": "#/definitions/UserIdList"
            },
            {
              "description": "The request containing the user IDs to unsuspend."
            }
          ]
        }
      },
      "required": [
        "UserIdList"
      ],
      "title": "BatchUnsuspendUserRequest",
      "type": "object"
    },
    "BatchUnsuspendUserResponse": {
      "properties": {
        "UserErrors": {
          "allOf": [
            {
              "$ref": "#/definitions/UserErrorList"
            },
            {
              "description": "If the <a>BatchUnsuspendUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchUpdatePhoneNumberRequest": {
      "properties": {
        "UpdatePhoneNumberRequestItems": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdatePhoneNumberRequestItemList"
            },
            {
              "description": "The request containing the phone number IDs and product types or calling names to update."
            }
          ]
        }
      },
      "required": [
        "UpdatePhoneNumberRequestItems"
      ],
      "title": "BatchUpdatePhoneNumberRequest",
      "type": "object"
    },
    "BatchUpdatePhoneNumberResponse": {
      "properties": {
        "PhoneNumberErrors": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberErrorList"
            },
            {
              "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchUpdateUserRequest": {
      "properties": {
        "UpdateUserRequestItems": {
          "allOf": [
            {
              "$ref": "#/definitions/UpdateUserRequestItemList"
            },
            {
              "description": "The request containing the user IDs and details to update."
            }
          ]
        }
      },
      "required": [
        "UpdateUserRequestItems"
      ],
      "title": "BatchUpdateUserRequest",
      "type": "object"
    },
    "BatchUpdateUserResponse": {
      "properties": {
        "UserErrors": {
          "allOf": [
            {
              "$ref": "#/definitions/UserErrorList"
            },
            {
              "description": "If the <a>BatchUpdateUser</a> action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "Boolean": {
      "type": "boolean"
    },
    "Bot": {
      "description": "A resource that allows Enterprise account administrators to configure an interface to receive events from Amazon Chime.",
      "properties": {
        "BotEmail": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The bot email address."
            }
          ]
        },
        "BotId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The bot ID."
            }
          ]
        },
        "BotType": {
          "allOf": [
            {
              "$ref": "#/definitions/BotType"
            },
            {
              "description": "The bot type."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The bot creation timestamp, in ISO 8601 format."
            }
          ]
        },
        "Disabled": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "When true, the bot is stopped from running in your account."
            }
          ]
        },
        "DisplayName": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The bot display name."
            }
          ]
        },
        "SecurityToken": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The security token used to authenticate Amazon Chime with the outgoing event endpoint."
            }
          ]
        },
        "UpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The updated bot timestamp, in ISO 8601 format."
            }
          ]
        },
        "UserId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The unique ID for the bot user."
            }
          ]
        }
      },
      "type": "object"
    },
    "BotList": {
      "items": {
        "$ref": "#/definitions/Bot"
      },
      "type": "array"
    },
    "BotType": {
      "enum": [
        "ChatBot"
      ],
      "type": "string"
    },
    "BusinessCallingSettings": {
      "description": "The Amazon Chime Business Calling settings for the administrator's AWS account. Includes any Amazon S3 buckets designated for storing call detail records.",
      "properties": {
        "CdrBucket": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon S3 bucket designated for call detail record storage."
            }
          ]
        }
      },
      "type": "object"
    },
    "CallingName": {
      "format": "password",
      "pattern": "^$|^[a-zA-Z0-9 ]{2,15}$",
      "type": "string"
    },
    "CallingNameStatus": {
      "enum": [
        "Unassigned",
        "UpdateInProgress",
        "UpdateSucceeded",
        "UpdateFailed"
      ],
      "type": "string"
    },
    "CallingRegion": {
      "type": "string"
    },
    "CallingRegionList": {
      "items": {
        "$ref": "#/definitions/CallingRegion"
      },
      "type": "array"
    },
    "Capability": {
      "enum": [
        "Voice",
        "SMS"
      ],
      "type": "string"
    },
    "CapabilityList": {
      "items": {
        "$ref": "#/definitions/Capability"
      },
      "type": "array"
    },
    "Channel": {
      "description": "Creates a channel.",
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The administrator who created the channel."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which the administrator created the channel."
            }
          ]
        },
        "LastMessageTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which a member sent the last message in a session."
            }
          ]
        },
        "LastUpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which a channel was last updated."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of the channel."
            }
          ]
        },
        "Mode": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMode"
            },
            {
              "description": "The mode of the channel."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyResourceName"
            },
            {
              "description": "The name of the channel."
            }
          ]
        },
        "Privacy": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelPrivacy"
            },
            {
              "description": "The channel's privacy setting, <code>PUBLIC</code> or <code>HIDDEN</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelBan": {
      "description": "Bans a user from a channel.",
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel from which a member is being banned."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The parameter of the action."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which the ban was created."
            }
          ]
        },
        "Member": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The member being banned from the channel."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelBanSummary": {
      "description": "The summary data for the channel ban.",
      "properties": {
        "Member": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The member being banned from a channel."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelBanSummaryList": {
      "items": {
        "$ref": "#/definitions/ChannelBanSummary"
      },
      "type": "array"
    },
    "ChannelMembership": {
      "description": "Creates a channel member.",
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the member's channel."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which the channel membership was created. "
            }
          ]
        },
        "InvitedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The identifier of the member who invited another member. Taken from the message header."
            }
          ]
        },
        "LastUpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which a channel membership was last updated."
            }
          ]
        },
        "Member": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The data of the channel member."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMembershipType"
            },
            {
              "description": "The membership type set for the channel member."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelMembershipForAppInstanceUserSummary": {
      "description": "Returns the channel membership summary data for an app instance.",
      "properties": {
        "AppInstanceUserMembershipSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceUserMembershipSummary"
            },
            {
              "description": "Returns the channel membership data for an app instance."
            }
          ]
        },
        "ChannelSummary": {
          "$ref": "#/definitions/ChannelSummary"
        }
      },
      "type": "object"
    },
    "ChannelMembershipForAppInstanceUserSummaryList": {
      "items": {
        "$ref": "#/definitions/ChannelMembershipForAppInstanceUserSummary"
      },
      "type": "array"
    },
    "ChannelMembershipSummary": {
      "description": "The summary data of a channel membership.",
      "properties": {
        "Member": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "A member's summary data."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelMembershipSummaryList": {
      "items": {
        "$ref": "#/definitions/ChannelMembershipSummary"
      },
      "type": "array"
    },
    "ChannelMembershipType": {
      "enum": [
        "DEFAULT",
        "HIDDEN"
      ],
      "type": "string"
    },
    "ChannelMessage": {
      "description": "Creates a message in a channel.",
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        },
        "Content": {
          "allOf": [
            {
              "$ref": "#/definitions/Content"
            },
            {
              "description": "The message content."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which the message was created."
            }
          ]
        },
        "LastEditedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which a message was edited."
            }
          ]
        },
        "LastUpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which a message was updated."
            }
          ]
        },
        "MessageId": {
          "allOf": [
            {
              "$ref": "#/definitions/MessageId"
            },
            {
              "description": "The ID of a message."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The message metadata."
            }
          ]
        },
        "Persistence": {
          "$ref": "#/definitions/ChannelMessagePersistenceType"
        },
        "Redacted": {
          "allOf": [
            {
              "$ref": "#/definitions/NonNullableBoolean"
            },
            {
              "description": "Hides the content of a message. The message still exists on the back end, but this action only returns metadata."
            }
          ]
        },
        "Sender": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The message sender."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMessageType"
            },
            {
              "description": "The message type."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelMessagePersistenceType": {
      "enum": [
        "PERSISTENT",
        "NON_PERSISTENT"
      ],
      "type": "string"
    },
    "ChannelMessageSummary": {
      "description": "A summary of the messages in a channel.",
      "properties": {
        "Content": {
          "allOf": [
            {
              "$ref": "#/definitions/Content"
            },
            {
              "description": "The content of the message summary."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which the message summary was created."
            }
          ]
        },
        "LastEditedTimestamp": {
          "$ref": "#/definitions/Timestamp"
        },
        "LastUpdatedTimestamp": {
          "$ref": "#/definitions/Timestamp"
        },
        "MessageId": {
          "allOf": [
            {
              "$ref": "#/definitions/MessageId"
            },
            {
              "description": "The ID of the message summary."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of the message summary."
            }
          ]
        },
        "Redacted": {
          "allOf": [
            {
              "$ref": "#/definitions/NonNullableBoolean"
            },
            {
              "description": "Redacts the content of a message summary."
            }
          ]
        },
        "Sender": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The sender of the message summary."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMessageType"
            },
            {
              "description": "The type of message summary."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelMessageSummaryList": {
      "items": {
        "$ref": "#/definitions/ChannelMessageSummary"
      },
      "type": "array"
    },
    "ChannelMessageType": {
      "enum": [
        "STANDARD",
        "CONTROL"
      ],
      "type": "string"
    },
    "ChannelMode": {
      "enum": [
        "UNRESTRICTED",
        "RESTRICTED"
      ],
      "type": "string"
    },
    "ChannelModeratedByAppInstanceUserSummary": {
      "description": "Returns the summary data for a moderated channel.",
      "properties": {
        "ChannelSummary": {
          "$ref": "#/definitions/ChannelSummary"
        }
      },
      "type": "object"
    },
    "ChannelModeratedByAppInstanceUserSummaryList": {
      "items": {
        "$ref": "#/definitions/ChannelModeratedByAppInstanceUserSummary"
      },
      "type": "array"
    },
    "ChannelModerator": {
      "description": "Creates a moderator on a channel.",
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the moderator's channel."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The member who created the moderator."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which the moderator was created."
            }
          ]
        },
        "Moderator": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The moderator's data."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelModeratorSummary": {
      "description": "Summary data of the moderators in a channel.",
      "properties": {
        "Moderator": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The data for a moderator."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelModeratorSummaryList": {
      "items": {
        "$ref": "#/definitions/ChannelModeratorSummary"
      },
      "type": "array"
    },
    "ChannelPrivacy": {
      "enum": [
        "PUBLIC",
        "PRIVATE"
      ],
      "type": "string"
    },
    "ChannelRetentionSettings": {
      "description": "The retention settings for a channel.",
      "properties": {
        "RetentionDays": {
          "allOf": [
            {
              "$ref": "#/definitions/RetentionDays"
            },
            {
              "description": "The time in days to retain a channel."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelSummary": {
      "description": "The summary data for a channel.",
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel summary."
            }
          ]
        },
        "LastMessageTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which the last message in a channel was sent."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of the channel summary."
            }
          ]
        },
        "Mode": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMode"
            },
            {
              "description": "The summary mode of the channel."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyResourceName"
            },
            {
              "description": "The parameter of the action."
            }
          ]
        },
        "Privacy": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelPrivacy"
            },
            {
              "description": "The privacy setting of the channel being summarized, <code>PUBLIC</code> or <code>HIDDEN</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "ChannelSummaryList": {
      "items": {
        "$ref": "#/definitions/ChannelSummary"
      },
      "type": "array"
    },
    "ChimeArn": {
      "maxLength": 1600,
      "minLength": 5,
      "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "type": "string"
    },
    "ClientRequestToken": {
      "format": "password",
      "maxLength": 64,
      "minLength": 2,
      "pattern": "[-_a-zA-Z0-9]*",
      "type": "string"
    },
    "ConflictException": {},
    "Content": {
      "format": "password",
      "maxLength": 4096,
      "minLength": 0,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "ConversationRetentionSettings": {
      "description": "The retention settings that determine how long to retain chat conversation messages for an Amazon Chime Enterprise account.",
      "properties": {
        "RetentionDays": {
          "allOf": [
            {
              "$ref": "#/definitions/RetentionDays"
            },
            {
              "description": "The number of days for which to retain chat conversation messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "Country": {
      "pattern": "^$|^[A-Z]{2,2}$",
      "type": "string"
    },
    "CountryList": {
      "items": {
        "$ref": "#/definitions/Country"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array"
    },
    "CpsLimit": {
      "minimum": 1,
      "type": "integer"
    },
    "CreateAccountRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountName"
            },
            {
              "description": "The name of the Amazon Chime account."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "CreateAccountRequest",
      "type": "object"
    },
    "CreateAccountResponse": {
      "properties": {
        "Account": {
          "$ref": "#/definitions/Account"
        }
      },
      "type": "object"
    },
    "CreateAppInstanceAdminRequest": {
      "properties": {
        "AppInstanceAdminArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the administrator of the current app instance."
            }
          ]
        }
      },
      "required": [
        "AppInstanceAdminArn"
      ],
      "title": "CreateAppInstanceAdminRequest",
      "type": "object"
    },
    "CreateAppInstanceAdminResponse": {
      "properties": {
        "AppInstanceAdmin": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The name and ARN of the admin for the app instance."
            }
          ]
        },
        "AppInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the of the admin for the app instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateAppInstanceRequest": {
      "properties": {
        "ClientRequestToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientRequestToken"
            },
            {
              "description": "The <code>ClientRequestToken</code> of the app instance."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of the app instance. Limited to a 1KB string in UTF-8."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyResourceName"
            },
            {
              "description": "The name of the app instance."
            }
          ]
        }
      },
      "required": [
        "Name",
        "ClientRequestToken"
      ],
      "title": "CreateAppInstanceRequest",
      "type": "object"
    },
    "CreateAppInstanceResponse": {
      "properties": {
        "AppInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The Amazon Resource Number (ARN) of the app instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateAppInstanceUserRequest": {
      "properties": {
        "AppInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the app instance request."
            }
          ]
        },
        "AppInstanceUserId": {
          "allOf": [
            {
              "$ref": "#/definitions/UserId"
            },
            {
              "description": "The user ID of the app instance."
            }
          ]
        },
        "ClientRequestToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientRequestToken"
            },
            {
              "description": "The token assigned to the user requesting an app instance."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The request's metadata. Limited to a 1KB string in UTF-8."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/UserName"
            },
            {
              "description": "The user's name."
            }
          ]
        }
      },
      "required": [
        "AppInstanceArn",
        "AppInstanceUserId",
        "Name",
        "ClientRequestToken"
      ],
      "title": "CreateAppInstanceUserRequest",
      "type": "object"
    },
    "CreateAppInstanceUserResponse": {
      "properties": {
        "AppInstanceUserArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The user's ARN."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateAttendeeError": {
      "description": "The list of errors returned when errors are encountered during the BatchCreateAttendee and CreateAttendee actions. This includes external user IDs, error codes, and error messages.",
      "properties": {
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The error code."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The error message."
            }
          ]
        },
        "ExternalUserId": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalUserIdType"
            },
            {
              "description": "The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application. If you create an attendee with the same external user id, the service returns the existing record."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateAttendeeRequest": {
      "properties": {
        "ExternalUserId": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalUserIdType"
            },
            {
              "description": "The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application. If you create an attendee with the same external user id, the service returns the existing record."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/AttendeeTagList"
            },
            {
              "description": "The tag key-value pairs."
            }
          ]
        }
      },
      "required": [
        "ExternalUserId"
      ],
      "title": "CreateAttendeeRequest",
      "type": "object"
    },
    "CreateAttendeeRequestItem": {
      "description": "The Amazon Chime SDK attendee fields to create, used with the BatchCreateAttendee action.",
      "properties": {
        "ExternalUserId": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalUserIdType"
            },
            {
              "description": "<p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application. If you create an attendee with the same external user id, the service returns the existing record.</p> <p>The Amazon Chime SDK external user ID. Links the attendee to an identity managed by a builder application.</p>"
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/AttendeeTagList"
            },
            {
              "description": "The tag key-value pairs."
            }
          ]
        }
      },
      "required": [
        "ExternalUserId"
      ],
      "type": "object"
    },
    "CreateAttendeeRequestItemList": {
      "items": {
        "$ref": "#/definitions/CreateAttendeeRequestItem"
      },
      "type": "array"
    },
    "CreateAttendeeResponse": {
      "properties": {
        "Attendee": {
          "allOf": [
            {
              "$ref": "#/definitions/Attendee"
            },
            {
              "description": "The attendee information, including attendee ID and join token."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateBotRequest": {
      "properties": {
        "DisplayName": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The bot display name."
            }
          ]
        },
        "Domain": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The domain of the Amazon Chime Enterprise account."
            }
          ]
        }
      },
      "required": [
        "DisplayName"
      ],
      "title": "CreateBotRequest",
      "type": "object"
    },
    "CreateBotResponse": {
      "properties": {
        "Bot": {
          "allOf": [
            {
              "$ref": "#/definitions/Bot"
            },
            {
              "description": "The bot details."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateChannelBanRequest": {
      "properties": {
        "MemberArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the member being banned."
            }
          ]
        }
      },
      "required": [
        "MemberArn"
      ],
      "title": "CreateChannelBanRequest",
      "type": "object"
    },
    "CreateChannelBanResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the response to the ban request."
            }
          ]
        },
        "Member": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The <code>ChannelArn</code> and <code>BannedIdentity</code> of the member in the ban response."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateChannelMembershipRequest": {
      "properties": {
        "MemberArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the member you want to add to the channel."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMembershipType"
            },
            {
              "description": "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators."
            }
          ]
        }
      },
      "required": [
        "MemberArn",
        "Type"
      ],
      "title": "CreateChannelMembershipRequest",
      "type": "object"
    },
    "CreateChannelMembershipResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        },
        "Member": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The ARN and metadata of the member being added."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateChannelModeratorRequest": {
      "properties": {
        "ChannelModeratorArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the moderator."
            }
          ]
        }
      },
      "required": [
        "ChannelModeratorArn"
      ],
      "title": "CreateChannelModeratorRequest",
      "type": "object"
    },
    "CreateChannelModeratorResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        },
        "ChannelModerator": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "description": "The ARNs of the channel and the moderator."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateChannelRequest": {
      "properties": {
        "AppInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel request."
            }
          ]
        },
        "ClientRequestToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientRequestToken"
            },
            {
              "description": "The client token for the request. An <code>Idempotency</code> token."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of the creation request. Limited to 1KB and UTF-8."
            }
          ]
        },
        "Mode": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMode"
            },
            {
              "description": "The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyResourceName"
            },
            {
              "description": "The name of the channel."
            }
          ]
        },
        "Privacy": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelPrivacy"
            },
            {
              "description": "The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren't discoverable by users outside the channel. Public channels are discoverable by anyone in the app instance."
            }
          ]
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        }
      },
      "required": [
        "AppInstanceArn",
        "Name",
        "ClientRequestToken"
      ],
      "title": "CreateChannelRequest",
      "type": "object"
    },
    "CreateChannelResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateMeetingDialOutRequest": {
      "properties": {
        "FromPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "Phone number used as the caller ID when the remote party receives a call."
            }
          ]
        },
        "JoinToken": {
          "allOf": [
            {
              "$ref": "#/definitions/JoinTokenString"
            },
            {
              "description": "Token used by the Amazon Chime SDK attendee. Call the <a href=\"https://docs.aws.amazon.com/https:/docs.aws.amazon.com/chime/latest/APIReference/API_Attendee.html\"> CreateAttendee API</a> to get a join token. "
            }
          ]
        },
        "ToPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "Phone number called when inviting someone to a meeting."
            }
          ]
        }
      },
      "required": [
        "FromPhoneNumber",
        "ToPhoneNumber",
        "JoinToken"
      ],
      "title": "CreateMeetingDialOutRequest",
      "type": "object"
    },
    "CreateMeetingDialOutResponse": {
      "properties": {
        "TransactionId": {
          "allOf": [
            {
              "$ref": "#/definitions/GuidString"
            },
            {
              "description": "Unique ID that tracks API calls."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateMeetingRequest": {
      "properties": {
        "ClientRequestToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientRequestToken"
            },
            {
              "description": "The unique identifier for the client request. Use a different token for different meetings."
            }
          ]
        },
        "ExternalMeetingId": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalMeetingIdType"
            },
            {
              "description": "The external meeting ID."
            }
          ]
        },
        "MediaRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The Region in which to create the meeting. Default: <code>us-east-1</code>.</p> <p>Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>.</p>"
            }
          ]
        },
        "MeetingHostId": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalUserIdType"
            },
            {
              "description": "Reserved."
            }
          ]
        },
        "NotificationsConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/MeetingNotificationConfiguration"
            },
            {
              "description": "The configuration for resource targets to receive notifications when meeting and attendee events occur."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/MeetingTagList"
            },
            {
              "description": "The tag key-value pairs."
            }
          ]
        }
      },
      "required": [
        "ClientRequestToken"
      ],
      "title": "CreateMeetingRequest",
      "type": "object"
    },
    "CreateMeetingResponse": {
      "properties": {
        "Meeting": {
          "allOf": [
            {
              "$ref": "#/definitions/Meeting"
            },
            {
              "description": "The meeting information, including the meeting ID and <code>MediaPlacement</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateMeetingWithAttendeesRequest": {
      "properties": {
        "Attendees": {
          "allOf": [
            {
              "$ref": "#/definitions/CreateMeetingWithAttendeesRequestItemList"
            },
            {
              "description": "The request containing the attendees to create."
            }
          ]
        },
        "ClientRequestToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientRequestToken"
            },
            {
              "description": "The unique identifier for the client request. Use a different token for different meetings."
            }
          ]
        },
        "ExternalMeetingId": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalMeetingIdType"
            },
            {
              "description": "The external meeting ID."
            }
          ]
        },
        "MediaRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>The Region in which to create the meeting. Default: <code>us-east-1</code>.</p> <p>Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>.</p>"
            }
          ]
        },
        "MeetingHostId": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalUserIdType"
            },
            {
              "description": "Reserved."
            }
          ]
        },
        "NotificationsConfiguration": {
          "$ref": "#/definitions/MeetingNotificationConfiguration"
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/MeetingTagList"
            },
            {
              "description": "The tag key-value pairs."
            }
          ]
        }
      },
      "required": [
        "ClientRequestToken"
      ],
      "title": "CreateMeetingWithAttendeesRequest",
      "type": "object"
    },
    "CreateMeetingWithAttendeesRequestItemList": {
      "items": {
        "$ref": "#/definitions/CreateAttendeeRequestItem"
      },
      "maxItems": 10,
      "minItems": 1,
      "type": "array"
    },
    "CreateMeetingWithAttendeesResponse": {
      "properties": {
        "Attendees": {
          "allOf": [
            {
              "$ref": "#/definitions/AttendeeList"
            },
            {
              "description": "The attendee information, including attendees IDs and join tokens."
            }
          ]
        },
        "Errors": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchCreateAttendeeErrorList"
            },
            {
              "description": "If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages."
            }
          ]
        },
        "Meeting": {
          "$ref": "#/definitions/Meeting"
        }
      },
      "type": "object"
    },
    "CreatePhoneNumberOrderRequest": {
      "properties": {
        "E164PhoneNumbers": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumberList"
            },
            {
              "description": "List of phone numbers, in E.164 format."
            }
          ]
        },
        "ProductType": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberProductType"
            },
            {
              "description": "The phone number product type."
            }
          ]
        }
      },
      "required": [
        "ProductType",
        "E164PhoneNumbers"
      ],
      "title": "CreatePhoneNumberOrderRequest",
      "type": "object"
    },
    "CreatePhoneNumberOrderResponse": {
      "properties": {
        "PhoneNumberOrder": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberOrder"
            },
            {
              "description": "The phone number order details."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateProxySessionRequest": {
      "properties": {
        "Capabilities": {
          "allOf": [
            {
              "$ref": "#/definitions/CapabilityList"
            },
            {
              "description": "The proxy session capabilities."
            }
          ]
        },
        "ExpiryMinutes": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveInteger"
            },
            {
              "description": "The number of minutes allowed for the proxy session."
            }
          ]
        },
        "GeoMatchLevel": {
          "allOf": [
            {
              "$ref": "#/definitions/GeoMatchLevel"
            },
            {
              "description": "The preference for matching the country or area code of the proxy phone number with that of the first participant."
            }
          ]
        },
        "GeoMatchParams": {
          "allOf": [
            {
              "$ref": "#/definitions/GeoMatchParams"
            },
            {
              "description": "The country and area code for the proxy phone number."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ProxySessionNameString"
            },
            {
              "description": "The name of the proxy session."
            }
          ]
        },
        "NumberSelectionBehavior": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberSelectionBehavior"
            },
            {
              "description": "The preference for proxy phone number reuse, or stickiness, between the same participants across sessions."
            }
          ]
        },
        "ParticipantPhoneNumbers": {
          "allOf": [
            {
              "$ref": "#/definitions/ParticipantPhoneNumberList"
            },
            {
              "description": "The participant phone numbers."
            }
          ]
        }
      },
      "required": [
        "ParticipantPhoneNumbers",
        "Capabilities"
      ],
      "title": "CreateProxySessionRequest",
      "type": "object"
    },
    "CreateProxySessionResponse": {
      "properties": {
        "ProxySession": {
          "allOf": [
            {
              "$ref": "#/definitions/ProxySession"
            },
            {
              "description": "The proxy session details."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateRoomMembershipRequest": {
      "properties": {
        "MemberId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Chime member ID (user ID or bot ID)."
            }
          ]
        },
        "Role": {
          "allOf": [
            {
              "$ref": "#/definitions/RoomMembershipRole"
            },
            {
              "description": "The role of the member."
            }
          ]
        }
      },
      "required": [
        "MemberId"
      ],
      "title": "CreateRoomMembershipRequest",
      "type": "object"
    },
    "CreateRoomMembershipResponse": {
      "properties": {
        "RoomMembership": {
          "allOf": [
            {
              "$ref": "#/definitions/RoomMembership"
            },
            {
              "description": "The room membership details."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateRoomRequest": {
      "properties": {
        "ClientRequestToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientRequestToken"
            },
            {
              "description": "The idempotency token for the request."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The room name."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "CreateRoomRequest",
      "type": "object"
    },
    "CreateRoomResponse": {
      "properties": {
        "Room": {
          "allOf": [
            {
              "$ref": "#/definitions/Room"
            },
            {
              "description": "The room details."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateSipMediaApplicationCallRequest": {
      "properties": {
        "FromPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The phone number that a user calls from."
            }
          ]
        },
        "ToPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The phone number that the user dials in order to connect to a meeting"
            }
          ]
        }
      },
      "title": "CreateSipMediaApplicationCallRequest",
      "type": "object"
    },
    "CreateSipMediaApplicationCallResponse": {
      "properties": {
        "SipMediaApplicationCall": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationCall"
            },
            {
              "description": "The actual call."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateSipMediaApplicationRequest": {
      "properties": {
        "AwsRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "AWS Region assigned to the SIP media application."
            }
          ]
        },
        "Endpoints": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationEndpointList"
            },
            {
              "description": "List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationName"
            },
            {
              "description": "The SIP media application name."
            }
          ]
        }
      },
      "required": [
        "AwsRegion",
        "Endpoints"
      ],
      "title": "CreateSipMediaApplicationRequest",
      "type": "object"
    },
    "CreateSipMediaApplicationResponse": {
      "properties": {
        "SipMediaApplication": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplication"
            },
            {
              "description": "The Sip media application details."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateSipRuleRequest": {
      "properties": {
        "Disabled": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "Enables or disables a rule. You must disable rules before you can delete them."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRuleName"
            },
            {
              "description": "The name of the SIP rule."
            }
          ]
        },
        "TargetApplications": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRuleTargetApplicationList"
            },
            {
              "description": "List of SIP media applications with priority and AWS Region. Only one SIP application per AWS Region can be used."
            }
          ]
        },
        "TriggerType": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRuleTriggerType"
            },
            {
              "description": "The type of trigger whose value is assigned to the SIP rule in <code>TriggerValue</code>. Allowed trigger values are <code>RequestUriHostname</code> and <code>ToPhoneNumber</code>."
            }
          ]
        },
        "TriggerValue": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "If <code>TriggerType</code> is <code>RequestUriHostname</code> then the value can be the outbound host name of an Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code> then the value can be a customer-owned phone number in E164 format. <code>SipRule</code> is triggered if the SIP application requests a host name, or a If <code>TriggerType</code> is <code>RequestUriHostname</code>, then the value can be the outbound hostname of an Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, then the value can be a customer-owned phone number in E164 format. <code>SipRule</code> is triggered if the SIP application requests a host name, or a <code>ToPhoneNumber</code> value matches the incoming SIP request."
            }
          ]
        }
      },
      "required": [
        "Name",
        "TriggerType",
        "TriggerValue",
        "TargetApplications"
      ],
      "title": "CreateSipRuleRequest",
      "type": "object"
    },
    "CreateSipRuleResponse": {
      "properties": {
        "SipRule": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRule"
            },
            {
              "description": "Returns the SIP rule information, including the rule ID, triggers, and target applications."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateUserRequest": {
      "properties": {
        "Email": {
          "allOf": [
            {
              "$ref": "#/definitions/EmailAddress"
            },
            {
              "description": "The user's email address."
            }
          ]
        },
        "UserType": {
          "allOf": [
            {
              "$ref": "#/definitions/UserType"
            },
            {
              "description": "The user type."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The user name."
            }
          ]
        }
      },
      "title": "CreateUserRequest",
      "type": "object"
    },
    "CreateUserResponse": {
      "properties": {
        "User": {
          "$ref": "#/definitions/User"
        }
      },
      "type": "object"
    },
    "CreateVoiceConnectorGroupRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorGroupName"
            },
            {
              "description": "The name of the Amazon Chime Voice Connector group."
            }
          ]
        },
        "VoiceConnectorItems": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorItemList"
            },
            {
              "description": "The Amazon Chime Voice Connectors to route inbound calls to."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "CreateVoiceConnectorGroupRequest",
      "type": "object"
    },
    "CreateVoiceConnectorGroupResponse": {
      "properties": {
        "VoiceConnectorGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorGroup"
            },
            {
              "description": "The Amazon Chime Voice Connector group details."
            }
          ]
        }
      },
      "type": "object"
    },
    "CreateVoiceConnectorRequest": {
      "properties": {
        "AwsRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorAwsRegion"
            },
            {
              "description": "The AWS Region in which the Amazon Chime Voice Connector is created. Default value: <code>us-east-1</code>."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorName"
            },
            {
              "description": "The name of the Amazon Chime Voice Connector."
            }
          ]
        },
        "RequireEncryption": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "When enabled, requires encryption for the Amazon Chime Voice Connector."
            }
          ]
        }
      },
      "required": [
        "Name",
        "RequireEncryption"
      ],
      "title": "CreateVoiceConnectorRequest",
      "type": "object"
    },
    "CreateVoiceConnectorResponse": {
      "properties": {
        "VoiceConnector": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnector"
            },
            {
              "description": "The Amazon Chime Voice Connector details."
            }
          ]
        }
      },
      "type": "object"
    },
    "Credential": {
      "description": "The SIP credentials used to authenticate requests to your Amazon Chime Voice Connector.",
      "properties": {
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The RFC2617 compliant password associated with the SIP credentials, in US-ASCII format."
            }
          ]
        },
        "Username": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The RFC2617 compliant user name associated with the SIP credentials, in US-ASCII format."
            }
          ]
        }
      },
      "type": "object"
    },
    "CredentialList": {
      "items": {
        "$ref": "#/definitions/Credential"
      },
      "type": "array"
    },
    "DNISEmergencyCallingConfiguration": {
      "description": "The Dialed Number Identification Service (DNIS) emergency calling configuration details associated with an Amazon Chime Voice Connector's emergency calling configuration.",
      "properties": {
        "CallingCountry": {
          "allOf": [
            {
              "$ref": "#/definitions/Alpha2CountryCode"
            },
            {
              "description": "The country from which emergency calls are allowed, in ISO 3166-1 alpha-2 format."
            }
          ]
        },
        "EmergencyPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The DNIS phone number to route emergency calls to, in E.164 format."
            }
          ]
        },
        "TestPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The DNIS phone number to route test emergency calls to, in E.164 format."
            }
          ]
        }
      },
      "required": [
        "EmergencyPhoneNumber",
        "CallingCountry"
      ],
      "type": "object"
    },
    "DNISEmergencyCallingConfigurationList": {
      "items": {
        "$ref": "#/definitions/DNISEmergencyCallingConfiguration"
      },
      "type": "array"
    },
    "DataRetentionInHours": {
      "minimum": 0,
      "type": "integer"
    },
    "DeleteAccountRequest": {
      "properties": {},
      "title": "DeleteAccountRequest",
      "type": "object"
    },
    "DeleteAccountResponse": {
      "properties": {},
      "type": "object"
    },
    "DeleteAppInstanceAdminRequest": {
      "properties": {},
      "title": "DeleteAppInstanceAdminRequest",
      "type": "object"
    },
    "DeleteAppInstanceRequest": {
      "properties": {},
      "title": "DeleteAppInstanceRequest",
      "type": "object"
    },
    "DeleteAppInstanceStreamingConfigurationsRequest": {
      "properties": {},
      "title": "DeleteAppInstanceStreamingConfigurationsRequest",
      "type": "object"
    },
    "DeleteAppInstanceUserRequest": {
      "properties": {},
      "title": "DeleteAppInstanceUserRequest",
      "type": "object"
    },
    "DeleteAttendeeRequest": {
      "properties": {},
      "title": "DeleteAttendeeRequest",
      "type": "object"
    },
    "DeleteChannelBanRequest": {
      "properties": {},
      "title": "DeleteChannelBanRequest",
      "type": "object"
    },
    "DeleteChannelMembershipRequest": {
      "properties": {},
      "title": "DeleteChannelMembershipRequest",
      "type": "object"
    },
    "DeleteChannelMessageRequest": {
      "properties": {},
      "title": "DeleteChannelMessageRequest",
      "type": "object"
    },
    "DeleteChannelModeratorRequest": {
      "properties": {},
      "title": "DeleteChannelModeratorRequest",
      "type": "object"
    },
    "DeleteChannelRequest": {
      "properties": {},
      "title": "DeleteChannelRequest",
      "type": "object"
    },
    "DeleteEventsConfigurationRequest": {
      "properties": {},
      "title": "DeleteEventsConfigurationRequest",
      "type": "object"
    },
    "DeleteMeetingRequest": {
      "properties": {},
      "title": "DeleteMeetingRequest",
      "type": "object"
    },
    "DeletePhoneNumberRequest": {
      "properties": {},
      "title": "DeletePhoneNumberRequest",
      "type": "object"
    },
    "DeleteProxySessionRequest": {
      "properties": {},
      "title": "DeleteProxySessionRequest",
      "type": "object"
    },
    "DeleteRoomMembershipRequest": {
      "properties": {},
      "title": "DeleteRoomMembershipRequest",
      "type": "object"
    },
    "DeleteRoomRequest": {
      "properties": {},
      "title": "DeleteRoomRequest",
      "type": "object"
    },
    "DeleteSipMediaApplicationRequest": {
      "properties": {},
      "title": "DeleteSipMediaApplicationRequest",
      "type": "object"
    },
    "DeleteSipRuleRequest": {
      "properties": {},
      "title": "DeleteSipRuleRequest",
      "type": "object"
    },
    "DeleteVoiceConnectorEmergencyCallingConfigurationRequest": {
      "properties": {},
      "title": "DeleteVoiceConnectorEmergencyCallingConfigurationRequest",
      "type": "object"
    },
    "DeleteVoiceConnectorGroupRequest": {
      "properties": {},
      "title": "DeleteVoiceConnectorGroupRequest",
      "type": "object"
    },
    "DeleteVoiceConnectorOriginationRequest": {
      "properties": {},
      "title": "DeleteVoiceConnectorOriginationRequest",
      "type": "object"
    },
    "DeleteVoiceConnectorProxyRequest": {
      "properties": {},
      "title": "DeleteVoiceConnectorProxyRequest",
      "type": "object"
    },
    "DeleteVoiceConnectorRequest": {
      "properties": {},
      "title": "DeleteVoiceConnectorRequest",
      "type": "object"
    },
    "DeleteVoiceConnectorStreamingConfigurationRequest": {
      "properties": {},
      "title": "DeleteVoiceConnectorStreamingConfigurationRequest",
      "type": "object"
    },
    "DeleteVoiceConnectorTerminationCredentialsRequest": {
      "properties": {
        "Usernames": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveStringList"
            },
            {
              "description": "The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format."
            }
          ]
        }
      },
      "required": [
        "Usernames"
      ],
      "title": "DeleteVoiceConnectorTerminationCredentialsRequest",
      "type": "object"
    },
    "DeleteVoiceConnectorTerminationRequest": {
      "properties": {},
      "title": "DeleteVoiceConnectorTerminationRequest",
      "type": "object"
    },
    "DescribeAppInstanceAdminRequest": {
      "properties": {},
      "title": "DescribeAppInstanceAdminRequest",
      "type": "object"
    },
    "DescribeAppInstanceAdminResponse": {
      "properties": {
        "AppInstanceAdmin": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceAdmin"
            },
            {
              "description": "The ARN and name of the app instance user, the ARN of the app instance, and the created and last-updated timestamps. All timestamps use epoch milliseconds."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeAppInstanceRequest": {
      "properties": {},
      "title": "DescribeAppInstanceRequest",
      "type": "object"
    },
    "DescribeAppInstanceResponse": {
      "properties": {
        "AppInstance": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstance"
            },
            {
              "description": "The ARN, metadata, created and last-updated timestamps, and the name of the app instance. All timestamps use epoch milliseconds."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeAppInstanceUserRequest": {
      "properties": {},
      "title": "DescribeAppInstanceUserRequest",
      "type": "object"
    },
    "DescribeAppInstanceUserResponse": {
      "properties": {
        "AppInstanceUser": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceUser"
            },
            {
              "description": "The name of the app instance user."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeChannelBanRequest": {
      "properties": {},
      "title": "DescribeChannelBanRequest",
      "type": "object"
    },
    "DescribeChannelBanResponse": {
      "properties": {
        "ChannelBan": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelBan"
            },
            {
              "description": "The the details of the ban."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeChannelMembershipForAppInstanceUserRequest": {
      "properties": {},
      "title": "DescribeChannelMembershipForAppInstanceUserRequest",
      "type": "object"
    },
    "DescribeChannelMembershipForAppInstanceUserResponse": {
      "properties": {
        "ChannelMembership": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMembershipForAppInstanceUserSummary"
            },
            {
              "description": "The channel to which a user belongs."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeChannelMembershipRequest": {
      "properties": {},
      "title": "DescribeChannelMembershipRequest",
      "type": "object"
    },
    "DescribeChannelMembershipResponse": {
      "properties": {
        "ChannelMembership": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMembership"
            },
            {
              "description": "The details of the membership."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeChannelModeratedByAppInstanceUserRequest": {
      "properties": {},
      "title": "DescribeChannelModeratedByAppInstanceUserRequest",
      "type": "object"
    },
    "DescribeChannelModeratedByAppInstanceUserResponse": {
      "properties": {
        "Channel": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelModeratedByAppInstanceUserSummary"
            },
            {
              "description": "The moderated channel."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeChannelModeratorRequest": {
      "properties": {},
      "title": "DescribeChannelModeratorRequest",
      "type": "object"
    },
    "DescribeChannelModeratorResponse": {
      "properties": {
        "ChannelModerator": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelModerator"
            },
            {
              "description": "The details of the channel moderator."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeChannelRequest": {
      "properties": {},
      "title": "DescribeChannelRequest",
      "type": "object"
    },
    "DescribeChannelResponse": {
      "properties": {
        "Channel": {
          "allOf": [
            {
              "$ref": "#/definitions/Channel"
            },
            {
              "description": "The channel details."
            }
          ]
        }
      },
      "type": "object"
    },
    "DisassociatePhoneNumberFromUserRequest": {
      "properties": {},
      "title": "DisassociatePhoneNumberFromUserRequest",
      "type": "object"
    },
    "DisassociatePhoneNumberFromUserResponse": {
      "properties": {},
      "type": "object"
    },
    "DisassociatePhoneNumbersFromVoiceConnectorGroupRequest": {
      "properties": {
        "E164PhoneNumbers": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumberList"
            },
            {
              "description": "List of phone numbers, in E.164 format."
            }
          ]
        }
      },
      "required": [
        "E164PhoneNumbers"
      ],
      "title": "DisassociatePhoneNumbersFromVoiceConnectorGroupRequest",
      "type": "object"
    },
    "DisassociatePhoneNumbersFromVoiceConnectorGroupResponse": {
      "properties": {
        "PhoneNumberErrors": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberErrorList"
            },
            {
              "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "DisassociatePhoneNumbersFromVoiceConnectorRequest": {
      "properties": {
        "E164PhoneNumbers": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumberList"
            },
            {
              "description": "List of phone numbers, in E.164 format."
            }
          ]
        }
      },
      "required": [
        "E164PhoneNumbers"
      ],
      "title": "DisassociatePhoneNumbersFromVoiceConnectorRequest",
      "type": "object"
    },
    "DisassociatePhoneNumbersFromVoiceConnectorResponse": {
      "properties": {
        "PhoneNumberErrors": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberErrorList"
            },
            {
              "description": "If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "DisassociateSigninDelegateGroupsFromAccountRequest": {
      "properties": {
        "GroupNames": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "The sign-in delegate group names."
            }
          ]
        }
      },
      "required": [
        "GroupNames"
      ],
      "title": "DisassociateSigninDelegateGroupsFromAccountRequest",
      "type": "object"
    },
    "DisassociateSigninDelegateGroupsFromAccountResponse": {
      "properties": {},
      "type": "object"
    },
    "E164PhoneNumber": {
      "format": "password",
      "pattern": "^\\+?[1-9]\\d{1,14}$",
      "type": "string"
    },
    "E164PhoneNumberList": {
      "items": {
        "$ref": "#/definitions/E164PhoneNumber"
      },
      "type": "array"
    },
    "EmailAddress": {
      "format": "password",
      "pattern": ".+@.+\\..+",
      "type": "string"
    },
    "EmailStatus": {
      "enum": [
        "NotSent",
        "Sent",
        "Failed"
      ],
      "type": "string"
    },
    "EmergencyCallingConfiguration": {
      "description": "The emergency calling configuration details associated with an Amazon Chime Voice Connector.",
      "properties": {
        "DNIS": {
          "allOf": [
            {
              "$ref": "#/definitions/DNISEmergencyCallingConfigurationList"
            },
            {
              "description": "The Dialed Number Identification Service (DNIS) emergency calling configuration details."
            }
          ]
        }
      },
      "type": "object"
    },
    "ErrorCode": {
      "enum": [
        "BadRequest",
        "Conflict",
        "Forbidden",
        "NotFound",
        "PreconditionFailed",
        "ResourceLimitExceeded",
        "ServiceFailure",
        "AccessDenied",
        "ServiceUnavailable",
        "Throttled",
        "Throttling",
        "Unauthorized",
        "Unprocessable",
        "VoiceConnectorGroupAssociationsExist",
        "PhoneNumberAssociationsExist"
      ],
      "type": "string"
    },
    "EventsConfiguration": {
      "description": "The configuration that allows a bot to receive outgoing events. Can be either an HTTPS endpoint or a Lambda function ARN.",
      "properties": {
        "BotId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The bot ID."
            }
          ]
        },
        "LambdaFunctionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "Lambda function ARN that allows a bot to receive outgoing events."
            }
          ]
        },
        "OutboundEventsHTTPSEndpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "HTTPS endpoint that allows a bot to receive outgoing events."
            }
          ]
        }
      },
      "type": "object"
    },
    "ExternalMeetingIdType": {
      "format": "password",
      "maxLength": 64,
      "minLength": 2,
      "type": "string"
    },
    "ExternalUserIdType": {
      "format": "password",
      "maxLength": 64,
      "minLength": 2,
      "type": "string"
    },
    "ForbiddenException": {},
    "FunctionArn": {
      "format": "password",
      "maxLength": 10000,
      "pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
      "type": "string"
    },
    "GeoMatchLevel": {
      "enum": [
        "Country",
        "AreaCode"
      ],
      "type": "string"
    },
    "GeoMatchParams": {
      "description": "The country and area code for a proxy phone number in a proxy phone session.",
      "properties": {
        "AreaCode": {
          "allOf": [
            {
              "$ref": "#/definitions/AreaCode"
            },
            {
              "description": "The area code."
            }
          ]
        },
        "Country": {
          "allOf": [
            {
              "$ref": "#/definitions/Country"
            },
            {
              "description": "The country."
            }
          ]
        }
      },
      "required": [
        "Country",
        "AreaCode"
      ],
      "type": "object"
    },
    "GetAccountRequest": {
      "properties": {},
      "title": "GetAccountRequest",
      "type": "object"
    },
    "GetAccountResponse": {
      "properties": {
        "Account": {
          "$ref": "#/definitions/Account"
        }
      },
      "type": "object"
    },
    "GetAccountSettingsRequest": {
      "properties": {},
      "title": "GetAccountSettingsRequest",
      "type": "object"
    },
    "GetAccountSettingsResponse": {
      "properties": {
        "AccountSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountSettings"
            },
            {
              "description": "The Amazon Chime account settings."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAppInstanceRetentionSettingsRequest": {
      "properties": {},
      "title": "GetAppInstanceRetentionSettingsRequest",
      "type": "object"
    },
    "GetAppInstanceRetentionSettingsResponse": {
      "properties": {
        "AppInstanceRetentionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceRetentionSettings"
            },
            {
              "description": "The retention settings for the app instance."
            }
          ]
        },
        "InitiateDeletionTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The timestamp representing the time at which the specified items are retained, in Epoch Seconds."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAppInstanceStreamingConfigurationsRequest": {
      "properties": {},
      "title": "GetAppInstanceStreamingConfigurationsRequest",
      "type": "object"
    },
    "GetAppInstanceStreamingConfigurationsResponse": {
      "properties": {
        "AppInstanceStreamingConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceStreamingConfigurationList"
            },
            {
              "description": "The streaming settings."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetAttendeeRequest": {
      "properties": {},
      "title": "GetAttendeeRequest",
      "type": "object"
    },
    "GetAttendeeResponse": {
      "properties": {
        "Attendee": {
          "allOf": [
            {
              "$ref": "#/definitions/Attendee"
            },
            {
              "description": "The Amazon Chime SDK attendee information."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetBotRequest": {
      "properties": {},
      "title": "GetBotRequest",
      "type": "object"
    },
    "GetBotResponse": {
      "properties": {
        "Bot": {
          "allOf": [
            {
              "$ref": "#/definitions/Bot"
            },
            {
              "description": "The chat bot details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetChannelMessageRequest": {
      "properties": {},
      "title": "GetChannelMessageRequest",
      "type": "object"
    },
    "GetChannelMessageResponse": {
      "properties": {
        "ChannelMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMessage"
            },
            {
              "description": "The details of and content in the message."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetEventsConfigurationRequest": {
      "properties": {},
      "title": "GetEventsConfigurationRequest",
      "type": "object"
    },
    "GetEventsConfigurationResponse": {
      "properties": {
        "EventsConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/EventsConfiguration"
            },
            {
              "description": "The events configuration details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetGlobalSettingsResponse": {
      "properties": {
        "BusinessCalling": {
          "allOf": [
            {
              "$ref": "#/definitions/BusinessCallingSettings"
            },
            {
              "description": "The Amazon Chime Business Calling settings."
            }
          ]
        },
        "VoiceConnector": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorSettings"
            },
            {
              "description": "The Amazon Chime Voice Connector settings."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetMeetingRequest": {
      "properties": {},
      "title": "GetMeetingRequest",
      "type": "object"
    },
    "GetMeetingResponse": {
      "properties": {
        "Meeting": {
          "allOf": [
            {
              "$ref": "#/definitions/Meeting"
            },
            {
              "description": "The Amazon Chime SDK meeting information."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetMessagingSessionEndpointRequest": {
      "properties": {},
      "title": "GetMessagingSessionEndpointRequest",
      "type": "object"
    },
    "GetMessagingSessionEndpointResponse": {
      "properties": {
        "Endpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/MessagingSessionEndpoint"
            },
            {
              "description": "The endpoint returned in the response."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetPhoneNumberOrderRequest": {
      "properties": {},
      "title": "GetPhoneNumberOrderRequest",
      "type": "object"
    },
    "GetPhoneNumberOrderResponse": {
      "properties": {
        "PhoneNumberOrder": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberOrder"
            },
            {
              "description": "The phone number order details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetPhoneNumberRequest": {
      "properties": {},
      "title": "GetPhoneNumberRequest",
      "type": "object"
    },
    "GetPhoneNumberResponse": {
      "properties": {
        "PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumber"
            },
            {
              "description": "The phone number details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetPhoneNumberSettingsResponse": {
      "properties": {
        "CallingName": {
          "allOf": [
            {
              "$ref": "#/definitions/CallingName"
            },
            {
              "description": "The default outbound calling name for the account."
            }
          ]
        },
        "CallingNameUpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The updated outbound calling name timestamp, in ISO 8601 format."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetProxySessionRequest": {
      "properties": {},
      "title": "GetProxySessionRequest",
      "type": "object"
    },
    "GetProxySessionResponse": {
      "properties": {
        "ProxySession": {
          "allOf": [
            {
              "$ref": "#/definitions/ProxySession"
            },
            {
              "description": "The proxy session details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetRetentionSettingsRequest": {
      "properties": {},
      "title": "GetRetentionSettingsRequest",
      "type": "object"
    },
    "GetRetentionSettingsResponse": {
      "properties": {
        "InitiateDeletionTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format."
            }
          ]
        },
        "RetentionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/RetentionSettings"
            },
            {
              "description": "The retention settings."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetRoomRequest": {
      "properties": {},
      "title": "GetRoomRequest",
      "type": "object"
    },
    "GetRoomResponse": {
      "properties": {
        "Room": {
          "allOf": [
            {
              "$ref": "#/definitions/Room"
            },
            {
              "description": "The room details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetSipMediaApplicationLoggingConfigurationRequest": {
      "properties": {},
      "title": "GetSipMediaApplicationLoggingConfigurationRequest",
      "type": "object"
    },
    "GetSipMediaApplicationLoggingConfigurationResponse": {
      "properties": {
        "SipMediaApplicationLoggingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationLoggingConfiguration"
            },
            {
              "description": "The actual logging configuration."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetSipMediaApplicationRequest": {
      "properties": {},
      "title": "GetSipMediaApplicationRequest",
      "type": "object"
    },
    "GetSipMediaApplicationResponse": {
      "properties": {
        "SipMediaApplication": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplication"
            },
            {
              "description": "The SIP media application details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetSipRuleRequest": {
      "properties": {},
      "title": "GetSipRuleRequest",
      "type": "object"
    },
    "GetSipRuleResponse": {
      "properties": {
        "SipRule": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRule"
            },
            {
              "description": "The SIP rule details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetUserRequest": {
      "properties": {},
      "title": "GetUserRequest",
      "type": "object"
    },
    "GetUserResponse": {
      "properties": {
        "User": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "description": "The user details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetUserSettingsRequest": {
      "properties": {},
      "title": "GetUserSettingsRequest",
      "type": "object"
    },
    "GetUserSettingsResponse": {
      "properties": {
        "UserSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/UserSettings"
            },
            {
              "description": "The user settings."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetVoiceConnectorEmergencyCallingConfigurationRequest": {
      "properties": {},
      "title": "GetVoiceConnectorEmergencyCallingConfigurationRequest",
      "type": "object"
    },
    "GetVoiceConnectorEmergencyCallingConfigurationResponse": {
      "properties": {
        "EmergencyCallingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/EmergencyCallingConfiguration"
            },
            {
              "description": "The emergency calling configuration details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetVoiceConnectorGroupRequest": {
      "properties": {},
      "title": "GetVoiceConnectorGroupRequest",
      "type": "object"
    },
    "GetVoiceConnectorGroupResponse": {
      "properties": {
        "VoiceConnectorGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorGroup"
            },
            {
              "description": "The Amazon Chime Voice Connector group details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetVoiceConnectorLoggingConfigurationRequest": {
      "properties": {},
      "title": "GetVoiceConnectorLoggingConfigurationRequest",
      "type": "object"
    },
    "GetVoiceConnectorLoggingConfigurationResponse": {
      "properties": {
        "LoggingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/LoggingConfiguration"
            },
            {
              "description": "The logging configuration details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetVoiceConnectorOriginationRequest": {
      "properties": {},
      "title": "GetVoiceConnectorOriginationRequest",
      "type": "object"
    },
    "GetVoiceConnectorOriginationResponse": {
      "properties": {
        "Origination": {
          "allOf": [
            {
              "$ref": "#/definitions/Origination"
            },
            {
              "description": "The origination setting details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetVoiceConnectorProxyRequest": {
      "properties": {},
      "title": "GetVoiceConnectorProxyRequest",
      "type": "object"
    },
    "GetVoiceConnectorProxyResponse": {
      "properties": {
        "Proxy": {
          "allOf": [
            {
              "$ref": "#/definitions/Proxy"
            },
            {
              "description": "The proxy configuration details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetVoiceConnectorRequest": {
      "properties": {},
      "title": "GetVoiceConnectorRequest",
      "type": "object"
    },
    "GetVoiceConnectorResponse": {
      "properties": {
        "VoiceConnector": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnector"
            },
            {
              "description": "The Amazon Chime Voice Connector details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetVoiceConnectorStreamingConfigurationRequest": {
      "properties": {},
      "title": "GetVoiceConnectorStreamingConfigurationRequest",
      "type": "object"
    },
    "GetVoiceConnectorStreamingConfigurationResponse": {
      "properties": {
        "StreamingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/StreamingConfiguration"
            },
            {
              "description": "The streaming configuration details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetVoiceConnectorTerminationHealthRequest": {
      "properties": {},
      "title": "GetVoiceConnectorTerminationHealthRequest",
      "type": "object"
    },
    "GetVoiceConnectorTerminationHealthResponse": {
      "properties": {
        "TerminationHealth": {
          "allOf": [
            {
              "$ref": "#/definitions/TerminationHealth"
            },
            {
              "description": "The termination health details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetVoiceConnectorTerminationRequest": {
      "properties": {},
      "title": "GetVoiceConnectorTerminationRequest",
      "type": "object"
    },
    "GetVoiceConnectorTerminationResponse": {
      "properties": {
        "Termination": {
          "allOf": [
            {
              "$ref": "#/definitions/Termination"
            },
            {
              "description": "The termination setting details."
            }
          ]
        }
      },
      "type": "object"
    },
    "GuidString": {
      "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
      "type": "string"
    },
    "Identity": {
      "description": "The ARN and name of a user.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN in an Identity."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceName"
            },
            {
              "description": "The name in an Identity."
            }
          ]
        }
      },
      "type": "object"
    },
    "Integer": {
      "type": "integer"
    },
    "Invite": {
      "description": "Invitation object returned after emailing users to invite them to join the Amazon Chime <code>Team</code> account.",
      "properties": {
        "EmailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/EmailAddress"
            },
            {
              "description": "The email address to which the invite is sent."
            }
          ]
        },
        "EmailStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/EmailStatus"
            },
            {
              "description": "The status of the invite email."
            }
          ]
        },
        "InviteId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The invite ID."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/InviteStatus"
            },
            {
              "description": "The status of the invite."
            }
          ]
        }
      },
      "type": "object"
    },
    "InviteList": {
      "items": {
        "$ref": "#/definitions/Invite"
      },
      "type": "array"
    },
    "InviteStatus": {
      "enum": [
        "Pending",
        "Accepted",
        "Failed"
      ],
      "type": "string"
    },
    "InviteUsersRequest": {
      "properties": {
        "UserEmailList": {
          "allOf": [
            {
              "$ref": "#/definitions/UserEmailList"
            },
            {
              "description": "The user email addresses to which to send the email invitation."
            }
          ]
        },
        "UserType": {
          "allOf": [
            {
              "$ref": "#/definitions/UserType"
            },
            {
              "description": "The user type."
            }
          ]
        }
      },
      "required": [
        "UserEmailList"
      ],
      "title": "InviteUsersRequest",
      "type": "object"
    },
    "InviteUsersResponse": {
      "properties": {
        "Invites": {
          "allOf": [
            {
              "$ref": "#/definitions/InviteList"
            },
            {
              "description": "The email invitation details."
            }
          ]
        }
      },
      "type": "object"
    },
    "Iso8601Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "JoinTokenString": {
      "format": "password",
      "maxLength": 2048,
      "minLength": 2,
      "pattern": "^[a-zA-Z0-9+/]+$",
      "type": "string"
    },
    "License": {
      "enum": [
        "Basic",
        "Plus",
        "Pro",
        "ProTrial"
      ],
      "type": "string"
    },
    "LicenseList": {
      "items": {
        "$ref": "#/definitions/License"
      },
      "type": "array"
    },
    "ListAccountsRequest": {
      "properties": {},
      "title": "ListAccountsRequest",
      "type": "object"
    },
    "ListAccountsResponse": {
      "properties": {
        "Accounts": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountList"
            },
            {
              "description": "The list of accounts."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The account's user token."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListAppInstanceAdminsRequest": {
      "properties": {},
      "title": "ListAppInstanceAdminsRequest",
      "type": "object"
    },
    "ListAppInstanceAdminsResponse": {
      "properties": {
        "AppInstanceAdmins": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceAdminList"
            },
            {
              "description": "The information for each administrator."
            }
          ]
        },
        "AppInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the app instance."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token returned from previous API requests until the number of administrators is reached."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListAppInstanceUsersRequest": {
      "properties": {},
      "title": "ListAppInstanceUsersRequest",
      "type": "object"
    },
    "ListAppInstanceUsersResponse": {
      "properties": {
        "AppInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the app instance."
            }
          ]
        },
        "AppInstanceUsers": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceUserList"
            },
            {
              "description": "The information for each of the requested app instance users."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token passed by previous API calls until all requested users are returned."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListAppInstancesRequest": {
      "properties": {},
      "title": "ListAppInstancesRequest",
      "type": "object"
    },
    "ListAppInstancesResponse": {
      "properties": {
        "AppInstances": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceList"
            },
            {
              "description": "The information for each app instance."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token passed by previous API requests until the maximum number of app instances is reached."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListAttendeeTagsRequest": {
      "properties": {},
      "title": "ListAttendeeTagsRequest",
      "type": "object"
    },
    "ListAttendeeTagsResponse": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "A list of tag key-value pairs."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListAttendeesRequest": {
      "properties": {},
      "title": "ListAttendeesRequest",
      "type": "object"
    },
    "ListAttendeesResponse": {
      "properties": {
        "Attendees": {
          "allOf": [
            {
              "$ref": "#/definitions/AttendeeList"
            },
            {
              "description": "The Amazon Chime SDK attendee information."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListBotsRequest": {
      "properties": {},
      "title": "ListBotsRequest",
      "type": "object"
    },
    "ListBotsResponse": {
      "properties": {
        "Bots": {
          "allOf": [
            {
              "$ref": "#/definitions/BotList"
            },
            {
              "description": "List of bots and bot details."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListChannelBansRequest": {
      "properties": {},
      "title": "ListChannelBansRequest",
      "type": "object"
    },
    "ListChannelBansResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        },
        "ChannelBans": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelBanSummaryList"
            },
            {
              "description": "The information for each requested ban."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token passed by previous API calls until all requested bans are returned."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListChannelMembershipsForAppInstanceUserRequest": {
      "properties": {},
      "title": "ListChannelMembershipsForAppInstanceUserRequest",
      "type": "object"
    },
    "ListChannelMembershipsForAppInstanceUserResponse": {
      "properties": {
        "ChannelMemberships": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMembershipForAppInstanceUserSummaryList"
            },
            {
              "description": "The token passed by previous API calls until all requested users are returned."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token passed by previous API calls until all requested users are returned."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListChannelMembershipsRequest": {
      "properties": {},
      "title": "ListChannelMembershipsRequest",
      "type": "object"
    },
    "ListChannelMembershipsResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        },
        "ChannelMemberships": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMembershipSummaryList"
            },
            {
              "description": "The information for the requested channel memberships."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token passed by previous API calls until all requested channel memberships are returned."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListChannelMessagesRequest": {
      "properties": {},
      "title": "ListChannelMessagesRequest",
      "type": "object"
    },
    "ListChannelMessagesResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel containing the requested messages."
            }
          ]
        },
        "ChannelMessages": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMessageSummaryList"
            },
            {
              "description": "The information about and content of each requested message."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token passed by previous API calls until all requested messages are returned."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListChannelModeratorsRequest": {
      "properties": {},
      "title": "ListChannelModeratorsRequest",
      "type": "object"
    },
    "ListChannelModeratorsResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        },
        "ChannelModerators": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelModeratorSummaryList"
            },
            {
              "description": "The information about and names of each moderator."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token passed by previous API calls until all requested moderators are returned."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListChannelsModeratedByAppInstanceUserRequest": {
      "properties": {},
      "title": "ListChannelsModeratedByAppInstanceUserRequest",
      "type": "object"
    },
    "ListChannelsModeratedByAppInstanceUserResponse": {
      "properties": {
        "Channels": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelModeratedByAppInstanceUserSummaryList"
            },
            {
              "description": "The moderated channels in the request."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token returned from previous API requests until the number of channels moderated by the user is reached."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListChannelsRequest": {
      "properties": {},
      "title": "ListChannelsRequest",
      "type": "object"
    },
    "ListChannelsResponse": {
      "properties": {
        "Channels": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelSummaryList"
            },
            {
              "description": "The information about each channel."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The token returned from previous API requests until the number of channels is reached."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListMeetingTagsRequest": {
      "properties": {},
      "title": "ListMeetingTagsRequest",
      "type": "object"
    },
    "ListMeetingTagsResponse": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "A list of tag key-value pairs."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListMeetingsRequest": {
      "properties": {},
      "title": "ListMeetingsRequest",
      "type": "object"
    },
    "ListMeetingsResponse": {
      "properties": {
        "Meetings": {
          "allOf": [
            {
              "$ref": "#/definitions/MeetingList"
            },
            {
              "description": "The Amazon Chime SDK meeting information."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListPhoneNumberOrdersRequest": {
      "properties": {},
      "title": "ListPhoneNumberOrdersRequest",
      "type": "object"
    },
    "ListPhoneNumberOrdersResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        },
        "PhoneNumberOrders": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberOrderList"
            },
            {
              "description": "The phone number order details."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListPhoneNumbersRequest": {
      "properties": {},
      "title": "ListPhoneNumbersRequest",
      "type": "object"
    },
    "ListPhoneNumbersResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        },
        "PhoneNumbers": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberList"
            },
            {
              "description": "The phone number details."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListProxySessionsRequest": {
      "properties": {},
      "title": "ListProxySessionsRequest",
      "type": "object"
    },
    "ListProxySessionsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextTokenString"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        },
        "ProxySessions": {
          "allOf": [
            {
              "$ref": "#/definitions/ProxySessions"
            },
            {
              "description": "The proxy session details."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListRoomMembershipsRequest": {
      "properties": {},
      "title": "ListRoomMembershipsRequest",
      "type": "object"
    },
    "ListRoomMembershipsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        },
        "RoomMemberships": {
          "allOf": [
            {
              "$ref": "#/definitions/RoomMembershipList"
            },
            {
              "description": "The room membership details."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListRoomsRequest": {
      "properties": {},
      "title": "ListRoomsRequest",
      "type": "object"
    },
    "ListRoomsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        },
        "Rooms": {
          "allOf": [
            {
              "$ref": "#/definitions/RoomList"
            },
            {
              "description": "The room details."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListSipMediaApplicationsRequest": {
      "properties": {},
      "title": "ListSipMediaApplicationsRequest",
      "type": "object"
    },
    "ListSipMediaApplicationsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextTokenString"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        },
        "SipMediaApplications": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationList"
            },
            {
              "description": "List of SIP media applications and application details."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListSipRulesRequest": {
      "properties": {},
      "title": "ListSipRulesRequest",
      "type": "object"
    },
    "ListSipRulesResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextTokenString"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        },
        "SipRules": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRuleList"
            },
            {
              "description": "List of SIP rules and rule details."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "properties": {},
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "A list of tag-key value pairs."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListUsersRequest": {
      "properties": {},
      "title": "ListUsersRequest",
      "type": "object"
    },
    "ListUsersResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        },
        "Users": {
          "allOf": [
            {
              "$ref": "#/definitions/UserList"
            },
            {
              "description": "List of users and user details."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListVoiceConnectorGroupsRequest": {
      "properties": {},
      "title": "ListVoiceConnectorGroupsRequest",
      "type": "object"
    },
    "ListVoiceConnectorGroupsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        },
        "VoiceConnectorGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorGroupList"
            },
            {
              "description": "The details of the Amazon Chime Voice Connector groups."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListVoiceConnectorTerminationCredentialsRequest": {
      "properties": {},
      "title": "ListVoiceConnectorTerminationCredentialsRequest",
      "type": "object"
    },
    "ListVoiceConnectorTerminationCredentialsResponse": {
      "properties": {
        "Usernames": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveStringList"
            },
            {
              "description": "A list of user names."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListVoiceConnectorsRequest": {
      "properties": {},
      "title": "ListVoiceConnectorsRequest",
      "type": "object"
    },
    "ListVoiceConnectorsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The token to use to retrieve the next page of results."
            }
          ]
        },
        "VoiceConnectors": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorList"
            },
            {
              "description": "The details of the Amazon Chime Voice Connectors."
            }
          ]
        }
      },
      "type": "object"
    },
    "LoggingConfiguration": {
      "description": "The logging configuration associated with an Amazon Chime Voice Connector. Specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.",
      "properties": {
        "EnableSIPLogs": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "When true, enables SIP message logs for sending to Amazon CloudWatch Logs."
            }
          ]
        }
      },
      "type": "object"
    },
    "LogoutUserRequest": {
      "properties": {},
      "title": "LogoutUserRequest",
      "type": "object"
    },
    "LogoutUserResponse": {
      "properties": {},
      "type": "object"
    },
    "MaxResults": {
      "maximum": 50,
      "minimum": 1,
      "type": "integer"
    },
    "MediaPlacement": {
      "description": "A set of endpoints used by clients to connect to the media service group for a Amazon Chime SDK meeting.",
      "properties": {
        "AudioFallbackUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/UriType"
            },
            {
              "description": "The audio fallback URL."
            }
          ]
        },
        "AudioHostUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/UriType"
            },
            {
              "description": "The audio host URL."
            }
          ]
        },
        "ScreenDataUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/UriType"
            },
            {
              "description": "The screen data URL."
            }
          ]
        },
        "ScreenSharingUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/UriType"
            },
            {
              "description": "The screen sharing URL."
            }
          ]
        },
        "ScreenViewingUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/UriType"
            },
            {
              "description": "The screen viewing URL."
            }
          ]
        },
        "SignalingUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/UriType"
            },
            {
              "description": "The signaling URL."
            }
          ]
        },
        "TurnControlUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/UriType"
            },
            {
              "description": "The turn control URL."
            }
          ]
        }
      },
      "type": "object"
    },
    "Meeting": {
      "description": "A meeting created using the Amazon Chime SDK.",
      "properties": {
        "ExternalMeetingId": {
          "allOf": [
            {
              "$ref": "#/definitions/ExternalMeetingIdType"
            },
            {
              "description": "The external meeting ID."
            }
          ]
        },
        "MediaPlacement": {
          "allOf": [
            {
              "$ref": "#/definitions/MediaPlacement"
            },
            {
              "description": "The media placement for the meeting."
            }
          ]
        },
        "MediaRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Region in which to create the meeting. Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>."
            }
          ]
        },
        "MeetingId": {
          "allOf": [
            {
              "$ref": "#/definitions/GuidString"
            },
            {
              "description": "The Amazon Chime SDK meeting ID."
            }
          ]
        }
      },
      "type": "object"
    },
    "MeetingList": {
      "items": {
        "$ref": "#/definitions/Meeting"
      },
      "type": "array"
    },
    "MeetingNotificationConfiguration": {
      "description": "The configuration for resource targets to receive notifications when Amazon Chime SDK meeting and attendee events occur. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (<code>us-east-1</code>).",
      "properties": {
        "SnsTopicArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The SNS topic ARN."
            }
          ]
        },
        "SqsQueueArn": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The SQS queue ARN."
            }
          ]
        }
      },
      "type": "object"
    },
    "MeetingTagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "MeetingTagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "Member": {
      "description": "The member details, such as email address, name, member ID, and member type.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Chime account ID."
            }
          ]
        },
        "Email": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The member email address."
            }
          ]
        },
        "FullName": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The member name."
            }
          ]
        },
        "MemberId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The member ID (user ID or bot ID)."
            }
          ]
        },
        "MemberType": {
          "allOf": [
            {
              "$ref": "#/definitions/MemberType"
            },
            {
              "description": "The member type."
            }
          ]
        }
      },
      "type": "object"
    },
    "MemberError": {
      "description": "The list of errors returned when a member action results in an error.",
      "properties": {
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorCode"
            },
            {
              "description": "The error code."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The error message."
            }
          ]
        },
        "MemberId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The member ID."
            }
          ]
        }
      },
      "type": "object"
    },
    "MemberErrorList": {
      "items": {
        "$ref": "#/definitions/MemberError"
      },
      "type": "array"
    },
    "MemberType": {
      "enum": [
        "User",
        "Bot",
        "Webhook"
      ],
      "type": "string"
    },
    "MembershipItem": {
      "description": "Membership details, such as member ID and member role.",
      "properties": {
        "MemberId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The member ID."
            }
          ]
        },
        "Role": {
          "allOf": [
            {
              "$ref": "#/definitions/RoomMembershipRole"
            },
            {
              "description": "The member role."
            }
          ]
        }
      },
      "type": "object"
    },
    "MembershipItemList": {
      "items": {
        "$ref": "#/definitions/MembershipItem"
      },
      "maxItems": 50,
      "type": "array"
    },
    "MessageId": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "[-_a-zA-Z0-9]*",
      "type": "string"
    },
    "MessagingSessionEndpoint": {
      "description": "The endpoint of a meeting session.",
      "properties": {
        "Url": {
          "allOf": [
            {
              "$ref": "#/definitions/UrlType"
            },
            {
              "description": "The URL of a meeting session endpoint."
            }
          ]
        }
      },
      "type": "object"
    },
    "Metadata": {
      "format": "password",
      "maxLength": 1024,
      "minLength": 0,
      "pattern": ".*",
      "type": "string"
    },
    "NextToken": {
      "format": "password",
      "maxLength": 2048,
      "minLength": 0,
      "pattern": ".*",
      "type": "string"
    },
    "NextTokenString": {
      "maxLength": 65535,
      "type": "string"
    },
    "NonEmptyContent": {
      "format": "password",
      "maxLength": 4096,
      "minLength": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "NonEmptyResourceName": {
      "format": "password",
      "maxLength": 256,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "NonEmptyString": {
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "NonEmptyString128": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "NonEmptyStringList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "minItems": 1,
      "type": "array"
    },
    "NonNullableBoolean": {
      "type": "boolean"
    },
    "NotFoundException": {},
    "NotificationTarget": {
      "enum": [
        "EventBridge",
        "SNS",
        "SQS"
      ],
      "type": "string"
    },
    "NullableBoolean": {
      "type": "boolean"
    },
    "NumberSelectionBehavior": {
      "enum": [
        "PreferSticky",
        "AvoidSticky"
      ],
      "type": "string"
    },
    "OrderedPhoneNumber": {
      "description": "A phone number for which an order has been placed.",
      "properties": {
        "E164PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The phone number, in E.164 format."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OrderedPhoneNumberStatus"
            },
            {
              "description": "The phone number status."
            }
          ]
        }
      },
      "type": "object"
    },
    "OrderedPhoneNumberList": {
      "items": {
        "$ref": "#/definitions/OrderedPhoneNumber"
      },
      "type": "array"
    },
    "OrderedPhoneNumberStatus": {
      "enum": [
        "Processing",
        "Acquired",
        "Failed"
      ],
      "type": "string"
    },
    "Origination": {
      "description": "Origination settings enable your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector.",
      "properties": {
        "Disabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector."
            }
          ]
        },
        "Routes": {
          "allOf": [
            {
              "$ref": "#/definitions/OriginationRouteList"
            },
            {
              "description": "The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20."
            }
          ]
        }
      },
      "type": "object"
    },
    "OriginationRoute": {
      "description": "Origination routes define call distribution properties for your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector. Limit: Ten origination routes for each Amazon Chime Voice Connector.",
      "properties": {
        "Host": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The FQDN or IP address to contact for origination traffic."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/Port"
            },
            {
              "description": "The designated origination route port. Defaults to 5060."
            }
          ]
        },
        "Priority": {
          "allOf": [
            {
              "$ref": "#/definitions/OriginationRoutePriority"
            },
            {
              "description": "The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first."
            }
          ]
        },
        "Protocol": {
          "allOf": [
            {
              "$ref": "#/definitions/OriginationRouteProtocol"
            },
            {
              "description": "The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default."
            }
          ]
        },
        "Weight": {
          "allOf": [
            {
              "$ref": "#/definitions/OriginationRouteWeight"
            },
            {
              "description": "The weight associated with the host. If hosts are equal in priority, calls are distributed among them based on their relative weight."
            }
          ]
        }
      },
      "type": "object"
    },
    "OriginationRouteList": {
      "items": {
        "$ref": "#/definitions/OriginationRoute"
      },
      "type": "array"
    },
    "OriginationRoutePriority": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "OriginationRouteProtocol": {
      "enum": [
        "TCP",
        "UDP"
      ],
      "type": "string"
    },
    "OriginationRouteWeight": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "Participant": {
      "description": "The phone number and proxy phone number for a participant in an Amazon Chime Voice Connector proxy session.",
      "properties": {
        "PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The participant's phone number."
            }
          ]
        },
        "ProxyPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The participant's proxy phone number."
            }
          ]
        }
      },
      "type": "object"
    },
    "ParticipantPhoneNumberList": {
      "items": {
        "$ref": "#/definitions/E164PhoneNumber"
      },
      "maxItems": 2,
      "minItems": 2,
      "type": "array"
    },
    "Participants": {
      "items": {
        "$ref": "#/definitions/Participant"
      },
      "type": "array"
    },
    "PhoneNumber": {
      "description": "A phone number used for Amazon Chime Business Calling or an Amazon Chime Voice Connector.",
      "properties": {
        "Associations": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberAssociationList"
            },
            {
              "description": "The phone number associations."
            }
          ]
        },
        "CallingName": {
          "allOf": [
            {
              "$ref": "#/definitions/CallingName"
            },
            {
              "description": "The outbound calling name associated with the phone number."
            }
          ]
        },
        "CallingNameStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/CallingNameStatus"
            },
            {
              "description": "The outbound calling name status."
            }
          ]
        },
        "Capabilities": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberCapabilities"
            },
            {
              "description": "The phone number capabilities."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The phone number creation timestamp, in ISO 8601 format."
            }
          ]
        },
        "DeletionTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The deleted phone number timestamp, in ISO 8601 format."
            }
          ]
        },
        "E164PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The phone number, in E.164 format."
            }
          ]
        },
        "PhoneNumberId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The phone number ID."
            }
          ]
        },
        "ProductType": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberProductType"
            },
            {
              "description": "The phone number product type."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberStatus"
            },
            {
              "description": "The phone number status."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberType"
            },
            {
              "description": "The phone number type."
            }
          ]
        },
        "UpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The updated phone number timestamp, in ISO 8601 format."
            }
          ]
        }
      },
      "type": "object"
    },
    "PhoneNumberAssociation": {
      "description": "The phone number associations, such as Amazon Chime account ID, Amazon Chime user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.",
      "properties": {
        "AssociatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The timestamp of the phone number association, in ISO 8601 format."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberAssociationName"
            },
            {
              "description": "Defines the association with an Amazon Chime account ID, user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "Contains the ID for the entity specified in Name."
            }
          ]
        }
      },
      "type": "object"
    },
    "PhoneNumberAssociationList": {
      "items": {
        "$ref": "#/definitions/PhoneNumberAssociation"
      },
      "type": "array"
    },
    "PhoneNumberAssociationName": {
      "enum": [
        "AccountId",
        "UserId",
        "VoiceConnectorId",
        "VoiceConnectorGroupId",
        "SipRuleId"
      ],
      "type": "string"
    },
    "PhoneNumberCapabilities": {
      "description": "The phone number capabilities for Amazon Chime Business Calling phone numbers, such as enabled inbound and outbound calling and text messaging.",
      "properties": {
        "InboundCall": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "Allows or denies inbound calling for the specified phone number."
            }
          ]
        },
        "InboundMMS": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "Allows or denies inbound MMS messaging for the specified phone number."
            }
          ]
        },
        "InboundSMS": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "Allows or denies inbound SMS messaging for the specified phone number."
            }
          ]
        },
        "OutboundCall": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "Allows or denies outbound calling for the specified phone number."
            }
          ]
        },
        "OutboundMMS": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "Allows or denies outbound MMS messaging for the specified phone number."
            }
          ]
        },
        "OutboundSMS": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "Allows or denies outbound SMS messaging for the specified phone number."
            }
          ]
        }
      },
      "type": "object"
    },
    "PhoneNumberError": {
      "description": "If the phone number action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.",
      "properties": {
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorCode"
            },
            {
              "description": "The error code."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The error message."
            }
          ]
        },
        "PhoneNumberId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The phone number ID for which the action failed."
            }
          ]
        }
      },
      "type": "object"
    },
    "PhoneNumberErrorList": {
      "items": {
        "$ref": "#/definitions/PhoneNumberError"
      },
      "type": "array"
    },
    "PhoneNumberList": {
      "items": {
        "$ref": "#/definitions/PhoneNumber"
      },
      "type": "array"
    },
    "PhoneNumberMaxResults": {
      "maximum": 500,
      "minimum": 1,
      "type": "integer"
    },
    "PhoneNumberOrder": {
      "description": "The details of a phone number order created for Amazon Chime.",
      "properties": {
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The phone number order creation timestamp, in ISO 8601 format."
            }
          ]
        },
        "OrderedPhoneNumbers": {
          "allOf": [
            {
              "$ref": "#/definitions/OrderedPhoneNumberList"
            },
            {
              "description": "The ordered phone number details, such as the phone number in E.164 format and the phone number status."
            }
          ]
        },
        "PhoneNumberOrderId": {
          "allOf": [
            {
              "$ref": "#/definitions/GuidString"
            },
            {
              "description": "The phone number order ID."
            }
          ]
        },
        "ProductType": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberProductType"
            },
            {
              "description": "The phone number order product type."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberOrderStatus"
            },
            {
              "description": "The status of the phone number order."
            }
          ]
        },
        "UpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The updated phone number order timestamp, in ISO 8601 format."
            }
          ]
        }
      },
      "type": "object"
    },
    "PhoneNumberOrderList": {
      "items": {
        "$ref": "#/definitions/PhoneNumberOrder"
      },
      "type": "array"
    },
    "PhoneNumberOrderStatus": {
      "enum": [
        "Processing",
        "Successful",
        "Failed",
        "Partial"
      ],
      "type": "string"
    },
    "PhoneNumberProductType": {
      "enum": [
        "BusinessCalling",
        "VoiceConnector"
      ],
      "type": "string"
    },
    "PhoneNumberStatus": {
      "enum": [
        "AcquireInProgress",
        "AcquireFailed",
        "Unassigned",
        "Assigned",
        "ReleaseInProgress",
        "DeleteInProgress",
        "ReleaseFailed",
        "DeleteFailed"
      ],
      "type": "string"
    },
    "PhoneNumberType": {
      "enum": [
        "Local",
        "TollFree"
      ],
      "type": "string"
    },
    "Port": {
      "maximum": 65535,
      "minimum": 0,
      "type": "integer"
    },
    "PositiveInteger": {
      "minimum": 1,
      "type": "integer"
    },
    "ProfileServiceMaxResults": {
      "maximum": 200,
      "minimum": 1,
      "type": "integer"
    },
    "Proxy": {
      "description": "The proxy configuration for an Amazon Chime Voice Connector.",
      "properties": {
        "DefaultSessionExpiryMinutes": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The default number of minutes allowed for proxy sessions."
            }
          ]
        },
        "Disabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector."
            }
          ]
        },
        "FallBackPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The phone number to route calls to after a proxy session expires."
            }
          ]
        },
        "PhoneNumberCountries": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The countries for proxy phone numbers to be selected from."
            }
          ]
        }
      },
      "type": "object"
    },
    "ProxySession": {
      "description": "The proxy session for an Amazon Chime Voice Connector.",
      "properties": {
        "Capabilities": {
          "allOf": [
            {
              "$ref": "#/definitions/CapabilityList"
            },
            {
              "description": "The proxy session capabilities."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The created timestamp, in ISO 8601 format."
            }
          ]
        },
        "EndedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The ended timestamp, in ISO 8601 format."
            }
          ]
        },
        "ExpiryMinutes": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveInteger"
            },
            {
              "description": "The number of minutes allowed for the proxy session."
            }
          ]
        },
        "GeoMatchLevel": {
          "allOf": [
            {
              "$ref": "#/definitions/GeoMatchLevel"
            },
            {
              "description": "The preference for matching the country or area code of the proxy phone number with that of the first participant."
            }
          ]
        },
        "GeoMatchParams": {
          "allOf": [
            {
              "$ref": "#/definitions/GeoMatchParams"
            },
            {
              "description": "The country and area code for the proxy phone number."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/String128"
            },
            {
              "description": "The name of the proxy session."
            }
          ]
        },
        "NumberSelectionBehavior": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberSelectionBehavior"
            },
            {
              "description": "The preference for proxy phone number reuse, or stickiness, between the same participants across sessions."
            }
          ]
        },
        "Participants": {
          "allOf": [
            {
              "$ref": "#/definitions/Participants"
            },
            {
              "description": "The proxy session participants."
            }
          ]
        },
        "ProxySessionId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString128"
            },
            {
              "description": "The proxy session ID."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/ProxySessionStatus"
            },
            {
              "description": "The status of the proxy session."
            }
          ]
        },
        "UpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The updated timestamp, in ISO 8601 format."
            }
          ]
        },
        "VoiceConnectorId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString128"
            },
            {
              "description": "The Amazon Chime voice connector ID."
            }
          ]
        }
      },
      "type": "object"
    },
    "ProxySessionNameString": {
      "format": "password",
      "pattern": "^$|^[a-zA-Z0-9 ]{0,30}$",
      "type": "string"
    },
    "ProxySessionStatus": {
      "enum": [
        "Open",
        "InProgress",
        "Closed"
      ],
      "type": "string"
    },
    "ProxySessions": {
      "items": {
        "$ref": "#/definitions/ProxySession"
      },
      "type": "array"
    },
    "PutAppInstanceRetentionSettingsRequest": {
      "properties": {
        "AppInstanceRetentionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceRetentionSettings"
            },
            {
              "description": "The time in days to retain data. Data type: number."
            }
          ]
        }
      },
      "required": [
        "AppInstanceRetentionSettings"
      ],
      "title": "PutAppInstanceRetentionSettingsRequest",
      "type": "object"
    },
    "PutAppInstanceRetentionSettingsResponse": {
      "properties": {
        "AppInstanceRetentionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceRetentionSettings"
            },
            {
              "description": "The time in days to retain data. Data type: number."
            }
          ]
        },
        "InitiateDeletionTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The time at which the API deletes data."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutAppInstanceStreamingConfigurationsRequest": {
      "properties": {
        "AppInstanceStreamingConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceStreamingConfigurationList"
            },
            {
              "description": "The streaming configurations set for an app instance."
            }
          ]
        }
      },
      "required": [
        "AppInstanceStreamingConfigurations"
      ],
      "title": "PutAppInstanceStreamingConfigurationsRequest",
      "type": "object"
    },
    "PutAppInstanceStreamingConfigurationsResponse": {
      "properties": {
        "AppInstanceStreamingConfigurations": {
          "allOf": [
            {
              "$ref": "#/definitions/AppInstanceStreamingConfigurationList"
            },
            {
              "description": "The streaming configurations of an app instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutEventsConfigurationRequest": {
      "properties": {
        "LambdaFunctionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "Lambda function ARN that allows the bot to receive outgoing events."
            }
          ]
        },
        "OutboundEventsHTTPSEndpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "HTTPS endpoint that allows the bot to receive outgoing events."
            }
          ]
        }
      },
      "title": "PutEventsConfigurationRequest",
      "type": "object"
    },
    "PutEventsConfigurationResponse": {
      "properties": {
        "EventsConfiguration": {
          "$ref": "#/definitions/EventsConfiguration"
        }
      },
      "type": "object"
    },
    "PutRetentionSettingsRequest": {
      "properties": {
        "RetentionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/RetentionSettings"
            },
            {
              "description": "The retention settings."
            }
          ]
        }
      },
      "required": [
        "RetentionSettings"
      ],
      "title": "PutRetentionSettingsRequest",
      "type": "object"
    },
    "PutRetentionSettingsResponse": {
      "properties": {
        "InitiateDeletionTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format."
            }
          ]
        },
        "RetentionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/RetentionSettings"
            },
            {
              "description": "The retention settings."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutSipMediaApplicationLoggingConfigurationRequest": {
      "properties": {
        "SipMediaApplicationLoggingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationLoggingConfiguration"
            },
            {
              "description": "The actual logging configuration."
            }
          ]
        }
      },
      "title": "PutSipMediaApplicationLoggingConfigurationRequest",
      "type": "object"
    },
    "PutSipMediaApplicationLoggingConfigurationResponse": {
      "properties": {
        "SipMediaApplicationLoggingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationLoggingConfiguration"
            },
            {
              "description": "The actual logging configuration."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutVoiceConnectorEmergencyCallingConfigurationRequest": {
      "properties": {
        "EmergencyCallingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/EmergencyCallingConfiguration"
            },
            {
              "description": "The emergency calling configuration details."
            }
          ]
        }
      },
      "required": [
        "EmergencyCallingConfiguration"
      ],
      "title": "PutVoiceConnectorEmergencyCallingConfigurationRequest",
      "type": "object"
    },
    "PutVoiceConnectorEmergencyCallingConfigurationResponse": {
      "properties": {
        "EmergencyCallingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/EmergencyCallingConfiguration"
            },
            {
              "description": "The emergency calling configuration details."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutVoiceConnectorLoggingConfigurationRequest": {
      "properties": {
        "LoggingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/LoggingConfiguration"
            },
            {
              "description": "The logging configuration details to add."
            }
          ]
        }
      },
      "required": [
        "LoggingConfiguration"
      ],
      "title": "PutVoiceConnectorLoggingConfigurationRequest",
      "type": "object"
    },
    "PutVoiceConnectorLoggingConfigurationResponse": {
      "properties": {
        "LoggingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/LoggingConfiguration"
            },
            {
              "description": "The updated logging configuration details."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutVoiceConnectorOriginationRequest": {
      "properties": {
        "Origination": {
          "allOf": [
            {
              "$ref": "#/definitions/Origination"
            },
            {
              "description": "The origination setting details to add."
            }
          ]
        }
      },
      "required": [
        "Origination"
      ],
      "title": "PutVoiceConnectorOriginationRequest",
      "type": "object"
    },
    "PutVoiceConnectorOriginationResponse": {
      "properties": {
        "Origination": {
          "allOf": [
            {
              "$ref": "#/definitions/Origination"
            },
            {
              "description": "The updated origination setting details."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutVoiceConnectorProxyRequest": {
      "properties": {
        "DefaultSessionExpiryMinutes": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The default number of minutes allowed for proxy sessions."
            }
          ]
        },
        "Disabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector."
            }
          ]
        },
        "FallBackPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The phone number to route calls to after a proxy session expires."
            }
          ]
        },
        "PhoneNumberPoolCountries": {
          "allOf": [
            {
              "$ref": "#/definitions/CountryList"
            },
            {
              "description": "The countries for proxy phone numbers to be selected from."
            }
          ]
        }
      },
      "required": [
        "DefaultSessionExpiryMinutes",
        "PhoneNumberPoolCountries"
      ],
      "title": "PutVoiceConnectorProxyRequest",
      "type": "object"
    },
    "PutVoiceConnectorProxyResponse": {
      "properties": {
        "Proxy": {
          "allOf": [
            {
              "$ref": "#/definitions/Proxy"
            },
            {
              "description": "The proxy configuration details."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutVoiceConnectorStreamingConfigurationRequest": {
      "properties": {
        "StreamingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/StreamingConfiguration"
            },
            {
              "description": "The streaming configuration details to add."
            }
          ]
        }
      },
      "required": [
        "StreamingConfiguration"
      ],
      "title": "PutVoiceConnectorStreamingConfigurationRequest",
      "type": "object"
    },
    "PutVoiceConnectorStreamingConfigurationResponse": {
      "properties": {
        "StreamingConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/StreamingConfiguration"
            },
            {
              "description": "The updated streaming configuration details."
            }
          ]
        }
      },
      "type": "object"
    },
    "PutVoiceConnectorTerminationCredentialsRequest": {
      "properties": {
        "Credentials": {
          "allOf": [
            {
              "$ref": "#/definitions/CredentialList"
            },
            {
              "description": "The termination SIP credentials."
            }
          ]
        }
      },
      "title": "PutVoiceConnectorTerminationCredentialsRequest",
      "type": "object"
    },
    "PutVoiceConnectorTerminationRequest": {
      "properties": {
        "Termination": {
          "allOf": [
            {
              "$ref": "#/definitions/Termination"
            },
            {
              "description": "The termination setting details to add."
            }
          ]
        }
      },
      "required": [
        "Termination"
      ],
      "title": "PutVoiceConnectorTerminationRequest",
      "type": "object"
    },
    "PutVoiceConnectorTerminationResponse": {
      "properties": {
        "Termination": {
          "allOf": [
            {
              "$ref": "#/definitions/Termination"
            },
            {
              "description": "The updated termination setting details."
            }
          ]
        }
      },
      "type": "object"
    },
    "RedactChannelMessageRequest": {
      "properties": {},
      "title": "RedactChannelMessageRequest",
      "type": "object"
    },
    "RedactChannelMessageResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel containing the messages that you want to redact."
            }
          ]
        },
        "MessageId": {
          "allOf": [
            {
              "$ref": "#/definitions/MessageId"
            },
            {
              "description": "The ID of the message being redacted."
            }
          ]
        }
      },
      "type": "object"
    },
    "RedactConversationMessageRequest": {
      "properties": {},
      "title": "RedactConversationMessageRequest",
      "type": "object"
    },
    "RedactConversationMessageResponse": {
      "properties": {},
      "type": "object"
    },
    "RedactRoomMessageRequest": {
      "properties": {},
      "title": "RedactRoomMessageRequest",
      "type": "object"
    },
    "RedactRoomMessageResponse": {
      "properties": {},
      "type": "object"
    },
    "RegenerateSecurityTokenRequest": {
      "properties": {},
      "title": "RegenerateSecurityTokenRequest",
      "type": "object"
    },
    "RegenerateSecurityTokenResponse": {
      "properties": {
        "Bot": {
          "$ref": "#/definitions/Bot"
        }
      },
      "type": "object"
    },
    "RegistrationStatus": {
      "enum": [
        "Unregistered",
        "Registered",
        "Suspended"
      ],
      "type": "string"
    },
    "ResetPersonalPINRequest": {
      "properties": {},
      "title": "ResetPersonalPINRequest",
      "type": "object"
    },
    "ResetPersonalPINResponse": {
      "properties": {
        "User": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "description": "The user details and new personal meeting PIN."
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceLimitExceededException": {},
    "ResourceName": {
      "format": "password",
      "maxLength": 256,
      "minLength": 0,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
      "type": "string"
    },
    "RestorePhoneNumberRequest": {
      "properties": {},
      "title": "RestorePhoneNumberRequest",
      "type": "object"
    },
    "RestorePhoneNumberResponse": {
      "properties": {
        "PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumber"
            },
            {
              "description": "The phone number details."
            }
          ]
        }
      },
      "type": "object"
    },
    "ResultMax": {
      "maximum": 99,
      "minimum": 1,
      "type": "integer"
    },
    "RetentionDays": {
      "maximum": 5475,
      "minimum": 1,
      "type": "integer"
    },
    "RetentionSettings": {
      "description": "The retention settings for an Amazon Chime Enterprise account that determine how long to retain items such as chat room messages and chat conversation messages.",
      "properties": {
        "ConversationRetentionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/ConversationRetentionSettings"
            },
            {
              "description": "The chat conversation retention settings."
            }
          ]
        },
        "RoomRetentionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/RoomRetentionSettings"
            },
            {
              "description": "The chat room retention settings."
            }
          ]
        }
      },
      "type": "object"
    },
    "Room": {
      "description": "The Amazon Chime chat room details.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Chime account ID."
            }
          ]
        },
        "CreatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the room creator."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The room creation timestamp, in ISO 8601 format."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The room name."
            }
          ]
        },
        "RoomId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The room ID."
            }
          ]
        },
        "UpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The room update timestamp, in ISO 8601 format."
            }
          ]
        }
      },
      "type": "object"
    },
    "RoomList": {
      "items": {
        "$ref": "#/definitions/Room"
      },
      "type": "array"
    },
    "RoomMembership": {
      "description": "The room membership details.",
      "properties": {
        "InvitedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the user that invited the room member."
            }
          ]
        },
        "Member": {
          "$ref": "#/definitions/Member"
        },
        "Role": {
          "allOf": [
            {
              "$ref": "#/definitions/RoomMembershipRole"
            },
            {
              "description": "The membership role."
            }
          ]
        },
        "RoomId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The room ID."
            }
          ]
        },
        "UpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The room membership update timestamp, in ISO 8601 format."
            }
          ]
        }
      },
      "type": "object"
    },
    "RoomMembershipList": {
      "items": {
        "$ref": "#/definitions/RoomMembership"
      },
      "type": "array"
    },
    "RoomMembershipRole": {
      "enum": [
        "Administrator",
        "Member"
      ],
      "type": "string"
    },
    "RoomRetentionSettings": {
      "description": "The retention settings that determine how long to retain chat room messages for an Amazon Chime Enterprise account.",
      "properties": {
        "RetentionDays": {
          "allOf": [
            {
              "$ref": "#/definitions/RetentionDays"
            },
            {
              "description": "The number of days for which to retain chat room messages."
            }
          ]
        }
      },
      "type": "object"
    },
    "SearchAvailablePhoneNumbersRequest": {
      "properties": {},
      "title": "SearchAvailablePhoneNumbersRequest",
      "type": "object"
    },
    "SearchAvailablePhoneNumbersResponse": {
      "properties": {
        "E164PhoneNumbers": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumberList"
            },
            {
              "description": "List of phone numbers, in E.164 format."
            }
          ]
        }
      },
      "type": "object"
    },
    "SendChannelMessageRequest": {
      "properties": {
        "ClientRequestToken": {
          "allOf": [
            {
              "$ref": "#/definitions/ClientRequestToken"
            },
            {
              "description": "The <code>Idempotency</code> token for each client request."
            }
          ]
        },
        "Content": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyContent"
            },
            {
              "description": "The content of the message."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The optional metadata for each message. "
            }
          ]
        },
        "Persistence": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMessagePersistenceType"
            },
            {
              "description": "Boolean that controls whether the message is persisted on the back end. Required."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMessageType"
            },
            {
              "description": "The type of message, <code>STANDARD</code> or <code>CONTROL</code>."
            }
          ]
        }
      },
      "required": [
        "Content",
        "Type",
        "Persistence",
        "ClientRequestToken"
      ],
      "title": "SendChannelMessageRequest",
      "type": "object"
    },
    "SendChannelMessageResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        },
        "MessageId": {
          "allOf": [
            {
              "$ref": "#/definitions/MessageId"
            },
            {
              "description": "The ID string assigned to each message. "
            }
          ]
        }
      },
      "type": "object"
    },
    "SensitiveString": {
      "format": "password",
      "type": "string"
    },
    "SensitiveStringList": {
      "items": {
        "$ref": "#/definitions/SensitiveString"
      },
      "type": "array"
    },
    "ServiceFailureException": {},
    "ServiceUnavailableException": {},
    "SigninDelegateGroup": {
      "description": "An Active Directory (AD) group whose members are granted permission to act as delegates.",
      "properties": {
        "GroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The group name."
            }
          ]
        }
      },
      "type": "object"
    },
    "SigninDelegateGroupList": {
      "items": {
        "$ref": "#/definitions/SigninDelegateGroup"
      },
      "type": "array"
    },
    "SipApplicationPriority": {
      "minimum": 1,
      "type": "integer"
    },
    "SipMediaApplication": {
      "description": "The SIP media application details, including name and endpoints. An AWS account can have multiple SIP media applications.",
      "properties": {
        "AwsRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The AWS Region in which the SIP media application is created."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The SIP media application creation timestamp, in ISO 8601 format."
            }
          ]
        },
        "Endpoints": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationEndpointList"
            },
            {
              "description": "List of endpoints for SIP media application. Currently, only one endpoint per SIP media application is permitted."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationName"
            },
            {
              "description": "The name of the SIP media application."
            }
          ]
        },
        "SipMediaApplicationId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The SIP media application ID."
            }
          ]
        },
        "UpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The SIP media application updated timestamp, in ISO 8601 format."
            }
          ]
        }
      },
      "type": "object"
    },
    "SipMediaApplicationCall": {
      "description": "A <code>Call</code> instance for a SIP media application.",
      "properties": {
        "TransactionId": {
          "allOf": [
            {
              "$ref": "#/definitions/GuidString"
            },
            {
              "description": "The transaction ID of a call."
            }
          ]
        }
      },
      "type": "object"
    },
    "SipMediaApplicationEndpoint": {
      "description": "Endpoints to specify as part of a SIP media application.",
      "properties": {
        "LambdaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/FunctionArn"
            },
            {
              "description": "Valid Amazon Resource Name (ARN) of the Lambda function of the same AWS Region where the SIP media application is created."
            }
          ]
        }
      },
      "type": "object"
    },
    "SipMediaApplicationEndpointList": {
      "items": {
        "$ref": "#/definitions/SipMediaApplicationEndpoint"
      },
      "maxItems": 1,
      "minItems": 1,
      "type": "array"
    },
    "SipMediaApplicationList": {
      "items": {
        "$ref": "#/definitions/SipMediaApplication"
      },
      "type": "array"
    },
    "SipMediaApplicationLoggingConfiguration": {
      "description": "Logging configuration of the SIP media application.",
      "properties": {
        "EnableSipMediaApplicationMessageLogs": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Enables application message logs for the SIP media application."
            }
          ]
        }
      },
      "type": "object"
    },
    "SipMediaApplicationName": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "SipRule": {
      "description": "The SIP rule details, including name, triggers, and target applications. An AWS account can have multiple SIP rules.",
      "properties": {
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The SIP rule created timestamp, in ISO 8601 format."
            }
          ]
        },
        "Disabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates if the SIP rule is enabled or disabled. You must disable a rule before you can delete it."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRuleName"
            },
            {
              "description": "The name of the SIP rule."
            }
          ]
        },
        "SipRuleId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The SIP rule ID."
            }
          ]
        },
        "TargetApplications": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRuleTargetApplicationList"
            },
            {
              "description": "List of SIP media applications with priority and AWS Region. You can only use one SIP application per AWS Region and priority combination."
            }
          ]
        },
        "TriggerType": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRuleTriggerType"
            },
            {
              "description": "The type of trigger whose value is assigned to the SIP rule in <code>TriggerValue</code>."
            }
          ]
        },
        "TriggerValue": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "If <code>TriggerType</code> is <code>RequestUriHostname</code>, then the value can be the outbound host name of the Amazon Chime Voice Connector. If <code>TriggerType</code> is <code>ToPhoneNumber</code>, then the value can be a customer-owned phone number in E164 format. <code>SipRule</code> is triggered when a SIP rule requests host name or <code>ToPhoneNumber</code> matches in the incoming SIP request."
            }
          ]
        },
        "UpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The SIP rule updated timestamp, in ISO 8601 format."
            }
          ]
        }
      },
      "type": "object"
    },
    "SipRuleList": {
      "items": {
        "$ref": "#/definitions/SipRule"
      },
      "type": "array"
    },
    "SipRuleName": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "SipRuleTargetApplication": {
      "description": "Target SIP media application along with other details like priority and AWS Region to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.",
      "properties": {
        "AwsRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "AWS Region of target application."
            }
          ]
        },
        "Priority": {
          "allOf": [
            {
              "$ref": "#/definitions/SipApplicationPriority"
            },
            {
              "description": "Priority of the SIP media application in the target list."
            }
          ]
        },
        "SipMediaApplicationId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The SIP media application ID."
            }
          ]
        }
      },
      "type": "object"
    },
    "SipRuleTargetApplicationList": {
      "items": {
        "$ref": "#/definitions/SipRuleTargetApplication"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "SipRuleTriggerType": {
      "enum": [
        "ToPhoneNumber",
        "RequestUriHostname"
      ],
      "type": "string"
    },
    "SortOrder": {
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "type": "string"
    },
    "StreamingConfiguration": {
      "description": "The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours.",
      "properties": {
        "DataRetentionInHours": {
          "allOf": [
            {
              "$ref": "#/definitions/DataRetentionInHours"
            },
            {
              "description": "The retention period, in hours, for the Amazon Kinesis data."
            }
          ]
        },
        "Disabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "When true, media streaming to Amazon Kinesis is turned off."
            }
          ]
        },
        "StreamingNotificationTargets": {
          "allOf": [
            {
              "$ref": "#/definitions/StreamingNotificationTargetList"
            },
            {
              "description": "The streaming notification targets."
            }
          ]
        }
      },
      "required": [
        "DataRetentionInHours"
      ],
      "type": "object"
    },
    "StreamingNotificationTarget": {
      "description": "The targeted recipient for a streaming configuration notification.",
      "properties": {
        "NotificationTarget": {
          "allOf": [
            {
              "$ref": "#/definitions/NotificationTarget"
            },
            {
              "description": "The streaming notification target."
            }
          ]
        }
      },
      "required": [
        "NotificationTarget"
      ],
      "type": "object"
    },
    "StreamingNotificationTargetList": {
      "items": {
        "$ref": "#/definitions/StreamingNotificationTarget"
      },
      "maxItems": 3,
      "minItems": 1,
      "type": "array"
    },
    "String": {
      "type": "string"
    },
    "String128": {
      "maxLength": 128,
      "type": "string"
    },
    "StringList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "Tag": {
      "description": "Describes a tag applied to a resource.",
      "properties": {
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKey"
            },
            {
              "description": "The key of the tag."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/TagValue"
            },
            {
              "description": "The value of the tag."
            }
          ]
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "object"
    },
    "TagAttendeeRequest": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/AttendeeTagList"
            },
            {
              "description": "The tag key-value pairs."
            }
          ]
        }
      },
      "required": [
        "Tags"
      ],
      "title": "TagAttendeeRequest",
      "type": "object"
    },
    "TagKey": {
      "format": "password",
      "maxLength": 128,
      "minLength": 1,
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "TagMeetingRequest": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/MeetingTagList"
            },
            {
              "description": "The tag key-value pairs."
            }
          ]
        }
      },
      "required": [
        "Tags"
      ],
      "title": "TagMeetingRequest",
      "type": "object"
    },
    "TagResourceRequest": {
      "properties": {
        "ResourceARN": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The resource ARN."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "The tag key-value pairs."
            }
          ]
        }
      },
      "required": [
        "ResourceARN",
        "Tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagValue": {
      "format": "password",
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "TelephonySettings": {
      "description": "Settings that allow management of telephony permissions for an Amazon Chime user, such as inbound and outbound calling and text messaging.",
      "properties": {
        "InboundCalling": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Allows or denies inbound calling."
            }
          ]
        },
        "OutboundCalling": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Allows or denies outbound calling."
            }
          ]
        },
        "SMS": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Allows or denies SMS messaging."
            }
          ]
        }
      },
      "required": [
        "InboundCalling",
        "OutboundCalling",
        "SMS"
      ],
      "type": "object"
    },
    "Termination": {
      "description": "Termination settings enable your SIP hosts to make outbound calls using your Amazon Chime Voice Connector.",
      "properties": {
        "CallingRegions": {
          "allOf": [
            {
              "$ref": "#/definitions/CallingRegionList"
            },
            {
              "description": "The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required."
            }
          ]
        },
        "CidrAllowedList": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The IP addresses allowed to make calls, in CIDR format. Required."
            }
          ]
        },
        "CpsLimit": {
          "allOf": [
            {
              "$ref": "#/definitions/CpsLimit"
            },
            {
              "description": "The limit on calls per second. Max value based on account service quota. Default value of 1."
            }
          ]
        },
        "DefaultPhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/E164PhoneNumber"
            },
            {
              "description": "The default caller ID phone number."
            }
          ]
        },
        "Disabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "When termination settings are disabled, outbound calls can not be made."
            }
          ]
        }
      },
      "type": "object"
    },
    "TerminationHealth": {
      "description": "The termination health details, including the source IP address and timestamp of the last successful SIP <code>OPTIONS</code> message from your SIP infrastructure.",
      "properties": {
        "Source": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The source IP address."
            }
          ]
        },
        "Timestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The timestamp, in ISO 8601 format."
            }
          ]
        }
      },
      "type": "object"
    },
    "ThrottledClientException": {},
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "TollFreePrefix": {
      "maxLength": 3,
      "minLength": 3,
      "pattern": "^8(00|33|44|55|66|77|88)$",
      "type": "string"
    },
    "UnauthorizedClientException": {},
    "UnprocessableEntityException": {},
    "UntagAttendeeRequest": {
      "properties": {
        "TagKeys": {
          "allOf": [
            {
              "$ref": "#/definitions/AttendeeTagKeyList"
            },
            {
              "description": "The tag keys."
            }
          ]
        }
      },
      "required": [
        "TagKeys"
      ],
      "title": "UntagAttendeeRequest",
      "type": "object"
    },
    "UntagMeetingRequest": {
      "properties": {
        "TagKeys": {
          "allOf": [
            {
              "$ref": "#/definitions/MeetingTagKeyList"
            },
            {
              "description": "The tag keys."
            }
          ]
        }
      },
      "required": [
        "TagKeys"
      ],
      "title": "UntagMeetingRequest",
      "type": "object"
    },
    "UntagResourceRequest": {
      "properties": {
        "ResourceARN": {
          "allOf": [
            {
              "$ref": "#/definitions/Arn"
            },
            {
              "description": "The resource ARN."
            }
          ]
        },
        "TagKeys": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKeyList"
            },
            {
              "description": "The tag keys."
            }
          ]
        }
      },
      "required": [
        "ResourceARN",
        "TagKeys"
      ],
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UpdateAccountRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountName"
            },
            {
              "description": "The new name for the specified Amazon Chime account."
            }
          ]
        }
      },
      "title": "UpdateAccountRequest",
      "type": "object"
    },
    "UpdateAccountResponse": {
      "properties": {
        "Account": {
          "$ref": "#/definitions/Account"
        }
      },
      "type": "object"
    },
    "UpdateAccountSettingsRequest": {
      "properties": {
        "AccountSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountSettings"
            },
            {
              "description": "The Amazon Chime account settings to update."
            }
          ]
        }
      },
      "required": [
        "AccountSettings"
      ],
      "title": "UpdateAccountSettingsRequest",
      "type": "object"
    },
    "UpdateAccountSettingsResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateAppInstanceRequest": {
      "properties": {
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata that you want to change."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyResourceName"
            },
            {
              "description": "The name that you want to change."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "UpdateAppInstanceRequest",
      "type": "object"
    },
    "UpdateAppInstanceResponse": {
      "properties": {
        "AppInstanceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the app instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateAppInstanceUserRequest": {
      "properties": {
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of the app instance user."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/UserName"
            },
            {
              "description": "The name of the app instance user."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "UpdateAppInstanceUserRequest",
      "type": "object"
    },
    "UpdateAppInstanceUserResponse": {
      "properties": {
        "AppInstanceUserArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the app instance user."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateBotRequest": {
      "properties": {
        "Disabled": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "When true, stops the specified bot from running in your account."
            }
          ]
        }
      },
      "title": "UpdateBotRequest",
      "type": "object"
    },
    "UpdateBotResponse": {
      "properties": {
        "Bot": {
          "allOf": [
            {
              "$ref": "#/definitions/Bot"
            },
            {
              "description": "The updated bot details."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateChannelMessageRequest": {
      "properties": {
        "Content": {
          "allOf": [
            {
              "$ref": "#/definitions/Content"
            },
            {
              "description": "The content of the message being updated."
            }
          ]
        },
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of the message being updated."
            }
          ]
        }
      },
      "title": "UpdateChannelMessageRequest",
      "type": "object"
    },
    "UpdateChannelMessageResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        },
        "MessageId": {
          "allOf": [
            {
              "$ref": "#/definitions/MessageId"
            },
            {
              "description": "The ID string of the message being updated."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateChannelReadMarkerRequest": {
      "properties": {},
      "title": "UpdateChannelReadMarkerRequest",
      "type": "object"
    },
    "UpdateChannelReadMarkerResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateChannelRequest": {
      "properties": {
        "Metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/Metadata"
            },
            {
              "description": "The metadata of the channel."
            }
          ]
        },
        "Mode": {
          "allOf": [
            {
              "$ref": "#/definitions/ChannelMode"
            },
            {
              "description": "The mode of the update request."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyResourceName"
            },
            {
              "description": "The name of the channel."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Mode"
      ],
      "title": "UpdateChannelRequest",
      "type": "object"
    },
    "UpdateChannelResponse": {
      "properties": {
        "ChannelArn": {
          "allOf": [
            {
              "$ref": "#/definitions/ChimeArn"
            },
            {
              "description": "The ARN of the channel."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateGlobalSettingsRequest": {
      "properties": {
        "BusinessCalling": {
          "allOf": [
            {
              "$ref": "#/definitions/BusinessCallingSettings"
            },
            {
              "description": "The Amazon Chime Business Calling settings."
            }
          ]
        },
        "VoiceConnector": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorSettings"
            },
            {
              "description": "The Amazon Chime Voice Connector settings."
            }
          ]
        }
      },
      "required": [
        "BusinessCalling",
        "VoiceConnector"
      ],
      "title": "UpdateGlobalSettingsRequest",
      "type": "object"
    },
    "UpdatePhoneNumberRequest": {
      "properties": {
        "CallingName": {
          "allOf": [
            {
              "$ref": "#/definitions/CallingName"
            },
            {
              "description": "The outbound calling name associated with the phone number."
            }
          ]
        },
        "ProductType": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberProductType"
            },
            {
              "description": "The product type."
            }
          ]
        }
      },
      "title": "UpdatePhoneNumberRequest",
      "type": "object"
    },
    "UpdatePhoneNumberRequestItem": {
      "description": "The phone number ID, product type, or calling name fields to update, used with the <a>BatchUpdatePhoneNumber</a> and <a>UpdatePhoneNumber</a> actions.",
      "properties": {
        "CallingName": {
          "allOf": [
            {
              "$ref": "#/definitions/CallingName"
            },
            {
              "description": "The outbound calling name to update."
            }
          ]
        },
        "PhoneNumberId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The phone number ID to update."
            }
          ]
        },
        "ProductType": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumberProductType"
            },
            {
              "description": "The product type to update."
            }
          ]
        }
      },
      "required": [
        "PhoneNumberId"
      ],
      "type": "object"
    },
    "UpdatePhoneNumberRequestItemList": {
      "items": {
        "$ref": "#/definitions/UpdatePhoneNumberRequestItem"
      },
      "type": "array"
    },
    "UpdatePhoneNumberResponse": {
      "properties": {
        "PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/PhoneNumber"
            },
            {
              "description": "The updated phone number details."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdatePhoneNumberSettingsRequest": {
      "properties": {
        "CallingName": {
          "allOf": [
            {
              "$ref": "#/definitions/CallingName"
            },
            {
              "description": "The default outbound calling name for the account."
            }
          ]
        }
      },
      "required": [
        "CallingName"
      ],
      "title": "UpdatePhoneNumberSettingsRequest",
      "type": "object"
    },
    "UpdateProxySessionRequest": {
      "properties": {
        "Capabilities": {
          "allOf": [
            {
              "$ref": "#/definitions/CapabilityList"
            },
            {
              "description": "The proxy session capabilities."
            }
          ]
        },
        "ExpiryMinutes": {
          "allOf": [
            {
              "$ref": "#/definitions/PositiveInteger"
            },
            {
              "description": "The number of minutes allowed for the proxy session."
            }
          ]
        }
      },
      "required": [
        "Capabilities"
      ],
      "title": "UpdateProxySessionRequest",
      "type": "object"
    },
    "UpdateProxySessionResponse": {
      "properties": {
        "ProxySession": {
          "allOf": [
            {
              "$ref": "#/definitions/ProxySession"
            },
            {
              "description": "The proxy session details."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateRoomMembershipRequest": {
      "properties": {
        "Role": {
          "allOf": [
            {
              "$ref": "#/definitions/RoomMembershipRole"
            },
            {
              "description": "The role of the member."
            }
          ]
        }
      },
      "title": "UpdateRoomMembershipRequest",
      "type": "object"
    },
    "UpdateRoomMembershipResponse": {
      "properties": {
        "RoomMembership": {
          "allOf": [
            {
              "$ref": "#/definitions/RoomMembership"
            },
            {
              "description": "The room membership details."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateRoomRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The room name."
            }
          ]
        }
      },
      "title": "UpdateRoomRequest",
      "type": "object"
    },
    "UpdateRoomResponse": {
      "properties": {
        "Room": {
          "allOf": [
            {
              "$ref": "#/definitions/Room"
            },
            {
              "description": "The room details."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateSipMediaApplicationRequest": {
      "properties": {
        "Endpoints": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationEndpointList"
            },
            {
              "description": "The new set of endpoints for the specified SIP media application."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplicationName"
            },
            {
              "description": "The new name for the specified SIP media application."
            }
          ]
        }
      },
      "title": "UpdateSipMediaApplicationRequest",
      "type": "object"
    },
    "UpdateSipMediaApplicationResponse": {
      "properties": {
        "SipMediaApplication": {
          "allOf": [
            {
              "$ref": "#/definitions/SipMediaApplication"
            },
            {
              "description": "The updated SIP media application details."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateSipRuleRequest": {
      "properties": {
        "Disabled": {
          "allOf": [
            {
              "$ref": "#/definitions/NullableBoolean"
            },
            {
              "description": "The new value specified to indicate whether the rule is disabled."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRuleName"
            },
            {
              "description": "The new name for the specified SIP rule."
            }
          ]
        },
        "TargetApplications": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRuleTargetApplicationList"
            },
            {
              "description": "The new value of the list of target applications."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "title": "UpdateSipRuleRequest",
      "type": "object"
    },
    "UpdateSipRuleResponse": {
      "properties": {
        "SipRule": {
          "allOf": [
            {
              "$ref": "#/definitions/SipRule"
            },
            {
              "description": "Updated SIP rule details."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateUserRequest": {
      "properties": {
        "AlexaForBusinessMetadata": {
          "allOf": [
            {
              "$ref": "#/definitions/AlexaForBusinessMetadata"
            },
            {
              "description": "The Alexa for Business metadata."
            }
          ]
        },
        "LicenseType": {
          "allOf": [
            {
              "$ref": "#/definitions/License"
            },
            {
              "description": "The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to."
            }
          ]
        },
        "UserType": {
          "allOf": [
            {
              "$ref": "#/definitions/UserType"
            },
            {
              "description": "The user type."
            }
          ]
        }
      },
      "title": "UpdateUserRequest",
      "type": "object"
    },
    "UpdateUserRequestItem": {
      "description": "The user ID and user fields to update, used with the <a>BatchUpdateUser</a> action.",
      "properties": {
        "AlexaForBusinessMetadata": {
          "allOf": [
            {
              "$ref": "#/definitions/AlexaForBusinessMetadata"
            },
            {
              "description": "The Alexa for Business metadata."
            }
          ]
        },
        "LicenseType": {
          "allOf": [
            {
              "$ref": "#/definitions/License"
            },
            {
              "description": "The user license type."
            }
          ]
        },
        "UserId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The user ID."
            }
          ]
        },
        "UserType": {
          "allOf": [
            {
              "$ref": "#/definitions/UserType"
            },
            {
              "description": "The user type."
            }
          ]
        }
      },
      "required": [
        "UserId"
      ],
      "type": "object"
    },
    "UpdateUserRequestItemList": {
      "items": {
        "$ref": "#/definitions/UpdateUserRequestItem"
      },
      "maxItems": 20,
      "type": "array"
    },
    "UpdateUserResponse": {
      "properties": {
        "User": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "description": "The updated user details."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateUserSettingsRequest": {
      "properties": {
        "UserSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/UserSettings"
            },
            {
              "description": "The user settings to update."
            }
          ]
        }
      },
      "required": [
        "UserSettings"
      ],
      "title": "UpdateUserSettingsRequest",
      "type": "object"
    },
    "UpdateVoiceConnectorGroupRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorGroupName"
            },
            {
              "description": "The name of the Amazon Chime Voice Connector group."
            }
          ]
        },
        "VoiceConnectorItems": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorItemList"
            },
            {
              "description": "The <code>VoiceConnectorItems</code> to associate with the group."
            }
          ]
        }
      },
      "required": [
        "Name",
        "VoiceConnectorItems"
      ],
      "title": "UpdateVoiceConnectorGroupRequest",
      "type": "object"
    },
    "UpdateVoiceConnectorGroupResponse": {
      "properties": {
        "VoiceConnectorGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorGroup"
            },
            {
              "description": "The updated Amazon Chime Voice Connector group details."
            }
          ]
        }
      },
      "type": "object"
    },
    "UpdateVoiceConnectorRequest": {
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorName"
            },
            {
              "description": "The name of the Amazon Chime Voice Connector."
            }
          ]
        },
        "RequireEncryption": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "When enabled, requires encryption for the Amazon Chime Voice Connector."
            }
          ]
        }
      },
      "required": [
        "Name",
        "RequireEncryption"
      ],
      "title": "UpdateVoiceConnectorRequest",
      "type": "object"
    },
    "UpdateVoiceConnectorResponse": {
      "properties": {
        "VoiceConnector": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnector"
            },
            {
              "description": "The updated Amazon Chime Voice Connector details."
            }
          ]
        }
      },
      "type": "object"
    },
    "UriType": {
      "maxLength": 4096,
      "type": "string"
    },
    "UrlType": {
      "maxLength": 4096,
      "type": "string"
    },
    "User": {
      "description": "The user on the Amazon Chime account.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon Chime account ID."
            }
          ]
        },
        "AlexaForBusinessMetadata": {
          "allOf": [
            {
              "$ref": "#/definitions/AlexaForBusinessMetadata"
            },
            {
              "description": "The Alexa for Business metadata."
            }
          ]
        },
        "DisplayName": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The display name of the user."
            }
          ]
        },
        "InvitedOn": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format."
            }
          ]
        },
        "LicenseType": {
          "allOf": [
            {
              "$ref": "#/definitions/License"
            },
            {
              "description": "The license type for the user."
            }
          ]
        },
        "PersonalPIN": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The user's personal meeting PIN."
            }
          ]
        },
        "PrimaryEmail": {
          "allOf": [
            {
              "$ref": "#/definitions/EmailAddress"
            },
            {
              "description": "The primary email address of the user."
            }
          ]
        },
        "PrimaryProvisionedNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/SensitiveString"
            },
            {
              "description": "The primary phone number associated with the user."
            }
          ]
        },
        "RegisteredOn": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "Date and time when the user is registered, in ISO 8601 format."
            }
          ]
        },
        "UserId": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The user ID."
            }
          ]
        },
        "UserInvitationStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/InviteStatus"
            },
            {
              "description": "The user invite status."
            }
          ]
        },
        "UserRegistrationStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/RegistrationStatus"
            },
            {
              "description": "The user registration status."
            }
          ]
        },
        "UserType": {
          "allOf": [
            {
              "$ref": "#/definitions/UserType"
            },
            {
              "description": "The user type."
            }
          ]
        }
      },
      "required": [
        "UserId"
      ],
      "type": "object"
    },
    "UserEmailList": {
      "items": {
        "$ref": "#/definitions/EmailAddress"
      },
      "maxItems": 50,
      "type": "array"
    },
    "UserError": {
      "description": "The list of errors returned when errors are encountered during the <a>BatchSuspendUser</a>, <a>BatchUnsuspendUser</a>, or <a>BatchUpdateUser</a> actions. This includes user IDs, error codes, and error messages.",
      "properties": {
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorCode"
            },
            {
              "description": "The error code."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The error message."
            }
          ]
        },
        "UserId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The user ID for which the action failed."
            }
          ]
        }
      },
      "type": "object"
    },
    "UserErrorList": {
      "items": {
        "$ref": "#/definitions/UserError"
      },
      "type": "array"
    },
    "UserId": {
      "format": "password",
      "maxLength": 50,
      "minLength": 1,
      "pattern": "[A-Za-z0-9][A-Za-z0-9\\:\\-\\_\\.\\@]{3,50}[A-Za-z0-9]",
      "type": "string"
    },
    "UserIdList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "maxItems": 50,
      "type": "array"
    },
    "UserList": {
      "items": {
        "$ref": "#/definitions/User"
      },
      "type": "array"
    },
    "UserName": {
      "format": "password",
      "maxLength": 100,
      "minLength": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "UserSettings": {
      "description": "Settings associated with an Amazon Chime user, including inbound and outbound calling and text messaging.",
      "properties": {
        "Telephony": {
          "allOf": [
            {
              "$ref": "#/definitions/TelephonySettings"
            },
            {
              "description": "The telephony settings associated with the user."
            }
          ]
        }
      },
      "required": [
        "Telephony"
      ],
      "type": "object"
    },
    "UserType": {
      "enum": [
        "PrivateUser",
        "SharedDevice"
      ],
      "type": "string"
    },
    "VoiceConnector": {
      "description": "The Amazon Chime Voice Connector configuration, including outbound host name and encryption settings.",
      "properties": {
        "AwsRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorAwsRegion"
            },
            {
              "description": "The AWS Region in which the Amazon Chime Voice Connector is created. Default: <code>us-east-1</code>."
            }
          ]
        },
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The Amazon Chime Voice Connector creation timestamp, in ISO 8601 format."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorName"
            },
            {
              "description": "The name of the Amazon Chime Voice Connector."
            }
          ]
        },
        "OutboundHostName": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The outbound host name for the Amazon Chime Voice Connector."
            }
          ]
        },
        "RequireEncryption": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Designates whether encryption is required for the Amazon Chime Voice Connector."
            }
          ]
        },
        "UpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The updated Amazon Chime Voice Connector timestamp, in ISO 8601 format."
            }
          ]
        },
        "VoiceConnectorId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Chime Voice Connector ID."
            }
          ]
        }
      },
      "type": "object"
    },
    "VoiceConnectorAwsRegion": {
      "enum": [
        "us-east-1",
        "us-west-2"
      ],
      "type": "string"
    },
    "VoiceConnectorGroup": {
      "description": "The Amazon Chime Voice Connector group configuration, including associated Amazon Chime Voice Connectors. You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.",
      "properties": {
        "CreatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The Amazon Chime Voice Connector group creation timestamp, in ISO 8601 format."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorGroupName"
            },
            {
              "description": "The name of the Amazon Chime Voice Connector group."
            }
          ]
        },
        "UpdatedTimestamp": {
          "allOf": [
            {
              "$ref": "#/definitions/Iso8601Timestamp"
            },
            {
              "description": "The updated Amazon Chime Voice Connector group timestamp, in ISO 8601 format."
            }
          ]
        },
        "VoiceConnectorGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Chime Voice Connector group ID."
            }
          ]
        },
        "VoiceConnectorItems": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorItemList"
            },
            {
              "description": "The Amazon Chime Voice Connectors to which to route inbound calls."
            }
          ]
        }
      },
      "type": "object"
    },
    "VoiceConnectorGroupList": {
      "items": {
        "$ref": "#/definitions/VoiceConnectorGroup"
      },
      "type": "array"
    },
    "VoiceConnectorGroupName": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "VoiceConnectorItem": {
      "description": "For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3 <code>VoiceConnectorItems</code> per Amazon Chime Voice Connector group.",
      "properties": {
        "Priority": {
          "allOf": [
            {
              "$ref": "#/definitions/VoiceConnectorItemPriority"
            },
            {
              "description": "The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first. "
            }
          ]
        },
        "VoiceConnectorId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Chime Voice Connector ID."
            }
          ]
        }
      },
      "required": [
        "VoiceConnectorId",
        "Priority"
      ],
      "type": "object"
    },
    "VoiceConnectorItemList": {
      "items": {
        "$ref": "#/definitions/VoiceConnectorItem"
      },
      "type": "array"
    },
    "VoiceConnectorItemPriority": {
      "maximum": 99,
      "minimum": 1,
      "type": "integer"
    },
    "VoiceConnectorList": {
      "items": {
        "$ref": "#/definitions/VoiceConnector"
      },
      "type": "array"
    },
    "VoiceConnectorName": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "VoiceConnectorSettings": {
      "description": "The Amazon Chime Voice Connector settings. Includes any Amazon S3 buckets designated for storing call detail records.",
      "properties": {
        "CdrBucket": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The Amazon S3 bucket designated for call detail record storage."
            }
          ]
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/chime/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}