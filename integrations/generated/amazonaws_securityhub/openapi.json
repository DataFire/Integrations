{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "<p>Security Hub provides you with a comprehensive view of the security state of your AWS environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from AWS accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <i> <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html\">AWS Security Hub User Guide</a> </i>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the AWS Region that is currently active or in the specific AWS Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, execute the same command for each Region to apply the change to.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code> <a>CreateMembers</a> </code> to add a member account to Security Hub, the association of the member account with the master account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code> <a>BatchEnableStandards</a> </code> - <code>RateLimit</code> of 1 request per second, <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code> <a>GetFindings</a> </code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code> <a>UpdateFindings</a> </code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p> <code> <a>UpdateStandardsControl</a> </code> - <code>RateLimit</code> of 1 request per second, <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "AWS SecurityHub",
    "version": "2018-10-26",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/securityhub-2018-10-26.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "securityhub",
    "x-datafire": {
      "name": "amazonaws_securityhub",
      "type": "openapi"
    }
  },
  "host": "securityhub.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/accounts": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisableSecurityHubResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Disables Security Hub in your account only in the current Region. To disable Security Hub in all Regions, you must submit one request per Region where you have enabled Security Hub.</p> <p>When you disable Security Hub for a master account, it doesn't disable Security Hub for any associated member accounts.</p> <p>When you disable Security Hub, your existing findings and insights and any Security Hub configuration settings are deleted after 90 days and cannot be recovered. Any standards that were enabled are disabled, and your master and member account associations are removed.</p> <p>If you want to save your existing findings, you must export them before you disable Security Hub.</p>",
        "operationId": "DisableSecurityHub"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the Hub resource to retrieve.",
            "in": "query",
            "name": "HubArn",
            "pattern": ".*\\S.*",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeHubResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Returns details about the Hub resource in your account, including the <code>HubArn</code> and the time when you enabled Security Hub.",
        "operationId": "DescribeHub"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AutoEnableControls": {
                  "description": "<p>Whether to automatically enable new controls when they are added to standards that are enabled.</p> <p>By default, this is set to <code>true</code>, and new controls are enabled automatically. To not automatically enable new controls, set this to <code>false</code>. </p>",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateSecurityHubConfigurationResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Updates configuration options for Security Hub.",
        "operationId": "UpdateSecurityHubConfiguration"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "EnableDefaultStandards": {
                  "description": "Whether to enable the security standards that Security Hub has designated as automatically enabled. If you do not provide a value for <code>EnableDefaultStandards</code>, it is set to <code>true</code>. To not enable the automatically enabled standards, set <code>EnableDefaultStandards</code> to <code>false</code>.",
                  "type": "boolean"
                },
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "The tags to add to the hub resource when you enable Security Hub.",
                  "maxProperties": 50,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnableSecurityHubResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          },
          "484": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "description": "<p>Enables Security Hub for your account in the current Region or the Region you specify in the request.</p> <p>When you enable Security Hub, you grant to Security Hub the permissions necessary to gather findings from other services that are integrated with Security Hub.</p> <p>When you use the <code>EnableSecurityHub</code> operation to enable Security Hub, you also automatically enable the following standards.</p> <ul> <li> <p>CIS AWS Foundations</p> </li> <li> <p>AWS Foundational Security Best Practices</p> </li> </ul> <p>You do not enable the Payment Card Industry Data Security Standard (PCI DSS) standard. </p> <p>To not enable the automatically enabled standards, set <code>EnableDefaultStandards</code> to <code>false</code>.</p> <p>After you enable Security Hub, to enable a standard, use the <code> <a>BatchEnableStandards</a> </code> operation. To disable a standard, use the <code> <a>BatchDisableStandards</a> </code> operation.</p> <p>To learn more, see <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-settingup.html\">Setting Up AWS Security Hub</a> in the <i>AWS Security Hub User Guide</i>.</p>",
        "operationId": "EnableSecurityHub"
      }
    },
    "/actionTargets": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Description": {
                  "description": "The description for the custom action target.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                },
                "Id": {
                  "description": "The ID for the custom action target.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the custom action target.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "Name",
                "Description",
                "Id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateActionTargetResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          }
        },
        "description": "<p>Creates a custom action target in Security Hub.</p> <p>You can use custom actions on findings and insights in Security Hub to trigger target actions in Amazon CloudWatch Events.</p>",
        "operationId": "CreateActionTarget"
      }
    },
    "/actionTargets/get": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ActionTargetArns": {
                  "description": "A list of custom action target ARNs for the custom action targets to retrieve.",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "type": "array"
                },
                "MaxResults": {
                  "description": "The maximum number of results to return.",
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "<p>The token that is required for pagination. On your first call to the <code>DescribeActionTargets</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeActionTargetsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Returns a list of the custom action targets in Security Hub in your account.",
        "operationId": "DescribeActionTargets"
      }
    },
    "/actionTargets/{ActionTargetArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the custom action target to delete.",
            "in": "path",
            "name": "ActionTargetArn",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteActionTargetResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Deletes a custom action target from Security Hub.</p> <p>Deleting a custom action target does not affect any findings or insights that were already sent to Amazon CloudWatch Events using the custom action.</p>",
        "operationId": "DeleteActionTarget"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the custom action target to update.",
            "in": "path",
            "name": "ActionTargetArn",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Description": {
                  "description": "The updated description for the custom action target.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                },
                "Name": {
                  "description": "The updated name of the custom action target.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateActionTargetResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Updates the name and description of a custom action target in Security Hub.",
        "operationId": "UpdateActionTarget"
      }
    },
    "/findings": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Filters": {
                  "description": "<p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>",
                  "properties": {
                    "AwsAccountId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The AWS account ID that a finding is generated in."
                        }
                      ]
                    },
                    "CompanyName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the findings provider (company) that owns the solution (product) that generates findings."
                        }
                      ]
                    },
                    "ComplianceStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details."
                        }
                      ]
                    },
                    "Confidence": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "<p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>"
                        }
                      ]
                    },
                    "CreatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "Criticality": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "<p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>"
                        }
                      ]
                    },
                    "Description": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding's description."
                        }
                      ]
                    },
                    "FirstObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "GeneratorId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc."
                        }
                      ]
                    },
                    "Id": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The security findings provider-specific identifier for a finding."
                        }
                      ]
                    },
                    "Keyword": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KeywordFilterList"
                        },
                        {
                          "description": "A keyword for a finding."
                        }
                      ]
                    },
                    "LastObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "MalwareName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the malware that was observed."
                        }
                      ]
                    },
                    "MalwarePath": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The filesystem path of the malware that was observed."
                        }
                      ]
                    },
                    "MalwareState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The state of the malware that was observed."
                        }
                      ]
                    },
                    "MalwareType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The type of the malware that was observed."
                        }
                      ]
                    },
                    "NetworkDestinationDomain": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The destination domain of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationIpV4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The destination IPv4 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationIpV6": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The destination IPv6 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationPort": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The destination port of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDirection": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Indicates the direction of network traffic associated with a finding."
                        }
                      ]
                    },
                    "NetworkProtocol": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The protocol of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceDomain": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source domain of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceIpV4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The source IPv4 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceIpV6": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The source IPv6 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceMac": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source media access control (MAC) address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourcePort": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The source port of network-related information about a finding."
                        }
                      ]
                    },
                    "NoteText": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The text of a note."
                        }
                      ]
                    },
                    "NoteUpdatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The timestamp of when the note was updated."
                        }
                      ]
                    },
                    "NoteUpdatedBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The principal that created a note."
                        }
                      ]
                    },
                    "ProcessLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the process was launched."
                        }
                      ]
                    },
                    "ProcessName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the process."
                        }
                      ]
                    },
                    "ProcessParentPid": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The parent process ID."
                        }
                      ]
                    },
                    "ProcessPath": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The path to the process executable."
                        }
                      ]
                    },
                    "ProcessPid": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The process ID."
                        }
                      ]
                    },
                    "ProcessTerminatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the process was terminated."
                        }
                      ]
                    },
                    "ProductArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub."
                        }
                      ]
                    },
                    "ProductFields": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format."
                        }
                      ]
                    },
                    "ProductName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the solution (product) that generates findings."
                        }
                      ]
                    },
                    "RecommendationText": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The recommendation of what to do about the issue described in a finding."
                        }
                      ]
                    },
                    "RecordState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The updated record state for the finding."
                        }
                      ]
                    },
                    "RelatedFindingsId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The solution-generated identifier for a related finding."
                        }
                      ]
                    },
                    "RelatedFindingsProductArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The ARN of the solution that generated a related finding."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIamInstanceProfileArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The IAM profile ARN of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceImageId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The Amazon Machine Image (AMI) ID of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIpV4Addresses": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The IPv4 addresses associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIpV6Addresses": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The IPv6 addresses associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceKeyName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The key name associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date and time the instance was launched."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceSubnetId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the subnet that the instance was launched in."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The instance type of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceVpcId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the VPC that the instance was launched in."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyCreatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The creation date/time of the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The status of the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyUserName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The user associated with the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsS3BucketOwnerId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical user ID of the owner of the S3 bucket."
                        }
                      ]
                    },
                    "ResourceAwsS3BucketOwnerName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The display name of the owner of the S3 bucket."
                        }
                      ]
                    },
                    "ResourceContainerImageId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the image related to a finding."
                        }
                      ]
                    },
                    "ResourceContainerImageName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the image related to a finding."
                        }
                      ]
                    },
                    "ResourceContainerLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the container was started."
                        }
                      ]
                    },
                    "ResourceContainerName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the container related to a finding."
                        }
                      ]
                    },
                    "ResourceDetailsOther": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "The details of a resource that doesn't have a specific subfield for the resource type defined."
                        }
                      ]
                    },
                    "ResourceId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical identifier for the given resource type."
                        }
                      ]
                    },
                    "ResourcePartition": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical AWS partition name that the Region is assigned to."
                        }
                      ]
                    },
                    "ResourceRegion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical AWS external Region name where this resource is located."
                        }
                      ]
                    },
                    "ResourceTags": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A list of AWS tags associated with a resource at the time the finding was processed."
                        }
                      ]
                    },
                    "ResourceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Specifies the type of the resource that details are provided for."
                        }
                      ]
                    },
                    "SeverityLabel": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The label of a finding's severity."
                        }
                      ]
                    },
                    "SeverityNormalized": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The normalized severity of a finding."
                        }
                      ]
                    },
                    "SeverityProduct": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The native severity as defined by the security-findings provider's solution that generated the finding."
                        }
                      ]
                    },
                    "SourceUrl": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A URL that links to a page about the current finding in the security-findings provider's solution."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorCategory": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The category of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorLastObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time of the last observation of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorSource": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source of the threat intelligence."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorSourceUrl": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The URL for more details from the source of the threat intelligence."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The type of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorValue": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The value of a threat intelligence indicator."
                        }
                      ]
                    },
                    "Title": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding's title."
                        }
                      ]
                    },
                    "Type": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding."
                        }
                      ]
                    },
                    "UpdatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. "
                        }
                      ]
                    },
                    "UserDefinedFields": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
                        }
                      ]
                    },
                    "VerificationState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The veracity of a finding."
                        }
                      ]
                    },
                    "WorkflowState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "<p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>"
                        }
                      ]
                    },
                    "WorkflowStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "<p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>SUPPRESSED</code> - The finding will not be reviewed again and will not be acted upon.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Note": {
                  "description": "The updated note.",
                  "properties": {
                    "Text": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NonEmptyString"
                        },
                        {
                          "description": "The updated note text."
                        }
                      ]
                    },
                    "UpdatedBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NonEmptyString"
                        },
                        {
                          "description": "The principal that updated the note."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "RecordState": {
                  "description": "The updated record state for the finding.",
                  "enum": [
                    "ACTIVE",
                    "ARCHIVED"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "Filters"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateFindingsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p> <code>UpdateFindings</code> is deprecated. Instead of <code>UpdateFindings</code>, use <code>BatchUpdateFindings</code>.</p> <p>Updates the <code>Note</code> and <code>RecordState</code> of the Security Hub-aggregated findings that the filter attributes specify. Any member account that can view the finding also sees the update to the finding.</p>",
        "operationId": "UpdateFindings"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Filters": {
                  "description": "<p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>",
                  "properties": {
                    "AwsAccountId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The AWS account ID that a finding is generated in."
                        }
                      ]
                    },
                    "CompanyName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the findings provider (company) that owns the solution (product) that generates findings."
                        }
                      ]
                    },
                    "ComplianceStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details."
                        }
                      ]
                    },
                    "Confidence": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "<p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>"
                        }
                      ]
                    },
                    "CreatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "Criticality": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "<p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>"
                        }
                      ]
                    },
                    "Description": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding's description."
                        }
                      ]
                    },
                    "FirstObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "GeneratorId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc."
                        }
                      ]
                    },
                    "Id": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The security findings provider-specific identifier for a finding."
                        }
                      ]
                    },
                    "Keyword": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KeywordFilterList"
                        },
                        {
                          "description": "A keyword for a finding."
                        }
                      ]
                    },
                    "LastObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "MalwareName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the malware that was observed."
                        }
                      ]
                    },
                    "MalwarePath": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The filesystem path of the malware that was observed."
                        }
                      ]
                    },
                    "MalwareState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The state of the malware that was observed."
                        }
                      ]
                    },
                    "MalwareType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The type of the malware that was observed."
                        }
                      ]
                    },
                    "NetworkDestinationDomain": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The destination domain of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationIpV4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The destination IPv4 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationIpV6": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The destination IPv6 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationPort": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The destination port of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDirection": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Indicates the direction of network traffic associated with a finding."
                        }
                      ]
                    },
                    "NetworkProtocol": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The protocol of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceDomain": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source domain of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceIpV4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The source IPv4 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceIpV6": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The source IPv6 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceMac": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source media access control (MAC) address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourcePort": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The source port of network-related information about a finding."
                        }
                      ]
                    },
                    "NoteText": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The text of a note."
                        }
                      ]
                    },
                    "NoteUpdatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The timestamp of when the note was updated."
                        }
                      ]
                    },
                    "NoteUpdatedBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The principal that created a note."
                        }
                      ]
                    },
                    "ProcessLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the process was launched."
                        }
                      ]
                    },
                    "ProcessName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the process."
                        }
                      ]
                    },
                    "ProcessParentPid": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The parent process ID."
                        }
                      ]
                    },
                    "ProcessPath": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The path to the process executable."
                        }
                      ]
                    },
                    "ProcessPid": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The process ID."
                        }
                      ]
                    },
                    "ProcessTerminatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the process was terminated."
                        }
                      ]
                    },
                    "ProductArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub."
                        }
                      ]
                    },
                    "ProductFields": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format."
                        }
                      ]
                    },
                    "ProductName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the solution (product) that generates findings."
                        }
                      ]
                    },
                    "RecommendationText": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The recommendation of what to do about the issue described in a finding."
                        }
                      ]
                    },
                    "RecordState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The updated record state for the finding."
                        }
                      ]
                    },
                    "RelatedFindingsId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The solution-generated identifier for a related finding."
                        }
                      ]
                    },
                    "RelatedFindingsProductArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The ARN of the solution that generated a related finding."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIamInstanceProfileArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The IAM profile ARN of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceImageId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The Amazon Machine Image (AMI) ID of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIpV4Addresses": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The IPv4 addresses associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIpV6Addresses": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The IPv6 addresses associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceKeyName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The key name associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date and time the instance was launched."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceSubnetId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the subnet that the instance was launched in."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The instance type of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceVpcId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the VPC that the instance was launched in."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyCreatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The creation date/time of the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The status of the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyUserName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The user associated with the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsS3BucketOwnerId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical user ID of the owner of the S3 bucket."
                        }
                      ]
                    },
                    "ResourceAwsS3BucketOwnerName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The display name of the owner of the S3 bucket."
                        }
                      ]
                    },
                    "ResourceContainerImageId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the image related to a finding."
                        }
                      ]
                    },
                    "ResourceContainerImageName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the image related to a finding."
                        }
                      ]
                    },
                    "ResourceContainerLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the container was started."
                        }
                      ]
                    },
                    "ResourceContainerName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the container related to a finding."
                        }
                      ]
                    },
                    "ResourceDetailsOther": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "The details of a resource that doesn't have a specific subfield for the resource type defined."
                        }
                      ]
                    },
                    "ResourceId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical identifier for the given resource type."
                        }
                      ]
                    },
                    "ResourcePartition": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical AWS partition name that the Region is assigned to."
                        }
                      ]
                    },
                    "ResourceRegion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical AWS external Region name where this resource is located."
                        }
                      ]
                    },
                    "ResourceTags": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A list of AWS tags associated with a resource at the time the finding was processed."
                        }
                      ]
                    },
                    "ResourceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Specifies the type of the resource that details are provided for."
                        }
                      ]
                    },
                    "SeverityLabel": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The label of a finding's severity."
                        }
                      ]
                    },
                    "SeverityNormalized": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The normalized severity of a finding."
                        }
                      ]
                    },
                    "SeverityProduct": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The native severity as defined by the security-findings provider's solution that generated the finding."
                        }
                      ]
                    },
                    "SourceUrl": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A URL that links to a page about the current finding in the security-findings provider's solution."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorCategory": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The category of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorLastObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time of the last observation of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorSource": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source of the threat intelligence."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorSourceUrl": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The URL for more details from the source of the threat intelligence."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The type of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorValue": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The value of a threat intelligence indicator."
                        }
                      ]
                    },
                    "Title": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding's title."
                        }
                      ]
                    },
                    "Type": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding."
                        }
                      ]
                    },
                    "UpdatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. "
                        }
                      ]
                    },
                    "UserDefinedFields": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
                        }
                      ]
                    },
                    "VerificationState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The veracity of a finding."
                        }
                      ]
                    },
                    "WorkflowState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "<p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>"
                        }
                      ]
                    },
                    "WorkflowStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "<p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>SUPPRESSED</code> - The finding will not be reviewed again and will not be acted upon.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "MaxResults": {
                  "description": "The maximum number of findings to return.",
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "<p>The token that is required for pagination. On your first call to the <code>GetFindings</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>",
                  "type": "string"
                },
                "SortCriteria": {
                  "description": "The finding attributes used to sort the list of returned findings.",
                  "items": {
                    "$ref": "#/definitions/SortCriterion"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetFindingsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "Returns a list of findings that match the specified criteria.",
        "operationId": "GetFindings"
      }
    },
    "/findings/batchupdate": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Confidence": {
                  "description": "<p>The updated value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>",
                  "maximum": 100,
                  "minimum": 0,
                  "type": "integer"
                },
                "Criticality": {
                  "description": "<p>The updated value for the level of importance assigned to the resources associated with the findings.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. </p>",
                  "maximum": 100,
                  "minimum": 0,
                  "type": "integer"
                },
                "FindingIdentifiers": {
                  "description": "<p>The list of findings to update. <code>BatchUpdateFindings</code> can be used to update up to 100 findings at a time.</p> <p>For each finding, the list provides the finding identifier and the ARN of the finding provider.</p>",
                  "items": {
                    "$ref": "#/definitions/AwsSecurityFindingIdentifier"
                  },
                  "type": "array"
                },
                "Note": {
                  "description": "The updated note.",
                  "properties": {
                    "Text": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NonEmptyString"
                        },
                        {
                          "description": "The updated note text."
                        }
                      ]
                    },
                    "UpdatedBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NonEmptyString"
                        },
                        {
                          "description": "The principal that updated the note."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "RelatedFindings": {
                  "description": "A list of findings that are related to the updated findings.",
                  "items": {
                    "$ref": "#/definitions/RelatedFinding"
                  },
                  "type": "array"
                },
                "Severity": {
                  "description": "Updates to the severity information for a finding.",
                  "properties": {
                    "Label": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SeverityLabel"
                        },
                        {
                          "description": "<p>The severity value of the finding. The allowed values are the following.</p> <ul> <li> <p> <code>INFORMATIONAL</code> - No issue was found.</p> </li> <li> <p> <code>LOW</code> - The issue does not require action on its own.</p> </li> <li> <p> <code>MEDIUM</code> - The issue must be addressed but not urgently.</p> </li> <li> <p> <code>HIGH</code> - The issue must be addressed as a priority.</p> </li> <li> <p> <code>CRITICAL</code> - The issue must be remediated immediately to avoid it escalating.</p> </li> </ul>"
                        }
                      ]
                    },
                    "Normalized": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/RatioScale"
                        },
                        {
                          "description": "<p>The normalized severity for the finding. This attribute is to be deprecated in favor of <code>Label</code>.</p> <p>If you provide <code>Normalized</code> and do not provide <code>Label</code>, <code>Label</code> is set automatically as follows.</p> <ul> <li> <p>0 - <code>INFORMATIONAL</code> </p> </li> <li> <p>1–39 - <code>LOW</code> </p> </li> <li> <p>40–69 - <code>MEDIUM</code> </p> </li> <li> <p>70–89 - <code>HIGH</code> </p> </li> <li> <p>90–100 - <code>CRITICAL</code> </p> </li> </ul>"
                        }
                      ]
                    },
                    "Product": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Double"
                        },
                        {
                          "description": "The native severity as defined by the AWS service or integrated partner product that generated the finding."
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "Types": {
                  "description": "<p>One or more finding types in the format of namespace/category/classifier that classify a finding.</p> <p>Valid namespace values are as follows.</p> <ul> <li> <p>Software and Configuration Checks</p> </li> <li> <p>TTPs</p> </li> <li> <p>Effects</p> </li> <li> <p>Unusual Behaviors</p> </li> <li> <p>Sensitive Data Identifications </p> </li> </ul>",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "type": "array"
                },
                "UserDefinedFields": {
                  "additionalProperties": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "description": "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding.",
                  "type": "object"
                },
                "VerificationState": {
                  "description": "<p>Indicates the veracity of a finding.</p> <p>The available values for <code>VerificationState</code> are as follows.</p> <ul> <li> <p> <code>UNKNOWN</code> – The default disposition of a security finding</p> </li> <li> <p> <code>TRUE_POSITIVE</code> – The security finding is confirmed</p> </li> <li> <p> <code>FALSE_POSITIVE</code> – The security finding was determined to be a false alarm</p> </li> <li> <p> <code>BENIGN_POSITIVE</code> – A special case of <code>TRUE_POSITIVE</code> where the finding doesn't pose any threat, is expected, or both</p> </li> </ul>",
                  "enum": [
                    "UNKNOWN",
                    "TRUE_POSITIVE",
                    "FALSE_POSITIVE",
                    "BENIGN_POSITIVE"
                  ],
                  "type": "string"
                },
                "Workflow": {
                  "description": "Used to update information about the investigation into the finding.",
                  "properties": {
                    "Status": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/WorkflowStatus"
                        },
                        {
                          "description": "<p>The status of the investigation into the finding. The allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> </li> <li> <p> <code>NOTIFIED</code> - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved.</p> </li> <li> <p> <code>SUPPRESSED</code> - The finding will not be reviewed again and will not be acted upon.</p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "FindingIdentifiers"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchUpdateFindingsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          }
        },
        "description": "<p>Used by Security Hub customers to update information about their investigation into a finding. Requested by master accounts or member accounts. Master accounts can update findings for their account and their member accounts. Member accounts can update findings for their account.</p> <p>Updates from <code>BatchUpdateFindings</code> do not affect the value of <code>UpdatedAt</code> for a finding.</p> <p>Master and member accounts can use <code>BatchUpdateFindings</code> to update the following finding fields and objects.</p> <ul> <li> <p> <code>Confidence</code> </p> </li> <li> <p> <code>Criticality</code> </p> </li> <li> <p> <code>Note</code> </p> </li> <li> <p> <code>RelatedFindings</code> </p> </li> <li> <p> <code>Severity</code> </p> </li> <li> <p> <code>Types</code> </p> </li> <li> <p> <code>UserDefinedFields</code> </p> </li> <li> <p> <code>VerificationState</code> </p> </li> <li> <p> <code>Workflow</code> </p> </li> </ul> <p>You can configure IAM policies to restrict access to fields and field values. For example, you might not want member accounts to be able to suppress findings or change the finding severity. See <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/finding-update-batchupdatefindings.html#batchupdatefindings-configure-access\">Configuring access to BatchUpdateFindings</a> in the <i>AWS Security Hub User Guide</i>.</p>",
        "operationId": "BatchUpdateFindings"
      }
    },
    "/findings/import": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Findings": {
                  "description": "A list of findings to import. To successfully import a finding, it must follow the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html\">AWS Security Finding Format</a>. Maximum of 100 findings per request.",
                  "items": {
                    "$ref": "#/definitions/AwsSecurityFinding"
                  },
                  "type": "array"
                }
              },
              "required": [
                "Findings"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchImportFindingsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          }
        },
        "description": "<p>Imports security findings generated from an integrated third-party product into Security Hub. This action is requested by the integrated product to import its findings into Security Hub.</p> <p>The maximum allowed size for a finding is 240 Kb. An error is returned for any finding larger than 240 Kb.</p> <p>After a finding is created, <code>BatchImportFindings</code> cannot be used to update the following finding fields and objects, which Security Hub customers use to manage their investigation workflow.</p> <ul> <li> <p> <code>Confidence</code> </p> </li> <li> <p> <code>Criticality</code> </p> </li> <li> <p> <code>Note</code> </p> </li> <li> <p> <code>RelatedFindings</code> </p> </li> <li> <p> <code>Severity</code> </p> </li> <li> <p> <code>Types</code> </p> </li> <li> <p> <code>UserDefinedFields</code> </p> </li> <li> <p> <code>VerificationState</code> </p> </li> <li> <p> <code>Workflow</code> </p> </li> </ul>",
        "operationId": "BatchImportFindings"
      }
    },
    "/insights": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Filters": {
                  "description": "<p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>",
                  "properties": {
                    "AwsAccountId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The AWS account ID that a finding is generated in."
                        }
                      ]
                    },
                    "CompanyName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the findings provider (company) that owns the solution (product) that generates findings."
                        }
                      ]
                    },
                    "ComplianceStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details."
                        }
                      ]
                    },
                    "Confidence": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "<p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>"
                        }
                      ]
                    },
                    "CreatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "Criticality": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "<p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>"
                        }
                      ]
                    },
                    "Description": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding's description."
                        }
                      ]
                    },
                    "FirstObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "GeneratorId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc."
                        }
                      ]
                    },
                    "Id": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The security findings provider-specific identifier for a finding."
                        }
                      ]
                    },
                    "Keyword": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KeywordFilterList"
                        },
                        {
                          "description": "A keyword for a finding."
                        }
                      ]
                    },
                    "LastObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "MalwareName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the malware that was observed."
                        }
                      ]
                    },
                    "MalwarePath": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The filesystem path of the malware that was observed."
                        }
                      ]
                    },
                    "MalwareState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The state of the malware that was observed."
                        }
                      ]
                    },
                    "MalwareType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The type of the malware that was observed."
                        }
                      ]
                    },
                    "NetworkDestinationDomain": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The destination domain of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationIpV4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The destination IPv4 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationIpV6": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The destination IPv6 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationPort": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The destination port of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDirection": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Indicates the direction of network traffic associated with a finding."
                        }
                      ]
                    },
                    "NetworkProtocol": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The protocol of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceDomain": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source domain of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceIpV4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The source IPv4 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceIpV6": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The source IPv6 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceMac": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source media access control (MAC) address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourcePort": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The source port of network-related information about a finding."
                        }
                      ]
                    },
                    "NoteText": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The text of a note."
                        }
                      ]
                    },
                    "NoteUpdatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The timestamp of when the note was updated."
                        }
                      ]
                    },
                    "NoteUpdatedBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The principal that created a note."
                        }
                      ]
                    },
                    "ProcessLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the process was launched."
                        }
                      ]
                    },
                    "ProcessName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the process."
                        }
                      ]
                    },
                    "ProcessParentPid": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The parent process ID."
                        }
                      ]
                    },
                    "ProcessPath": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The path to the process executable."
                        }
                      ]
                    },
                    "ProcessPid": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The process ID."
                        }
                      ]
                    },
                    "ProcessTerminatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the process was terminated."
                        }
                      ]
                    },
                    "ProductArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub."
                        }
                      ]
                    },
                    "ProductFields": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format."
                        }
                      ]
                    },
                    "ProductName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the solution (product) that generates findings."
                        }
                      ]
                    },
                    "RecommendationText": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The recommendation of what to do about the issue described in a finding."
                        }
                      ]
                    },
                    "RecordState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The updated record state for the finding."
                        }
                      ]
                    },
                    "RelatedFindingsId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The solution-generated identifier for a related finding."
                        }
                      ]
                    },
                    "RelatedFindingsProductArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The ARN of the solution that generated a related finding."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIamInstanceProfileArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The IAM profile ARN of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceImageId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The Amazon Machine Image (AMI) ID of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIpV4Addresses": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The IPv4 addresses associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIpV6Addresses": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The IPv6 addresses associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceKeyName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The key name associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date and time the instance was launched."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceSubnetId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the subnet that the instance was launched in."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The instance type of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceVpcId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the VPC that the instance was launched in."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyCreatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The creation date/time of the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The status of the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyUserName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The user associated with the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsS3BucketOwnerId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical user ID of the owner of the S3 bucket."
                        }
                      ]
                    },
                    "ResourceAwsS3BucketOwnerName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The display name of the owner of the S3 bucket."
                        }
                      ]
                    },
                    "ResourceContainerImageId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the image related to a finding."
                        }
                      ]
                    },
                    "ResourceContainerImageName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the image related to a finding."
                        }
                      ]
                    },
                    "ResourceContainerLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the container was started."
                        }
                      ]
                    },
                    "ResourceContainerName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the container related to a finding."
                        }
                      ]
                    },
                    "ResourceDetailsOther": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "The details of a resource that doesn't have a specific subfield for the resource type defined."
                        }
                      ]
                    },
                    "ResourceId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical identifier for the given resource type."
                        }
                      ]
                    },
                    "ResourcePartition": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical AWS partition name that the Region is assigned to."
                        }
                      ]
                    },
                    "ResourceRegion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical AWS external Region name where this resource is located."
                        }
                      ]
                    },
                    "ResourceTags": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A list of AWS tags associated with a resource at the time the finding was processed."
                        }
                      ]
                    },
                    "ResourceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Specifies the type of the resource that details are provided for."
                        }
                      ]
                    },
                    "SeverityLabel": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The label of a finding's severity."
                        }
                      ]
                    },
                    "SeverityNormalized": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The normalized severity of a finding."
                        }
                      ]
                    },
                    "SeverityProduct": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The native severity as defined by the security-findings provider's solution that generated the finding."
                        }
                      ]
                    },
                    "SourceUrl": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A URL that links to a page about the current finding in the security-findings provider's solution."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorCategory": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The category of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorLastObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time of the last observation of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorSource": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source of the threat intelligence."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorSourceUrl": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The URL for more details from the source of the threat intelligence."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The type of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorValue": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The value of a threat intelligence indicator."
                        }
                      ]
                    },
                    "Title": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding's title."
                        }
                      ]
                    },
                    "Type": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding."
                        }
                      ]
                    },
                    "UpdatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. "
                        }
                      ]
                    },
                    "UserDefinedFields": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
                        }
                      ]
                    },
                    "VerificationState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The veracity of a finding."
                        }
                      ]
                    },
                    "WorkflowState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "<p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>"
                        }
                      ]
                    },
                    "WorkflowStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "<p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>SUPPRESSED</code> - The finding will not be reviewed again and will not be acted upon.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "GroupByAttribute": {
                  "description": "The attribute used to group the findings for the insight. The grouping attribute identifies the type of item that the insight applies to. For example, if an insight is grouped by resource identifier, then the insight produces a list of resource identifiers.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                },
                "Name": {
                  "description": "The name of the custom insight to create.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "Name",
                "Filters",
                "GroupByAttribute"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateInsightResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "484": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          }
        },
        "description": "<p>Creates a custom insight in Security Hub. An insight is a consolidation of findings that relate to a security issue that requires attention or remediation.</p> <p>To group the related findings in the insight, use the <code>GroupByAttribute</code>.</p>",
        "operationId": "CreateInsight"
      }
    },
    "/insights/get": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "InsightArns": {
                  "description": "The ARNs of the insights to describe. If you do not provide any insight ARNs, then <code>GetInsights</code> returns all of your custom insights. It does not return any managed insights.",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "type": "array"
                },
                "MaxResults": {
                  "description": "The maximum number of items to return in the response.",
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "<p>The token that is required for pagination. On your first call to the <code>GetInsights</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetInsightsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Lists and describes insights for the specified insight ARNs.",
        "operationId": "GetInsights"
      }
    },
    "/insights/results/{InsightArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the insight for which to return results.",
            "in": "path",
            "name": "InsightArn",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetInsightResultsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Lists the results of the Security Hub insight specified by the insight ARN.",
        "operationId": "GetInsightResults"
      }
    },
    "/insights/{InsightArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the insight to delete.",
            "in": "path",
            "name": "InsightArn",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteInsightResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Deletes the insight specified by the <code>InsightArn</code>.",
        "operationId": "DeleteInsight"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the insight that you want to update.",
            "in": "path",
            "name": "InsightArn",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Filters": {
                  "description": "<p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>",
                  "properties": {
                    "AwsAccountId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The AWS account ID that a finding is generated in."
                        }
                      ]
                    },
                    "CompanyName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the findings provider (company) that owns the solution (product) that generates findings."
                        }
                      ]
                    },
                    "ComplianceStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details."
                        }
                      ]
                    },
                    "Confidence": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "<p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>"
                        }
                      ]
                    },
                    "CreatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "Criticality": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "<p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>"
                        }
                      ]
                    },
                    "Description": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding's description."
                        }
                      ]
                    },
                    "FirstObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "GeneratorId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc."
                        }
                      ]
                    },
                    "Id": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The security findings provider-specific identifier for a finding."
                        }
                      ]
                    },
                    "Keyword": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/KeywordFilterList"
                        },
                        {
                          "description": "A keyword for a finding."
                        }
                      ]
                    },
                    "LastObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured."
                        }
                      ]
                    },
                    "MalwareName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the malware that was observed."
                        }
                      ]
                    },
                    "MalwarePath": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The filesystem path of the malware that was observed."
                        }
                      ]
                    },
                    "MalwareState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The state of the malware that was observed."
                        }
                      ]
                    },
                    "MalwareType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The type of the malware that was observed."
                        }
                      ]
                    },
                    "NetworkDestinationDomain": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The destination domain of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationIpV4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The destination IPv4 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationIpV6": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The destination IPv6 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDestinationPort": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The destination port of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkDirection": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Indicates the direction of network traffic associated with a finding."
                        }
                      ]
                    },
                    "NetworkProtocol": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The protocol of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceDomain": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source domain of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceIpV4": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The source IPv4 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceIpV6": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The source IPv6 address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourceMac": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source media access control (MAC) address of network-related information about a finding."
                        }
                      ]
                    },
                    "NetworkSourcePort": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The source port of network-related information about a finding."
                        }
                      ]
                    },
                    "NoteText": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The text of a note."
                        }
                      ]
                    },
                    "NoteUpdatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The timestamp of when the note was updated."
                        }
                      ]
                    },
                    "NoteUpdatedBy": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The principal that created a note."
                        }
                      ]
                    },
                    "ProcessLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the process was launched."
                        }
                      ]
                    },
                    "ProcessName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the process."
                        }
                      ]
                    },
                    "ProcessParentPid": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The parent process ID."
                        }
                      ]
                    },
                    "ProcessPath": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The path to the process executable."
                        }
                      ]
                    },
                    "ProcessPid": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The process ID."
                        }
                      ]
                    },
                    "ProcessTerminatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the process was terminated."
                        }
                      ]
                    },
                    "ProductArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub."
                        }
                      ]
                    },
                    "ProductFields": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format."
                        }
                      ]
                    },
                    "ProductName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the solution (product) that generates findings."
                        }
                      ]
                    },
                    "RecommendationText": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The recommendation of what to do about the issue described in a finding."
                        }
                      ]
                    },
                    "RecordState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The updated record state for the finding."
                        }
                      ]
                    },
                    "RelatedFindingsId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The solution-generated identifier for a related finding."
                        }
                      ]
                    },
                    "RelatedFindingsProductArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The ARN of the solution that generated a related finding."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIamInstanceProfileArn": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The IAM profile ARN of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceImageId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The Amazon Machine Image (AMI) ID of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIpV4Addresses": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The IPv4 addresses associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceIpV6Addresses": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/IpFilterList"
                        },
                        {
                          "description": "The IPv6 addresses associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceKeyName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The key name associated with the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date and time the instance was launched."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceSubnetId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the subnet that the instance was launched in."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The instance type of the instance."
                        }
                      ]
                    },
                    "ResourceAwsEc2InstanceVpcId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the VPC that the instance was launched in."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyCreatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The creation date/time of the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The status of the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsIamAccessKeyUserName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The user associated with the IAM access key related to a finding."
                        }
                      ]
                    },
                    "ResourceAwsS3BucketOwnerId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical user ID of the owner of the S3 bucket."
                        }
                      ]
                    },
                    "ResourceAwsS3BucketOwnerName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The display name of the owner of the S3 bucket."
                        }
                      ]
                    },
                    "ResourceContainerImageId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The identifier of the image related to a finding."
                        }
                      ]
                    },
                    "ResourceContainerImageName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the image related to a finding."
                        }
                      ]
                    },
                    "ResourceContainerLaunchedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time that the container was started."
                        }
                      ]
                    },
                    "ResourceContainerName": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The name of the container related to a finding."
                        }
                      ]
                    },
                    "ResourceDetailsOther": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "The details of a resource that doesn't have a specific subfield for the resource type defined."
                        }
                      ]
                    },
                    "ResourceId": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical identifier for the given resource type."
                        }
                      ]
                    },
                    "ResourcePartition": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical AWS partition name that the Region is assigned to."
                        }
                      ]
                    },
                    "ResourceRegion": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The canonical AWS external Region name where this resource is located."
                        }
                      ]
                    },
                    "ResourceTags": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A list of AWS tags associated with a resource at the time the finding was processed."
                        }
                      ]
                    },
                    "ResourceType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "Specifies the type of the resource that details are provided for."
                        }
                      ]
                    },
                    "SeverityLabel": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The label of a finding's severity."
                        }
                      ]
                    },
                    "SeverityNormalized": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The normalized severity of a finding."
                        }
                      ]
                    },
                    "SeverityProduct": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/NumberFilterList"
                        },
                        {
                          "description": "The native severity as defined by the security-findings provider's solution that generated the finding."
                        }
                      ]
                    },
                    "SourceUrl": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A URL that links to a page about the current finding in the security-findings provider's solution."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorCategory": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The category of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorLastObservedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "The date/time of the last observation of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorSource": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The source of the threat intelligence."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorSourceUrl": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The URL for more details from the source of the threat intelligence."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorType": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The type of a threat intelligence indicator."
                        }
                      ]
                    },
                    "ThreatIntelIndicatorValue": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The value of a threat intelligence indicator."
                        }
                      ]
                    },
                    "Title": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding's title."
                        }
                      ]
                    },
                    "Type": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding."
                        }
                      ]
                    },
                    "UpdatedAt": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/DateFilterList"
                        },
                        {
                          "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. "
                        }
                      ]
                    },
                    "UserDefinedFields": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/MapFilterList"
                        },
                        {
                          "description": "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
                        }
                      ]
                    },
                    "VerificationState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "The veracity of a finding."
                        }
                      ]
                    },
                    "WorkflowState": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "<p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>"
                        }
                      ]
                    },
                    "WorkflowStatus": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/StringFilterList"
                        },
                        {
                          "description": "<p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>SUPPRESSED</code> - The finding will not be reviewed again and will not be acted upon.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> </li> </ul>"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "GroupByAttribute": {
                  "description": "The updated <code>GroupBy</code> attribute that defines this insight.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                },
                "Name": {
                  "description": "The updated name for the insight.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateInsightResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Updates the Security Hub insight identified by the specified insight ARN.",
        "operationId": "UpdateInsight"
      }
    },
    "/invitations": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of items to return in the response. ",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "MaxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "<p>The token that is required for pagination. On your first call to the <code>ListInvitations</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListInvitationsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "<p>Lists all Security Hub membership invitations that were sent to the current AWS account.</p> <p>This operation is only used by accounts that do not belong to an organization. Organization accounts do not receive invitations.</p>",
        "operationId": "ListInvitations"
      }
    },
    "/invitations/count": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetInvitationsCountResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "Returns the count of all Security Hub membership invitations that were sent to the current member account, not including the currently accepted invitation. ",
        "operationId": "GetInvitationsCount"
      }
    },
    "/invitations/decline": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccountIds": {
                  "description": "The list of account IDs for the accounts from which to decline the invitations to Security Hub.",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "type": "array"
                }
              },
              "required": [
                "AccountIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeclineInvitationsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Declines invitations to become a member account.</p> <p>This operation is only used by accounts that are not part of an organization. Organization accounts do not receive invitations.</p>",
        "operationId": "DeclineInvitations"
      }
    },
    "/invitations/delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccountIds": {
                  "description": "The list of the account IDs that sent the invitations to delete.",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "type": "array"
                }
              },
              "required": [
                "AccountIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteInvitationsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          }
        },
        "description": "<p>Deletes invitations received by the AWS account to become a member account.</p> <p>This operation is only used by accounts that are not part of an organization. Organization accounts do not receive invitations.</p>",
        "operationId": "DeleteInvitations"
      }
    },
    "/master": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetMasterAccountResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Provides the details for the Security Hub master account for the current member account.</p> <p>Can be used by both member accounts that are in an organization and accounts that were invited manually.</p>",
        "operationId": "GetMasterAccount"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "InvitationId": {
                  "description": "The ID of the invitation sent from the Security Hub master account.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                },
                "MasterId": {
                  "description": "The account ID of the Security Hub master account that sent the invitation.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "MasterId",
                "InvitationId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AcceptInvitationResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "484": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          }
        },
        "description": "<p>Accepts the invitation to be a member account and be monitored by the Security Hub master account that the invitation was sent from.</p> <p>This operation is only used by member accounts that are not added through Organizations.</p> <p>When the member account accepts the invitation, permission is granted to the master account to view findings generated in the member account.</p>",
        "operationId": "AcceptInvitation"
      }
    },
    "/master/disassociate": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateFromMasterAccountResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Disassociates the current Security Hub member account from the associated master account.</p> <p>This operation is only used by accounts that are not part of an organization. For organization accounts, only the master account (the designated Security Hub administrator) can disassociate a member account.</p>",
        "operationId": "DisassociateFromMasterAccount"
      }
    },
    "/members": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "<p>Specifies which member accounts to include in the response based on their relationship status with the master account. The default value is <code>TRUE</code>.</p> <p>If <code>OnlyAssociated</code> is set to <code>TRUE</code>, the response includes member accounts whose relationship status with the master is set to <code>ENABLED</code>.</p> <p>If <code>OnlyAssociated</code> is set to <code>FALSE</code>, the response includes all existing member accounts. </p>",
            "in": "query",
            "name": "OnlyAssociated",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The maximum number of items to return in the response. ",
            "in": "query",
            "maximum": 50,
            "minimum": 1,
            "name": "MaxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "<p>The token that is required for pagination. On your first call to the <code>ListMembers</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListMembersResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "<p>Lists details about all member accounts for the current Security Hub master account.</p> <p>The results include both member accounts that belong to an organization and member accounts that were invited manually.</p>",
        "operationId": "ListMembers"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccountDetails": {
                  "description": "The list of accounts to associate with the Security Hub master account. For each account, the list includes the account ID and optionally the email address.",
                  "items": {
                    "$ref": "#/definitions/AccountDetails"
                  },
                  "type": "array"
                }
              },
              "required": [
                "AccountDetails"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateMembersResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "484": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          }
        },
        "description": "<p>Creates a member association in Security Hub between the specified accounts and the account used to make the request, which is the master account. If you are integrated with Organizations, then the master account is the Security Hub administrator account that is designated by the organization management account.</p> <p> <code>CreateMembers</code> is always used to add accounts that are not organization members.</p> <p>For accounts that are part of an organization, <code>CreateMembers</code> is only used in the following cases:</p> <ul> <li> <p>Security Hub is not configured to automatically add new accounts in an organization.</p> </li> <li> <p>The account was disassociated or deleted in Security Hub.</p> </li> </ul> <p>This action can only be used by an account that has Security Hub enabled. To enable Security Hub, you can use the <code> <a>EnableSecurityHub</a> </code> operation.</p> <p>For accounts that are not organization members, you create the account association and then send an invitation to the member account. To send the invitation, you use the <code> <a>InviteMembers</a> </code> operation. If the account owner accepts the invitation, the account becomes a member account in Security Hub.</p> <p>Accounts that are part of an organization do not receive an invitation. They automatically become a member account in Security Hub.</p> <p>A permissions policy is added that permits the master account to view the findings generated in the member account. When Security Hub is enabled in a member account, findings are sent to both the member and master accounts. </p> <p>To remove the association between the master and member accounts, use the <code> <a>DisassociateFromMasterAccount</a> </code> or <code> <a>DisassociateMembers</a> </code> operation.</p>",
        "operationId": "CreateMembers"
      }
    },
    "/members/delete": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccountIds": {
                  "description": "The list of account IDs for the member accounts to delete.",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "type": "array"
                }
              },
              "required": [
                "AccountIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteMembersResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Deletes the specified member accounts from Security Hub.</p> <p>Can be used to delete member accounts that belong to an organization as well as member accounts that were invited manually.</p>",
        "operationId": "DeleteMembers"
      }
    },
    "/members/disassociate": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccountIds": {
                  "description": "The account IDs of the member accounts to disassociate from the master account.",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "type": "array"
                }
              },
              "required": [
                "AccountIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisassociateMembersResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Disassociates the specified member accounts from the associated master account.</p> <p>Can be used to disassociate both accounts that are in an organization and accounts that were invited manually.</p>",
        "operationId": "DisassociateMembers"
      }
    },
    "/members/get": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccountIds": {
                  "description": "The list of account IDs for the Security Hub member accounts to return the details for. ",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "type": "array"
                }
              },
              "required": [
                "AccountIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetMembersResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Returns the details for the Security Hub member accounts for the specified account IDs.</p> <p>A master account can be either a delegated Security Hub administrator account for an organization or a master account that enabled Security Hub manually.</p> <p>The results include both member accounts that are in an organization and accounts that were invited manually.</p>",
        "operationId": "GetMembers"
      }
    },
    "/members/invite": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AccountIds": {
                  "description": "The list of account IDs of the AWS accounts to invite to Security Hub as members. ",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "type": "array"
                }
              },
              "required": [
                "AccountIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InviteMembersResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "484": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Invites other AWS accounts to become member accounts for the Security Hub master account that the invitation is sent from.</p> <p>This operation is only used to invite accounts that do not belong to an organization. Organization accounts do not receive invitations.</p> <p>Before you can use this action to invite a member, you must first use the <code> <a>CreateMembers</a> </code> action to create the member account in Security Hub.</p> <p>When the account owner enables Security Hub and accepts the invitation to become a member account, the master account can view the findings generated from the member account.</p>",
        "operationId": "InviteMembers"
      }
    },
    "/organization/admin": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The maximum number of items to return in the response.",
            "in": "query",
            "maximum": 10,
            "minimum": 1,
            "name": "MaxResults",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The token that is required for pagination. On your first call to the <code>ListOrganizationAdminAccounts</code> operation, set the value of this parameter to <code>NULL</code>. For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response. ",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListOrganizationAdminAccountsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "Lists the Security Hub administrator accounts. Can only be called by the organization management account.",
        "operationId": "ListOrganizationAdminAccounts"
      }
    },
    "/organization/admin/disable": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AdminAccountId": {
                  "description": "The AWS account identifier of the Security Hub administrator account.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "AdminAccountId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisableOrganizationAdminAccountResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "Disables a Security Hub administrator account. Can only be called by the organization management account.",
        "operationId": "DisableOrganizationAdminAccount"
      }
    },
    "/organization/admin/enable": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AdminAccountId": {
                  "description": "The AWS account identifier of the account to designate as the Security Hub administrator account.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "AdminAccountId"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnableOrganizationAdminAccountResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "Designates the Security Hub administrator account for an organization. Can only be called by the organization management account.",
        "operationId": "EnableOrganizationAdminAccount"
      }
    },
    "/organization/configuration": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeOrganizationConfigurationResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "Returns information about the Organizations configuration for Security Hub. Can only be called from a Security Hub administrator account.",
        "operationId": "DescribeOrganizationConfiguration"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "AutoEnable": {
                  "description": "<p>Whether to automatically enable Security Hub for new accounts in the organization.</p> <p>By default, this is <code>false</code>, and new accounts are not added automatically.</p> <p>To automatically enable Security Hub for new accounts, set this to <code>true</code>.</p>",
                  "type": "boolean"
                }
              },
              "required": [
                "AutoEnable"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateOrganizationConfigurationResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "Used to update the configuration related to Organizations. Can only be called from a Security Hub administrator account.",
        "operationId": "UpdateOrganizationConfiguration"
      }
    },
    "/productSubscriptions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "<p>The token that is required for pagination. On your first call to the <code>ListEnabledProductsForImport</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of items to return in the response.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "MaxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListEnabledProductsForImportResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          }
        },
        "description": "Lists all findings-generating solutions (products) that you are subscribed to receive findings from in Security Hub.",
        "operationId": "ListEnabledProductsForImport"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ProductArn": {
                  "description": "The ARN of the product to enable the integration for.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "required": [
                "ProductArn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnableImportFindingsForProductResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "ResourceConflictException",
            "schema": {
              "$ref": "#/definitions/ResourceConflictException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "<p>Enables the integration of a partner product with Security Hub. Integrated products send findings to Security Hub.</p> <p>When you enable a product integration, a permissions policy that grants permission for the product to send findings to Security Hub is applied.</p>",
        "operationId": "EnableImportFindingsForProduct"
      }
    },
    "/productSubscriptions/{ProductSubscriptionArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the integrated product to disable the integration for.",
            "in": "path",
            "name": "ProductSubscriptionArn",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisableImportFindingsForProductResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          },
          "483": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "484": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "Disables the integration of the specified product with Security Hub. After the integration is disabled, findings from that product are no longer sent to Security Hub.",
        "operationId": "DisableImportFindingsForProduct"
      }
    },
    "/products": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "<p>The token that is required for pagination. On your first call to the <code>DescribeProducts</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of results to return.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "MaxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeProductsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          }
        },
        "description": "Returns information about the available products that you can subscribe to and integrate with Security Hub in order to consolidate findings.",
        "operationId": "DescribeProducts"
      }
    },
    "/standards": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "<p>The token that is required for pagination. On your first call to the <code>DescribeStandards</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of standards to return.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "MaxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeStandardsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          }
        },
        "description": "<p>Returns a list of the available standards in Security Hub.</p> <p>For each standard, the results include the standard ARN, the name, and a description. </p>",
        "operationId": "DescribeStandards"
      }
    },
    "/standards/control/{StandardsControlArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the security standard control to enable or disable.",
            "in": "path",
            "name": "StandardsControlArn",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ControlStatus": {
                  "description": "The updated status of the security standard control.",
                  "enum": [
                    "ENABLED",
                    "DISABLED"
                  ],
                  "type": "string"
                },
                "DisabledReason": {
                  "description": "A description of the reason why you are disabling a security standard control. If you are disabling a control, then this is required.",
                  "pattern": ".*\\S.*",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateStandardsControlResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Used to control whether an individual security standard control is enabled or disabled.",
        "operationId": "UpdateStandardsControl"
      }
    },
    "/standards/controls/{StandardsSubscriptionArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of a resource that represents your subscription to a supported standard. To get the subscription ARNs of the standards you have enabled, use the <code> <a>GetEnabledStandards</a> </code> operation.",
            "in": "path",
            "name": "StandardsSubscriptionArn",
            "pattern": ".*\\S.*",
            "required": true,
            "type": "string"
          },
          {
            "description": "<p>The token that is required for pagination. On your first call to the <code>DescribeStandardsControls</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of security standard controls to return.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "MaxResults",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeStandardsControlsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "<p>Returns a list of security standards controls.</p> <p>For each control, the results include information about whether it is currently enabled, the severity, and a link to remediation information.</p>",
        "operationId": "DescribeStandardsControls"
      }
    },
    "/standards/deregister": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "StandardsSubscriptionArns": {
                  "description": "The ARNs of the standards subscriptions to disable.",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "maxItems": 25,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "StandardsSubscriptionArns"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDisableStandardsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "<p>Disables the standards specified by the provided <code>StandardsSubscriptionArns</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html\">Security Standards</a> section of the <i>AWS Security Hub User Guide</i>.</p>",
        "operationId": "BatchDisableStandards"
      }
    },
    "/standards/get": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxResults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "NextToken",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "MaxResults": {
                  "description": "The maximum number of results to return in the response.",
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer"
                },
                "NextToken": {
                  "description": "<p>The token that is required for pagination. On your first call to the <code>GetEnabledStandards</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>",
                  "type": "string"
                },
                "StandardsSubscriptionArns": {
                  "description": "The list of the standards subscription ARNs for the standards to retrieve.",
                  "items": {
                    "$ref": "#/definitions/NonEmptyString"
                  },
                  "maxItems": 25,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetEnabledStandardsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "Returns a list of the standards that are currently enabled.",
        "operationId": "GetEnabledStandards"
      }
    },
    "/standards/register": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "StandardsSubscriptionRequests": {
                  "description": "The list of standards checks to enable.",
                  "items": {
                    "$ref": "#/definitions/StandardsSubscriptionRequest"
                  },
                  "maxItems": 25,
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "StandardsSubscriptionRequests"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEnableStandardsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "InvalidAccessException",
            "schema": {
              "$ref": "#/definitions/InvalidAccessException"
            }
          },
          "483": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          }
        },
        "description": "<p>Enables the standards specified by the provided <code>StandardsArn</code>. To obtain the ARN for a standard, use the <code> <a>DescribeStandards</a> </code> operation.</p> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html\">Security Standards</a> section of the <i>AWS Security Hub User Guide</i>.</p>",
        "operationId": "BatchEnableStandards"
      }
    },
    "/tags/{ResourceArn}": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the resource to retrieve tags for.",
            "in": "path",
            "name": "ResourceArn",
            "pattern": "^arn:aws:securityhub:.*",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Returns a list of tags associated with a resource.",
        "operationId": "ListTagsForResource"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the resource to apply the tags to.",
            "in": "path",
            "name": "ResourceArn",
            "pattern": "^arn:aws:securityhub:.*",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "Tags": {
                  "additionalProperties": {
                    "$ref": "#/definitions/TagValue"
                  },
                  "description": "The tags to add to the resource.",
                  "maxProperties": 50,
                  "minProperties": 1,
                  "type": "object"
                }
              },
              "required": [
                "Tags"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagResourceResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Adds one or more tags to a resource.",
        "operationId": "TagResource"
      }
    },
    "/tags/{ResourceArn}#tagKeys": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The ARN of the resource to remove the tags from.",
            "in": "path",
            "name": "ResourceArn",
            "pattern": "^arn:aws:securityhub:.*",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The tag keys associated with the tags to remove from the resource.",
            "in": "query",
            "items": {
              "$ref": "#/definitions/TagKey"
            },
            "maxItems": 50,
            "minItems": 1,
            "name": "tagKeys",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UntagResourceResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "ResourceNotFoundException",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundException"
            }
          }
        },
        "description": "Removes one or more tags from a resource.",
        "operationId": "UntagResource"
      }
    }
  },
  "definitions": {
    "AcceptInvitationRequest": {
      "properties": {
        "InvitationId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the invitation sent from the Security Hub master account."
            }
          ]
        },
        "MasterId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The account ID of the Security Hub master account that sent the invitation."
            }
          ]
        }
      },
      "required": [
        "MasterId",
        "InvitationId"
      ],
      "title": "AcceptInvitationRequest",
      "type": "object"
    },
    "AcceptInvitationResponse": {
      "properties": {},
      "type": "object"
    },
    "AccessDeniedException": {},
    "AccountDetails": {
      "description": "The details of an AWS account.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The ID of an AWS account."
            }
          ]
        },
        "Email": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The email of an AWS account."
            }
          ]
        }
      },
      "required": [
        "AccountId"
      ],
      "type": "object"
    },
    "AccountDetailsList": {
      "items": {
        "$ref": "#/definitions/AccountDetails"
      },
      "type": "array"
    },
    "AccountId": {
      "type": "string"
    },
    "AccountIdList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "ActionTarget": {
      "description": "An <code>ActionTarget</code> object.",
      "properties": {
        "ActionTargetArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN for the target action."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The description of the target action."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the action target."
            }
          ]
        }
      },
      "required": [
        "ActionTargetArn",
        "Name",
        "Description"
      ],
      "type": "object"
    },
    "ActionTargetList": {
      "items": {
        "$ref": "#/definitions/ActionTarget"
      },
      "type": "array"
    },
    "AdminAccount": {
      "description": "Represents a Security Hub administrator account designated by an organization management account.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS account identifier of the Security Hub administrator account."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/AdminStatus"
            },
            {
              "description": "The current status of the Security Hub administrator account. Indicates whether the account is currently enabled as a Security Hub administrator."
            }
          ]
        }
      },
      "type": "object"
    },
    "AdminAccounts": {
      "items": {
        "$ref": "#/definitions/AdminAccount"
      },
      "type": "array"
    },
    "AdminStatus": {
      "enum": [
        "ENABLED",
        "DISABLE_IN_PROGRESS"
      ],
      "type": "string"
    },
    "AdminsMaxResults": {
      "maximum": 10,
      "minimum": 1,
      "type": "integer"
    },
    "ArnList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "AvailabilityZone": {
      "description": "Information about an Availability Zone.",
      "properties": {
        "SubnetId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the subnet. You can specify one subnet per Availability Zone."
            }
          ]
        },
        "ZoneName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the Availability Zone."
            }
          ]
        }
      },
      "type": "object"
    },
    "AvailabilityZones": {
      "items": {
        "$ref": "#/definitions/AvailabilityZone"
      },
      "type": "array"
    },
    "AwsApiGatewayAccessLogSettings": {
      "description": "Contains information about settings for logging access for the stage.",
      "properties": {
        "DestinationArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the CloudWatch Logs log group that receives the access logs."
            }
          ]
        },
        "Format": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A single-line format of the access logs of data, as specified by selected <code>$context</code> variables. The format must include at least <code>$context.requestId</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsApiGatewayCanarySettings": {
      "description": "Contains information about settings for canary deployment in the stage.",
      "properties": {
        "DeploymentId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The deployment identifier for the canary deployment."
            }
          ]
        },
        "PercentTraffic": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The percentage of traffic that is diverted to a canary deployment."
            }
          ]
        },
        "StageVariableOverrides": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "<p>Stage variables that are overridden in the canary release deployment. The variables include new stage variables that are introduced in the canary.</p> <p>Each variable is represented as a string-to-string map between the stage variable name and the variable value.</p>"
            }
          ]
        },
        "UseStageCache": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the canary deployment uses the stage cache."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsApiGatewayEndpointConfiguration": {
      "description": "Contains information about the endpoints for the API.",
      "properties": {
        "Types": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "<p>A list of endpoint types for the REST API.</p> <p>For an edge-optimized API, the endpoint type is <code>EDGE</code>. For a Regional API, the endpoint type is <code>REGIONAL</code>. For a private API, the endpoint type is <code>PRIVATE</code>.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsApiGatewayMethodSettings": {
      "description": "Defines settings for a method for the stage.",
      "properties": {
        "CacheDataEncrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the cached responses are encrypted. "
            }
          ]
        },
        "CacheTtlInSeconds": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response is cached."
            }
          ]
        },
        "CachingEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether responses are cached and returned for requests. For responses to be cached, a cache cluster must be enabled on the stage."
            }
          ]
        },
        "DataTraceEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether data trace logging is enabled for the method. Data trace logging affects the log entries that are pushed to CloudWatch Logs."
            }
          ]
        },
        "HttpMethod": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The HTTP method. You can use an asterisk (*) as a wildcard to apply method settings to multiple methods."
            }
          ]
        },
        "LoggingLevel": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The logging level for this method. The logging level affects the log entries that are pushed to CloudWatch Logs.</p> <p>If the logging level is <code>ERROR</code>, then the logs only include error-level entries.</p> <p>If the logging level is <code>INFO</code>, then the logs include both <code>ERROR</code> events and extra informational events.</p> <p>Valid values: <code>OFF</code> | <code>ERROR</code> | <code>INFO</code> </p>"
            }
          ]
        },
        "MetricsEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether CloudWatch metrics are enabled for the method. "
            }
          ]
        },
        "RequireAuthorizationForCacheControl": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether authorization is required for a cache invalidation request."
            }
          ]
        },
        "ResourcePath": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The resource path for this method. Forward slashes (/) are encoded as ~1 . The initial slash must include a forward slash.</p> <p>For example, the path value <code>/resource/subresource</code> must be encoded as <code>/~1resource~1subresource</code>.</p> <p>To specify the root path, use only a slash (/). You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.</p>"
            }
          ]
        },
        "ThrottlingBurstLimit": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The throttling burst limit for the method."
            }
          ]
        },
        "ThrottlingRateLimit": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The throttling rate limit for the method."
            }
          ]
        },
        "UnauthorizedCacheControlHeaderStrategy": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates how to handle unauthorized requests for cache invalidation.</p> <p>Valid values: <code>FAIL_WITH_403</code> | <code>SUCCEED_WITH_RESPONSE_HEADER</code> | <code>SUCCEED_WITHOUT_RESPONSE_HEADER</code> </p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsApiGatewayMethodSettingsList": {
      "items": {
        "$ref": "#/definitions/AwsApiGatewayMethodSettings"
      },
      "type": "array"
    },
    "AwsApiGatewayRestApiDetails": {
      "description": "contains information about a REST API in version 1 of Amazon API Gateway.",
      "properties": {
        "ApiKeySource": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The source of the API key for metering requests according to a usage plan.</p> <p> <code>HEADER</code> indicates whether to read the API key from the X-API-Key header of a request.</p> <p> <code>AUTHORIZER</code> indicates whether to read the API key from the <code>UsageIdentifierKey</code> from a custom authorizer.</p>"
            }
          ]
        },
        "BinaryMediaTypes": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "The list of binary media types supported by the REST API."
            }
          ]
        },
        "CreatedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the API was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A description of the REST API."
            }
          ]
        },
        "EndpointConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayEndpointConfiguration"
            },
            {
              "description": "The endpoint configuration of the REST API."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the REST API."
            }
          ]
        },
        "MinimumCompressionSize": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p>The minimum size in bytes of a payload before compression is enabled.</p> <p>If <code>null</code>, then compression is disabled.</p> <p>If 0, then all payloads are compressed.</p>"
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the REST API."
            }
          ]
        },
        "Version": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version identifier for the REST API."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsApiGatewayStageDetails": {
      "description": "Provides information about a version 1 Amazon API Gateway stage.",
      "properties": {
        "AccessLogSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayAccessLogSettings"
            },
            {
              "description": "Settings for logging access for the stage."
            }
          ]
        },
        "CacheClusterEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether a cache cluster is enabled for the stage."
            }
          ]
        },
        "CacheClusterSize": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "If a cache cluster is enabled, the size of the cache cluster."
            }
          ]
        },
        "CacheClusterStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "If a cache cluster is enabled, the status of the cache cluster."
            }
          ]
        },
        "CanarySettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayCanarySettings"
            },
            {
              "description": "Information about settings for canary deployment in the stage."
            }
          ]
        },
        "ClientCertificateId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the client certificate for the stage."
            }
          ]
        },
        "CreatedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the stage was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "DeploymentId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the deployment that the stage points to."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A description of the stage."
            }
          ]
        },
        "DocumentationVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version of the API documentation that is associated with the stage."
            }
          ]
        },
        "LastUpdatedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the stage was most recently updated.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "MethodSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayMethodSettingsList"
            },
            {
              "description": "Defines the method settings for the stage."
            }
          ]
        },
        "StageName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the stage."
            }
          ]
        },
        "TracingEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether active tracing with AWS X-Ray is enabled for the stage."
            }
          ]
        },
        "Variables": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "<p>A map that defines the stage variables for the stage.</p> <p>Variable names can have alphanumeric and underscore characters.</p> <p>Variable values can contain the following characters:</p> <ul> <li> <p>Uppercase and lowercase letters</p> </li> <li> <p>Numbers</p> </li> <li> <p>Special characters -._~:/?#&amp;=,</p> </li> </ul>"
            }
          ]
        },
        "WebAclArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the web ACL associated with the stage."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsApiGatewayV2ApiDetails": {
      "description": "Contains information about a version 2 API in Amazon API Gateway.",
      "properties": {
        "ApiEndpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The URI of the API. </p> <p>Uses the format <code> <i>&lt;api-id&gt;</i>.execute-api.<i>&lt;region&gt;</i>.amazonaws.com</code> </p> <p>The stage name is typically appended to the URI to form a complete path to a deployed API stage.</p>"
            }
          ]
        },
        "ApiId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the API."
            }
          ]
        },
        "ApiKeySelectionExpression": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "An API key selection expression. Supported only for WebSocket APIs. "
            }
          ]
        },
        "CorsConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCorsConfiguration"
            },
            {
              "description": "A cross-origin resource sharing (CORS) configuration. Supported only for HTTP APIs."
            }
          ]
        },
        "CreatedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the API was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A description of the API."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the API."
            }
          ]
        },
        "ProtocolType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The API protocol for the API.</p> <p>Valid values: <code>WEBSOCKET</code> | <code>HTTP</code> </p>"
            }
          ]
        },
        "RouteSelectionExpression": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The route selection expression for the API.</p> <p>For HTTP APIs, must be <code>${request.method} ${request.path}</code>. This is the default value for HTTP APIs.</p> <p>For WebSocket APIs, there is no default value.</p>"
            }
          ]
        },
        "Version": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version identifier for the API."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsApiGatewayV2RouteSettings": {
      "description": "Contains route settings for a stage.",
      "properties": {
        "DataTraceEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether data trace logging is enabled. Data trace logging affects the log entries that are pushed to CloudWatch Logs. Supported only for WebSocket APIs."
            }
          ]
        },
        "DetailedMetricsEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether detailed metrics are enabled."
            }
          ]
        },
        "LoggingLevel": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The logging level. The logging level affects the log entries that are pushed to CloudWatch Logs. Supported only for WebSocket APIs.</p> <p>If the logging level is <code>ERROR</code>, then the logs only include error-level entries.</p> <p>If the logging level is <code>INFO</code>, then the logs include both <code>ERROR</code> events and extra informational events.</p> <p>Valid values: <code>OFF</code> | <code>ERROR</code> | <code>INFO</code> </p>"
            }
          ]
        },
        "ThrottlingBurstLimit": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The throttling burst limit."
            }
          ]
        },
        "ThrottlingRateLimit": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The throttling rate limit."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsApiGatewayV2StageDetails": {
      "description": "Contains information about a version 2 stage for Amazon API Gateway.",
      "properties": {
        "AccessLogSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayAccessLogSettings"
            },
            {
              "description": "Information about settings for logging access for the stage."
            }
          ]
        },
        "ApiGatewayManaged": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the stage is managed by API Gateway."
            }
          ]
        },
        "AutoDeploy": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether updates to an API automatically trigger a new deployment."
            }
          ]
        },
        "CreatedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the stage was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "DefaultRouteSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayV2RouteSettings"
            },
            {
              "description": "Default route settings for the stage."
            }
          ]
        },
        "DeploymentId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the deployment that the stage is associated with. "
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The description of the stage."
            }
          ]
        },
        "LastDeploymentStatusMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the last deployment of a stage. Supported only if the stage has automatic deployment enabled."
            }
          ]
        },
        "LastUpdatedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the stage was most recently updated.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "RouteSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayV2RouteSettings"
            },
            {
              "description": "The route settings for the stage."
            }
          ]
        },
        "StageName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the stage."
            }
          ]
        },
        "StageVariables": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "<p>A map that defines the stage variables for the stage.</p> <p>Variable names can have alphanumeric and underscore characters.</p> <p>Variable values can contain the following characters:</p> <ul> <li> <p>Uppercase and lowercase letters</p> </li> <li> <p>Numbers</p> </li> <li> <p>Special characters -._~:/?#&amp;=,</p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsAutoScalingAutoScalingGroupDetails": {
      "description": "Provides details about an auto scaling group.",
      "properties": {
        "CreatedTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the auto scaling group was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "HealthCheckGracePeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before it checks the health status of an EC2 instance that has come into service."
            }
          ]
        },
        "HealthCheckType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The service to use for the health checks."
            }
          ]
        },
        "LaunchConfigurationName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the launch configuration."
            }
          ]
        },
        "LoadBalancerNames": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The list of load balancers associated with the group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCertificateManagerCertificateDetails": {
      "description": "Provides details about an AWS Certificate Manager certificate.",
      "properties": {
        "CertificateAuthorityArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the private certificate authority (CA) that will be used to issue the certificate."
            }
          ]
        },
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the certificate was requested.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The fully qualified domain name (FQDN), such as www.example.com, that is secured by the certificate."
            }
          ]
        },
        "DomainValidationOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCertificateManagerCertificateDomainValidationOptions"
            },
            {
              "description": "<p>Contains information about the initial validation of each domain name that occurs as a result of the <code>RequestCertificate</code> request.</p> <p>Only provided if the certificate type is <code>AMAZON_ISSUED</code>.</p>"
            }
          ]
        },
        "ExtendedKeyUsages": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCertificateManagerCertificateExtendedKeyUsages"
            },
            {
              "description": "Contains a list of Extended Key Usage X.509 v3 extension objects. Each object specifies a purpose for which the certificate public key can be used and consists of a name and an object identifier (OID)."
            }
          ]
        },
        "FailureReason": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>For a failed certificate request, the reason for the failure.</p> <p>Valid values: <code>NO_AVAILABLE_CONTACTS</code> | <code>ADDITIONAL_VERIFICATION_REQUIRED</code> | <code>DOMAIN_NOT_ALLOWED</code> | <code>INVALID_PUBLIC_DOMAIN</code> | <code>DOMAIN_VALIDATION_DENIED</code> | <code>CAA_ERROR</code> | <code>PCA_LIMIT_EXCEEDED</code> | <code>PCA_INVALID_ARN</code> | <code>PCA_INVALID_STATE</code> | <code>PCA_REQUEST_FAILED</code> | <code>PCA_NAME_CONSTRAINTS_VALIDATION</code> | <code>PCA_RESOURCE_NOT_FOUND</code> | <code>PCA_INVALID_ARGS</code> | <code>PCA_INVALID_DURATION</code> | <code>PCA_ACCESS_DENIED</code> | <code>SLR_NOT_FOUND</code> | <code>OTHER</code> </p>"
            }
          ]
        },
        "ImportedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the certificate was imported. Provided if the certificate type is <code>IMPORTED</code>.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "InUseBy": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The list of ARNs for the AWS resources that use the certificate."
            }
          ]
        },
        "IssuedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the certificate was issued. Provided if the certificate type is <code>AMAZON_ISSUED</code>.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Issuer": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the certificate authority that issued and signed the certificate."
            }
          ]
        },
        "KeyAlgorithm": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The algorithm that was used to generate the public-private key pair.</p> <p>Valid values: <code>RSA_2048</code> | <code>RSA_1024</code> |<code> RSA_4096</code> | <code>EC_prime256v1</code> | <code>EC_secp384r1</code> | <code>EC_secp521r1</code> </p>"
            }
          ]
        },
        "KeyUsages": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCertificateManagerCertificateKeyUsages"
            },
            {
              "description": "A list of key usage X.509 v3 extension objects."
            }
          ]
        },
        "NotAfter": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The time after which the certificate becomes invalid.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "NotBefore": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The time before which the certificate is not valid.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Options": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCertificateManagerCertificateOptions"
            },
            {
              "description": "Provides a value that specifies whether to add the certificate to a transparency log."
            }
          ]
        },
        "RenewalEligibility": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Whether the certificate is eligible for renewal.</p> <p>Valid values: <code>ELIGIBLE</code> | <code>INELIGIBLE</code> </p>"
            }
          ]
        },
        "RenewalSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCertificateManagerCertificateRenewalSummary"
            },
            {
              "description": "Information about the status of the AWS Certificate Manager managed renewal for the certificate. Provided only when the certificate type is <code>AMAZON_ISSUED</code>."
            }
          ]
        },
        "Serial": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The serial number of the certificate."
            }
          ]
        },
        "SignatureAlgorithm": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The algorithm that was used to sign the certificate."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The status of the certificate.</p> <p>Valid values: <code>PENDING_VALIDATION</code> | <code>ISSUED</code> | <code>INACTIVE</code> | <code>EXPIRED</code> | <code>VALIDATION_TIMED_OUT</code> | <code>REVOKED</code> | <code>FAILED</code> </p>"
            }
          ]
        },
        "Subject": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the entity that is associated with the public key contained in the certificate."
            }
          ]
        },
        "SubjectAlternativeNames": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "<p>One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate.</p> <p>The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website.</p>"
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The source of the certificate. For certificates that AWS Certificate Manager provides, <code>Type</code> is <code>AMAZON_ISSUED</code>. For certificates that are imported with <code>ImportCertificate</code>, <code>Type</code> is <code>IMPORTED</code>.</p> <p>Valid values: <code>IMPORTED</code> | <code>AMAZON_ISSUED</code> | <code>PRIVATE</code> </p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCertificateManagerCertificateDomainValidationOption": {
      "description": "<p>Contains information about one of the following:</p> <ul> <li> <p>The initial validation of each domain name that occurs as a result of the <code>RequestCertificate</code> request</p> </li> <li> <p>The validation of each domain name in the certificate, as it pertains to AWS Certificate Manager managed renewal</p> </li> </ul>",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A fully qualified domain name (FQDN) in the certificate."
            }
          ]
        },
        "ResourceRecord": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCertificateManagerCertificateResourceRecord"
            },
            {
              "description": "The CNAME record that is added to the DNS database for domain validation."
            }
          ]
        },
        "ValidationDomain": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The domain name that AWS Certificate Manager uses to send domain validation emails."
            }
          ]
        },
        "ValidationEmails": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of email addresses that AWS Certificate Manager uses to send domain validation emails."
            }
          ]
        },
        "ValidationMethod": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The method used to validate the domain name."
            }
          ]
        },
        "ValidationStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The validation status of the domain name."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCertificateManagerCertificateDomainValidationOptions": {
      "items": {
        "$ref": "#/definitions/AwsCertificateManagerCertificateDomainValidationOption"
      },
      "type": "array"
    },
    "AwsCertificateManagerCertificateExtendedKeyUsage": {
      "description": "Contains information about an extended key usage X.509 v3 extension object.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of an extension value. Indicates the purpose for which the certificate public key can be used."
            }
          ]
        },
        "OId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>An object identifier (OID) for the extension value.</p> <p>The format is numbers separated by periods.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCertificateManagerCertificateExtendedKeyUsages": {
      "items": {
        "$ref": "#/definitions/AwsCertificateManagerCertificateExtendedKeyUsage"
      },
      "type": "array"
    },
    "AwsCertificateManagerCertificateKeyUsage": {
      "description": "Contains information about a key usage X.509 v3 extension object.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The key usage extension name."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCertificateManagerCertificateKeyUsages": {
      "items": {
        "$ref": "#/definitions/AwsCertificateManagerCertificateKeyUsage"
      },
      "type": "array"
    },
    "AwsCertificateManagerCertificateOptions": {
      "description": "Contains other options for the certificate.",
      "properties": {
        "CertificateTransparencyLoggingPreference": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Whether to add the certificate to a transparency log.</p> <p>Valid values: <code>DISABLED</code> | <code>ENABLED</code> </p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCertificateManagerCertificateRenewalSummary": {
      "description": "Contains information about the AWS Certificate Manager managed renewal for an <code>AMAZON_ISSUED</code> certificate.",
      "properties": {
        "DomainValidationOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCertificateManagerCertificateDomainValidationOptions"
            },
            {
              "description": "Information about the validation of each domain name in the certificate, as it pertains to AWS Certificate Manager managed renewal. Provided only when the certificate type is <code>AMAZON_ISSUED</code>."
            }
          ]
        },
        "RenewalStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The status of the AWS Certificate Manager managed renewal of the certificate.</p> <p>Valid values: <code>PENDING_AUTO_RENEWAL</code> | <code>PENDING_VALIDATION</code> | <code>SUCCESS</code> | <code>FAILED</code> </p>"
            }
          ]
        },
        "RenewalStatusReason": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The reason that a renewal request was unsuccessful.</p> <p>Valid values: <code>NO_AVAILABLE_CONTACTS</code> | <code>ADDITIONAL_VERIFICATION_REQUIRED</code> | <code>DOMAIN_NOT_ALLOWED</code> | <code>INVALID_PUBLIC_DOMAIN</code> | <code>DOMAIN_VALIDATION_DENIED</code> | <code>CAA_ERROR</code> | <code>PCA_LIMIT_EXCEEDED</code> | <code>PCA_INVALID_ARN</code> | <code>PCA_INVALID_STATE</code> | <code>PCA_REQUEST_FAILED</code> | <code>PCA_NAME_CONSTRAINTS_VALIDATION</code> | <code>PCA_RESOURCE_NOT_FOUND</code> | <code>PCA_INVALID_ARGS</code> | <code>PCA_INVALID_DURATION</code> | <code>PCA_ACCESS_DENIED</code> | <code>SLR_NOT_FOUND</code> | <code>OTHER</code> </p>"
            }
          ]
        },
        "UpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the renewal summary was last updated.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCertificateManagerCertificateResourceRecord": {
      "description": "Provides details about the CNAME record that is added to the DNS database for domain validation.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the resource."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of resource."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The value of the resource."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionCacheBehavior": {
      "description": "Information about a cache behavior for the distribution.",
      "properties": {
        "ViewerProtocolPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The protocol that viewers can use to access the files in an origin. You can specify the following options:</p> <ul> <li> <p> <code>allow-all</code> - Viewers can use HTTP or HTTPS.</p> </li> <li> <p> <code>redirect-to-https</code> - CloudFront responds to HTTP requests with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL. The viewer then uses the new URL to resubmit.</p> </li> <li> <p> <code>https-only</code> - CloudFront responds to HTTP request with an HTTP status code of 403 (Forbidden).</p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionCacheBehaviors": {
      "description": "Provides information about caching for the distribution.",
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionCacheBehaviorsItemList"
            },
            {
              "description": "The cache behaviors for the distribution."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionCacheBehaviorsItemList": {
      "items": {
        "$ref": "#/definitions/AwsCloudFrontDistributionCacheBehavior"
      },
      "type": "array"
    },
    "AwsCloudFrontDistributionDefaultCacheBehavior": {
      "description": "Contains information about the default cache configuration for the distribution.",
      "properties": {
        "ViewerProtocolPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The protocol that viewers can use to access the files in an origin. You can specify the following options:</p> <ul> <li> <p> <code>allow-all</code> - Viewers can use HTTP or HTTPS.</p> </li> <li> <p> <code>redirect-to-https</code> - CloudFront responds to HTTP requests with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL. The viewer then uses the new URL to resubmit.</p> </li> <li> <p> <code>https-only</code> - CloudFront responds to HTTP request with an HTTP status code of 403 (Forbidden).</p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionDetails": {
      "description": "A distribution configuration.",
      "properties": {
        "CacheBehaviors": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionCacheBehaviors"
            },
            {
              "description": "Provides information about the cache configuration for the distribution."
            }
          ]
        },
        "DefaultCacheBehavior": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionDefaultCacheBehavior"
            },
            {
              "description": "The default cache behavior for the configuration."
            }
          ]
        },
        "DefaultRootObject": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The object that CloudFront sends in response to requests from the origin (for example, index.html) when a viewer requests the root URL for the distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/product-description.html). "
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The domain name corresponding to the distribution."
            }
          ]
        },
        "ETag": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The entity tag is a hash of the object."
            }
          ]
        },
        "LastModifiedTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when that the distribution was last modified.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Logging": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionLogging"
            },
            {
              "description": "A complex type that controls whether access logs are written for the distribution."
            }
          ]
        },
        "OriginGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionOriginGroups"
            },
            {
              "description": "Provides information about the origin groups in the distribution."
            }
          ]
        },
        "Origins": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionOrigins"
            },
            {
              "description": "A complex type that contains information about origins for this distribution."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Indicates the current status of the distribution."
            }
          ]
        },
        "WebAclId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionLogging": {
      "description": "A complex type that controls whether access logs are written for the distribution.",
      "properties": {
        "Bucket": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon S3 bucket to store the access logs in."
            }
          ]
        },
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "With this field, you can enable or disable the selected distribution."
            }
          ]
        },
        "IncludeCookies": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies whether you want CloudFront to include cookies in access logs."
            }
          ]
        },
        "Prefix": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "An optional string that you want CloudFront to use as a prefix to the access log filenames for this distribution."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionOriginGroup": {
      "description": "Information about an origin group for the distribution.",
      "properties": {
        "FailoverCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionOriginGroupFailover"
            },
            {
              "description": "Provides the criteria for an origin group to fail over."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionOriginGroupFailover": {
      "description": "Provides information about when an origin group fails over.",
      "properties": {
        "StatusCodes": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionOriginGroupFailoverStatusCodes"
            },
            {
              "description": "Information about the status codes that cause an origin group to fail over."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionOriginGroupFailoverStatusCodes": {
      "description": "The status codes that cause an origin group to fail over.",
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList"
            },
            {
              "description": "The list of status code values that can cause a failover to the next origin."
            }
          ]
        },
        "Quantity": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of status codes that can cause a failover."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList": {
      "items": {
        "$ref": "#/definitions/Integer"
      },
      "type": "array"
    },
    "AwsCloudFrontDistributionOriginGroups": {
      "description": "Provides information about origin groups that are associated with the distribution.",
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionOriginGroupsItemList"
            },
            {
              "description": "The list of origin groups."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionOriginGroupsItemList": {
      "items": {
        "$ref": "#/definitions/AwsCloudFrontDistributionOriginGroup"
      },
      "type": "array"
    },
    "AwsCloudFrontDistributionOriginItem": {
      "description": "A complex type that describes the Amazon S3 bucket, HTTP server (for example, a web server), Amazon Elemental MediaStore, or other server from which CloudFront gets your files.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A unique identifier for the origin or origin group."
            }
          ]
        },
        "OriginPath": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "An optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin."
            }
          ]
        },
        "S3OriginConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionOriginS3OriginConfig"
            },
            {
              "description": "An origin that is an S3 bucket that is not configured with static website hosting."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionOriginItemList": {
      "items": {
        "$ref": "#/definitions/AwsCloudFrontDistributionOriginItem"
      },
      "type": "array"
    },
    "AwsCloudFrontDistributionOriginS3OriginConfig": {
      "description": "Information about an origin that is an S3 bucket that is not configured with static website hosting.",
      "properties": {
        "OriginAccessIdentity": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The CloudFront origin access identity to associate with the origin."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudFrontDistributionOrigins": {
      "description": "A complex type that contains information about origins and origin groups for this distribution.",
      "properties": {
        "Items": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionOriginItemList"
            },
            {
              "description": "A complex type that contains origins or origin groups for this distribution."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCloudTrailTrailDetails": {
      "description": "Provides details about a CloudTrail trail.",
      "properties": {
        "CloudWatchLogsLogGroupArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the log group that CloudTrail logs are delivered to."
            }
          ]
        },
        "CloudWatchLogsRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the role that the CloudWatch Logs endpoint assumes when it writes to the log group."
            }
          ]
        },
        "HasCustomEventSelectors": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the trail has custom event selectors."
            }
          ]
        },
        "HomeRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Region where the trail was created."
            }
          ]
        },
        "IncludeGlobalServiceEvents": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the trail publishes events from global services such as IAM to the log files."
            }
          ]
        },
        "IsMultiRegionTrail": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the trail applies only to the current Region or to all Regions."
            }
          ]
        },
        "IsOrganizationTrail": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the trail is created for all accounts in an organization in AWS Organizations, or only for the current AWS account."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS KMS key ID to use to encrypt the logs."
            }
          ]
        },
        "LogFileValidationEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether CloudTrail log file validation is enabled."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the trail."
            }
          ]
        },
        "S3BucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the S3 bucket where the log files are published."
            }
          ]
        },
        "S3KeyPrefix": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The S3 key prefix. The key prefix is added after the name of the S3 bucket where the log files are published."
            }
          ]
        },
        "SnsTopicArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the SNS topic that is used for notifications of log file delivery."
            }
          ]
        },
        "SnsTopicName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the SNS topic that is used for notifications of log file delivery."
            }
          ]
        },
        "TrailArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the trail."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCodeBuildProjectDetails": {
      "description": "Information about an AWS CodeBuild project.",
      "properties": {
        "EncryptionKey": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The AWS Key Management Service (AWS KMS) customer master key (CMK) used to encrypt the build output artifacts.</p> <p>You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK alias (using the format alias/alias-name). </p>"
            }
          ]
        },
        "Environment": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCodeBuildProjectEnvironment"
            },
            {
              "description": "Information about the build environment for this build project."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the build project."
            }
          ]
        },
        "ServiceRole": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the IAM role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account."
            }
          ]
        },
        "Source": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCodeBuildProjectSource"
            },
            {
              "description": "Information about the build input source code for this build project."
            }
          ]
        },
        "VpcConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCodeBuildProjectVpcConfig"
            },
            {
              "description": "Information about the VPC configuration that AWS CodeBuild accesses."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCodeBuildProjectEnvironment": {
      "description": "Information about the build environment for this build project.",
      "properties": {
        "Certificate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The certificate to use with this build project."
            }
          ]
        },
        "ImagePullCredentialsType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The type of credentials AWS CodeBuild uses to pull images in your build.</p> <p>Valid values:</p> <ul> <li> <p> <code>CODEBUILD</code> specifies that AWS CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust the AWS CodeBuild service principal.</p> </li> <li> <p> <code>SERVICE_ROLE</code> specifies that AWS CodeBuild uses your build project's service role.</p> </li> </ul> <p>When you use a cross-account or private registry image, you must use <code>SERVICE_ROLE</code> credentials. When you use an AWS CodeBuild curated image, you must use <code>CODEBUILD</code> credentials.</p>"
            }
          ]
        },
        "RegistryCredential": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCodeBuildProjectEnvironmentRegistryCredential"
            },
            {
              "description": "The credentials for access to a private registry."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The type of build environment to use for related builds.</p> <p>The environment type <code>ARM_CONTAINER</code> is available only in Regions US East (N. Virginia), US East (Ohio), US West (Oregon), Europe (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and Europe (Frankfurt).</p> <p>The environment type <code>LINUX_CONTAINER</code> with compute type build.general1.2xlarge is available only in Regions US East (N. Virginia), US East (N. Virginia), US West (Oregon), Canada (Central), Europe (Ireland), Europe (London), Europe (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> <p>The environment type <code>LINUX_GPU_CONTAINER</code> is available only in Regions US East (N. Virginia), US East (N. Virginia), US West (Oregon), Canada (Central), Europe (Ireland), Europe (London), Europe (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> <p>Valid values: <code>WINDOWS_CONTAINER</code> | <code>LINUX_CONTAINER</code> | <code>LINUX_GPU_CONTAINER</code> | <code>ARM_CONTAINER</code> </p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCodeBuildProjectEnvironmentRegistryCredential": {
      "description": "The credentials for access to a private registry.",
      "properties": {
        "Credential": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The Amazon Resource Name (ARN) or name of credentials created using AWS Secrets Manager.</p> <note> <p>The credential can use the name of the credentials only if they exist in your current AWS Region. </p> </note>"
            }
          ]
        },
        "CredentialProvider": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The service that created the credentials to access a private Docker registry.</p> <p>The valid value,<code> SECRETS_MANAGER</code>, is for AWS Secrets Manager.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCodeBuildProjectSource": {
      "description": "Information about the build input source code for this build project.",
      "properties": {
        "GitCloneDepth": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "Information about the Git clone depth for the build project."
            }
          ]
        },
        "InsecureSsl": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether to ignore SSL warnings while connecting to the project source code."
            }
          ]
        },
        "Location": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Information about the location of the source code to be built.</p> <p>Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in AWS CodePipeline, location should not be specified. If it is specified, AWS CodePipeline ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the build spec file (for example, <code>https://git-codecommit.region-ID.amazonaws.com/v1/repos/repo-name</code> ).</p> </li> <li> <p>For source code in an S3 input bucket, one of the following.</p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>bucket-name/path/to/object-name.zip</code>).</p> </li> <li> <p> The path to the folder that contains the source code (for example, <code>bucket-name/path/to/source-code/folder/</code>).</p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the build spec file.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the build spec file. </p> </li> </ul>"
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The type of repository that contains the source code to be built. Valid values are:</p> <ul> <li> <p> <code>BITBUCKET</code> - The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code> - The source code is in an AWS CodeCommit repository.</p> </li> <li> <p> <code>CODEPIPELINE</code> - The source code settings are specified in the source action of a pipeline in AWS CodePipeline.</p> </li> <li> <p> <code>GITHUB</code> - The source code is in a GitHub repository.</p> </li> <li> <p> <code>GITHUB_ENTERPRISE</code> - The source code is in a GitHub Enterprise repository.</p> </li> <li> <p> <code>NO_SOURCE</code> - The project does not have input source code.</p> </li> <li> <p> <code>S3</code> - The source code is in an S3 input bucket. </p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCodeBuildProjectVpcConfig": {
      "description": "Information about the VPC configuration that AWS CodeBuild accesses.",
      "properties": {
        "SecurityGroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "A list of one or more security group IDs in your Amazon VPC."
            }
          ]
        },
        "Subnets": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "A list of one or more subnet IDs in your Amazon VPC."
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the VPC."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsCorsConfiguration": {
      "description": "Contains the cross-origin resource sharing (CORS) configuration for the API. CORS is only supported for HTTP APIs.",
      "properties": {
        "AllowCredentials": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the CORS request includes credentials."
            }
          ]
        },
        "AllowHeaders": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "The allowed headers for CORS requests."
            }
          ]
        },
        "AllowMethods": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "The allowed methods for CORS requests."
            }
          ]
        },
        "AllowOrigins": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "The allowed origins for CORS requests."
            }
          ]
        },
        "ExposeHeaders": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "The exposed headers for CORS requests."
            }
          ]
        },
        "MaxAge": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of seconds for which the browser caches preflight request results."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableAttributeDefinition": {
      "description": "Contains a definition of an attribute for the table.",
      "properties": {
        "AttributeName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the attribute."
            }
          ]
        },
        "AttributeType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of the attribute."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableAttributeDefinitionList": {
      "items": {
        "$ref": "#/definitions/AwsDynamoDbTableAttributeDefinition"
      },
      "type": "array"
    },
    "AwsDynamoDbTableBillingModeSummary": {
      "description": "Provides information about the billing for read/write capacity on the table.",
      "properties": {
        "BillingMode": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The method used to charge for read and write throughput and to manage capacity."
            }
          ]
        },
        "LastUpdateToPayPerRequestDateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>If the billing mode is <code>PAY_PER_REQUEST</code>, indicates when the billing mode was set to that value.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableDetails": {
      "description": "Provides details about a DynamoDB table.",
      "properties": {
        "AttributeDefinitions": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableAttributeDefinitionList"
            },
            {
              "description": "A list of attribute definitions for the table."
            }
          ]
        },
        "BillingModeSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableBillingModeSummary"
            },
            {
              "description": "Information about the billing for read/write capacity on the table."
            }
          ]
        },
        "CreationDateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the table was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "GlobalSecondaryIndexes": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableGlobalSecondaryIndexList"
            },
            {
              "description": "List of global secondary indexes for the table."
            }
          ]
        },
        "GlobalTableVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version of global tables being used."
            }
          ]
        },
        "ItemCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of items in the table."
            }
          ]
        },
        "KeySchema": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableKeySchemaList"
            },
            {
              "description": "The primary key structure for the table."
            }
          ]
        },
        "LatestStreamArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the latest stream for the table."
            }
          ]
        },
        "LatestStreamLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The label of the latest stream. The label is not a unique identifier."
            }
          ]
        },
        "LocalSecondaryIndexes": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableLocalSecondaryIndexList"
            },
            {
              "description": "The list of local secondary indexes for the table."
            }
          ]
        },
        "ProvisionedThroughput": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableProvisionedThroughput"
            },
            {
              "description": "Information about the provisioned throughput for the table."
            }
          ]
        },
        "Replicas": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableReplicaList"
            },
            {
              "description": "The list of replicas of this table."
            }
          ]
        },
        "RestoreSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableRestoreSummary"
            },
            {
              "description": "Information about the restore for the table."
            }
          ]
        },
        "SseDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableSseDescription"
            },
            {
              "description": "Information about the server-side encryption for the table."
            }
          ]
        },
        "StreamSpecification": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableStreamSpecification"
            },
            {
              "description": "The current DynamoDB Streams configuration for the table."
            }
          ]
        },
        "TableId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the table."
            }
          ]
        },
        "TableName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the table."
            }
          ]
        },
        "TableSizeBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/SizeBytes"
            },
            {
              "description": "The total size of the table in bytes."
            }
          ]
        },
        "TableStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The current status of the table."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableGlobalSecondaryIndex": {
      "description": "Information abut a global secondary index for the table.",
      "properties": {
        "Backfilling": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the index is currently backfilling."
            }
          ]
        },
        "IndexArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the index."
            }
          ]
        },
        "IndexName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the index."
            }
          ]
        },
        "IndexSizeBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/SizeBytes"
            },
            {
              "description": "The total size in bytes of the index."
            }
          ]
        },
        "IndexStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The current status of the index."
            }
          ]
        },
        "ItemCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of items in the index."
            }
          ]
        },
        "KeySchema": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableKeySchemaList"
            },
            {
              "description": "The key schema for the index."
            }
          ]
        },
        "Projection": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableProjection"
            },
            {
              "description": "Attributes that are copied from the table into an index."
            }
          ]
        },
        "ProvisionedThroughput": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableProvisionedThroughput"
            },
            {
              "description": "Information about the provisioned throughput settings for the indexes."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableGlobalSecondaryIndexList": {
      "items": {
        "$ref": "#/definitions/AwsDynamoDbTableGlobalSecondaryIndex"
      },
      "type": "array"
    },
    "AwsDynamoDbTableKeySchema": {
      "description": "A component of the key schema for the DynamoDB table, a global secondary index, or a local secondary index.",
      "properties": {
        "AttributeName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the key schema attribute."
            }
          ]
        },
        "KeyType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of key used for the key schema attribute."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableKeySchemaList": {
      "items": {
        "$ref": "#/definitions/AwsDynamoDbTableKeySchema"
      },
      "type": "array"
    },
    "AwsDynamoDbTableLocalSecondaryIndex": {
      "description": "Information about a local secondary index for a DynamoDB table.",
      "properties": {
        "IndexArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the index."
            }
          ]
        },
        "IndexName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the index."
            }
          ]
        },
        "KeySchema": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableKeySchemaList"
            },
            {
              "description": "The complete key schema for the index."
            }
          ]
        },
        "Projection": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableProjection"
            },
            {
              "description": "Attributes that are copied from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableLocalSecondaryIndexList": {
      "items": {
        "$ref": "#/definitions/AwsDynamoDbTableLocalSecondaryIndex"
      },
      "type": "array"
    },
    "AwsDynamoDbTableProjection": {
      "description": "For global and local secondary indexes, identifies the attributes that are copied from the table into the index.",
      "properties": {
        "NonKeyAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The nonkey attributes that are projected into the index. For each attribute, provide the attribute name."
            }
          ]
        },
        "ProjectionType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The types of attributes that are projected into the index."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableProvisionedThroughput": {
      "description": "Information about the provisioned throughput for the table or for a global secondary index.",
      "properties": {
        "LastDecreaseDateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the provisioned throughput was last decreased.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "LastIncreaseDateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the provisioned throughput was last increased.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "NumberOfDecreasesToday": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of times during the current UTC calendar day that the provisioned throughput was decreased."
            }
          ]
        },
        "ReadCapacityUnits": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>."
            }
          ]
        },
        "WriteCapacityUnits": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableProvisionedThroughputOverride": {
      "description": "Replica-specific configuration for the provisioned throughput.",
      "properties": {
        "ReadCapacityUnits": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The read capacity units for the replica."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableReplica": {
      "description": "Information about a replica of a DynamoDB table.",
      "properties": {
        "GlobalSecondaryIndexes": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableReplicaGlobalSecondaryIndexList"
            },
            {
              "description": "List of global secondary indexes for the replica."
            }
          ]
        },
        "KmsMasterKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the AWS KMS customer master key (CMK) that will be used for AWS KMS encryption for the replica."
            }
          ]
        },
        "ProvisionedThroughputOverride": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableProvisionedThroughputOverride"
            },
            {
              "description": "Replica-specific configuration for the provisioned throughput."
            }
          ]
        },
        "RegionName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the Region where the replica is located."
            }
          ]
        },
        "ReplicaStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The current status of the replica."
            }
          ]
        },
        "ReplicaStatusDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Detailed information about the replica status."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableReplicaGlobalSecondaryIndex": {
      "description": "Information about a global secondary index for a DynamoDB table replica.",
      "properties": {
        "IndexName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the index."
            }
          ]
        },
        "ProvisionedThroughputOverride": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableProvisionedThroughputOverride"
            },
            {
              "description": "Replica-specific configuration for the provisioned throughput for the index."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableReplicaGlobalSecondaryIndexList": {
      "items": {
        "$ref": "#/definitions/AwsDynamoDbTableReplicaGlobalSecondaryIndex"
      },
      "type": "array"
    },
    "AwsDynamoDbTableReplicaList": {
      "items": {
        "$ref": "#/definitions/AwsDynamoDbTableReplica"
      },
      "type": "array"
    },
    "AwsDynamoDbTableRestoreSummary": {
      "description": "Information about the restore for the table.",
      "properties": {
        "RestoreDateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates the point in time that the table was restored to.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "RestoreInProgress": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether a restore is currently in progress."
            }
          ]
        },
        "SourceBackupArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the source backup from which the table was restored."
            }
          ]
        },
        "SourceTableArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the source table for the backup."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableSseDescription": {
      "description": "Information about the server-side encryption for the table.",
      "properties": {
        "InaccessibleEncryptionDateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>If the key is inaccessible, the date and time when DynamoDB detected that the key was inaccessible.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "KmsMasterKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the AWS KMS customer master key (CMK) that is used for the AWS KMS encryption."
            }
          ]
        },
        "SseType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of server-side encryption."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the server-side encryption."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsDynamoDbTableStreamSpecification": {
      "description": "The current DynamoDB Streams configuration for the table.",
      "properties": {
        "StreamEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether DynamoDB Streams is enabled on the table."
            }
          ]
        },
        "StreamViewType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Determines the information that is written to the table."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2EipDetails": {
      "description": "Information about an Elastic IP address.",
      "properties": {
        "AllocationId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier that AWS assigns to represent the allocation of the Elastic IP address for use with Amazon VPC."
            }
          ]
        },
        "AssociationId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier that represents the association of the Elastic IP address with an EC2 instance."
            }
          ]
        },
        "Domain": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The domain in which to allocate the address.</p> <p>If the address is for use with EC2 instances in a VPC, then <code>Domain</code> is <code>vpc</code>. Otherwise, <code>Domain</code> is <code>standard</code>. </p>"
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the EC2 instance."
            }
          ]
        },
        "NetworkBorderGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the location from which the Elastic IP address is advertised."
            }
          ]
        },
        "NetworkInterfaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the network interface."
            }
          ]
        },
        "NetworkInterfaceOwnerId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS account ID of the owner of the network interface."
            }
          ]
        },
        "PrivateIpAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The private IP address that is associated with the Elastic IP address."
            }
          ]
        },
        "PublicIp": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A public IP address that is associated with the EC2 instance."
            }
          ]
        },
        "PublicIpv4Pool": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of an IP address pool. This parameter allows Amazon EC2 to select an IP address from the address pool."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2InstanceDetails": {
      "description": "The details of an Amazon EC2 instance.",
      "properties": {
        "IamInstanceProfileArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The IAM profile ARN of the instance."
            }
          ]
        },
        "ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Machine Image (AMI) ID of the instance."
            }
          ]
        },
        "IpV4Addresses": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The IPv4 addresses associated with the instance."
            }
          ]
        },
        "IpV6Addresses": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The IPv6 addresses associated with the instance."
            }
          ]
        },
        "KeyName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The key name associated with the instance."
            }
          ]
        },
        "LaunchedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the instance was launched.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "SubnetId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the subnet that the instance was launched in."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The instance type of the instance. "
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the VPC that the instance was launched in."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2NetworkInterfaceAttachment": {
      "description": "Information about the network interface attachment.",
      "properties": {
        "AttachTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the attachment initiated.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "AttachmentId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the network interface attachment"
            }
          ]
        },
        "DeleteOnTermination": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the network interface is deleted when the instance is terminated."
            }
          ]
        },
        "DeviceIndex": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The device index of the network interface attachment on the instance."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the instance."
            }
          ]
        },
        "InstanceOwnerId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS account ID of the owner of the instance."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The attachment state.</p> <p>Valid values: <code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code> </p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2NetworkInterfaceDetails": {
      "description": "Details about the network interface",
      "properties": {
        "Attachment": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2NetworkInterfaceAttachment"
            },
            {
              "description": "The network interface attachment."
            }
          ]
        },
        "NetworkInterfaceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the network interface."
            }
          ]
        },
        "SecurityGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2NetworkInterfaceSecurityGroupList"
            },
            {
              "description": "Security groups for the network interface."
            }
          ]
        },
        "SourceDestCheck": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether traffic to or from the instance is validated."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2NetworkInterfaceSecurityGroup": {
      "description": "A security group associated with the network interface.",
      "properties": {
        "GroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the security group."
            }
          ]
        },
        "GroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the security group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2NetworkInterfaceSecurityGroupList": {
      "items": {
        "$ref": "#/definitions/AwsEc2NetworkInterfaceSecurityGroup"
      },
      "type": "array"
    },
    "AwsEc2SecurityGroupDetails": {
      "description": "Details about an EC2 security group.",
      "properties": {
        "GroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the security group."
            }
          ]
        },
        "GroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the security group."
            }
          ]
        },
        "IpPermissions": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2SecurityGroupIpPermissionList"
            },
            {
              "description": "The inbound rules associated with the security group."
            }
          ]
        },
        "IpPermissionsEgress": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2SecurityGroupIpPermissionList"
            },
            {
              "description": "[VPC only] The outbound rules associated with the security group."
            }
          ]
        },
        "OwnerId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS account ID of the owner of the security group."
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "[VPC only] The ID of the VPC for the security group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2SecurityGroupIpPermission": {
      "description": "An IP permission for an EC2 security group.",
      "properties": {
        "FromPort": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p>The start of the port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number.</p> <p>A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes. </p>"
            }
          ]
        },
        "IpProtocol": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>) or number.</p> <p>[VPC only] Use <code>-1</code> to specify all protocols.</p> <p>When authorizing security group rules, specifying -1 or a protocol number other than <code>tcp</code>, <code>udp</code>, <code>icmp</code>, or <code>icmpv6</code> allows traffic on all ports, regardless of any port range you specify.</p> <p>For <code>tcp</code>, <code>udp</code>, and <code>icmp</code>, you must specify a port range.</p> <p>For <code>icmpv6</code>, the port range is optional. If you omit the port range, traffic for all types and codes is allowed. </p>"
            }
          ]
        },
        "IpRanges": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2SecurityGroupIpRangeList"
            },
            {
              "description": "The IPv4 ranges."
            }
          ]
        },
        "Ipv6Ranges": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2SecurityGroupIpv6RangeList"
            },
            {
              "description": "The IPv6 ranges."
            }
          ]
        },
        "PrefixListIds": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2SecurityGroupPrefixListIdList"
            },
            {
              "description": "[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group."
            }
          ]
        },
        "ToPort": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p>The end of the port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.</p> <p>A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.</p>"
            }
          ]
        },
        "UserIdGroupPairs": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2SecurityGroupUserIdGroupPairList"
            },
            {
              "description": "The security group and AWS account ID pairs."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2SecurityGroupIpPermissionList": {
      "items": {
        "$ref": "#/definitions/AwsEc2SecurityGroupIpPermission"
      },
      "type": "array"
    },
    "AwsEc2SecurityGroupIpRange": {
      "description": "A range of IPv4 addresses.",
      "properties": {
        "CidrIp": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The IPv4 CIDR range. You can specify either a CIDR range or a source security group, but not both. To specify a single IPv4 address, use the /32 prefix length."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2SecurityGroupIpRangeList": {
      "items": {
        "$ref": "#/definitions/AwsEc2SecurityGroupIpRange"
      },
      "type": "array"
    },
    "AwsEc2SecurityGroupIpv6Range": {
      "description": "A range of IPv6 addresses.",
      "properties": {
        "CidrIpv6": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The IPv6 CIDR range. You can specify either a CIDR range or a source security group, but not both. To specify a single IPv6 address, use the /128 prefix length."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2SecurityGroupIpv6RangeList": {
      "items": {
        "$ref": "#/definitions/AwsEc2SecurityGroupIpv6Range"
      },
      "type": "array"
    },
    "AwsEc2SecurityGroupPrefixListId": {
      "description": "A prefix list ID.",
      "properties": {
        "PrefixListId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the prefix."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2SecurityGroupPrefixListIdList": {
      "items": {
        "$ref": "#/definitions/AwsEc2SecurityGroupPrefixListId"
      },
      "type": "array"
    },
    "AwsEc2SecurityGroupUserIdGroupPair": {
      "description": "A relationship between a security group and a user.",
      "properties": {
        "GroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the security group."
            }
          ]
        },
        "GroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the security group."
            }
          ]
        },
        "PeeringStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of a VPC peering connection, if applicable."
            }
          ]
        },
        "UserId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The ID of an AWS account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p> <p>[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS. </p>"
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the VPC for the referenced security group, if applicable."
            }
          ]
        },
        "VpcPeeringConnectionId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the VPC peering connection, if applicable."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2SecurityGroupUserIdGroupPairList": {
      "items": {
        "$ref": "#/definitions/AwsEc2SecurityGroupUserIdGroupPair"
      },
      "type": "array"
    },
    "AwsEc2VolumeAttachment": {
      "description": "An attachment to an AWS EC2 volume.",
      "properties": {
        "AttachTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The datetime when the attachment initiated."
            }
          ]
        },
        "DeleteOnTermination": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the EBS volume is deleted when the EC2 instance is terminated."
            }
          ]
        },
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the EC2 instance."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The attachment state of the volume."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2VolumeAttachmentList": {
      "items": {
        "$ref": "#/definitions/AwsEc2VolumeAttachment"
      },
      "type": "array"
    },
    "AwsEc2VolumeDetails": {
      "description": "Details about an EC2 volume.",
      "properties": {
        "Attachments": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2VolumeAttachmentList"
            },
            {
              "description": "The volume attachments."
            }
          ]
        },
        "CreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the volume was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Encrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the volume is encrypted."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume."
            }
          ]
        },
        "Size": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The size of the volume, in GiBs."
            }
          ]
        },
        "SnapshotId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The snapshot from which the volume was created."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The volume state."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsEc2VpcDetails": {
      "description": "Details about an EC2 VPC.",
      "properties": {
        "CidrBlockAssociationSet": {
          "allOf": [
            {
              "$ref": "#/definitions/CidrBlockAssociationList"
            },
            {
              "description": "Information about the IPv4 CIDR blocks associated with the VPC."
            }
          ]
        },
        "DhcpOptionsId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the set of Dynamic Host Configuration Protocol (DHCP) options that are associated with the VPC. If the default options are associated with the VPC, then this is default."
            }
          ]
        },
        "Ipv6CidrBlockAssociationSet": {
          "allOf": [
            {
              "$ref": "#/definitions/Ipv6CidrBlockAssociationList"
            },
            {
              "description": "Information about the IPv6 CIDR blocks associated with the VPC."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The current state of the VPC."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElasticsearchDomainDetails": {
      "description": "Information about an Elasticsearch domain.",
      "properties": {
        "AccessPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "IAM policy document specifying the access policies for the new Amazon ES domain."
            }
          ]
        },
        "DomainEndpointOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElasticsearchDomainDomainEndpointOptions"
            },
            {
              "description": "Additional options for the domain endpoint."
            }
          ]
        },
        "DomainId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Unique identifier for an Amazon ES domain."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Name of an Amazon ES domain.</p> <p>Domain names are unique across all domains owned by the same account within an AWS Region.</p> <p>Domain names must start with a lowercase letter and must be between 3 and 28 characters.</p> <p>Valid characters are a-z (lowercase only), 0-9, and – (hyphen). </p>"
            }
          ]
        },
        "ElasticsearchVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Elasticsearch version."
            }
          ]
        },
        "EncryptionAtRestOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElasticsearchDomainEncryptionAtRestOptions"
            },
            {
              "description": "Details about the configuration for encryption at rest."
            }
          ]
        },
        "Endpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Domain-specific endpoint used to submit index, search, and data upload requests to an Amazon ES domain.</p> <p>The endpoint is a service URL. </p>"
            }
          ]
        },
        "Endpoints": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "The key-value pair that exists if the Amazon ES domain uses VPC endpoints."
            }
          ]
        },
        "NodeToNodeEncryptionOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElasticsearchDomainNodeToNodeEncryptionOptions"
            },
            {
              "description": "Details about the configuration for node-to-node encryption."
            }
          ]
        },
        "VPCOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElasticsearchDomainVPCOptions"
            },
            {
              "description": "Information that Amazon ES derives based on <code>VPCOptions</code> for the domain."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElasticsearchDomainDomainEndpointOptions": {
      "description": "Additional options for the domain endpoint, such as whether to require HTTPS for all traffic.",
      "properties": {
        "EnforceHTTPS": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether to require that all traffic to the domain arrive over HTTPS."
            }
          ]
        },
        "TLSSecurityPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The TLS security policy to apply to the HTTPS endpoint of the Elasticsearch domain.</p> <p>Valid values:</p> <ul> <li> <p> <code>Policy-Min-TLS-1-0-2019-07</code>, which supports TLSv1.0 and higher</p> </li> <li> <p> <code>Policy-Min-TLS-1-2-2019-07</code>, which only supports TLSv1.2</p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElasticsearchDomainEncryptionAtRestOptions": {
      "description": "Details about the configuration for encryption at rest.",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether encryption at rest is enabled."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The KMS key ID. Takes the form 1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElasticsearchDomainNodeToNodeEncryptionOptions": {
      "description": "Details about the configuration for node-to-node encryption.",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether node-to-node encryption is enabled."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElasticsearchDomainVPCOptions": {
      "description": "Information that Amazon ES derives based on <code>VPCOptions</code> for the domain.",
      "properties": {
        "AvailabilityZones": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "The list of Availability Zones associated with the VPC subnets."
            }
          ]
        },
        "SecurityGroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "The list of security group IDs associated with the VPC endpoints for the domain."
            }
          ]
        },
        "SubnetIds": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "A list of subnet IDs associated with the VPC endpoints for the domain."
            }
          ]
        },
        "VPCId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "ID for the VPC."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbAppCookieStickinessPolicies": {
      "items": {
        "$ref": "#/definitions/AwsElbAppCookieStickinessPolicy"
      },
      "type": "array"
    },
    "AwsElbAppCookieStickinessPolicy": {
      "description": "Contains information about a stickiness policy that was created using <code>CreateAppCookieStickinessPolicy</code>.",
      "properties": {
        "CookieName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the application cookie used for stickiness."
            }
          ]
        },
        "PolicyName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The mnemonic name for the policy being created. The name must be unique within the set of policies for the load balancer."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLbCookieStickinessPolicies": {
      "items": {
        "$ref": "#/definitions/AwsElbLbCookieStickinessPolicy"
      },
      "type": "array"
    },
    "AwsElbLbCookieStickinessPolicy": {
      "description": "Contains information about a stickiness policy that was created using <code>CreateLBCookieStickinessPolicy</code>.",
      "properties": {
        "CookieExpirationPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "The amount of time, in seconds, after which the cookie is considered stale. If an expiration period is not specified, the stickiness session lasts for the duration of the browser session."
            }
          ]
        },
        "PolicyName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the policy. The name must be unique within the set of policies for the load balancer."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerAccessLog": {
      "description": "Contains information about the access log configuration for the load balancer.",
      "properties": {
        "EmitInterval": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p>The interval in minutes for publishing the access logs.</p> <p>You can publish access logs either every 5 minutes or every 60 minutes.</p>"
            }
          ]
        },
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether access logs are enabled for the load balancer."
            }
          ]
        },
        "S3BucketName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the S3 bucket where the access logs are stored."
            }
          ]
        },
        "S3BucketPrefix": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The logical hierarchy that was created for the S3 bucket.</p> <p>If a prefix is not provided, the log is placed at the root level of the bucket.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerAttributes": {
      "description": "Contains attributes for the load balancer.",
      "properties": {
        "AccessLog": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerAccessLog"
            },
            {
              "description": "<p>Information about the access log configuration for the load balancer.</p> <p>If the access log is enabled, the load balancer captures detailed information about all requests. It delivers the information to a specified S3 bucket.</p>"
            }
          ]
        },
        "ConnectionDraining": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerConnectionDraining"
            },
            {
              "description": "<p>Information about the connection draining configuration for the load balancer.</p> <p>If connection draining is enabled, the load balancer allows existing requests to complete before it shifts traffic away from a deregistered or unhealthy instance.</p>"
            }
          ]
        },
        "ConnectionSettings": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerConnectionSettings"
            },
            {
              "description": "<p>Connection settings for the load balancer.</p> <p>If an idle timeout is configured, the load balancer allows connections to remain idle for the specified duration. When a connection is idle, no data is sent over the connection.</p>"
            }
          ]
        },
        "CrossZoneLoadBalancing": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerCrossZoneLoadBalancing"
            },
            {
              "description": "<p>Cross-zone load balancing settings for the load balancer.</p> <p>If cross-zone load balancing is enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerBackendServerDescription": {
      "description": "Provides information about the configuration of an EC2 instance for the load balancer.",
      "properties": {
        "InstancePort": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The port on which the EC2 instance is listening."
            }
          ]
        },
        "PolicyNames": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The names of the policies that are enabled for the EC2 instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerBackendServerDescriptions": {
      "items": {
        "$ref": "#/definitions/AwsElbLoadBalancerBackendServerDescription"
      },
      "type": "array"
    },
    "AwsElbLoadBalancerConnectionDraining": {
      "description": "Contains information about the connection draining configuration for the load balancer.",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether connection draining is enabled for the load balancer."
            }
          ]
        },
        "Timeout": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The maximum time, in seconds, to keep the existing connections open before deregistering the instances."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerConnectionSettings": {
      "description": "Contains connection settings for the load balancer.",
      "properties": {
        "IdleTimeout": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The time, in seconds, that the connection can be idle (no data is sent over the connection) before it is closed by the load balancer."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerCrossZoneLoadBalancing": {
      "description": "Contains cross-zone load balancing settings for the load balancer.",
      "properties": {
        "Enabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether cross-zone load balancing is enabled for the load balancer."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerDetails": {
      "description": "Contains details about a Classic Load Balancer.",
      "properties": {
        "AvailabilityZones": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The list of Availability Zones for the load balancer."
            }
          ]
        },
        "BackendServerDescriptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerBackendServerDescriptions"
            },
            {
              "description": "Information about the configuration of the EC2 instances."
            }
          ]
        },
        "CanonicalHostedZoneName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the Amazon Route 53 hosted zone for the load balancer."
            }
          ]
        },
        "CanonicalHostedZoneNameID": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the Amazon Route 53 hosted zone for the load balancer."
            }
          ]
        },
        "CreatedTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the load balancer was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "DnsName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The DNS name of the load balancer."
            }
          ]
        },
        "HealthCheck": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerHealthCheck"
            },
            {
              "description": "Information about the health checks that are conducted on the load balancer."
            }
          ]
        },
        "Instances": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerInstances"
            },
            {
              "description": "List of EC2 instances for the load balancer."
            }
          ]
        },
        "ListenerDescriptions": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerListenerDescriptions"
            },
            {
              "description": "The policies that are enabled for the load balancer listeners."
            }
          ]
        },
        "LoadBalancerAttributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerAttributes"
            },
            {
              "description": "The attributes for a load balancer."
            }
          ]
        },
        "LoadBalancerName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the load balancer."
            }
          ]
        },
        "Policies": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerPolicies"
            },
            {
              "description": "The policies for a load balancer."
            }
          ]
        },
        "Scheme": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The type of load balancer. Only provided if the load balancer is in a VPC.</p> <p>If <code>Scheme</code> is <code>internet-facing</code>, the load balancer has a public DNS name that resolves to a public IP address.</p> <p>If <code>Scheme</code> is <code>internal</code>, the load balancer has a public DNS name that resolves to a private IP address.</p>"
            }
          ]
        },
        "SecurityGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The security groups for the load balancer. Only provided if the load balancer is in a VPC."
            }
          ]
        },
        "SourceSecurityGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerSourceSecurityGroup"
            },
            {
              "description": "Information about the security group for the load balancer. This is the security group that is used for inbound rules."
            }
          ]
        },
        "Subnets": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The list of subnet identifiers for the load balancer."
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the VPC for the load balancer."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerHealthCheck": {
      "description": "Contains information about the health checks that are conducted on the load balancer.",
      "properties": {
        "HealthyThreshold": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of consecutive health check successes required before the instance is moved to the Healthy state."
            }
          ]
        },
        "Interval": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The approximate interval, in seconds, between health checks of an individual instance."
            }
          ]
        },
        "Target": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The instance that is being checked. The target specifies the protocol and port. The available protocols are TCP, SSL, HTTP, and HTTPS. The range of valid ports is 1 through 65535.</p> <p>For the HTTP and HTTPS protocols, the target also specifies the ping path.</p> <p>For the TCP protocol, the target is specified as <code>TCP: <i>&lt;port&gt;</i> </code>.</p> <p>For the SSL protocol, the target is specified as <code>SSL.<i>&lt;port&gt;</i> </code>.</p> <p>For the HTTP and HTTPS protocols, the target is specified as <code> <i>&lt;protocol&gt;</i>:<i>&lt;port&gt;</i>/<i>&lt;path to ping&gt;</i> </code>.</p>"
            }
          ]
        },
        "Timeout": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The amount of time, in seconds, during which no response means a failed health check."
            }
          ]
        },
        "UnhealthyThreshold": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of consecutive health check failures that must occur before the instance is moved to the Unhealthy state."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerInstance": {
      "description": "Provides information about an EC2 instance for a load balancer.",
      "properties": {
        "InstanceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The instance identifier."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerInstances": {
      "items": {
        "$ref": "#/definitions/AwsElbLoadBalancerInstance"
      },
      "type": "array"
    },
    "AwsElbLoadBalancerListener": {
      "description": "Information about a load balancer listener.",
      "properties": {
        "InstancePort": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The port on which the instance is listening."
            }
          ]
        },
        "InstanceProtocol": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The protocol to use to route traffic to instances.</p> <p>Valid values: <code>HTTP</code> | <code>HTTPS</code> | <code>TCP</code> | <code>SSL</code> </p>"
            }
          ]
        },
        "LoadBalancerPort": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p>The port on which the load balancer is listening.</p> <p>On EC2-VPC, you can specify any port from the range 1-65535.</p> <p>On EC2-Classic, you can specify any port from the following list: 25, 80, 443, 465, 587, 1024-65535.</p>"
            }
          ]
        },
        "Protocol": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The load balancer transport protocol to use for routing.</p> <p>Valid values: <code>HTTP</code> | <code>HTTPS</code> | <code>TCP</code> | <code>SSL</code> </p>"
            }
          ]
        },
        "SslCertificateId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the server certificate."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerListenerDescription": {
      "description": "Lists the policies that are enabled for a load balancer listener.",
      "properties": {
        "Listener": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerListener"
            },
            {
              "description": "Information about the listener."
            }
          ]
        },
        "PolicyNames": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The policies enabled for the listener."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerListenerDescriptions": {
      "items": {
        "$ref": "#/definitions/AwsElbLoadBalancerListenerDescription"
      },
      "type": "array"
    },
    "AwsElbLoadBalancerPolicies": {
      "description": "Contains information about the policies for a load balancer.",
      "properties": {
        "AppCookieStickinessPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbAppCookieStickinessPolicies"
            },
            {
              "description": "The stickiness policies that are created using <code>CreateAppCookieStickinessPolicy</code>."
            }
          ]
        },
        "LbCookieStickinessPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLbCookieStickinessPolicies"
            },
            {
              "description": "The stickiness policies that are created using <code>CreateLBCookieStickinessPolicy</code>."
            }
          ]
        },
        "OtherPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The policies other than the stickiness policies."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbLoadBalancerSourceSecurityGroup": {
      "description": "Contains information about the security group for the load balancer.",
      "properties": {
        "GroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the security group."
            }
          ]
        },
        "OwnerAlias": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The owner of the security group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsElbv2LoadBalancerDetails": {
      "description": "Information about a load balancer.",
      "properties": {
        "AvailabilityZones": {
          "allOf": [
            {
              "$ref": "#/definitions/AvailabilityZones"
            },
            {
              "description": "The Availability Zones for the load balancer."
            }
          ]
        },
        "CanonicalHostedZoneId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the Amazon Route 53 hosted zone associated with the load balancer."
            }
          ]
        },
        "CreatedTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the load balancer was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "DNSName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The public DNS name of the load balancer."
            }
          ]
        },
        "IpAddressType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses)."
            }
          ]
        },
        "Scheme": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The nodes of an Internet-facing load balancer have public IP addresses."
            }
          ]
        },
        "SecurityGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/SecurityGroups"
            },
            {
              "description": "The IDs of the security groups for the load balancer."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/LoadBalancerState"
            },
            {
              "description": "The state of the load balancer."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of load balancer."
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the VPC for the load balancer."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamAccessKeyDetails": {
      "description": "IAM access key details related to a finding.",
      "properties": {
        "AccessKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the access key."
            }
          ]
        },
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS account ID of the account for the key."
            }
          ]
        },
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the IAM access key was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "PrincipalId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the principal associated with an access key."
            }
          ]
        },
        "PrincipalName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the principal."
            }
          ]
        },
        "PrincipalType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of principal associated with an access key."
            }
          ]
        },
        "SessionContext": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamAccessKeySessionContext"
            },
            {
              "description": "Information about the session that the key was used for."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamAccessKeyStatus"
            },
            {
              "description": "The status of the IAM access key related to a finding."
            }
          ]
        },
        "UserName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The user associated with the IAM access key related to a finding.</p> <p>The <code>UserName</code> parameter has been replaced with the <code>PrincipalName</code> parameter because access keys can also be assigned to principals that are not IAM users.</p>This field is deprecated, use PrincipalName instead.",
              "x-deprecated": true
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamAccessKeySessionContext": {
      "description": "Provides information about the session that the key was used for.",
      "properties": {
        "Attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamAccessKeySessionContextAttributes"
            },
            {
              "description": "Attributes of the session that the key was used for."
            }
          ]
        },
        "SessionIssuer": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamAccessKeySessionContextSessionIssuer"
            },
            {
              "description": "Information about the entity that created the session."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamAccessKeySessionContextAttributes": {
      "description": "Attributes of the session that the key was used for.",
      "properties": {
        "CreationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the session was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "MfaAuthenticated": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the session used multi-factor authentication (MFA)."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamAccessKeySessionContextSessionIssuer": {
      "description": "Information about the entity that created the session.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the AWS account that created the session."
            }
          ]
        },
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the session."
            }
          ]
        },
        "PrincipalId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The principal ID of the principal (user, role, or group) that created the session."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of principal (user, role, or group) that created the session."
            }
          ]
        },
        "UserName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the principal that created the session."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamAccessKeyStatus": {
      "enum": [
        "Active",
        "Inactive"
      ],
      "type": "string"
    },
    "AwsIamAttachedManagedPolicy": {
      "description": "A managed policy that is attached to an IAM principal.",
      "properties": {
        "PolicyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the policy."
            }
          ]
        },
        "PolicyName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the policy."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamAttachedManagedPolicyList": {
      "items": {
        "$ref": "#/definitions/AwsIamAttachedManagedPolicy"
      },
      "type": "array"
    },
    "AwsIamGroupDetails": {
      "description": "Contains details about an IAM group.",
      "properties": {
        "AttachedManagedPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamAttachedManagedPolicyList"
            },
            {
              "description": "A list of the managed policies that are attached to the IAM group."
            }
          ]
        },
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the IAM group was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "GroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the IAM group."
            }
          ]
        },
        "GroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the IAM group."
            }
          ]
        },
        "GroupPolicyList": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamGroupPolicyList"
            },
            {
              "description": "The list of inline policies that are embedded in the group."
            }
          ]
        },
        "Path": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The path to the group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamGroupPolicy": {
      "description": "A managed policy that is attached to the IAM group.",
      "properties": {
        "PolicyName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the policy."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamGroupPolicyList": {
      "items": {
        "$ref": "#/definitions/AwsIamGroupPolicy"
      },
      "type": "array"
    },
    "AwsIamInstanceProfile": {
      "description": "Information about an instance profile.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the instance profile."
            }
          ]
        },
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the instance profile was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "InstanceProfileId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the instance profile."
            }
          ]
        },
        "InstanceProfileName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the instance profile."
            }
          ]
        },
        "Path": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The path to the instance profile."
            }
          ]
        },
        "Roles": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamInstanceProfileRoles"
            },
            {
              "description": "The roles associated with the instance profile."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamInstanceProfileList": {
      "items": {
        "$ref": "#/definitions/AwsIamInstanceProfile"
      },
      "type": "array"
    },
    "AwsIamInstanceProfileRole": {
      "description": "Information about a role associated with an instance profile.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the role."
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamRoleAssumeRolePolicyDocument"
            },
            {
              "description": "The policy that grants an entity permission to assume the role."
            }
          ]
        },
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the role was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Path": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The path to the role."
            }
          ]
        },
        "RoleId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the role."
            }
          ]
        },
        "RoleName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the role."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamInstanceProfileRoles": {
      "items": {
        "$ref": "#/definitions/AwsIamInstanceProfileRole"
      },
      "type": "array"
    },
    "AwsIamPermissionsBoundary": {
      "description": "Information about the policy used to set the permissions boundary for an IAM principal.",
      "properties": {
        "PermissionsBoundaryArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the policy used to set the permissions boundary."
            }
          ]
        },
        "PermissionsBoundaryType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The usage type for the permissions boundary."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamPolicyDetails": {
      "description": "Represents an IAM permissions policy.",
      "properties": {
        "AttachmentCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of users, groups, and roles that the policy is attached to."
            }
          ]
        },
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>When the policy was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "DefaultVersionId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the default version of the policy."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A description of the policy."
            }
          ]
        },
        "IsAttachable": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the policy can be attached to a user, group, or role."
            }
          ]
        },
        "Path": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The path to the policy."
            }
          ]
        },
        "PermissionsBoundaryUsageCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of users and roles that use the policy to set the permissions boundary."
            }
          ]
        },
        "PolicyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The unique identifier of the policy."
            }
          ]
        },
        "PolicyName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the policy."
            }
          ]
        },
        "PolicyVersionList": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamPolicyVersionList"
            },
            {
              "description": "List of versions of the policy."
            }
          ]
        },
        "UpdateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>When the policy was most recently updated.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamPolicyVersion": {
      "description": "A version of an IAM policy.",
      "properties": {
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the version was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "IsDefaultVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the version is the default version."
            }
          ]
        },
        "VersionId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the policy version."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamPolicyVersionList": {
      "items": {
        "$ref": "#/definitions/AwsIamPolicyVersion"
      },
      "type": "array"
    },
    "AwsIamRoleAssumeRolePolicyDocument": {
      "maxLength": 131072,
      "minLength": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u00A1-\\u00FF]+",
      "type": "string"
    },
    "AwsIamRoleDetails": {
      "description": "Contains information about an IAM role, including all of the role's policies.",
      "properties": {
        "AssumeRolePolicyDocument": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamRoleAssumeRolePolicyDocument"
            },
            {
              "description": "The trust policy that grants permission to assume the role."
            }
          ]
        },
        "AttachedManagedPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamAttachedManagedPolicyList"
            },
            {
              "description": "The list of the managed policies that are attached to the role."
            }
          ]
        },
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the role was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "InstanceProfileList": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamInstanceProfileList"
            },
            {
              "description": "The list of instance profiles that contain this role."
            }
          ]
        },
        "MaxSessionDuration": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The maximum session duration (in seconds) that you want to set for the specified role."
            }
          ]
        },
        "Path": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The path to the role."
            }
          ]
        },
        "PermissionsBoundary": {
          "$ref": "#/definitions/AwsIamPermissionsBoundary"
        },
        "RoleId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The stable and unique string identifying the role."
            }
          ]
        },
        "RoleName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The friendly name that identifies the role."
            }
          ]
        },
        "RolePolicyList": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamRolePolicyList"
            },
            {
              "description": "The list of inline policies that are embedded in the role."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamRolePolicy": {
      "description": "An inline policy that is embedded in the role.",
      "properties": {
        "PolicyName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the policy."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamRolePolicyList": {
      "items": {
        "$ref": "#/definitions/AwsIamRolePolicy"
      },
      "type": "array"
    },
    "AwsIamUserDetails": {
      "description": "Information about an IAM user.",
      "properties": {
        "AttachedManagedPolicies": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamAttachedManagedPolicyList"
            },
            {
              "description": "A list of the managed policies that are attached to the user."
            }
          ]
        },
        "CreateDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the user was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "GroupList": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of IAM groups that the user belongs to."
            }
          ]
        },
        "Path": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The path to the user."
            }
          ]
        },
        "PermissionsBoundary": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamPermissionsBoundary"
            },
            {
              "description": "The permissions boundary for the user."
            }
          ]
        },
        "UserId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The unique identifier for the user."
            }
          ]
        },
        "UserName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the user."
            }
          ]
        },
        "UserPolicyList": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamUserPolicyList"
            },
            {
              "description": "The list of inline policies that are embedded in the user."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamUserPolicy": {
      "description": "Information about an inline policy that is embedded in the user.",
      "properties": {
        "PolicyName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the policy."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsIamUserPolicyList": {
      "items": {
        "$ref": "#/definitions/AwsIamUserPolicy"
      },
      "type": "array"
    },
    "AwsKmsKeyDetails": {
      "description": "Contains metadata about a customer master key (CMK).",
      "properties": {
        "AWSAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The twelve-digit account ID of the AWS account that owns the CMK."
            }
          ]
        },
        "CreationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "<p>Indicates when the CMK was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A description of the key."
            }
          ]
        },
        "KeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The globally unique identifier for the CMK."
            }
          ]
        },
        "KeyManager": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The manager of the CMK. CMKs in your AWS account are either customer managed or AWS managed."
            }
          ]
        },
        "KeyState": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The state of the CMK."
            }
          ]
        },
        "Origin": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The source of the CMK's key material.</p> <p>When this value is <code>AWS_KMS</code>, AWS KMS created the key material.</p> <p>When this value is <code>EXTERNAL</code>, the key material was imported from your existing key management infrastructure or the CMK lacks key material.</p> <p>When this value is <code>AWS_CLOUDHSM</code>, the key material was created in the AWS CloudHSM cluster associated with a custom key store.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsLambdaFunctionCode": {
      "description": "The code for the Lambda function. You can specify either an object in Amazon S3, or upload a deployment package directly.",
      "properties": {
        "S3Bucket": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account."
            }
          ]
        },
        "S3Key": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon S3 key of the deployment package."
            }
          ]
        },
        "S3ObjectVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "For versioned objects, the version of the deployment package object to use."
            }
          ]
        },
        "ZipFile": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients handle the encoding for you."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsLambdaFunctionDeadLetterConfig": {
      "description": "The dead-letter queue for failed asynchronous invocations.",
      "properties": {
        "TargetArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsLambdaFunctionDetails": {
      "description": "Details about a function's configuration.",
      "properties": {
        "Code": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsLambdaFunctionCode"
            },
            {
              "description": "An <code>AwsLambdaFunctionCode</code> object."
            }
          ]
        },
        "CodeSha256": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The SHA256 hash of the function's deployment package."
            }
          ]
        },
        "DeadLetterConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsLambdaFunctionDeadLetterConfig"
            },
            {
              "description": "The function's dead letter queue."
            }
          ]
        },
        "Environment": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsLambdaFunctionEnvironment"
            },
            {
              "description": "The function's environment variables."
            }
          ]
        },
        "FunctionName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the function."
            }
          ]
        },
        "Handler": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The function that Lambda calls to begin executing your function."
            }
          ]
        },
        "KmsKeyArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The KMS key that's used to encrypt the function's environment variables. This key is only returned if you've configured a customer managed CMK."
            }
          ]
        },
        "LastModified": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the function was last updated.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Layers": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsLambdaFunctionLayerList"
            },
            {
              "description": "The function's layers."
            }
          ]
        },
        "MasterArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "For Lambda@Edge functions, the ARN of the master function."
            }
          ]
        },
        "MemorySize": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The memory that's allocated to the function."
            }
          ]
        },
        "RevisionId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The latest updated revision of the function or alias."
            }
          ]
        },
        "Role": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The function's execution role."
            }
          ]
        },
        "Runtime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The runtime environment for the Lambda function."
            }
          ]
        },
        "Timeout": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The amount of time that Lambda allows a function to run before stopping it."
            }
          ]
        },
        "TracingConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsLambdaFunctionTracingConfig"
            },
            {
              "description": "The function's AWS X-Ray tracing configuration."
            }
          ]
        },
        "Version": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version of the Lambda function."
            }
          ]
        },
        "VpcConfig": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsLambdaFunctionVpcConfig"
            },
            {
              "description": "The function's networking configuration."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsLambdaFunctionEnvironment": {
      "description": "A function's environment variable settings.",
      "properties": {
        "Error": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsLambdaFunctionEnvironmentError"
            },
            {
              "description": "An <code>AwsLambdaFunctionEnvironmentError</code> object."
            }
          ]
        },
        "Variables": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "Environment variable key-value pairs."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsLambdaFunctionEnvironmentError": {
      "description": "Error messages for environment variables that couldn't be applied.",
      "properties": {
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The error code."
            }
          ]
        },
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The error message."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsLambdaFunctionLayer": {
      "description": "An AWS Lambda layer.",
      "properties": {
        "Arn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the function layer."
            }
          ]
        },
        "CodeSize": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The size of the layer archive in bytes."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsLambdaFunctionLayerList": {
      "items": {
        "$ref": "#/definitions/AwsLambdaFunctionLayer"
      },
      "type": "array"
    },
    "AwsLambdaFunctionTracingConfig": {
      "description": "The function's AWS X-Ray tracing configuration.",
      "properties": {
        "Mode": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The tracing mode."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsLambdaFunctionVpcConfig": {
      "description": "The VPC security groups and subnets that are attached to a Lambda function. For more information, see VPC Settings.",
      "properties": {
        "SecurityGroupIds": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "A list of VPC security groups IDs."
            }
          ]
        },
        "SubnetIds": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "A list of VPC subnet IDs."
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the VPC."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsLambdaLayerVersionDetails": {
      "description": "Details about a Lambda layer version.",
      "properties": {
        "CompatibleRuntimes": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyStringList"
            },
            {
              "description": "<p>The layer's compatible runtimes. Maximum number of five items.</p> <p>Valid values: <code>nodejs10.x</code> | <code>nodejs12.x</code> | <code>java8</code> | <code>java11</code> | <code>python2.7</code> | <code>python3.6</code> | <code>python3.7</code> | <code>python3.8</code> | <code>dotnetcore1.0</code> | <code>dotnetcore2.1</code> | <code>go1.x</code> | <code>ruby2.5</code> | <code>provided</code> </p>"
            }
          ]
        },
        "CreatedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the version was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Version": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsLambdaLayerVersionNumber"
            },
            {
              "description": "The version number."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsLambdaLayerVersionNumber": {
      "type": "integer"
    },
    "AwsRdsDbClusterAssociatedRole": {
      "description": "An IAM role that is associated with the Amazon RDS DB cluster.",
      "properties": {
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the IAM role."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the association between the IAM role and the DB cluster."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbClusterAssociatedRoles": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbClusterAssociatedRole"
      },
      "type": "array"
    },
    "AwsRdsDbClusterDetails": {
      "description": "Information about an Amazon RDS DB cluster.",
      "properties": {
        "ActivityStreamStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the database activity stream."
            }
          ]
        },
        "AllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "For all database engines except Aurora, specifies the allocated storage size in gibibytes (GiB)."
            }
          ]
        },
        "AssociatedRoles": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbClusterAssociatedRoles"
            },
            {
              "description": "A list of the IAM roles that are associated with the DB cluster."
            }
          ]
        },
        "AvailabilityZones": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of Availability Zones (AZs) where instances in the DB cluster can be created."
            }
          ]
        },
        "BackupRetentionPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of days for which automated backups are retained."
            }
          ]
        },
        "ClusterCreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the DB cluster was created, in Universal Coordinated Time (UTC).</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "CopyTagsToSnapshot": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether tags are copied from the DB cluster to snapshots of the DB cluster."
            }
          ]
        },
        "CrossAccountClone": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the DB cluster is a clone of a DB cluster owned by a different AWS account."
            }
          ]
        },
        "CustomEndpoints": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of custom endpoints for the DB cluster."
            }
          ]
        },
        "DatabaseName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the database."
            }
          ]
        },
        "DbClusterIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The DB cluster identifier that the user assigned to the cluster. This identifier is the unique key that identifies a DB cluster."
            }
          ]
        },
        "DbClusterMembers": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbClusterMembers"
            },
            {
              "description": "The list of instances that make up the DB cluster."
            }
          ]
        },
        "DbClusterOptionGroupMemberships": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbClusterOptionGroupMemberships"
            },
            {
              "description": "The list of option group memberships for this DB cluster."
            }
          ]
        },
        "DbClusterParameterGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the DB cluster parameter group for the DB cluster."
            }
          ]
        },
        "DbClusterResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the DB cluster. The identifier must be unique within each AWS Region and is immutable."
            }
          ]
        },
        "DbSubnetGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The subnet group that is associated with the DB cluster, including the name, description, and subnets in the subnet group."
            }
          ]
        },
        "DeletionProtection": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the DB cluster has deletion protection enabled."
            }
          ]
        },
        "DomainMemberships": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbDomainMemberships"
            },
            {
              "description": "The Active Directory domain membership records that are associated with the DB cluster."
            }
          ]
        },
        "EnabledCloudWatchLogsExports": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of log types that this DB cluster is configured to export to CloudWatch Logs."
            }
          ]
        },
        "Endpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The connection endpoint for the primary instance of the DB cluster."
            }
          ]
        },
        "Engine": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the database engine to use for this DB cluster."
            }
          ]
        },
        "EngineMode": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The database engine mode of the DB cluster."
            }
          ]
        },
        "EngineVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version number of the database engine to use."
            }
          ]
        },
        "HostedZoneId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Specifies the identifier that Amazon Route 53 assigns when you create a hosted zone."
            }
          ]
        },
        "HttpEndpointEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled."
            }
          ]
        },
        "IamDatabaseAuthenticationEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the mapping of IAM accounts to database accounts is enabled."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the AWS KMS master key that is used to encrypt the database instances in the DB cluster."
            }
          ]
        },
        "MasterUsername": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the master user for the DB cluster."
            }
          ]
        },
        "MultiAz": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the DB cluster has instances in multiple Availability Zones."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The port number on which the DB instances in the DB cluster accept connections."
            }
          ]
        },
        "PreferredBackupWindow": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The range of time each day when automated backups are created, if automated backups are enabled.</p> <p>Uses the format <code>HH:MM-HH:MM</code>. For example, <code>04:52-05:22</code>.</p>"
            }
          ]
        },
        "PreferredMaintenanceWindow": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Uses the format <code>&lt;day&gt;:HH:MM-&lt;day&gt;:HH:MM</code>.</p> <p>For the day values, use <code>mon</code>|<code>tue</code>|<code>wed</code>|<code>thu</code>|<code>fri</code>|<code>sat</code>|<code>sun</code>.</p> <p>For example, <code>sun:09:32-sun:10:02</code>.</p>"
            }
          ]
        },
        "ReadReplicaIdentifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The identifiers of the read replicas that are associated with this DB cluster."
            }
          ]
        },
        "ReaderEndpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The reader endpoint for the DB cluster."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The current status of this DB cluster."
            }
          ]
        },
        "StorageEncrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the DB cluster is encrypted."
            }
          ]
        },
        "VpcSecurityGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbInstanceVpcSecurityGroups"
            },
            {
              "description": "A list of VPC security groups that the DB cluster belongs to."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbClusterMember": {
      "description": "Information about an instance in the DB cluster.",
      "properties": {
        "DbClusterParameterGroupStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the DB cluster parameter group for this member of the DB cluster."
            }
          ]
        },
        "DbInstanceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The instance identifier for this member of the DB cluster."
            }
          ]
        },
        "IsClusterWriter": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the cluster member is the primary instance for the DB cluster."
            }
          ]
        },
        "PromotionTier": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "Specifies the order in which an Aurora replica is promoted to the primary instance when the existing primary instance fails."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbClusterMembers": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbClusterMember"
      },
      "type": "array"
    },
    "AwsRdsDbClusterOptionGroupMembership": {
      "description": "Information about an option group membership for a DB cluster.",
      "properties": {
        "DbClusterOptionGroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the DB cluster option group."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the DB cluster option group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbClusterOptionGroupMemberships": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbClusterOptionGroupMembership"
      },
      "type": "array"
    },
    "AwsRdsDbClusterSnapshotDetails": {
      "description": "Information about an Amazon RDS DB cluster snapshot.",
      "properties": {
        "AllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "Specifies the allocated storage size in gibibytes (GiB)."
            }
          ]
        },
        "AvailabilityZones": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of Availability Zones where instances in the DB cluster can be created."
            }
          ]
        },
        "ClusterCreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the DB cluster was created, in Universal Coordinated Time (UTC).</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "DbClusterIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The DB cluster identifier."
            }
          ]
        },
        "DbClusterSnapshotIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the DB cluster snapshot."
            }
          ]
        },
        "Engine": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "EngineVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version of the database engine to use."
            }
          ]
        },
        "IamDatabaseAuthenticationEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether mapping of IAM accounts to database accounts is enabled."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the AWS KMS master key that is used to encrypt the database instances in the DB cluster."
            }
          ]
        },
        "LicenseModel": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The license model information for this DB cluster snapshot."
            }
          ]
        },
        "MasterUsername": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the master user for the DB cluster."
            }
          ]
        },
        "PercentProgress": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "Specifies the percentage of the estimated data that has been transferred."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The port number on which the DB instances in the DB cluster accept connections."
            }
          ]
        },
        "SnapshotCreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the snapshot was taken.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "SnapshotType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of DB cluster snapshot."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of this DB cluster snapshot."
            }
          ]
        },
        "StorageEncrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the DB cluster is encrypted."
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The VPC ID that is associated with the DB cluster snapshot."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbDomainMembership": {
      "description": "Information about an Active Directory domain membership record associated with the DB instance.",
      "properties": {
        "Domain": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the Active Directory domain."
            }
          ]
        },
        "Fqdn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The fully qualified domain name of the Active Directory domain."
            }
          ]
        },
        "IamRoleName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the IAM role to use when making API calls to the Directory Service."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the Active Directory Domain membership for the DB instance."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbDomainMemberships": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbDomainMembership"
      },
      "type": "array"
    },
    "AwsRdsDbInstanceAssociatedRole": {
      "description": "An AWS Identity and Access Management (IAM) role associated with the DB instance.",
      "properties": {
        "FeatureName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the feature associated with the IAM)role."
            }
          ]
        },
        "RoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Describes the state of the association between the IAM role and the DB instance. The <code>Status</code> property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - The IAM role ARN is associated with the DB instance and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - The IAM role ARN is being associated with the DB instance.</p> </li> <li> <p> <code>INVALID</code> - The IAM role ARN is associated with the DB instance. But the DB instance is unable to assume the IAM role in order to access other AWS services on your behalf. </p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbInstanceAssociatedRoles": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbInstanceAssociatedRole"
      },
      "type": "array"
    },
    "AwsRdsDbInstanceDetails": {
      "description": "Contains the details of an Amazon RDS DB instance.",
      "properties": {
        "AllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The amount of storage (in gigabytes) to initially allocate for the DB instance."
            }
          ]
        },
        "AssociatedRoles": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbInstanceAssociatedRoles"
            },
            {
              "description": "The AWS Identity and Access Management (IAM) roles associated with the DB instance."
            }
          ]
        },
        "AutoMinorVersionUpgrade": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether minor version patches are applied automatically."
            }
          ]
        },
        "AvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Availability Zone where the DB instance will be created."
            }
          ]
        },
        "BackupRetentionPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of days for which to retain automated backups."
            }
          ]
        },
        "CACertificateIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the CA certificate for this DB instance."
            }
          ]
        },
        "CharacterSetName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the character set that this DB instance is associated with."
            }
          ]
        },
        "CopyTagsToSnapshot": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether to copy resource tags to snapshots of the DB instance."
            }
          ]
        },
        "DBClusterIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of."
            }
          ]
        },
        "DBInstanceClass": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Contains the name of the compute and memory capacity class of the DB instance."
            }
          ]
        },
        "DBInstanceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance."
            }
          ]
        },
        "DBName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p> <b>MySQL, MariaDB, SQL Server, PostgreSQL</b> </p> <p>Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.</p> <p> <b>Oracle</b> </p> <p>Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance. </p>"
            }
          ]
        },
        "DbInstancePort": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port."
            }
          ]
        },
        "DbInstanceStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The current status of the DB instance."
            }
          ]
        },
        "DbParameterGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbParameterGroups"
            },
            {
              "description": "A list of the DB parameter groups to assign to the DB instance."
            }
          ]
        },
        "DbSecurityGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of the DB security groups to assign to the DB instance."
            }
          ]
        },
        "DbSubnetGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbSubnetGroup"
            },
            {
              "description": "Information about the subnet group that is associated with the DB instance."
            }
          ]
        },
        "DbiResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed. "
            }
          ]
        },
        "DeletionProtection": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Indicates whether the DB instance has deletion protection enabled.</p> <p>When deletion protection is enabled, the database cannot be deleted.</p>"
            }
          ]
        },
        "DomainMemberships": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbDomainMemberships"
            },
            {
              "description": "The Active Directory domain membership records associated with the DB instance."
            }
          ]
        },
        "EnabledCloudWatchLogsExports": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs."
            }
          ]
        },
        "Endpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbInstanceEndpoint"
            },
            {
              "description": "Specifies the connection endpoint."
            }
          ]
        },
        "Engine": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Provides the name of the database engine to use for this DB instance."
            }
          ]
        },
        "EngineVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Indicates the database engine version."
            }
          ]
        },
        "EnhancedMonitoringResourceArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the CloudWatch Logs log stream that receives the enhanced monitoring metrics data for the DB instance."
            }
          ]
        },
        "IAMDatabaseAuthenticationEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.</p> <p>IAM database authentication can be enabled for the following database engines.</p> <ul> <li> <p>For MySQL 5.6, minor version 5.6.34 or higher</p> </li> <li> <p>For MySQL 5.7, minor version 5.7.16 or higher</p> </li> <li> <p>Aurora 5.6 or higher</p> </li> </ul>"
            }
          ]
        },
        "InstanceCreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the DB instance was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Iops": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "Specifies the provisioned IOPS (I/O operations per second) for this DB instance."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance."
            }
          ]
        },
        "LatestRestorableTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Specifies the latest time to which a database can be restored with point-in-time restore.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "LicenseModel": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "License model information for this DB instance."
            }
          ]
        },
        "ListenerEndpoint": {
          "$ref": "#/definitions/AwsRdsDbInstanceEndpoint"
        },
        "MasterUsername": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The master user name of the DB instance."
            }
          ]
        },
        "MaxAllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The upper limit to which Amazon RDS can automatically scale the storage of the DB instance."
            }
          ]
        },
        "MonitoringInterval": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The interval, in seconds, between points when enhanced monitoring metrics are collected for the DB instance."
            }
          ]
        },
        "MonitoringRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN for the IAM role that permits Amazon RDS to send enhanced monitoring metrics to CloudWatch Logs."
            }
          ]
        },
        "MultiAz": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the DB instance is a multiple Availability Zone deployment."
            }
          ]
        },
        "OptionGroupMemberships": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbOptionGroupMemberships"
            },
            {
              "description": "The list of option group memberships for this DB instance."
            }
          ]
        },
        "PendingModifiedValues": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbPendingModifiedValues"
            },
            {
              "description": "Changes to the DB instance that are currently pending."
            }
          ]
        },
        "PerformanceInsightsEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether Performance Insights is enabled for the DB instance."
            }
          ]
        },
        "PerformanceInsightsKmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the AWS KMS key used to encrypt the Performance Insights data."
            }
          ]
        },
        "PerformanceInsightsRetentionPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of days to retain Performance Insights data."
            }
          ]
        },
        "PreferredBackupWindow": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The range of time each day when automated backups are created, if automated backups are enabled.</p> <p>Uses the format <code>HH:MM-HH:MM</code>. For example, <code>04:52-05:22</code>.</p>"
            }
          ]
        },
        "PreferredMaintenanceWindow": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Uses the format <code>&lt;day&gt;:HH:MM-&lt;day&gt;:HH:MM</code>.</p> <p>For the day values, use <code>mon</code>|<code>tue</code>|<code>wed</code>|<code>thu</code>|<code>fri</code>|<code>sat</code>|<code>sun</code>.</p> <p>For example, <code>sun:09:32-sun:10:02</code>.</p>"
            }
          ]
        },
        "ProcessorFeatures": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbProcessorFeatures"
            },
            {
              "description": "The number of CPU cores and the number of threads per core for the DB instance class of the DB instance."
            }
          ]
        },
        "PromotionTier": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The order in which to promote an Aurora replica to the primary instance after a failure of the existing primary instance."
            }
          ]
        },
        "PubliclyAccessible": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Specifies the accessibility options for the DB instance.</p> <p>A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address.</p> <p>A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p>"
            }
          ]
        },
        "ReadReplicaDBClusterIdentifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "List of identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica."
            }
          ]
        },
        "ReadReplicaDBInstanceIdentifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "List of identifiers of the read replicas associated with this DB instance."
            }
          ]
        },
        "ReadReplicaSourceDBInstanceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "If this DB instance is a read replica, contains the identifier of the source DB instance."
            }
          ]
        },
        "SecondaryAvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "For a DB instance with multi-Availability Zone support, the name of the secondary Availability Zone."
            }
          ]
        },
        "StatusInfos": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbStatusInfos"
            },
            {
              "description": "The status of a read replica. If the instance isn't a read replica, this is empty."
            }
          ]
        },
        "StorageEncrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies whether the DB instance is encrypted."
            }
          ]
        },
        "StorageType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The storage type for the DB instance."
            }
          ]
        },
        "TdeCredentialArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN from the key store with which the instance is associated for TDE encryption."
            }
          ]
        },
        "Timezone": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The time zone of the DB instance."
            }
          ]
        },
        "VpcSecurityGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbInstanceVpcSecurityGroups"
            },
            {
              "description": "A list of VPC security groups that the DB instance belongs to."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbInstanceEndpoint": {
      "description": "Specifies the connection endpoint.",
      "properties": {
        "Address": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Specifies the DNS address of the DB instance."
            }
          ]
        },
        "HostedZoneId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "Specifies the port that the database engine is listening on."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbInstanceVpcSecurityGroup": {
      "description": "A VPC security groups that the DB instance belongs to.",
      "properties": {
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the VPC security group."
            }
          ]
        },
        "VpcSecurityGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the VPC security group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbInstanceVpcSecurityGroups": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbInstanceVpcSecurityGroup"
      },
      "type": "array"
    },
    "AwsRdsDbOptionGroupMembership": {
      "description": "<p/>",
      "properties": {
        "OptionGroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbOptionGroupMemberships": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbOptionGroupMembership"
      },
      "type": "array"
    },
    "AwsRdsDbParameterGroup": {
      "description": "<p/>",
      "properties": {
        "DbParameterGroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "ParameterApplyStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbParameterGroups": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbParameterGroup"
      },
      "type": "array"
    },
    "AwsRdsDbPendingModifiedValues": {
      "description": "<p/>",
      "properties": {
        "AllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "BackupRetentionPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "CaCertificateIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "DbInstanceClass": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "DbInstanceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "DbSubnetGroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "EngineVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Iops": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "LicenseModel": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "MasterUserPassword": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "MultiAZ": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "PendingCloudWatchLogsExports": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsPendingCloudWatchLogsExports"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "ProcessorFeatures": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbProcessorFeatures"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "StorageType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbProcessorFeature": {
      "description": "<p/>",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbProcessorFeatures": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbProcessorFeature"
      },
      "type": "array"
    },
    "AwsRdsDbSnapshotDetails": {
      "description": "<p/>",
      "properties": {
        "AllocatedStorage": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "AvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "DbInstanceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "DbSnapshotIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "DbiResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Encrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Engine": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "EngineVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "IamDatabaseAuthenticationEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "InstanceCreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Iops": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "LicenseModel": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "MasterUsername": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "OptionGroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "PercentProgress": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "ProcessorFeatures": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbProcessorFeatures"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "SnapshotCreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "SnapshotType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "SourceDbSnapshotIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "SourceRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "StorageType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "TdeCredentialArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Timezone": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbStatusInfo": {
      "description": "Information about the status of a read replica.",
      "properties": {
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "If the read replica is currently in an error state, provides the error details."
            }
          ]
        },
        "Normal": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the read replica instance is operating normally."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the read replica instance."
            }
          ]
        },
        "StatusType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of status. For a read replica, the status type is read replication."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbStatusInfos": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbStatusInfo"
      },
      "type": "array"
    },
    "AwsRdsDbSubnetGroup": {
      "description": "Information about the subnet group for the database instance.",
      "properties": {
        "DbSubnetGroupArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the subnet group."
            }
          ]
        },
        "DbSubnetGroupDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The description of the subnet group."
            }
          ]
        },
        "DbSubnetGroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the subnet group."
            }
          ]
        },
        "SubnetGroupStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the subnet group."
            }
          ]
        },
        "Subnets": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbSubnetGroupSubnets"
            },
            {
              "description": "A list of subnets in the subnet group."
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The VPC ID of the subnet group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbSubnetGroupSubnet": {
      "description": "Information about a subnet in a subnet group.",
      "properties": {
        "SubnetAvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbSubnetGroupSubnetAvailabilityZone"
            },
            {
              "description": "Information about the Availability Zone for a subnet in the subnet group."
            }
          ]
        },
        "SubnetIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of a subnet in the subnet group."
            }
          ]
        },
        "SubnetStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of a subnet in the subnet group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbSubnetGroupSubnetAvailabilityZone": {
      "description": "An Availability Zone for a subnet in a subnet group.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the Availability Zone for a subnet in the subnet group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRdsDbSubnetGroupSubnets": {
      "items": {
        "$ref": "#/definitions/AwsRdsDbSubnetGroupSubnet"
      },
      "type": "array"
    },
    "AwsRdsPendingCloudWatchLogsExports": {
      "description": "Identifies the log types to enable and disable.",
      "properties": {
        "LogTypesToDisable": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of log types that are being disabled."
            }
          ]
        },
        "LogTypesToEnable": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of log types that are being enabled."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterClusterNode": {
      "description": "A node in an Amazon Redshift cluster.",
      "properties": {
        "NodeRole": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The role of the node. A node might be a leader node or a compute node."
            }
          ]
        },
        "PrivateIpAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The private IP address of the node."
            }
          ]
        },
        "PublicIpAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The public IP address of the node."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterClusterNodes": {
      "items": {
        "$ref": "#/definitions/AwsRedshiftClusterClusterNode"
      },
      "type": "array"
    },
    "AwsRedshiftClusterClusterParameterGroup": {
      "description": "A cluster parameter group that is associated with an Amazon Redshift cluster.",
      "properties": {
        "ClusterParameterStatusList": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterClusterParameterStatusList"
            },
            {
              "description": "The list of parameter statuses."
            }
          ]
        },
        "ParameterApplyStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of updates to the parameters."
            }
          ]
        },
        "ParameterGroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the parameter group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterClusterParameterGroups": {
      "items": {
        "$ref": "#/definitions/AwsRedshiftClusterClusterParameterGroup"
      },
      "type": "array"
    },
    "AwsRedshiftClusterClusterParameterStatus": {
      "description": "The status of a parameter in a cluster parameter group for an Amazon Redshift cluster.",
      "properties": {
        "ParameterApplyErrorDescription": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The error that prevented the parameter from being applied to the database."
            }
          ]
        },
        "ParameterApplyStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The status of the parameter. Indicates whether the parameter is in sync with the database, waiting for a cluster reboot, or encountered an error when it was applied.</p> <p>Valid values: <code>in-sync</code> | <code>pending-reboot</code> | <code>applying</code> | <code>invalid-parameter</code> | <code>apply-deferred</code> | <code>apply-error</code> | <code>unknown-error</code> </p>"
            }
          ]
        },
        "ParameterName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the parameter."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterClusterParameterStatusList": {
      "items": {
        "$ref": "#/definitions/AwsRedshiftClusterClusterParameterStatus"
      },
      "type": "array"
    },
    "AwsRedshiftClusterClusterSecurityGroup": {
      "description": "A security group that is associated with the cluster.",
      "properties": {
        "ClusterSecurityGroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the cluster security group."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the cluster security group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterClusterSecurityGroups": {
      "items": {
        "$ref": "#/definitions/AwsRedshiftClusterClusterSecurityGroup"
      },
      "type": "array"
    },
    "AwsRedshiftClusterClusterSnapshotCopyStatus": {
      "description": "Information about a cross-Region snapshot copy.",
      "properties": {
        "DestinationRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The destination Region that snapshots are automatically copied to when cross-Region snapshot copy is enabled."
            }
          ]
        },
        "ManualSnapshotRetentionPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p>The number of days that manual snapshots are retained in the destination region after they are copied from a source region.</p> <p>If the value is -1, then the manual snapshot is retained indefinitely.</p> <p>Valid values: Either -1 or an integer between 1 and 3,653</p>"
            }
          ]
        },
        "RetentionPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of days to retain automated snapshots in the destination Region after they are copied from a source Region."
            }
          ]
        },
        "SnapshotCopyGrantName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the snapshot copy grant."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterDeferredMaintenanceWindow": {
      "description": "A time windows during which maintenance was deferred for an Amazon Redshift cluster.",
      "properties": {
        "DeferMaintenanceEndTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The end of the time window for which maintenance was deferred.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "DeferMaintenanceIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the maintenance window."
            }
          ]
        },
        "DeferMaintenanceStartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The start of the time window for which maintenance was deferred.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterDeferredMaintenanceWindows": {
      "items": {
        "$ref": "#/definitions/AwsRedshiftClusterDeferredMaintenanceWindow"
      },
      "type": "array"
    },
    "AwsRedshiftClusterDetails": {
      "description": "Details about an Amazon Redshift cluster.",
      "properties": {
        "AllowVersionUpgrade": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether major version upgrades are applied automatically to the cluster during the maintenance window."
            }
          ]
        },
        "AutomatedSnapshotRetentionPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of days that automatic cluster snapshots are retained."
            }
          ]
        },
        "AvailabilityZone": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the Availability Zone in which the cluster is located."
            }
          ]
        },
        "ClusterAvailabilityStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The availability status of the cluster for queries. Possible values are the following:</p> <ul> <li> <p> <code>Available</code> - The cluster is available for queries.</p> </li> <li> <p> <code>Unavailable</code> - The cluster is not available for queries.</p> </li> <li> <p> <code>Maintenance</code> - The cluster is intermittently available for queries due to maintenance activities.</p> </li> <li> <p> <code>Modifying</code> -The cluster is intermittently available for queries due to changes that modify the cluster.</p> </li> <li> <p> <code>Failed</code> - The cluster failed and is not available for queries.</p> </li> </ul>"
            }
          ]
        },
        "ClusterCreateTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the cluster was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "ClusterIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The unique identifier of the cluster."
            }
          ]
        },
        "ClusterNodes": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterClusterNodes"
            },
            {
              "description": "The nodes in the cluster."
            }
          ]
        },
        "ClusterParameterGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterClusterParameterGroups"
            },
            {
              "description": "The list of cluster parameter groups that are associated with this cluster."
            }
          ]
        },
        "ClusterPublicKey": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The public key for the cluster."
            }
          ]
        },
        "ClusterRevisionNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The specific revision number of the database in the cluster."
            }
          ]
        },
        "ClusterSecurityGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterClusterSecurityGroups"
            },
            {
              "description": "A list of cluster security groups that are associated with the cluster."
            }
          ]
        },
        "ClusterSnapshotCopyStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterClusterSnapshotCopyStatus"
            },
            {
              "description": "Information about the destination Region and retention period for the cross-Region snapshot copy."
            }
          ]
        },
        "ClusterStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The current status of the cluster.</p> <p>Valid values: <code>available</code> | <code>available, prep-for-resize</code> | <code>available, resize-cleanup</code> |<code> cancelling-resize</code> | <code>creating</code> | <code>deleting</code> | <code>final-snapshot</code> | <code>hardware-failure</code> | <code>incompatible-hsm</code> |<code> incompatible-network</code> | <code>incompatible-parameters</code> | <code>incompatible-restore</code> | <code>modifying</code> | <code>paused</code> | <code>rebooting</code> | <code>renaming</code> | <code>resizing</code> | <code>rotating-keys</code> | <code>storage-full</code> | <code>updating-hsm</code> </p>"
            }
          ]
        },
        "ClusterSubnetGroupName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the subnet group that is associated with the cluster. This parameter is valid only when the cluster is in a VPC."
            }
          ]
        },
        "ClusterVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version ID of the Amazon Redshift engine that runs on the cluster."
            }
          ]
        },
        "DBName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The name of the initial database that was created when the cluster was created.</p> <p>The same name is returned for the life of the cluster.</p> <p>If an initial database is not specified, a database named <code>devdev</code> is created by default.</p>"
            }
          ]
        },
        "DeferredMaintenanceWindows": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterDeferredMaintenanceWindows"
            },
            {
              "description": "List of time windows during which maintenance was deferred."
            }
          ]
        },
        "ElasticIpStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterElasticIpStatus"
            },
            {
              "description": "Information about the status of the Elastic IP (EIP) address."
            }
          ]
        },
        "ElasticResizeNumberOfNodeOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The number of nodes that you can use the elastic resize method to resize the cluster to."
            }
          ]
        },
        "Encrypted": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the data in the cluster is encrypted at rest."
            }
          ]
        },
        "Endpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterEndpoint"
            },
            {
              "description": "The connection endpoint."
            }
          ]
        },
        "EnhancedVpcRouting": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether to create the cluster with enhanced VPC routing enabled."
            }
          ]
        },
        "ExpectedNextSnapshotScheduleTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the next snapshot is expected to be taken. The cluster must have a valid snapshot schedule and have backups enabled.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "ExpectedNextSnapshotScheduleTimeStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The status of the next expected snapshot.</p> <p>Valid values: <code>OnTrack</code> | <code>Pending</code> </p>"
            }
          ]
        },
        "HsmStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterHsmStatus"
            },
            {
              "description": "Information about whether the Amazon Redshift cluster finished applying any changes to hardware security module (HSM) settings that were specified in a modify cluster command."
            }
          ]
        },
        "IamRoles": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterIamRoles"
            },
            {
              "description": "A list of IAM roles that the cluster can use to access other AWS services."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the AWS KMS encryption key that is used to encrypt data in the cluster."
            }
          ]
        },
        "MaintenanceTrackName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the maintenance track for the cluster."
            }
          ]
        },
        "ManualSnapshotRetentionPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p>The default number of days to retain a manual snapshot.</p> <p>If the value is -1, the snapshot is retained indefinitely.</p> <p>This setting doesn't change the retention period of existing snapshots.</p> <p>Valid values: Either -1 or an integer between 1 and 3,653</p>"
            }
          ]
        },
        "MasterUsername": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The master user name for the cluster. This name is used to connect to the database that is specified in as the value of <code>DBName</code>."
            }
          ]
        },
        "NextMaintenanceWindowStartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates the start of the next maintenance window.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "NodeType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The node type for the nodes in the cluster."
            }
          ]
        },
        "NumberOfNodes": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of compute nodes in the cluster."
            }
          ]
        },
        "PendingActions": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of cluster operations that are waiting to start."
            }
          ]
        },
        "PendingModifiedValues": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterPendingModifiedValues"
            },
            {
              "description": "A list of changes to the cluster that are currently pending."
            }
          ]
        },
        "PreferredMaintenanceWindow": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance can occur.</p> <p>Format: <code> <i>&lt;day&gt;</i>:HH:MM-<i>&lt;day&gt;</i>:HH:MM</code> </p> <p>For the day values, use <code>mon</code> | <code>tue</code> | <code>wed</code> | <code>thu</code> | <code>fri</code> | <code>sat</code> | <code>sun</code> </p> <p>For example, <code>sun:09:32-sun:10:02</code> </p>"
            }
          ]
        },
        "PubliclyAccessible": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the cluster can be accessed from a public network."
            }
          ]
        },
        "ResizeInfo": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterResizeInfo"
            },
            {
              "description": "Information about the resize operation for the cluster."
            }
          ]
        },
        "RestoreStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterRestoreStatus"
            },
            {
              "description": "Information about the status of a cluster restore action. Only applies to a cluster that was created by restoring a snapshot."
            }
          ]
        },
        "SnapshotScheduleIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A unique identifier for the cluster snapshot schedule."
            }
          ]
        },
        "SnapshotScheduleState": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The current state of the cluster snapshot schedule.</p> <p>Valid values: <code>MODIFYING</code> | <code>ACTIVE</code> | <code>FAILED</code> </p>"
            }
          ]
        },
        "VpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the VPC that the cluster is in, if the cluster is in a VPC."
            }
          ]
        },
        "VpcSecurityGroups": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterVpcSecurityGroups"
            },
            {
              "description": "The list of VPC security groups that the cluster belongs to, if the cluster is in a VPC."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterElasticIpStatus": {
      "description": "The status of the elastic IP (EIP) address for an Amazon Redshift cluster.",
      "properties": {
        "ElasticIp": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The elastic IP address for the cluster."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the elastic IP address."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterEndpoint": {
      "description": "The connection endpoint for an Amazon Redshift cluster.",
      "properties": {
        "Address": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The DNS address of the cluster."
            }
          ]
        },
        "Port": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The port that the database engine listens on."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterHsmStatus": {
      "description": "Information about whether an Amazon Redshift cluster finished applying any hardware changes to security module (HSM) settings that were specified in a modify cluster command.",
      "properties": {
        "HsmClientCertificateIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the HSM client certificate that the Amazon Redshift cluster uses to retrieve the data encryption keys that are stored in an HSM."
            }
          ]
        },
        "HsmConfigurationIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the HSM configuration that contains the information that the Amazon Redshift cluster can use to retrieve and store keys in an HSM."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates whether the Amazon Redshift cluster has finished applying any HSM settings changes specified in a modify cluster command.</p> <p>Type: String</p> <p>Valid values: <code>active</code> | <code>applying</code> </p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterIamRole": {
      "description": "An IAM role that the cluster can use to access other AWS services.",
      "properties": {
        "ApplyStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The status of the IAM role's association with the cluster.</p> <p>Valid values: <code>in-sync</code> | <code>adding</code> | <code>removing</code> </p>"
            }
          ]
        },
        "IamRoleArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the IAM role."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterIamRoles": {
      "items": {
        "$ref": "#/definitions/AwsRedshiftClusterIamRole"
      },
      "type": "array"
    },
    "AwsRedshiftClusterPendingModifiedValues": {
      "description": "Changes to the Amazon Redshift cluster that are currently pending.",
      "properties": {
        "AutomatedSnapshotRetentionPeriod": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The pending or in-progress change to the automated snapshot retention period."
            }
          ]
        },
        "ClusterIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The pending or in-progress change to the identifier for the cluster."
            }
          ]
        },
        "ClusterType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The pending or in-progress change to the cluster type."
            }
          ]
        },
        "ClusterVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The pending or in-progress change to the service version."
            }
          ]
        },
        "EncryptionType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The encryption type for a cluster."
            }
          ]
        },
        "EnhancedVpcRouting": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether to create the cluster with enhanced VPC routing enabled."
            }
          ]
        },
        "MaintenanceTrackName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the maintenance track that the cluster changes to during the next maintenance window."
            }
          ]
        },
        "MasterUserPassword": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The pending or in-progress change to the master user password for the cluster."
            }
          ]
        },
        "NodeType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The pending or in-progress change to the cluster's node type."
            }
          ]
        },
        "NumberOfNodes": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The pending or in-progress change to the number of nodes in the cluster."
            }
          ]
        },
        "PubliclyAccessible": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "The pending or in-progress change to whether the cluster can be connected to from the public network."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterResizeInfo": {
      "description": "Information about the resize operation for the cluster.",
      "properties": {
        "AllowCancelResize": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the resize operation can be canceled."
            }
          ]
        },
        "ResizeType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The type of resize operation.</p> <p>Valid values: <code>ClassicResize</code> </p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterRestoreStatus": {
      "description": "Information about the status of a cluster restore action. It only applies if the cluster was created by restoring a snapshot.",
      "properties": {
        "CurrentRestoreRateInMegaBytesPerSecond": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "<p>The number of megabytes per second being transferred from the backup storage. Returns the average rate for a completed backup.</p> <p>This field is only updated when you restore to DC2 and DS2 node types.</p>"
            }
          ]
        },
        "ElapsedTimeInSeconds": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "<p>The amount of time an in-progress restore has been running, or the amount of time it took a completed restore to finish.</p> <p>This field is only updated when you restore to DC2 and DS2 node types.</p>"
            }
          ]
        },
        "EstimatedTimeToCompletionInSeconds": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "<p>The estimate of the time remaining before the restore is complete. Returns 0 for a completed restore.</p> <p>This field is only updated when you restore to DC2 and DS2 node types.</p>"
            }
          ]
        },
        "ProgressInMegaBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "<p>The number of megabytes that were transferred from snapshot storage.</p> <p>This field is only updated when you restore to DC2 and DS2 node types.</p>"
            }
          ]
        },
        "SnapshotSizeInMegaBytes": {
          "allOf": [
            {
              "$ref": "#/definitions/Long"
            },
            {
              "description": "<p>The size of the set of snapshot data that was used to restore the cluster.</p> <p>This field is only updated when you restore to DC2 and DS2 node types.</p>"
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The status of the restore action.</p> <p>Valid values: <code>starting</code> | <code>restoring</code> | <code>completed</code> | <code>failed</code> </p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterVpcSecurityGroup": {
      "description": "A VPC security group that the cluster belongs to, if the cluster is in a VPC.",
      "properties": {
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The status of the VPC security group."
            }
          ]
        },
        "VpcSecurityGroupId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the VPC security group."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsRedshiftClusterVpcSecurityGroups": {
      "items": {
        "$ref": "#/definitions/AwsRedshiftClusterVpcSecurityGroup"
      },
      "type": "array"
    },
    "AwsS3BucketDetails": {
      "description": "The details of an Amazon S3 bucket.",
      "properties": {
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the S3 bucket was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "OwnerId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The canonical user ID of the owner of the S3 bucket."
            }
          ]
        },
        "OwnerName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The display name of the owner of the S3 bucket."
            }
          ]
        },
        "ServerSideEncryptionConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsS3BucketServerSideEncryptionConfiguration"
            },
            {
              "description": "The encryption rules that are applied to the S3 bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsS3BucketServerSideEncryptionByDefault": {
      "description": "Specifies the default server-side encryption to apply to new objects in the bucket.",
      "properties": {
        "KMSMasterKeyID": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "AWS KMS customer master key (CMK) ID to use for the default encryption."
            }
          ]
        },
        "SSEAlgorithm": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Server-side encryption algorithm to use for the default encryption."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsS3BucketServerSideEncryptionConfiguration": {
      "description": "The encryption configuration for the S3 bucket.",
      "properties": {
        "Rules": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsS3BucketServerSideEncryptionRules"
            },
            {
              "description": "The encryption rules that are applied to the S3 bucket."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsS3BucketServerSideEncryptionRule": {
      "description": "An encryption rule to apply to the S3 bucket.",
      "properties": {
        "ApplyServerSideEncryptionByDefault": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsS3BucketServerSideEncryptionByDefault"
            },
            {
              "description": "Specifies the default server-side encryption to apply to new objects in the bucket. If a <code>PUT</code> object request doesn't specify any server-side encryption, this default encryption is applied."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsS3BucketServerSideEncryptionRules": {
      "items": {
        "$ref": "#/definitions/AwsS3BucketServerSideEncryptionRule"
      },
      "type": "array"
    },
    "AwsS3ObjectDetails": {
      "description": "Details about an Amazon S3 object.",
      "properties": {
        "ContentType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A standard MIME type describing the format of the object data."
            }
          ]
        },
        "ETag": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The opaque identifier assigned by a web server to a specific version of a resource found at a URL."
            }
          ]
        },
        "LastModified": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the object was last modified.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "SSEKMSKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the AWS Key Management Service (AWS KMS) symmetric customer managed customer master key (CMK) that was used for the object."
            }
          ]
        },
        "ServerSideEncryption": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "If the object is stored using server-side encryption, the value of the server-side encryption algorithm used when storing this object in Amazon S3."
            }
          ]
        },
        "VersionId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version of the object."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsSecretsManagerSecretDetails": {
      "description": "Details about an AWS Secrets Manager secret.",
      "properties": {
        "Deleted": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the secret is deleted."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The user-provided description of the secret."
            }
          ]
        },
        "KmsKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN, Key ID, or alias of the AWS KMS customer master key (CMK) used to encrypt the <code>SecretString</code> or <code>SecretBinary</code> values for versions of this secret."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the secret."
            }
          ]
        },
        "RotationEnabled": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether rotation is enabled."
            }
          ]
        },
        "RotationLambdaArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the Lambda function that rotates the secret."
            }
          ]
        },
        "RotationOccurredWithinFrequency": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the rotation occurred within the specified rotation frequency."
            }
          ]
        },
        "RotationRules": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecretsManagerSecretRotationRules"
            },
            {
              "description": "Defines the rotation schedule for the secret."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsSecretsManagerSecretRotationRules": {
      "description": "Defines the rotation schedule for the secret.",
      "properties": {
        "AutomaticallyAfterDays": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of days after the previous rotation to rotate the secret."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsSecurityFinding": {
      "description": "<p>Provides consistent format for the contents of the Security Hub-aggregated findings. <code>AwsSecurityFinding</code> format enables you to share findings between AWS security services and third-party solutions, and security standards checks.</p> <note> <p>A finding is a potential security issue generated either by AWS services (Amazon GuardDuty, Amazon Inspector, and Amazon Macie) or by the integrated third-party solutions and standards checks.</p> </note>",
      "properties": {
        "AwsAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS account ID that a finding is generated in."
            }
          ]
        },
        "Compliance": {
          "allOf": [
            {
              "$ref": "#/definitions/Compliance"
            },
            {
              "description": "This data type is exclusive to findings that are generated as the result of a check run against a specific rule in a supported security standard, such as CIS AWS Foundations. Contains security standard-related finding details."
            }
          ]
        },
        "Confidence": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>"
            }
          ]
        },
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the security-findings provider created the potential security issue that a finding captured.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Criticality": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>"
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>A finding's description.</p> <note> <p>In this release, <code>Description</code> is a required property.</p> </note>"
            }
          ]
        },
        "FirstObservedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the security-findings provider first observed the potential security issue that a finding captured.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "GeneratorId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc. "
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The security findings provider-specific identifier for a finding."
            }
          ]
        },
        "LastObservedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the security-findings provider most recently observed the potential security issue that a finding captured.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Malware": {
          "allOf": [
            {
              "$ref": "#/definitions/MalwareList"
            },
            {
              "description": "A list of malware related to a finding."
            }
          ]
        },
        "Network": {
          "allOf": [
            {
              "$ref": "#/definitions/Network"
            },
            {
              "description": "The details of network-related information about a finding."
            }
          ]
        },
        "NetworkPath": {
          "allOf": [
            {
              "$ref": "#/definitions/NetworkPathList"
            },
            {
              "description": "Provides information about a network path that is relevant to a finding. Each entry under <code>NetworkPath</code> represents a component of that path."
            }
          ]
        },
        "Note": {
          "allOf": [
            {
              "$ref": "#/definitions/Note"
            },
            {
              "description": "A user-defined note added to a finding."
            }
          ]
        },
        "PatchSummary": {
          "allOf": [
            {
              "$ref": "#/definitions/PatchSummary"
            },
            {
              "description": "Provides an overview of the patch compliance status for an instance against a selected compliance standard."
            }
          ]
        },
        "Process": {
          "allOf": [
            {
              "$ref": "#/definitions/ProcessDetails"
            },
            {
              "description": "The details of process-related information about a finding."
            }
          ]
        },
        "ProductArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN generated by Security Hub that uniquely identifies a product that generates findings. This can be the ARN for a third-party product that is integrated with Security Hub, or the ARN for a custom integration."
            }
          ]
        },
        "ProductFields": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format."
            }
          ]
        },
        "RecordState": {
          "allOf": [
            {
              "$ref": "#/definitions/RecordState"
            },
            {
              "description": "The record state of a finding."
            }
          ]
        },
        "RelatedFindings": {
          "allOf": [
            {
              "$ref": "#/definitions/RelatedFindingList"
            },
            {
              "description": "A list of related findings."
            }
          ]
        },
        "Remediation": {
          "allOf": [
            {
              "$ref": "#/definitions/Remediation"
            },
            {
              "description": "A data type that describes the remediation options for a finding."
            }
          ]
        },
        "Resources": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceList"
            },
            {
              "description": "A set of resource data types that describe the resources that the finding refers to."
            }
          ]
        },
        "SchemaVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The schema version that a finding is formatted for."
            }
          ]
        },
        "Severity": {
          "allOf": [
            {
              "$ref": "#/definitions/Severity"
            },
            {
              "description": "A finding's severity."
            }
          ]
        },
        "SourceUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A URL that links to a page about the current finding in the security-findings provider's solution."
            }
          ]
        },
        "ThreatIntelIndicators": {
          "allOf": [
            {
              "$ref": "#/definitions/ThreatIntelIndicatorList"
            },
            {
              "description": "Threat intelligence details related to a finding."
            }
          ]
        },
        "Title": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>A finding's title.</p> <note> <p>In this release, <code>Title</code> is a required property.</p> </note>"
            }
          ]
        },
        "Types": {
          "allOf": [
            {
              "$ref": "#/definitions/TypeList"
            },
            {
              "description": "<p>One or more finding types in the format of <code>namespace/category/classifier</code> that classify a finding.</p> <p>Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications</p>"
            }
          ]
        },
        "UpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the security-findings provider last updated the finding record.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "UserDefinedFields": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
            }
          ]
        },
        "VerificationState": {
          "allOf": [
            {
              "$ref": "#/definitions/VerificationState"
            },
            {
              "description": "Indicates the veracity of a finding. "
            }
          ]
        },
        "Vulnerabilities": {
          "allOf": [
            {
              "$ref": "#/definitions/VulnerabilityList"
            },
            {
              "description": "Provides a list of vulnerabilities associated with the findings."
            }
          ]
        },
        "Workflow": {
          "allOf": [
            {
              "$ref": "#/definitions/Workflow"
            },
            {
              "description": "Provides information about the status of the investigation into a finding."
            }
          ]
        },
        "WorkflowState": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkflowState"
            },
            {
              "description": "The workflow state of a finding. "
            }
          ]
        }
      },
      "required": [
        "SchemaVersion",
        "Id",
        "ProductArn",
        "GeneratorId",
        "AwsAccountId",
        "Types",
        "CreatedAt",
        "UpdatedAt",
        "Severity",
        "Title",
        "Description",
        "Resources"
      ],
      "type": "object"
    },
    "AwsSecurityFindingFilters": {
      "description": "<p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>",
      "properties": {
        "AwsAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The AWS account ID that a finding is generated in."
            }
          ]
        },
        "CompanyName": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The name of the findings provider (company) that owns the solution (product) that generates findings."
            }
          ]
        },
        "ComplianceStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details."
            }
          ]
        },
        "Confidence": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberFilterList"
            },
            {
              "description": "<p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>"
            }
          ]
        },
        "CreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured."
            }
          ]
        },
        "Criticality": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberFilterList"
            },
            {
              "description": "<p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>"
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "A finding's description."
            }
          ]
        },
        "FirstObservedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured."
            }
          ]
        },
        "GeneratorId": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The security findings provider-specific identifier for a finding."
            }
          ]
        },
        "Keyword": {
          "allOf": [
            {
              "$ref": "#/definitions/KeywordFilterList"
            },
            {
              "description": "A keyword for a finding."
            }
          ]
        },
        "LastObservedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured."
            }
          ]
        },
        "MalwareName": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The name of the malware that was observed."
            }
          ]
        },
        "MalwarePath": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The filesystem path of the malware that was observed."
            }
          ]
        },
        "MalwareState": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The state of the malware that was observed."
            }
          ]
        },
        "MalwareType": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The type of the malware that was observed."
            }
          ]
        },
        "NetworkDestinationDomain": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The destination domain of network-related information about a finding."
            }
          ]
        },
        "NetworkDestinationIpV4": {
          "allOf": [
            {
              "$ref": "#/definitions/IpFilterList"
            },
            {
              "description": "The destination IPv4 address of network-related information about a finding."
            }
          ]
        },
        "NetworkDestinationIpV6": {
          "allOf": [
            {
              "$ref": "#/definitions/IpFilterList"
            },
            {
              "description": "The destination IPv6 address of network-related information about a finding."
            }
          ]
        },
        "NetworkDestinationPort": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberFilterList"
            },
            {
              "description": "The destination port of network-related information about a finding."
            }
          ]
        },
        "NetworkDirection": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "Indicates the direction of network traffic associated with a finding."
            }
          ]
        },
        "NetworkProtocol": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The protocol of network-related information about a finding."
            }
          ]
        },
        "NetworkSourceDomain": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The source domain of network-related information about a finding."
            }
          ]
        },
        "NetworkSourceIpV4": {
          "allOf": [
            {
              "$ref": "#/definitions/IpFilterList"
            },
            {
              "description": "The source IPv4 address of network-related information about a finding."
            }
          ]
        },
        "NetworkSourceIpV6": {
          "allOf": [
            {
              "$ref": "#/definitions/IpFilterList"
            },
            {
              "description": "The source IPv6 address of network-related information about a finding."
            }
          ]
        },
        "NetworkSourceMac": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The source media access control (MAC) address of network-related information about a finding."
            }
          ]
        },
        "NetworkSourcePort": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberFilterList"
            },
            {
              "description": "The source port of network-related information about a finding."
            }
          ]
        },
        "NoteText": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The text of a note."
            }
          ]
        },
        "NoteUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "The timestamp of when the note was updated."
            }
          ]
        },
        "NoteUpdatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The principal that created a note."
            }
          ]
        },
        "ProcessLaunchedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "The date/time that the process was launched."
            }
          ]
        },
        "ProcessName": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The name of the process."
            }
          ]
        },
        "ProcessParentPid": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberFilterList"
            },
            {
              "description": "The parent process ID."
            }
          ]
        },
        "ProcessPath": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The path to the process executable."
            }
          ]
        },
        "ProcessPid": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberFilterList"
            },
            {
              "description": "The process ID."
            }
          ]
        },
        "ProcessTerminatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "The date/time that the process was terminated."
            }
          ]
        },
        "ProductArn": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub."
            }
          ]
        },
        "ProductFields": {
          "allOf": [
            {
              "$ref": "#/definitions/MapFilterList"
            },
            {
              "description": "A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format."
            }
          ]
        },
        "ProductName": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The name of the solution (product) that generates findings."
            }
          ]
        },
        "RecommendationText": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The recommendation of what to do about the issue described in a finding."
            }
          ]
        },
        "RecordState": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The updated record state for the finding."
            }
          ]
        },
        "RelatedFindingsId": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The solution-generated identifier for a related finding."
            }
          ]
        },
        "RelatedFindingsProductArn": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The ARN of the solution that generated a related finding."
            }
          ]
        },
        "ResourceAwsEc2InstanceIamInstanceProfileArn": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The IAM profile ARN of the instance."
            }
          ]
        },
        "ResourceAwsEc2InstanceImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The Amazon Machine Image (AMI) ID of the instance."
            }
          ]
        },
        "ResourceAwsEc2InstanceIpV4Addresses": {
          "allOf": [
            {
              "$ref": "#/definitions/IpFilterList"
            },
            {
              "description": "The IPv4 addresses associated with the instance."
            }
          ]
        },
        "ResourceAwsEc2InstanceIpV6Addresses": {
          "allOf": [
            {
              "$ref": "#/definitions/IpFilterList"
            },
            {
              "description": "The IPv6 addresses associated with the instance."
            }
          ]
        },
        "ResourceAwsEc2InstanceKeyName": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The key name associated with the instance."
            }
          ]
        },
        "ResourceAwsEc2InstanceLaunchedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "The date and time the instance was launched."
            }
          ]
        },
        "ResourceAwsEc2InstanceSubnetId": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The identifier of the subnet that the instance was launched in."
            }
          ]
        },
        "ResourceAwsEc2InstanceType": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The instance type of the instance."
            }
          ]
        },
        "ResourceAwsEc2InstanceVpcId": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The identifier of the VPC that the instance was launched in."
            }
          ]
        },
        "ResourceAwsIamAccessKeyCreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "The creation date/time of the IAM access key related to a finding."
            }
          ]
        },
        "ResourceAwsIamAccessKeyStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The status of the IAM access key related to a finding."
            }
          ]
        },
        "ResourceAwsIamAccessKeyUserName": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The user associated with the IAM access key related to a finding."
            }
          ]
        },
        "ResourceAwsS3BucketOwnerId": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The canonical user ID of the owner of the S3 bucket."
            }
          ]
        },
        "ResourceAwsS3BucketOwnerName": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The display name of the owner of the S3 bucket."
            }
          ]
        },
        "ResourceContainerImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The identifier of the image related to a finding."
            }
          ]
        },
        "ResourceContainerImageName": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The name of the image related to a finding."
            }
          ]
        },
        "ResourceContainerLaunchedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "The date/time that the container was started."
            }
          ]
        },
        "ResourceContainerName": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The name of the container related to a finding."
            }
          ]
        },
        "ResourceDetailsOther": {
          "allOf": [
            {
              "$ref": "#/definitions/MapFilterList"
            },
            {
              "description": "The details of a resource that doesn't have a specific subfield for the resource type defined."
            }
          ]
        },
        "ResourceId": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The canonical identifier for the given resource type."
            }
          ]
        },
        "ResourcePartition": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The canonical AWS partition name that the Region is assigned to."
            }
          ]
        },
        "ResourceRegion": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The canonical AWS external Region name where this resource is located."
            }
          ]
        },
        "ResourceTags": {
          "allOf": [
            {
              "$ref": "#/definitions/MapFilterList"
            },
            {
              "description": "A list of AWS tags associated with a resource at the time the finding was processed."
            }
          ]
        },
        "ResourceType": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "Specifies the type of the resource that details are provided for."
            }
          ]
        },
        "SeverityLabel": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The label of a finding's severity."
            }
          ]
        },
        "SeverityNormalized": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberFilterList"
            },
            {
              "description": "The normalized severity of a finding."
            }
          ]
        },
        "SeverityProduct": {
          "allOf": [
            {
              "$ref": "#/definitions/NumberFilterList"
            },
            {
              "description": "The native severity as defined by the security-findings provider's solution that generated the finding."
            }
          ]
        },
        "SourceUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "A URL that links to a page about the current finding in the security-findings provider's solution."
            }
          ]
        },
        "ThreatIntelIndicatorCategory": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The category of a threat intelligence indicator."
            }
          ]
        },
        "ThreatIntelIndicatorLastObservedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "The date/time of the last observation of a threat intelligence indicator."
            }
          ]
        },
        "ThreatIntelIndicatorSource": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The source of the threat intelligence."
            }
          ]
        },
        "ThreatIntelIndicatorSourceUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The URL for more details from the source of the threat intelligence."
            }
          ]
        },
        "ThreatIntelIndicatorType": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The type of a threat intelligence indicator."
            }
          ]
        },
        "ThreatIntelIndicatorValue": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The value of a threat intelligence indicator."
            }
          ]
        },
        "Title": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "A finding's title."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding."
            }
          ]
        },
        "UpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/DateFilterList"
            },
            {
              "description": "An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. "
            }
          ]
        },
        "UserDefinedFields": {
          "allOf": [
            {
              "$ref": "#/definitions/MapFilterList"
            },
            {
              "description": "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
            }
          ]
        },
        "VerificationState": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "The veracity of a finding."
            }
          ]
        },
        "WorkflowState": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "<p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>"
            }
          ]
        },
        "WorkflowStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterList"
            },
            {
              "description": "<p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>SUPPRESSED</code> - The finding will not be reviewed again and will not be acted upon.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsSecurityFindingIdentifier": {
      "description": "Identifies a finding to update using <code>BatchUpdateFindings</code>.",
      "properties": {
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the finding that was specified by the finding provider."
            }
          ]
        },
        "ProductArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN generated by Security Hub that uniquely identifies a product that generates findings. This can be the ARN for a third-party product that is integrated with Security Hub, or the ARN for a custom integration."
            }
          ]
        }
      },
      "required": [
        "Id",
        "ProductArn"
      ],
      "type": "object"
    },
    "AwsSecurityFindingIdentifierList": {
      "items": {
        "$ref": "#/definitions/AwsSecurityFindingIdentifier"
      },
      "type": "array"
    },
    "AwsSecurityFindingList": {
      "items": {
        "$ref": "#/definitions/AwsSecurityFinding"
      },
      "type": "array"
    },
    "AwsSnsTopicDetails": {
      "description": "A wrapper type for the topic's Amazon Resource Name (ARN).",
      "properties": {
        "KmsMasterKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of an AWS managed customer master key (CMK) for Amazon SNS or a custom CMK."
            }
          ]
        },
        "Owner": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The subscription's owner."
            }
          ]
        },
        "Subscription": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSnsTopicSubscriptionList"
            },
            {
              "description": "Subscription is an embedded property that describes the subscription endpoints of an Amazon SNS topic."
            }
          ]
        },
        "TopicName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the topic."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsSnsTopicSubscription": {
      "description": "A wrapper type for the attributes of an Amazon SNS subscription.",
      "properties": {
        "Endpoint": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The subscription's endpoint (format depends on the protocol)."
            }
          ]
        },
        "Protocol": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The subscription's protocol."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsSnsTopicSubscriptionList": {
      "items": {
        "$ref": "#/definitions/AwsSnsTopicSubscription"
      },
      "type": "array"
    },
    "AwsSqsQueueDetails": {
      "description": "Data about a queue.",
      "properties": {
        "DeadLetterTargetArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The Amazon Resource Name (ARN) of the dead-letter queue to which Amazon SQS moves messages after the value of <code>maxReceiveCount</code> is exceeded. "
            }
          ]
        },
        "KmsDataKeyReusePeriodSeconds": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again."
            }
          ]
        },
        "KmsMasterKeyId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of an AWS managed customer master key (CMK) for Amazon SQS or a custom CMK."
            }
          ]
        },
        "QueueName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the new queue."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsWafWebAclDetails": {
      "description": "Details about a WAF WebACL.",
      "properties": {
        "DefaultAction": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The action to perform if none of the rules contained in the WebACL match."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A friendly name or description of the WebACL. You can't change the name of a WebACL after you create it."
            }
          ]
        },
        "Rules": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsWafWebAclRuleList"
            },
            {
              "description": "An array that contains the action for each rule in a WebACL, the priority of the rule, and the ID of the rule."
            }
          ]
        },
        "WebAclId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A unique identifier for a WebACL."
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsWafWebAclRule": {
      "description": "Details for a rule in a WAF WebACL.",
      "properties": {
        "Action": {
          "allOf": [
            {
              "$ref": "#/definitions/WafAction"
            },
            {
              "description": "Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. "
            }
          ]
        },
        "ExcludedRules": {
          "allOf": [
            {
              "$ref": "#/definitions/WafExcludedRuleList"
            },
            {
              "description": "Rules to exclude from a rule group."
            }
          ]
        },
        "OverrideAction": {
          "allOf": [
            {
              "$ref": "#/definitions/WafOverrideAction"
            },
            {
              "description": "<p>Use the <code>OverrideAction</code> to test your RuleGroup.</p> <p>Any rule in a RuleGroup can potentially block a request. If you set the <code>OverrideAction</code> to <code>None</code>, the RuleGroup blocks a request if any individual rule in the RuleGroup matches the request and is configured to block that request.</p> <p>However, if you first want to test the RuleGroup, set the <code>OverrideAction</code> to <code>Count</code>. The RuleGroup then overrides any block action specified by individual rules contained within the group. Instead of blocking matching requests, those requests are counted.</p> <p> <code>ActivatedRule</code>|<code>OverrideAction</code> applies only when updating or adding a RuleGroup to a WebACL. In this case you do not use <code>ActivatedRule</code>|<code>Action</code>. For all other update requests, <code>ActivatedRule</code>|<code>Action</code> is used instead of <code>ActivatedRule</code>|<code>OverrideAction</code>. </p>"
            }
          ]
        },
        "Priority": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "Specifies the order in which the rules in a WebACL are evaluated. Rules with a lower value for <code>Priority</code> are evaluated before rules with a higher value. The value must be a unique integer. If you add multiple rules to a WebACL, the values do not need to be consecutive."
            }
          ]
        },
        "RuleId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier for a rule."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The rule type.</p> <p>Valid values: <code>REGULAR</code> | <code>RATE_BASED</code> | <code>GROUP</code> </p> <p>The default is <code>REGULAR</code>.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "AwsWafWebAclRuleList": {
      "items": {
        "$ref": "#/definitions/AwsWafWebAclRule"
      },
      "type": "array"
    },
    "BatchDisableStandardsRequest": {
      "properties": {
        "StandardsSubscriptionArns": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardsSubscriptionArns"
            },
            {
              "description": "The ARNs of the standards subscriptions to disable."
            }
          ]
        }
      },
      "required": [
        "StandardsSubscriptionArns"
      ],
      "title": "BatchDisableStandardsRequest",
      "type": "object"
    },
    "BatchDisableStandardsResponse": {
      "properties": {
        "StandardsSubscriptions": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardsSubscriptions"
            },
            {
              "description": "The details of the standards subscriptions that were disabled."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchEnableStandardsRequest": {
      "properties": {
        "StandardsSubscriptionRequests": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardsSubscriptionRequests"
            },
            {
              "description": "The list of standards checks to enable."
            }
          ]
        }
      },
      "required": [
        "StandardsSubscriptionRequests"
      ],
      "title": "BatchEnableStandardsRequest",
      "type": "object"
    },
    "BatchEnableStandardsResponse": {
      "properties": {
        "StandardsSubscriptions": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardsSubscriptions"
            },
            {
              "description": "The details of the standards subscriptions that were enabled."
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchImportFindingsRequest": {
      "properties": {
        "Findings": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecurityFindingList"
            },
            {
              "description": "A list of findings to import. To successfully import a finding, it must follow the <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html\">AWS Security Finding Format</a>. Maximum of 100 findings per request."
            }
          ]
        }
      },
      "required": [
        "Findings"
      ],
      "title": "BatchImportFindingsRequest",
      "type": "object"
    },
    "BatchImportFindingsResponse": {
      "properties": {
        "FailedCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of findings that failed to import."
            }
          ]
        },
        "FailedFindings": {
          "allOf": [
            {
              "$ref": "#/definitions/ImportFindingsErrorList"
            },
            {
              "description": "The list of findings that failed to import."
            }
          ]
        },
        "SuccessCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of findings that were successfully imported."
            }
          ]
        }
      },
      "required": [
        "FailedCount",
        "SuccessCount"
      ],
      "type": "object"
    },
    "BatchUpdateFindingsRequest": {
      "properties": {
        "Confidence": {
          "allOf": [
            {
              "$ref": "#/definitions/RatioScale"
            },
            {
              "description": "<p>The updated value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>"
            }
          ]
        },
        "Criticality": {
          "allOf": [
            {
              "$ref": "#/definitions/RatioScale"
            },
            {
              "description": "<p>The updated value for the level of importance assigned to the resources associated with the findings.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. </p>"
            }
          ]
        },
        "FindingIdentifiers": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecurityFindingIdentifierList"
            },
            {
              "description": "<p>The list of findings to update. <code>BatchUpdateFindings</code> can be used to update up to 100 findings at a time.</p> <p>For each finding, the list provides the finding identifier and the ARN of the finding provider.</p>"
            }
          ]
        },
        "Note": {
          "$ref": "#/definitions/NoteUpdate"
        },
        "RelatedFindings": {
          "allOf": [
            {
              "$ref": "#/definitions/RelatedFindingList"
            },
            {
              "description": "A list of findings that are related to the updated findings."
            }
          ]
        },
        "Severity": {
          "allOf": [
            {
              "$ref": "#/definitions/SeverityUpdate"
            },
            {
              "description": "Used to update the finding severity."
            }
          ]
        },
        "Types": {
          "allOf": [
            {
              "$ref": "#/definitions/TypeList"
            },
            {
              "description": "<p>One or more finding types in the format of namespace/category/classifier that classify a finding.</p> <p>Valid namespace values are as follows.</p> <ul> <li> <p>Software and Configuration Checks</p> </li> <li> <p>TTPs</p> </li> <li> <p>Effects</p> </li> <li> <p>Unusual Behaviors</p> </li> <li> <p>Sensitive Data Identifications </p> </li> </ul>"
            }
          ]
        },
        "UserDefinedFields": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding."
            }
          ]
        },
        "VerificationState": {
          "allOf": [
            {
              "$ref": "#/definitions/VerificationState"
            },
            {
              "description": "<p>Indicates the veracity of a finding.</p> <p>The available values for <code>VerificationState</code> are as follows.</p> <ul> <li> <p> <code>UNKNOWN</code> – The default disposition of a security finding</p> </li> <li> <p> <code>TRUE_POSITIVE</code> – The security finding is confirmed</p> </li> <li> <p> <code>FALSE_POSITIVE</code> – The security finding was determined to be a false alarm</p> </li> <li> <p> <code>BENIGN_POSITIVE</code> – A special case of <code>TRUE_POSITIVE</code> where the finding doesn't pose any threat, is expected, or both</p> </li> </ul>"
            }
          ]
        },
        "Workflow": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkflowUpdate"
            },
            {
              "description": "<p>Used to update the workflow status of a finding.</p> <p>The workflow status indicates the progress of the investigation into the finding. </p>"
            }
          ]
        }
      },
      "required": [
        "FindingIdentifiers"
      ],
      "title": "BatchUpdateFindingsRequest",
      "type": "object"
    },
    "BatchUpdateFindingsResponse": {
      "properties": {
        "ProcessedFindings": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecurityFindingIdentifierList"
            },
            {
              "description": "The list of findings that were updated successfully."
            }
          ]
        },
        "UnprocessedFindings": {
          "allOf": [
            {
              "$ref": "#/definitions/BatchUpdateFindingsUnprocessedFindingsList"
            },
            {
              "description": "The list of findings that were not updated."
            }
          ]
        }
      },
      "required": [
        "ProcessedFindings",
        "UnprocessedFindings"
      ],
      "type": "object"
    },
    "BatchUpdateFindingsUnprocessedFinding": {
      "description": "A finding from a <code>BatchUpdateFindings</code> request that Security Hub was unable to update.",
      "properties": {
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The code associated with the error."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The message associated with the error."
            }
          ]
        },
        "FindingIdentifier": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecurityFindingIdentifier"
            },
            {
              "description": "The identifier of the finding that was not updated."
            }
          ]
        }
      },
      "required": [
        "FindingIdentifier",
        "ErrorCode",
        "ErrorMessage"
      ],
      "type": "object"
    },
    "BatchUpdateFindingsUnprocessedFindingsList": {
      "items": {
        "$ref": "#/definitions/BatchUpdateFindingsUnprocessedFinding"
      },
      "type": "array"
    },
    "Boolean": {
      "type": "boolean"
    },
    "CategoryList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "CidrBlockAssociation": {
      "description": "An IPv4 CIDR block association.",
      "properties": {
        "AssociationId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The association ID for the IPv4 CIDR block."
            }
          ]
        },
        "CidrBlock": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The IPv4 CIDR block."
            }
          ]
        },
        "CidrBlockState": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Information about the state of the IPv4 CIDR block."
            }
          ]
        }
      },
      "type": "object"
    },
    "CidrBlockAssociationList": {
      "items": {
        "$ref": "#/definitions/CidrBlockAssociation"
      },
      "type": "array"
    },
    "Compliance": {
      "description": "Contains finding details that are specific to control-based findings. Only returned for findings generated from controls.",
      "properties": {
        "RelatedRequirements": {
          "allOf": [
            {
              "$ref": "#/definitions/RelatedRequirementsList"
            },
            {
              "description": "For a control, the industry or regulatory framework requirements that are related to the control. The check for that control is aligned with these requirements."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/ComplianceStatus"
            },
            {
              "description": "<p>The result of a standards check.</p> <p>The valid values for <code>Status</code> are as follows.</p> <ul> <li> <ul> <li> <p> <code>PASSED</code> - Standards check passed for all evaluated resources.</p> </li> <li> <p> <code>WARNING</code> - Some information is missing or this check is not supported for your configuration.</p> </li> <li> <p> <code>FAILED</code> - Standards check failed for at least one evaluated resource.</p> </li> <li> <p> <code>NOT_AVAILABLE</code> - Check could not be performed due to a service outage, API error, or because the result of the AWS Config evaluation was <code>NOT_APPLICABLE</code>. If the AWS Config evaluation result was <code>NOT_APPLICABLE</code>, then after 3 days, Security Hub automatically archives the finding.</p> </li> </ul> </li> </ul>"
            }
          ]
        },
        "StatusReasons": {
          "allOf": [
            {
              "$ref": "#/definitions/StatusReasonsList"
            },
            {
              "description": "For findings generated from controls, a list of reasons behind the value of <code>Status</code>. For the list of status reason codes and their meanings, see <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-results.html#securityhub-standards-results-asff\">Standards-related information in the ASFF</a> in the <i>AWS Security Hub User Guide</i>. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ComplianceStatus": {
      "enum": [
        "PASSED",
        "WARNING",
        "FAILED",
        "NOT_AVAILABLE"
      ],
      "type": "string"
    },
    "ContainerDetails": {
      "description": "Container details related to a finding.",
      "properties": {
        "ImageId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the image related to a finding."
            }
          ]
        },
        "ImageName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the image related to a finding."
            }
          ]
        },
        "LaunchedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the container started.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the container related to a finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "ControlStatus": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "CreateActionTargetRequest": {
      "properties": {
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The description for the custom action target."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID for the custom action target."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the custom action target."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Description",
        "Id"
      ],
      "title": "CreateActionTargetRequest",
      "type": "object"
    },
    "CreateActionTargetResponse": {
      "properties": {
        "ActionTargetArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN for the custom action target."
            }
          ]
        }
      },
      "required": [
        "ActionTargetArn"
      ],
      "type": "object"
    },
    "CreateInsightRequest": {
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecurityFindingFilters"
            },
            {
              "description": "One or more attributes used to filter the findings included in the insight. The insight only includes findings that match the criteria defined in the filters."
            }
          ]
        },
        "GroupByAttribute": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The attribute used to group the findings for the insight. The grouping attribute identifies the type of item that the insight applies to. For example, if an insight is grouped by resource identifier, then the insight produces a list of resource identifiers."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the custom insight to create."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Filters",
        "GroupByAttribute"
      ],
      "title": "CreateInsightRequest",
      "type": "object"
    },
    "CreateInsightResponse": {
      "properties": {
        "InsightArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the insight created."
            }
          ]
        }
      },
      "required": [
        "InsightArn"
      ],
      "type": "object"
    },
    "CreateMembersRequest": {
      "properties": {
        "AccountDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountDetailsList"
            },
            {
              "description": "The list of accounts to associate with the Security Hub master account. For each account, the list includes the account ID and optionally the email address."
            }
          ]
        }
      },
      "required": [
        "AccountDetails"
      ],
      "title": "CreateMembersRequest",
      "type": "object"
    },
    "CreateMembersResponse": {
      "properties": {
        "UnprocessedAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/ResultList"
            },
            {
              "description": "The list of AWS accounts that were not processed. For each account, the list includes the account ID and the email address."
            }
          ]
        }
      },
      "type": "object"
    },
    "CrossAccountMaxResults": {
      "maximum": 50,
      "minimum": 1,
      "type": "integer"
    },
    "Cvss": {
      "description": "CVSS scores from the advisory related to the vulnerability.",
      "properties": {
        "BaseScore": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The base CVSS score."
            }
          ]
        },
        "BaseVector": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The base scoring vector for the CVSS score."
            }
          ]
        },
        "Version": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version of CVSS for the CVSS score."
            }
          ]
        }
      },
      "type": "object"
    },
    "CvssList": {
      "items": {
        "$ref": "#/definitions/Cvss"
      },
      "type": "array"
    },
    "DateFilter": {
      "description": "A date filter for querying findings.",
      "properties": {
        "DateRange": {
          "allOf": [
            {
              "$ref": "#/definitions/DateRange"
            },
            {
              "description": "A date range for the date filter."
            }
          ]
        },
        "End": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "An end date for the date filter."
            }
          ]
        },
        "Start": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A start date for the date filter."
            }
          ]
        }
      },
      "type": "object"
    },
    "DateFilterList": {
      "items": {
        "$ref": "#/definitions/DateFilter"
      },
      "type": "array"
    },
    "DateRange": {
      "description": "A date range for the date filter.",
      "properties": {
        "Unit": {
          "allOf": [
            {
              "$ref": "#/definitions/DateRangeUnit"
            },
            {
              "description": "A date range unit for the date filter."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "A date range value for the date filter."
            }
          ]
        }
      },
      "type": "object"
    },
    "DateRangeUnit": {
      "enum": [
        "DAYS"
      ],
      "type": "string"
    },
    "DeclineInvitationsRequest": {
      "properties": {
        "AccountIds": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountIdList"
            },
            {
              "description": "The list of account IDs for the accounts from which to decline the invitations to Security Hub."
            }
          ]
        }
      },
      "required": [
        "AccountIds"
      ],
      "title": "DeclineInvitationsRequest",
      "type": "object"
    },
    "DeclineInvitationsResponse": {
      "properties": {
        "UnprocessedAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/ResultList"
            },
            {
              "description": "The list of AWS accounts that were not processed. For each account, the list includes the account ID and the email address."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteActionTargetRequest": {
      "properties": {},
      "title": "DeleteActionTargetRequest",
      "type": "object"
    },
    "DeleteActionTargetResponse": {
      "properties": {
        "ActionTargetArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the custom action target that was deleted."
            }
          ]
        }
      },
      "required": [
        "ActionTargetArn"
      ],
      "type": "object"
    },
    "DeleteInsightRequest": {
      "properties": {},
      "title": "DeleteInsightRequest",
      "type": "object"
    },
    "DeleteInsightResponse": {
      "properties": {
        "InsightArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the insight that was deleted."
            }
          ]
        }
      },
      "required": [
        "InsightArn"
      ],
      "type": "object"
    },
    "DeleteInvitationsRequest": {
      "properties": {
        "AccountIds": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountIdList"
            },
            {
              "description": "The list of the account IDs that sent the invitations to delete."
            }
          ]
        }
      },
      "required": [
        "AccountIds"
      ],
      "title": "DeleteInvitationsRequest",
      "type": "object"
    },
    "DeleteInvitationsResponse": {
      "properties": {
        "UnprocessedAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/ResultList"
            },
            {
              "description": "The list of AWS accounts for which the invitations were not deleted. For each account, the list includes the account ID and the email address."
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteMembersRequest": {
      "properties": {
        "AccountIds": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountIdList"
            },
            {
              "description": "The list of account IDs for the member accounts to delete."
            }
          ]
        }
      },
      "required": [
        "AccountIds"
      ],
      "title": "DeleteMembersRequest",
      "type": "object"
    },
    "DeleteMembersResponse": {
      "properties": {
        "UnprocessedAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/ResultList"
            },
            {
              "description": "The list of AWS accounts that were not deleted. For each account, the list includes the account ID and the email address."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeActionTargetsRequest": {
      "properties": {
        "ActionTargetArns": {
          "allOf": [
            {
              "$ref": "#/definitions/ArnList"
            },
            {
              "description": "A list of custom action target ARNs for the custom action targets to retrieve."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "The maximum number of results to return."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "<p>The token that is required for pagination. On your first call to the <code>DescribeActionTargets</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>"
            }
          ]
        }
      },
      "title": "DescribeActionTargetsRequest",
      "type": "object"
    },
    "DescribeActionTargetsResponse": {
      "properties": {
        "ActionTargets": {
          "allOf": [
            {
              "$ref": "#/definitions/ActionTargetList"
            },
            {
              "description": "A list of <code>ActionTarget</code> objects. Each object includes the <code>ActionTargetArn</code>, <code>Description</code>, and <code>Name</code> of a custom action target available in Security Hub."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        }
      },
      "required": [
        "ActionTargets"
      ],
      "type": "object"
    },
    "DescribeHubRequest": {
      "properties": {},
      "title": "DescribeHubRequest",
      "type": "object"
    },
    "DescribeHubResponse": {
      "properties": {
        "AutoEnableControls": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether to automatically enable new controls when they are added to standards that are enabled.</p> <p>If set to <code>true</code>, then new controls for enabled standards are enabled automatically. If set to <code>false</code>, then new controls are not enabled.</p>"
            }
          ]
        },
        "HubArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the Hub resource that was retrieved."
            }
          ]
        },
        "SubscribedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The date and time when Security Hub was enabled in the account."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeOrganizationConfigurationRequest": {
      "properties": {},
      "title": "DescribeOrganizationConfigurationRequest",
      "type": "object"
    },
    "DescribeOrganizationConfigurationResponse": {
      "properties": {
        "AutoEnable": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether to automatically enable Security Hub for new accounts in the organization.</p> <p>If set to <code>true</code>, then Security Hub is enabled for new accounts. If set to false, then new accounts are not added automatically.</p>"
            }
          ]
        },
        "MemberAccountLimitReached": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether the maximum number of allowed member accounts are already associated with the Security Hub administrator account."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeProductsRequest": {
      "properties": {},
      "title": "DescribeProductsRequest",
      "type": "object"
    },
    "DescribeProductsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        },
        "Products": {
          "allOf": [
            {
              "$ref": "#/definitions/ProductsList"
            },
            {
              "description": "A list of products, including details for each product."
            }
          ]
        }
      },
      "required": [
        "Products"
      ],
      "type": "object"
    },
    "DescribeStandardsControlsRequest": {
      "properties": {},
      "title": "DescribeStandardsControlsRequest",
      "type": "object"
    },
    "DescribeStandardsControlsResponse": {
      "properties": {
        "Controls": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardsControls"
            },
            {
              "description": "A list of security standards controls."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "DescribeStandardsRequest": {
      "properties": {},
      "title": "DescribeStandardsRequest",
      "type": "object"
    },
    "DescribeStandardsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        },
        "Standards": {
          "allOf": [
            {
              "$ref": "#/definitions/Standards"
            },
            {
              "description": "A list of available standards."
            }
          ]
        }
      },
      "type": "object"
    },
    "DisableImportFindingsForProductRequest": {
      "properties": {},
      "title": "DisableImportFindingsForProductRequest",
      "type": "object"
    },
    "DisableImportFindingsForProductResponse": {
      "properties": {},
      "type": "object"
    },
    "DisableOrganizationAdminAccountRequest": {
      "properties": {
        "AdminAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS account identifier of the Security Hub administrator account."
            }
          ]
        }
      },
      "required": [
        "AdminAccountId"
      ],
      "title": "DisableOrganizationAdminAccountRequest",
      "type": "object"
    },
    "DisableOrganizationAdminAccountResponse": {
      "properties": {},
      "type": "object"
    },
    "DisableSecurityHubRequest": {
      "properties": {},
      "title": "DisableSecurityHubRequest",
      "type": "object"
    },
    "DisableSecurityHubResponse": {
      "properties": {},
      "type": "object"
    },
    "DisassociateFromMasterAccountRequest": {
      "properties": {},
      "title": "DisassociateFromMasterAccountRequest",
      "type": "object"
    },
    "DisassociateFromMasterAccountResponse": {
      "properties": {},
      "type": "object"
    },
    "DisassociateMembersRequest": {
      "properties": {
        "AccountIds": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountIdList"
            },
            {
              "description": "The account IDs of the member accounts to disassociate from the master account."
            }
          ]
        }
      },
      "required": [
        "AccountIds"
      ],
      "title": "DisassociateMembersRequest",
      "type": "object"
    },
    "DisassociateMembersResponse": {
      "properties": {},
      "type": "object"
    },
    "Double": {
      "format": "double",
      "type": "number"
    },
    "EnableImportFindingsForProductRequest": {
      "properties": {
        "ProductArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the product to enable the integration for."
            }
          ]
        }
      },
      "required": [
        "ProductArn"
      ],
      "title": "EnableImportFindingsForProductRequest",
      "type": "object"
    },
    "EnableImportFindingsForProductResponse": {
      "properties": {
        "ProductSubscriptionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of your subscription to the product to enable integrations for."
            }
          ]
        }
      },
      "type": "object"
    },
    "EnableOrganizationAdminAccountRequest": {
      "properties": {
        "AdminAccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS account identifier of the account to designate as the Security Hub administrator account."
            }
          ]
        }
      },
      "required": [
        "AdminAccountId"
      ],
      "title": "EnableOrganizationAdminAccountRequest",
      "type": "object"
    },
    "EnableOrganizationAdminAccountResponse": {
      "properties": {},
      "type": "object"
    },
    "EnableSecurityHubRequest": {
      "properties": {
        "EnableDefaultStandards": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether to enable the security standards that Security Hub has designated as automatically enabled. If you do not provide a value for <code>EnableDefaultStandards</code>, it is set to <code>true</code>. To not enable the automatically enabled standards, set <code>EnableDefaultStandards</code> to <code>false</code>."
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags to add to the hub resource when you enable Security Hub."
            }
          ]
        }
      },
      "title": "EnableSecurityHubRequest",
      "type": "object"
    },
    "EnableSecurityHubResponse": {
      "properties": {},
      "type": "object"
    },
    "FieldMap": {
      "additionalProperties": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "object"
    },
    "GetEnabledStandardsRequest": {
      "properties": {
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "The maximum number of results to return in the response."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "<p>The token that is required for pagination. On your first call to the <code>GetEnabledStandards</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>"
            }
          ]
        },
        "StandardsSubscriptionArns": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardsSubscriptionArns"
            },
            {
              "description": "The list of the standards subscription ARNs for the standards to retrieve."
            }
          ]
        }
      },
      "title": "GetEnabledStandardsRequest",
      "type": "object"
    },
    "GetEnabledStandardsResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        },
        "StandardsSubscriptions": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardsSubscriptions"
            },
            {
              "description": "The list of <code>StandardsSubscriptions</code> objects that include information about the enabled standards."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetFindingsRequest": {
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecurityFindingFilters"
            },
            {
              "description": "<p>The finding attributes used to define a condition to filter the returned findings.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p> <p>Note that in the available filter fields, <code>WorkflowState</code> is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>"
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "The maximum number of findings to return."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "<p>The token that is required for pagination. On your first call to the <code>GetFindings</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>"
            }
          ]
        },
        "SortCriteria": {
          "allOf": [
            {
              "$ref": "#/definitions/SortCriteria"
            },
            {
              "description": "The finding attributes used to sort the list of returned findings."
            }
          ]
        }
      },
      "title": "GetFindingsRequest",
      "type": "object"
    },
    "GetFindingsResponse": {
      "properties": {
        "Findings": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecurityFindingList"
            },
            {
              "description": "The findings that matched the filters specified in the request."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        }
      },
      "required": [
        "Findings"
      ],
      "type": "object"
    },
    "GetInsightResultsRequest": {
      "properties": {},
      "title": "GetInsightResultsRequest",
      "type": "object"
    },
    "GetInsightResultsResponse": {
      "properties": {
        "InsightResults": {
          "allOf": [
            {
              "$ref": "#/definitions/InsightResults"
            },
            {
              "description": "The insight results returned by the operation."
            }
          ]
        }
      },
      "required": [
        "InsightResults"
      ],
      "type": "object"
    },
    "GetInsightsRequest": {
      "properties": {
        "InsightArns": {
          "allOf": [
            {
              "$ref": "#/definitions/ArnList"
            },
            {
              "description": "The ARNs of the insights to describe. If you do not provide any insight ARNs, then <code>GetInsights</code> returns all of your custom insights. It does not return any managed insights."
            }
          ]
        },
        "MaxResults": {
          "allOf": [
            {
              "$ref": "#/definitions/MaxResults"
            },
            {
              "description": "The maximum number of items to return in the response."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "<p>The token that is required for pagination. On your first call to the <code>GetInsights</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>"
            }
          ]
        }
      },
      "title": "GetInsightsRequest",
      "type": "object"
    },
    "GetInsightsResponse": {
      "properties": {
        "Insights": {
          "allOf": [
            {
              "$ref": "#/definitions/InsightList"
            },
            {
              "description": "The insights returned by the operation."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        }
      },
      "required": [
        "Insights"
      ],
      "type": "object"
    },
    "GetInvitationsCountRequest": {
      "properties": {},
      "title": "GetInvitationsCountRequest",
      "type": "object"
    },
    "GetInvitationsCountResponse": {
      "properties": {
        "InvitationsCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of all membership invitations sent to this Security Hub member account, not including the currently accepted invitation."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetMasterAccountRequest": {
      "properties": {},
      "title": "GetMasterAccountRequest",
      "type": "object"
    },
    "GetMasterAccountResponse": {
      "properties": {
        "Master": {
          "allOf": [
            {
              "$ref": "#/definitions/Invitation"
            },
            {
              "description": "A list of details about the Security Hub master account for the current member account. "
            }
          ]
        }
      },
      "type": "object"
    },
    "GetMembersRequest": {
      "properties": {
        "AccountIds": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountIdList"
            },
            {
              "description": "The list of account IDs for the Security Hub member accounts to return the details for. "
            }
          ]
        }
      },
      "required": [
        "AccountIds"
      ],
      "title": "GetMembersRequest",
      "type": "object"
    },
    "GetMembersResponse": {
      "properties": {
        "Members": {
          "allOf": [
            {
              "$ref": "#/definitions/MemberList"
            },
            {
              "description": "The list of details about the Security Hub member accounts."
            }
          ]
        },
        "UnprocessedAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/ResultList"
            },
            {
              "description": "The list of AWS accounts that could not be processed. For each account, the list includes the account ID and the email address."
            }
          ]
        }
      },
      "type": "object"
    },
    "ImportFindingsError": {
      "description": "The list of the findings that cannot be imported. For each finding, the list provides the error.",
      "properties": {
        "ErrorCode": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The code of the error returned by the <code>BatchImportFindings</code> operation."
            }
          ]
        },
        "ErrorMessage": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The message of the error returned by the <code>BatchImportFindings</code> operation."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the finding that could not be updated."
            }
          ]
        }
      },
      "required": [
        "Id",
        "ErrorCode",
        "ErrorMessage"
      ],
      "type": "object"
    },
    "ImportFindingsErrorList": {
      "items": {
        "$ref": "#/definitions/ImportFindingsError"
      },
      "type": "array"
    },
    "Insight": {
      "description": "Contains information about a Security Hub insight.",
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecurityFindingFilters"
            },
            {
              "description": "One or more attributes used to filter the findings included in the insight. The insight only includes findings that match the criteria defined in the filters."
            }
          ]
        },
        "GroupByAttribute": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The grouping attribute for the insight's findings. Indicates how to group the matching findings, and identifies the type of item that the insight applies to. For example, if an insight is grouped by resource identifier, then the insight produces a list of resource identifiers."
            }
          ]
        },
        "InsightArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of a Security Hub insight."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of a Security Hub insight."
            }
          ]
        }
      },
      "required": [
        "InsightArn",
        "Name",
        "Filters",
        "GroupByAttribute"
      ],
      "type": "object"
    },
    "InsightList": {
      "items": {
        "$ref": "#/definitions/Insight"
      },
      "type": "array"
    },
    "InsightResultValue": {
      "description": "The insight result values returned by the <code>GetInsightResults</code> operation.",
      "properties": {
        "Count": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of findings returned for each <code>GroupByAttributeValue</code>."
            }
          ]
        },
        "GroupByAttributeValue": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The value of the attribute that the findings are grouped by for the insight whose results are returned by the <code>GetInsightResults</code> operation."
            }
          ]
        }
      },
      "required": [
        "GroupByAttributeValue",
        "Count"
      ],
      "type": "object"
    },
    "InsightResultValueList": {
      "items": {
        "$ref": "#/definitions/InsightResultValue"
      },
      "type": "array"
    },
    "InsightResults": {
      "description": "The insight results returned by the <code>GetInsightResults</code> operation.",
      "properties": {
        "GroupByAttribute": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The attribute that the findings are grouped by for the insight whose results are returned by the <code>GetInsightResults</code> operation."
            }
          ]
        },
        "InsightArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the insight whose results are returned by the <code>GetInsightResults</code> operation."
            }
          ]
        },
        "ResultValues": {
          "allOf": [
            {
              "$ref": "#/definitions/InsightResultValueList"
            },
            {
              "description": "The list of insight result values returned by the <code>GetInsightResults</code> operation."
            }
          ]
        }
      },
      "required": [
        "InsightArn",
        "GroupByAttribute",
        "ResultValues"
      ],
      "type": "object"
    },
    "Integer": {
      "type": "integer"
    },
    "IntegrationType": {
      "enum": [
        "SEND_FINDINGS_TO_SECURITY_HUB",
        "RECEIVE_FINDINGS_FROM_SECURITY_HUB"
      ],
      "type": "string"
    },
    "IntegrationTypeList": {
      "items": {
        "$ref": "#/definitions/IntegrationType"
      },
      "type": "array"
    },
    "InternalException": {},
    "InvalidAccessException": {},
    "InvalidInputException": {},
    "Invitation": {
      "description": "Details about an invitation.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The account ID of the Security Hub master account that the invitation was sent from."
            }
          ]
        },
        "InvitationId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ID of the invitation sent to the member account."
            }
          ]
        },
        "InvitedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The timestamp of when the invitation was sent."
            }
          ]
        },
        "MemberStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The current status of the association between the member and master accounts."
            }
          ]
        }
      },
      "type": "object"
    },
    "InvitationList": {
      "items": {
        "$ref": "#/definitions/Invitation"
      },
      "type": "array"
    },
    "InviteMembersRequest": {
      "properties": {
        "AccountIds": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountIdList"
            },
            {
              "description": "The list of account IDs of the AWS accounts to invite to Security Hub as members. "
            }
          ]
        }
      },
      "required": [
        "AccountIds"
      ],
      "title": "InviteMembersRequest",
      "type": "object"
    },
    "InviteMembersResponse": {
      "properties": {
        "UnprocessedAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/ResultList"
            },
            {
              "description": "The list of AWS accounts that could not be processed. For each account, the list includes the account ID and the email address."
            }
          ]
        }
      },
      "type": "object"
    },
    "IpFilter": {
      "description": "The IP filter for querying findings.",
      "properties": {
        "Cidr": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A finding's CIDR value."
            }
          ]
        }
      },
      "type": "object"
    },
    "IpFilterList": {
      "items": {
        "$ref": "#/definitions/IpFilter"
      },
      "type": "array"
    },
    "Ipv6CidrBlockAssociation": {
      "description": "An IPV6 CIDR block association.",
      "properties": {
        "AssociationId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The association ID for the IPv6 CIDR block."
            }
          ]
        },
        "CidrBlockState": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Information about the state of the CIDR block."
            }
          ]
        },
        "Ipv6CidrBlock": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The IPv6 CIDR block."
            }
          ]
        }
      },
      "type": "object"
    },
    "Ipv6CidrBlockAssociationList": {
      "items": {
        "$ref": "#/definitions/Ipv6CidrBlockAssociation"
      },
      "type": "array"
    },
    "KeywordFilter": {
      "description": "A keyword filter for querying findings.",
      "properties": {
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A value for the keyword."
            }
          ]
        }
      },
      "type": "object"
    },
    "KeywordFilterList": {
      "items": {
        "$ref": "#/definitions/KeywordFilter"
      },
      "type": "array"
    },
    "LimitExceededException": {},
    "ListEnabledProductsForImportRequest": {
      "properties": {},
      "title": "ListEnabledProductsForImportRequest",
      "type": "object"
    },
    "ListEnabledProductsForImportResponse": {
      "properties": {
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        },
        "ProductSubscriptions": {
          "allOf": [
            {
              "$ref": "#/definitions/ProductSubscriptionArnList"
            },
            {
              "description": "The list of ARNs for the resources that represent your subscriptions to products. "
            }
          ]
        }
      },
      "type": "object"
    },
    "ListInvitationsRequest": {
      "properties": {},
      "title": "ListInvitationsRequest",
      "type": "object"
    },
    "ListInvitationsResponse": {
      "properties": {
        "Invitations": {
          "allOf": [
            {
              "$ref": "#/definitions/InvitationList"
            },
            {
              "description": "The details of the invitations returned by the operation."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListMembersRequest": {
      "properties": {},
      "title": "ListMembersRequest",
      "type": "object"
    },
    "ListMembersResponse": {
      "properties": {
        "Members": {
          "allOf": [
            {
              "$ref": "#/definitions/MemberList"
            },
            {
              "description": "Member details returned by the operation."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListOrganizationAdminAccountsRequest": {
      "properties": {},
      "title": "ListOrganizationAdminAccountsRequest",
      "type": "object"
    },
    "ListOrganizationAdminAccountsResponse": {
      "properties": {
        "AdminAccounts": {
          "allOf": [
            {
              "$ref": "#/definitions/AdminAccounts"
            },
            {
              "description": "The list of Security Hub administrator accounts."
            }
          ]
        },
        "NextToken": {
          "allOf": [
            {
              "$ref": "#/definitions/NextToken"
            },
            {
              "description": "The pagination token to use to request the next page of results."
            }
          ]
        }
      },
      "type": "object"
    },
    "ListTagsForResourceRequest": {
      "properties": {},
      "title": "ListTagsForResourceRequest",
      "type": "object"
    },
    "ListTagsForResourceResponse": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags associated with a resource."
            }
          ]
        }
      },
      "type": "object"
    },
    "LoadBalancerState": {
      "description": "Information about the state of the load balancer.",
      "properties": {
        "Code": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The state code. The initial state of the load balancer is provisioning.</p> <p>After the load balancer is fully set up and ready to route traffic, its state is active.</p> <p>If the load balancer could not be set up, its state is failed. </p>"
            }
          ]
        },
        "Reason": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A description of the state."
            }
          ]
        }
      },
      "type": "object"
    },
    "Long": {
      "type": "integer"
    },
    "Malware": {
      "description": "A list of malware related to a finding.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the malware that was observed."
            }
          ]
        },
        "Path": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The file system path of the malware that was observed."
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/MalwareState"
            },
            {
              "description": "The state of the malware that was observed."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/MalwareType"
            },
            {
              "description": "The type of the malware that was observed."
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "MalwareList": {
      "items": {
        "$ref": "#/definitions/Malware"
      },
      "type": "array"
    },
    "MalwareState": {
      "enum": [
        "OBSERVED",
        "REMOVAL_FAILED",
        "REMOVED"
      ],
      "type": "string"
    },
    "MalwareType": {
      "enum": [
        "ADWARE",
        "BLENDED_THREAT",
        "BOTNET_AGENT",
        "COIN_MINER",
        "EXPLOIT_KIT",
        "KEYLOGGER",
        "MACRO",
        "POTENTIALLY_UNWANTED",
        "SPYWARE",
        "RANSOMWARE",
        "REMOTE_ACCESS",
        "ROOTKIT",
        "TROJAN",
        "VIRUS",
        "WORM"
      ],
      "type": "string"
    },
    "MapFilter": {
      "description": "A map filter for querying findings. Each map filter provides the field to check, the value to look for, and the comparison operator.",
      "properties": {
        "Comparison": {
          "allOf": [
            {
              "$ref": "#/definitions/MapFilterComparison"
            },
            {
              "description": "<p>The condition to apply to the key value when querying for findings with a map filter.</p> <p>To search for values that exactly match the filter value, use <code>EQUALS</code>. For example, for the <code>ResourceTags</code> field, the filter <code>Department EQUALS Security</code> matches findings that have the value <code>Security</code> for the tag <code>Department</code>.</p> <p>To search for values other than the filter value, use <code>NOT_EQUALS</code>. For example, for the <code>ResourceTags</code> field, the filter <code>Department NOT_EQUALS Finance</code> matches findings that do not have the value <code>Finance</code> for the tag <code>Department</code>.</p> <p> <code>EQUALS</code> filters on the same field are joined by <code>OR</code>. A finding matches if it matches any one of those filters.</p> <p> <code>NOT_EQUALS</code> filters on the same field are joined by <code>AND</code>. A finding matches only if it matches all of those filters.</p> <p>You cannot have both an <code>EQUALS</code> filter and a <code>NOT_EQUALS</code> filter on the same field.</p>"
            }
          ]
        },
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The key of the map filter. For example, for <code>ResourceTags</code>, <code>Key</code> identifies the name of the tag. For <code>UserDefinedFields</code>, <code>Key</code> is the name of the field."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The value for the key in the map filter. Filter values are case sensitive. For example, one of the values for a tag called <code>Department</code> might be <code>Security</code>. If you provide <code>security</code> as the filter value, then there is no match."
            }
          ]
        }
      },
      "type": "object"
    },
    "MapFilterComparison": {
      "enum": [
        "EQUALS",
        "NOT_EQUALS"
      ],
      "type": "string"
    },
    "MapFilterList": {
      "items": {
        "$ref": "#/definitions/MapFilter"
      },
      "type": "array"
    },
    "MaxResults": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer"
    },
    "Member": {
      "description": "The details about a member account.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The AWS account ID of the member account."
            }
          ]
        },
        "Email": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The email address of the member account."
            }
          ]
        },
        "InvitedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "A timestamp for the date and time when the invitation was sent to the member account."
            }
          ]
        },
        "MasterId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The AWS account ID of the Security Hub master account associated with this member account."
            }
          ]
        },
        "MemberStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The status of the relationship between the member account and its master account. </p> <p>The status can have one of the following values:</p> <ul> <li> <p> <code>CREATED</code> - Indicates that the master account added the member account, but has not yet invited the member account.</p> </li> <li> <p> <code>INVITED</code> - Indicates that the master account invited the member account. The member account has not yet responded to the invitation.</p> </li> <li> <p> <code>ENABLED</code> - Indicates that the member account is currently active. For manually invited member accounts, indicates that the member account accepted the invitation.</p> </li> <li> <p> <code>REMOVED</code> - Indicates that the master account disassociated the member account.</p> </li> <li> <p> <code>RESIGNED</code> - Indicates that the member account disassociated themselves from the master account.</p> </li> <li> <p> <code>DELETED</code> - Indicates that the master account deleted the member account.</p> </li> </ul>"
            }
          ]
        },
        "UpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The timestamp for the date and time when the member account was updated."
            }
          ]
        }
      },
      "type": "object"
    },
    "MemberList": {
      "items": {
        "$ref": "#/definitions/Member"
      },
      "type": "array"
    },
    "Network": {
      "description": "The details of network-related information about a finding.",
      "properties": {
        "DestinationDomain": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The destination domain of network-related information about a finding."
            }
          ]
        },
        "DestinationIpV4": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The destination IPv4 address of network-related information about a finding."
            }
          ]
        },
        "DestinationIpV6": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The destination IPv6 address of network-related information about a finding."
            }
          ]
        },
        "DestinationPort": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The destination port of network-related information about a finding."
            }
          ]
        },
        "Direction": {
          "allOf": [
            {
              "$ref": "#/definitions/NetworkDirection"
            },
            {
              "description": "The direction of network traffic associated with a finding."
            }
          ]
        },
        "OpenPortRange": {
          "allOf": [
            {
              "$ref": "#/definitions/PortRange"
            },
            {
              "description": "The range of open ports that is present on the network."
            }
          ]
        },
        "Protocol": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The protocol of network-related information about a finding."
            }
          ]
        },
        "SourceDomain": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The source domain of network-related information about a finding."
            }
          ]
        },
        "SourceIpV4": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The source IPv4 address of network-related information about a finding."
            }
          ]
        },
        "SourceIpV6": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The source IPv6 address of network-related information about a finding."
            }
          ]
        },
        "SourceMac": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The source media access control (MAC) address of network-related information about a finding."
            }
          ]
        },
        "SourcePort": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The source port of network-related information about a finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "NetworkDirection": {
      "enum": [
        "IN",
        "OUT"
      ],
      "type": "string"
    },
    "NetworkHeader": {
      "description": "Details about a network path component that occurs before or after the current component.",
      "properties": {
        "Destination": {
          "allOf": [
            {
              "$ref": "#/definitions/NetworkPathComponentDetails"
            },
            {
              "description": "Information about the destination of the component."
            }
          ]
        },
        "Protocol": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The protocol used for the component."
            }
          ]
        },
        "Source": {
          "allOf": [
            {
              "$ref": "#/definitions/NetworkPathComponentDetails"
            },
            {
              "description": "Information about the origin of the component."
            }
          ]
        }
      },
      "type": "object"
    },
    "NetworkPathComponent": {
      "description": "Information about a network path component.",
      "properties": {
        "ComponentId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of a component in the network path."
            }
          ]
        },
        "ComponentType": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of component."
            }
          ]
        },
        "Egress": {
          "allOf": [
            {
              "$ref": "#/definitions/NetworkHeader"
            },
            {
              "description": "Information about the component that comes after the current component in the network path."
            }
          ]
        },
        "Ingress": {
          "allOf": [
            {
              "$ref": "#/definitions/NetworkHeader"
            },
            {
              "description": "Information about the component that comes before the current node in the network path."
            }
          ]
        }
      },
      "type": "object"
    },
    "NetworkPathComponentDetails": {
      "description": "Information about the destination of the next component in the network path.",
      "properties": {
        "Address": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "The IP addresses of the destination."
            }
          ]
        },
        "PortRanges": {
          "allOf": [
            {
              "$ref": "#/definitions/PortRangeList"
            },
            {
              "description": "A list of port ranges for the destination."
            }
          ]
        }
      },
      "type": "object"
    },
    "NetworkPathList": {
      "items": {
        "$ref": "#/definitions/NetworkPathComponent"
      },
      "type": "array"
    },
    "NextToken": {
      "type": "string"
    },
    "NonEmptyString": {
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "NonEmptyStringList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "Note": {
      "description": "A user-defined note added to a finding.",
      "properties": {
        "Text": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The text of a note."
            }
          ]
        },
        "UpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The timestamp of when the note was updated.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "UpdatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The principal that created a note."
            }
          ]
        }
      },
      "required": [
        "Text",
        "UpdatedBy",
        "UpdatedAt"
      ],
      "type": "object"
    },
    "NoteUpdate": {
      "description": "The updated note.",
      "properties": {
        "Text": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The updated note text."
            }
          ]
        },
        "UpdatedBy": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The principal that updated the note."
            }
          ]
        }
      },
      "required": [
        "Text",
        "UpdatedBy"
      ],
      "type": "object"
    },
    "NumberFilter": {
      "description": "A number filter for querying findings.",
      "properties": {
        "Eq": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The equal-to condition to be applied to a single field when querying for findings."
            }
          ]
        },
        "Gte": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The greater-than-equal condition to be applied to a single field when querying for findings. "
            }
          ]
        },
        "Lte": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The less-than-equal condition to be applied to a single field when querying for findings. "
            }
          ]
        }
      },
      "type": "object"
    },
    "NumberFilterList": {
      "items": {
        "$ref": "#/definitions/NumberFilter"
      },
      "type": "array"
    },
    "Partition": {
      "enum": [
        "aws",
        "aws-cn",
        "aws-us-gov"
      ],
      "type": "string"
    },
    "PatchSummary": {
      "description": "Provides an overview of the patch compliance status for an instance against a selected compliance standard.",
      "properties": {
        "FailedCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of patches from the compliance standard that failed to install."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the compliance standard that was used to determine the patch compliance status."
            }
          ]
        },
        "InstalledCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of patches from the compliance standard that were installed successfully."
            }
          ]
        },
        "InstalledOtherCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of installed patches that are not part of the compliance standard."
            }
          ]
        },
        "InstalledPendingReboot": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of patches that were applied, but that require the instance to be rebooted in order to be marked as installed."
            }
          ]
        },
        "InstalledRejectedCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of patches that are installed but are also on a list of patches that the customer rejected."
            }
          ]
        },
        "MissingCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of patches that are part of the compliance standard but are not installed. The count includes patches that failed to install."
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The type of patch operation performed. For Patch Manager, the values are <code>SCAN</code> and <code>INSTALL</code>. "
            }
          ]
        },
        "OperationEndTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the operation completed.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "OperationStartTime": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the operation started.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "RebootOption": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The reboot option specified for the instance."
            }
          ]
        }
      },
      "required": [
        "Id"
      ],
      "type": "object"
    },
    "PortRange": {
      "description": "A range of ports.",
      "properties": {
        "Begin": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The first port in the port range."
            }
          ]
        },
        "End": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The last port in the port range."
            }
          ]
        }
      },
      "type": "object"
    },
    "PortRangeList": {
      "items": {
        "$ref": "#/definitions/PortRange"
      },
      "type": "array"
    },
    "ProcessDetails": {
      "description": "The details of process-related information about a finding.",
      "properties": {
        "LaunchedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the process was launched.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the process."
            }
          ]
        },
        "ParentPid": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The parent process ID."
            }
          ]
        },
        "Path": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The path to the process executable."
            }
          ]
        },
        "Pid": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The process ID."
            }
          ]
        },
        "TerminatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the process was terminated.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "Product": {
      "description": "Contains details about a product.",
      "properties": {
        "ActivationUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The URL used to activate the product."
            }
          ]
        },
        "Categories": {
          "allOf": [
            {
              "$ref": "#/definitions/CategoryList"
            },
            {
              "description": "The categories assigned to the product."
            }
          ]
        },
        "CompanyName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the company that provides the product."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A description of the product."
            }
          ]
        },
        "IntegrationTypes": {
          "allOf": [
            {
              "$ref": "#/definitions/IntegrationTypeList"
            },
            {
              "description": "<p>The types of integration that the product supports. Available values are the following.</p> <ul> <li> <p> <code>SEND_FINDINGS_TO_SECURITY_HUB</code> - Indicates that the integration sends findings to Security Hub.</p> </li> <li> <p> <code>RECEIVE_FINDINGS_FROM_SECURITY_HUB</code> - Indicates that the integration receives findings from Security Hub.</p> </li> </ul>"
            }
          ]
        },
        "MarketplaceUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The URL for the page that contains more information about the product."
            }
          ]
        },
        "ProductArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN assigned to the product."
            }
          ]
        },
        "ProductName": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the product."
            }
          ]
        },
        "ProductSubscriptionResourcePolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The resource policy associated with the product."
            }
          ]
        }
      },
      "required": [
        "ProductArn"
      ],
      "type": "object"
    },
    "ProductSubscriptionArnList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "ProductsList": {
      "items": {
        "$ref": "#/definitions/Product"
      },
      "type": "array"
    },
    "RatioScale": {
      "maximum": 100,
      "minimum": 0,
      "type": "integer"
    },
    "Recommendation": {
      "description": "A recommendation on how to remediate the issue identified in a finding.",
      "properties": {
        "Text": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "Describes the recommended steps to take to remediate an issue identified in a finding."
            }
          ]
        },
        "Url": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A URL to a page or site that contains information about how to remediate a finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "RecordState": {
      "enum": [
        "ACTIVE",
        "ARCHIVED"
      ],
      "type": "string"
    },
    "RelatedFinding": {
      "description": "Details about a related finding.",
      "properties": {
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The product-generated identifier for a related finding."
            }
          ]
        },
        "ProductArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the product that generated a related finding."
            }
          ]
        }
      },
      "required": [
        "ProductArn",
        "Id"
      ],
      "type": "object"
    },
    "RelatedFindingList": {
      "items": {
        "$ref": "#/definitions/RelatedFinding"
      },
      "type": "array"
    },
    "RelatedRequirementsList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "Remediation": {
      "description": "Details about the remediation steps for a finding.",
      "properties": {
        "Recommendation": {
          "allOf": [
            {
              "$ref": "#/definitions/Recommendation"
            },
            {
              "description": "A recommendation on the steps to take to remediate the issue identified by a finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "Resource": {
      "description": "A resource related to a finding.",
      "properties": {
        "Details": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceDetails"
            },
            {
              "description": "Additional details about the resource related to a finding."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The canonical identifier for the given resource type."
            }
          ]
        },
        "Partition": {
          "allOf": [
            {
              "$ref": "#/definitions/Partition"
            },
            {
              "description": "The canonical AWS partition name that the Region is assigned to."
            }
          ]
        },
        "Region": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The canonical AWS external Region name where this resource is located."
            }
          ]
        },
        "ResourceRole": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "A list of AWS tags associated with a resource at the time the finding was processed."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>The type of the resource that details are provided for. If possible, set <code>Type</code> to one of the supported resource types. For example, if the resource is an EC2 instance, then set <code>Type</code> to <code>AwsEc2Instance</code>.</p> <p>If the resource does not match any of the provided types, then set <code>Type</code> to <code>Other</code>. </p>"
            }
          ]
        }
      },
      "required": [
        "Type",
        "Id"
      ],
      "type": "object"
    },
    "ResourceArn": {
      "pattern": "^arn:aws:securityhub:.*",
      "type": "string"
    },
    "ResourceConflictException": {},
    "ResourceDetails": {
      "description": "<p>Additional details about a resource related to a finding.</p> <p>To provide the details, use the object that corresponds to the resource type. For example, if the resource type is <code>AwsEc2Instance</code>, then you use the <code>AwsEc2Instance</code> object to provide the details.</p> <p>If the type-specific object does not contain all of the fields you want to populate, then you use the <code>Other</code> object to populate those additional fields.</p> <p>You also use the <code>Other</code> object to populate the details when the selected type does not have a corresponding object.</p>",
      "properties": {
        "AwsApiGatewayRestApi": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayRestApiDetails"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "AwsApiGatewayStage": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayStageDetails"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "AwsApiGatewayV2Api": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayV2ApiDetails"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "AwsApiGatewayV2Stage": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsApiGatewayV2StageDetails"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "AwsAutoScalingAutoScalingGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsAutoScalingAutoScalingGroupDetails"
            },
            {
              "description": "Details for an autoscaling group."
            }
          ]
        },
        "AwsCertificateManagerCertificate": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCertificateManagerCertificateDetails"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "AwsCloudFrontDistribution": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudFrontDistributionDetails"
            },
            {
              "description": "Details about a CloudFront distribution."
            }
          ]
        },
        "AwsCloudTrailTrail": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCloudTrailTrailDetails"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "AwsCodeBuildProject": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsCodeBuildProjectDetails"
            },
            {
              "description": "Details for an AWS CodeBuild project."
            }
          ]
        },
        "AwsDynamoDbTable": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsDynamoDbTableDetails"
            },
            {
              "description": "Details about a DynamoDB table."
            }
          ]
        },
        "AwsEc2Eip": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2EipDetails"
            },
            {
              "description": "Details about an Elastic IP address."
            }
          ]
        },
        "AwsEc2Instance": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2InstanceDetails"
            },
            {
              "description": "Details about an Amazon EC2 instance related to a finding."
            }
          ]
        },
        "AwsEc2NetworkInterface": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2NetworkInterfaceDetails"
            },
            {
              "description": "Details for an Amazon EC2 network interface."
            }
          ]
        },
        "AwsEc2SecurityGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2SecurityGroupDetails"
            },
            {
              "description": "Details for an EC2 security group."
            }
          ]
        },
        "AwsEc2Volume": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2VolumeDetails"
            },
            {
              "description": "Details for an EC2 volume."
            }
          ]
        },
        "AwsEc2Vpc": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsEc2VpcDetails"
            },
            {
              "description": "Details for an EC2 VPC."
            }
          ]
        },
        "AwsElasticsearchDomain": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElasticsearchDomainDetails"
            },
            {
              "description": "Details for an Elasticsearch domain."
            }
          ]
        },
        "AwsElbLoadBalancer": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbLoadBalancerDetails"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "AwsElbv2LoadBalancer": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsElbv2LoadBalancerDetails"
            },
            {
              "description": "Details about a load balancer."
            }
          ]
        },
        "AwsIamAccessKey": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamAccessKeyDetails"
            },
            {
              "description": "Details about an IAM access key related to a finding."
            }
          ]
        },
        "AwsIamGroup": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamGroupDetails"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "AwsIamPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamPolicyDetails"
            },
            {
              "description": "Details about an IAM permissions policy."
            }
          ]
        },
        "AwsIamRole": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamRoleDetails"
            },
            {
              "description": "Details about an IAM role."
            }
          ]
        },
        "AwsIamUser": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsIamUserDetails"
            },
            {
              "description": "Details about an IAM user."
            }
          ]
        },
        "AwsKmsKey": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsKmsKeyDetails"
            },
            {
              "description": "Details about a KMS key."
            }
          ]
        },
        "AwsLambdaFunction": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsLambdaFunctionDetails"
            },
            {
              "description": "Details about a Lambda function."
            }
          ]
        },
        "AwsLambdaLayerVersion": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsLambdaLayerVersionDetails"
            },
            {
              "description": "Details for a Lambda layer version."
            }
          ]
        },
        "AwsRdsDbCluster": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbClusterDetails"
            },
            {
              "description": "Details about an Amazon RDS database cluster."
            }
          ]
        },
        "AwsRdsDbClusterSnapshot": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbClusterSnapshotDetails"
            },
            {
              "description": "Details about an Amazon RDS database cluster snapshot."
            }
          ]
        },
        "AwsRdsDbInstance": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbInstanceDetails"
            },
            {
              "description": "Details about an Amazon RDS database instance."
            }
          ]
        },
        "AwsRdsDbSnapshot": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRdsDbSnapshotDetails"
            },
            {
              "description": "Details about an Amazon RDS database snapshot."
            }
          ]
        },
        "AwsRedshiftCluster": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsRedshiftClusterDetails"
            },
            {
              "description": "<p/>"
            }
          ]
        },
        "AwsS3Bucket": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsS3BucketDetails"
            },
            {
              "description": "Details about an Amazon S3 bucket related to a finding."
            }
          ]
        },
        "AwsS3Object": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsS3ObjectDetails"
            },
            {
              "description": "Details about an Amazon S3 object related to a finding."
            }
          ]
        },
        "AwsSecretsManagerSecret": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecretsManagerSecretDetails"
            },
            {
              "description": "Details about a Secrets Manager secret."
            }
          ]
        },
        "AwsSnsTopic": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSnsTopicDetails"
            },
            {
              "description": "Details about an SNS topic."
            }
          ]
        },
        "AwsSqsQueue": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSqsQueueDetails"
            },
            {
              "description": "Details about an SQS queue."
            }
          ]
        },
        "AwsWafWebAcl": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsWafWebAclDetails"
            },
            {
              "description": "Details for a WAF WebACL."
            }
          ]
        },
        "Container": {
          "allOf": [
            {
              "$ref": "#/definitions/ContainerDetails"
            },
            {
              "description": "Details about a container resource related to a finding."
            }
          ]
        },
        "Other": {
          "allOf": [
            {
              "$ref": "#/definitions/FieldMap"
            },
            {
              "description": "<p>Details about a resource that are not available in a type-specific details object. Use the <code>Other</code> object in the following cases.</p> <ul> <li> <p>The type-specific object does not contain all of the fields that you want to populate. In this case, first use the type-specific object to populate those fields. Use the <code>Other</code> object to populate the fields that are missing from the type-specific object.</p> </li> <li> <p>The resource type does not have a corresponding object. This includes resources for which the type is <code>Other</code>. </p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceList": {
      "items": {
        "$ref": "#/definitions/Resource"
      },
      "type": "array"
    },
    "ResourceNotFoundException": {},
    "Result": {
      "description": "Details about the account that was not processed.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "An AWS account ID of the account that was not processed."
            }
          ]
        },
        "ProcessingResult": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The reason that the account was not processed."
            }
          ]
        }
      },
      "type": "object"
    },
    "ResultList": {
      "items": {
        "$ref": "#/definitions/Result"
      },
      "type": "array"
    },
    "SecurityGroups": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "Severity": {
      "description": "<p>The severity of the finding.</p> <p>The finding provider can provide the initial severity, but cannot update it after that. The severity can only be updated by a master account. It cannot be updated by a member account.</p> <p>The finding must have either <code>Label</code> or <code>Normalized</code> populated. If only one of these attributes is populated, then Security Hub automatically populates the other one. If neither attribute is populated, then the finding is invalid. <code>Label</code> is the preferred attribute.</p>",
      "properties": {
        "Label": {
          "allOf": [
            {
              "$ref": "#/definitions/SeverityLabel"
            },
            {
              "description": "<p>The severity value of the finding. The allowed values are the following.</p> <ul> <li> <p> <code>INFORMATIONAL</code> - No issue was found.</p> </li> <li> <p> <code>LOW</code> - The issue does not require action on its own.</p> </li> <li> <p> <code>MEDIUM</code> - The issue must be addressed but not urgently.</p> </li> <li> <p> <code>HIGH</code> - The issue must be addressed as a priority.</p> </li> <li> <p> <code>CRITICAL</code> - The issue must be remediated immediately to avoid it escalating.</p> </li> </ul> <p>If you provide <code>Normalized</code> and do not provide <code>Label</code>, then <code>Label</code> is set automatically as follows. </p> <ul> <li> <p>0 - <code>INFORMATIONAL</code> </p> </li> <li> <p>1–39 - <code>LOW</code> </p> </li> <li> <p>40–69 - <code>MEDIUM</code> </p> </li> <li> <p>70–89 - <code>HIGH</code> </p> </li> <li> <p>90–100 - <code>CRITICAL</code> </p> </li> </ul>"
            }
          ]
        },
        "Normalized": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "<p>Deprecated. The normalized severity of a finding. This attribute is being deprecated. Instead of providing <code>Normalized</code>, provide <code>Label</code>.</p> <p>If you provide <code>Label</code> and do not provide <code>Normalized</code>, then <code>Normalized</code> is set automatically as follows.</p> <ul> <li> <p> <code>INFORMATIONAL</code> - 0</p> </li> <li> <p> <code>LOW</code> - 1</p> </li> <li> <p> <code>MEDIUM</code> - 40</p> </li> <li> <p> <code>HIGH</code> - 70</p> </li> <li> <p> <code>CRITICAL</code> - 90</p> </li> </ul>"
            }
          ]
        },
        "Original": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The native severity from the finding product that generated the finding."
            }
          ]
        },
        "Product": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "<p>Deprecated. This attribute is being deprecated. Instead of providing <code>Product</code>, provide <code>Original</code>.</p> <p>The native severity as defined by the AWS service or integrated partner product that generated the finding.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "SeverityLabel": {
      "enum": [
        "INFORMATIONAL",
        "LOW",
        "MEDIUM",
        "HIGH",
        "CRITICAL"
      ],
      "type": "string"
    },
    "SeverityRating": {
      "enum": [
        "LOW",
        "MEDIUM",
        "HIGH",
        "CRITICAL"
      ],
      "type": "string"
    },
    "SeverityUpdate": {
      "description": "Updates to the severity information for a finding.",
      "properties": {
        "Label": {
          "allOf": [
            {
              "$ref": "#/definitions/SeverityLabel"
            },
            {
              "description": "<p>The severity value of the finding. The allowed values are the following.</p> <ul> <li> <p> <code>INFORMATIONAL</code> - No issue was found.</p> </li> <li> <p> <code>LOW</code> - The issue does not require action on its own.</p> </li> <li> <p> <code>MEDIUM</code> - The issue must be addressed but not urgently.</p> </li> <li> <p> <code>HIGH</code> - The issue must be addressed as a priority.</p> </li> <li> <p> <code>CRITICAL</code> - The issue must be remediated immediately to avoid it escalating.</p> </li> </ul>"
            }
          ]
        },
        "Normalized": {
          "allOf": [
            {
              "$ref": "#/definitions/RatioScale"
            },
            {
              "description": "<p>The normalized severity for the finding. This attribute is to be deprecated in favor of <code>Label</code>.</p> <p>If you provide <code>Normalized</code> and do not provide <code>Label</code>, <code>Label</code> is set automatically as follows.</p> <ul> <li> <p>0 - <code>INFORMATIONAL</code> </p> </li> <li> <p>1–39 - <code>LOW</code> </p> </li> <li> <p>40–69 - <code>MEDIUM</code> </p> </li> <li> <p>70–89 - <code>HIGH</code> </p> </li> <li> <p>90–100 - <code>CRITICAL</code> </p> </li> </ul>"
            }
          ]
        },
        "Product": {
          "allOf": [
            {
              "$ref": "#/definitions/Double"
            },
            {
              "description": "The native severity as defined by the AWS service or integrated partner product that generated the finding."
            }
          ]
        }
      },
      "type": "object"
    },
    "SizeBytes": {
      "type": "integer"
    },
    "SoftwarePackage": {
      "description": "Information about a software package.",
      "properties": {
        "Architecture": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The architecture used for the software package."
            }
          ]
        },
        "Epoch": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The epoch of the software package."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the software package."
            }
          ]
        },
        "Release": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The release of the software package."
            }
          ]
        },
        "Version": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The version of the software package."
            }
          ]
        }
      },
      "type": "object"
    },
    "SoftwarePackageList": {
      "items": {
        "$ref": "#/definitions/SoftwarePackage"
      },
      "type": "array"
    },
    "SortCriteria": {
      "items": {
        "$ref": "#/definitions/SortCriterion"
      },
      "type": "array"
    },
    "SortCriterion": {
      "description": "A collection of finding attributes used to sort findings.",
      "properties": {
        "Field": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The finding attribute used to sort findings."
            }
          ]
        },
        "SortOrder": {
          "allOf": [
            {
              "$ref": "#/definitions/SortOrder"
            },
            {
              "description": "The order used to sort findings."
            }
          ]
        }
      },
      "type": "object"
    },
    "SortOrder": {
      "enum": [
        "asc",
        "desc"
      ],
      "type": "string"
    },
    "Standard": {
      "description": "Provides information about a specific standard.",
      "properties": {
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A description of the standard."
            }
          ]
        },
        "EnabledByDefault": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether the standard is enabled by default. When Security Hub is enabled from the console, if a standard is enabled by default, the check box for that standard is selected by default.</p> <p>When Security Hub is enabled using the <code>EnableSecurityHub</code> API operation, the standard is enabled by default unless <code>EnableDefaultStandards</code> is set to <code>false</code>.</p>"
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the standard."
            }
          ]
        },
        "StandardsArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of a standard."
            }
          ]
        }
      },
      "type": "object"
    },
    "Standards": {
      "items": {
        "$ref": "#/definitions/Standard"
      },
      "type": "array"
    },
    "StandardsControl": {
      "description": "Details for an individual security standard control.",
      "properties": {
        "ControlId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the security standard control."
            }
          ]
        },
        "ControlStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlStatus"
            },
            {
              "description": "The current status of the security standard control. Indicates whether the control is enabled or disabled. Security Hub does not check against disabled controls."
            }
          ]
        },
        "ControlStatusUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date and time that the status of the security standard control was most recently updated."
            }
          ]
        },
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The longer description of the security standard control. Provides information about what the control is checking for."
            }
          ]
        },
        "DisabledReason": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The reason provided for the most recent change in status for the control."
            }
          ]
        },
        "RelatedRequirements": {
          "allOf": [
            {
              "$ref": "#/definitions/RelatedRequirementsList"
            },
            {
              "description": "The list of requirements that are related to this control."
            }
          ]
        },
        "RemediationUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A link to remediation information for the control in the Security Hub user documentation."
            }
          ]
        },
        "SeverityRating": {
          "allOf": [
            {
              "$ref": "#/definitions/SeverityRating"
            },
            {
              "description": "<p>The severity of findings generated from this security standard control.</p> <p>The finding severity is based on an assessment of how easy it would be to compromise AWS resources if the issue is detected.</p>"
            }
          ]
        },
        "StandardsControlArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the security standard control."
            }
          ]
        },
        "Title": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The title of the security standard control."
            }
          ]
        }
      },
      "type": "object"
    },
    "StandardsControls": {
      "items": {
        "$ref": "#/definitions/StandardsControl"
      },
      "type": "array"
    },
    "StandardsInputParameterMap": {
      "additionalProperties": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "object"
    },
    "StandardsStatus": {
      "enum": [
        "PENDING",
        "READY",
        "FAILED",
        "DELETING",
        "INCOMPLETE"
      ],
      "type": "string"
    },
    "StandardsSubscription": {
      "description": "A resource that represents your subscription to a supported standard.",
      "properties": {
        "StandardsArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of a standard."
            }
          ]
        },
        "StandardsInput": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardsInputParameterMap"
            },
            {
              "description": "A key-value pair of input for the standard."
            }
          ]
        },
        "StandardsStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardsStatus"
            },
            {
              "description": "The status of the standards subscription."
            }
          ]
        },
        "StandardsSubscriptionArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of a resource that represents your subscription to a supported standard."
            }
          ]
        }
      },
      "required": [
        "StandardsSubscriptionArn",
        "StandardsArn",
        "StandardsInput",
        "StandardsStatus"
      ],
      "type": "object"
    },
    "StandardsSubscriptionArns": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "StandardsSubscriptionRequest": {
      "description": "The standard that you want to enable.",
      "properties": {
        "StandardsArn": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The ARN of the standard that you want to enable. To view the list of available standards and their ARNs, use the <code> <a>DescribeStandards</a> </code> operation."
            }
          ]
        },
        "StandardsInput": {
          "allOf": [
            {
              "$ref": "#/definitions/StandardsInputParameterMap"
            },
            {
              "description": "A key-value pair of input for the standard."
            }
          ]
        }
      },
      "required": [
        "StandardsArn"
      ],
      "type": "object"
    },
    "StandardsSubscriptionRequests": {
      "items": {
        "$ref": "#/definitions/StandardsSubscriptionRequest"
      },
      "maxItems": 25,
      "minItems": 1,
      "type": "array"
    },
    "StandardsSubscriptions": {
      "items": {
        "$ref": "#/definitions/StandardsSubscription"
      },
      "type": "array"
    },
    "StatusReason": {
      "description": "Provides additional context for the value of <code>Compliance.Status</code>.",
      "properties": {
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The corresponding description for the status reason code."
            }
          ]
        },
        "ReasonCode": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A code that represents a reason for the control status. For the list of status reason codes and their meanings, see <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-results.html#securityhub-standards-results-asff\">Standards-related information in the ASFF</a> in the <i>AWS Security Hub User Guide</i>. "
            }
          ]
        }
      },
      "required": [
        "ReasonCode"
      ],
      "type": "object"
    },
    "StatusReasonsList": {
      "items": {
        "$ref": "#/definitions/StatusReason"
      },
      "type": "array"
    },
    "StringFilter": {
      "description": "A string filter for querying findings.",
      "properties": {
        "Comparison": {
          "allOf": [
            {
              "$ref": "#/definitions/StringFilterComparison"
            },
            {
              "description": "<p>The condition to apply to a string value when querying for findings. To search for values that contain the filter criteria value, use one of the following comparison operators:</p> <ul> <li> <p>To search for values that exactly match the filter value, use <code>EQUALS</code>.</p> <p>For example, the filter <code>ResourceType EQUALS AwsEc2SecurityGroup</code> only matches findings that have a resource type of <code>AwsEc2SecurityGroup</code>.</p> </li> <li> <p>To search for values that start with the filter value, use <code>PREFIX</code>.</p> <p>For example, the filter <code>ResourceType PREFIX AwsIam</code> matches findings that have a resource type that starts with <code>AwsIam</code>. Findings with a resource type of <code>AwsIamPolicy</code>, <code>AwsIamRole</code>, or <code>AwsIamUser</code> would all match.</p> </li> </ul> <p> <code>EQUALS</code> and <code>PREFIX</code> filters on the same field are joined by <code>OR</code>. A finding matches if it matches any one of those filters.</p> <p>To search for values that do not contain the filter criteria value, use one of the following comparison operators:</p> <ul> <li> <p>To search for values that do not exactly match the filter value, use <code>NOT_EQUALS</code>.</p> <p>For example, the filter <code>ResourceType NOT_EQUALS AwsIamPolicy</code> matches findings that have a resource type other than <code>AwsIamPolicy</code>.</p> </li> <li> <p>To search for values that do not start with the filter value, use <code>PREFIX_NOT_EQUALS</code>.</p> <p>For example, the filter <code>ResourceType PREFIX_NOT_EQUALS AwsIam</code> matches findings that have a resource type that does not start with <code>AwsIam</code>. Findings with a resource type of <code>AwsIamPolicy</code>, <code>AwsIamRole</code>, or <code>AwsIamUser</code> would all be excluded from the results.</p> </li> </ul> <p> <code>NOT_EQUALS</code> and <code>PREFIX_NOT_EQUALS</code> filters on the same field are joined by <code>AND</code>. A finding matches only if it matches all of those filters.</p> <p>For filters on the same field, you cannot provide both an <code>EQUALS</code> filter and a <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code> filter. Combining filters in this way always returns an error, even if the provided filter values would return valid results.</p> <p>You can combine <code>PREFIX</code> filters with <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code> filters for the same field. Security Hub first processes the <code>PREFIX</code> filters, then the <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code> filters.</p> <p> For example, for the following filter, Security Hub first identifies findings that have resource types that start with either <code>AwsIAM</code> or <code>AwsEc2</code>. It then excludes findings that have a resource type of <code>AwsIamPolicy</code> and findings that have a resource type of <code>AwsEc2NetworkInterface</code>.</p> <ul> <li> <p> <code>ResourceType PREFIX AwsIam</code> </p> </li> <li> <p> <code>ResourceType PREFIX AwsEc2</code> </p> </li> <li> <p> <code>ResourceType NOT_EQUALS AwsIamPolicy</code> </p> </li> <li> <p> <code>ResourceType NOT_EQUALS AwsEc2NetworkInterface</code> </p> </li> </ul>"
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The string filter value. Filter values are case sensitive. For example, the product name for control-based findings is <code>Security Hub</code>. If you provide <code>security hub</code> as the filter text, then there is no match."
            }
          ]
        }
      },
      "type": "object"
    },
    "StringFilterComparison": {
      "enum": [
        "EQUALS",
        "PREFIX",
        "NOT_EQUALS",
        "PREFIX_NOT_EQUALS"
      ],
      "type": "string"
    },
    "StringFilterList": {
      "items": {
        "$ref": "#/definitions/StringFilter"
      },
      "type": "array"
    },
    "StringList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array"
    },
    "TagMap": {
      "additionalProperties": {
        "$ref": "#/definitions/TagValue"
      },
      "maxProperties": 50,
      "minProperties": 1,
      "type": "object"
    },
    "TagResourceRequest": {
      "properties": {
        "Tags": {
          "allOf": [
            {
              "$ref": "#/definitions/TagMap"
            },
            {
              "description": "The tags to add to the resource."
            }
          ]
        }
      },
      "required": [
        "Tags"
      ],
      "title": "TagResourceRequest",
      "type": "object"
    },
    "TagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "TagValue": {
      "maxLength": 256,
      "type": "string"
    },
    "ThreatIntelIndicator": {
      "description": "Details about the threat intelligence related to a finding.",
      "properties": {
        "Category": {
          "allOf": [
            {
              "$ref": "#/definitions/ThreatIntelIndicatorCategory"
            },
            {
              "description": "The category of a threat intelligence indicator."
            }
          ]
        },
        "LastObservedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the most recent instance of a threat intelligence indicator was observed.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "Source": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The source of the threat intelligence indicator."
            }
          ]
        },
        "SourceUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The URL to the page or site where you can get more information about the threat intelligence indicator."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/ThreatIntelIndicatorType"
            },
            {
              "description": "The type of threat intelligence indicator."
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The value of a threat intelligence indicator."
            }
          ]
        }
      },
      "type": "object"
    },
    "ThreatIntelIndicatorCategory": {
      "enum": [
        "BACKDOOR",
        "CARD_STEALER",
        "COMMAND_AND_CONTROL",
        "DROP_SITE",
        "EXPLOIT_SITE",
        "KEYLOGGER"
      ],
      "type": "string"
    },
    "ThreatIntelIndicatorList": {
      "items": {
        "$ref": "#/definitions/ThreatIntelIndicator"
      },
      "type": "array"
    },
    "ThreatIntelIndicatorType": {
      "enum": [
        "DOMAIN",
        "EMAIL_ADDRESS",
        "HASH_MD5",
        "HASH_SHA1",
        "HASH_SHA256",
        "HASH_SHA512",
        "IPV4_ADDRESS",
        "IPV6_ADDRESS",
        "MUTEX",
        "PROCESS",
        "URL"
      ],
      "type": "string"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "TypeList": {
      "items": {
        "$ref": "#/definitions/NonEmptyString"
      },
      "type": "array"
    },
    "UntagResourceRequest": {
      "properties": {},
      "title": "UntagResourceRequest",
      "type": "object"
    },
    "UntagResourceResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateActionTargetRequest": {
      "properties": {
        "Description": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The updated description for the custom action target."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The updated name of the custom action target."
            }
          ]
        }
      },
      "title": "UpdateActionTargetRequest",
      "type": "object"
    },
    "UpdateActionTargetResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateFindingsRequest": {
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecurityFindingFilters"
            },
            {
              "description": "A collection of attributes that specify which findings you want to update."
            }
          ]
        },
        "Note": {
          "allOf": [
            {
              "$ref": "#/definitions/NoteUpdate"
            },
            {
              "description": "The updated note for the finding."
            }
          ]
        },
        "RecordState": {
          "allOf": [
            {
              "$ref": "#/definitions/RecordState"
            },
            {
              "description": "The updated record state for the finding."
            }
          ]
        }
      },
      "required": [
        "Filters"
      ],
      "title": "UpdateFindingsRequest",
      "type": "object"
    },
    "UpdateFindingsResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateInsightRequest": {
      "properties": {
        "Filters": {
          "allOf": [
            {
              "$ref": "#/definitions/AwsSecurityFindingFilters"
            },
            {
              "description": "The updated filters that define this insight."
            }
          ]
        },
        "GroupByAttribute": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The updated <code>GroupBy</code> attribute that defines this insight."
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The updated name for the insight."
            }
          ]
        }
      },
      "title": "UpdateInsightRequest",
      "type": "object"
    },
    "UpdateInsightResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateOrganizationConfigurationRequest": {
      "properties": {
        "AutoEnable": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether to automatically enable Security Hub for new accounts in the organization.</p> <p>By default, this is <code>false</code>, and new accounts are not added automatically.</p> <p>To automatically enable Security Hub for new accounts, set this to <code>true</code>.</p>"
            }
          ]
        }
      },
      "required": [
        "AutoEnable"
      ],
      "title": "UpdateOrganizationConfigurationRequest",
      "type": "object"
    },
    "UpdateOrganizationConfigurationResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateSecurityHubConfigurationRequest": {
      "properties": {
        "AutoEnableControls": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether to automatically enable new controls when they are added to standards that are enabled.</p> <p>By default, this is set to <code>true</code>, and new controls are enabled automatically. To not automatically enable new controls, set this to <code>false</code>. </p>"
            }
          ]
        }
      },
      "title": "UpdateSecurityHubConfigurationRequest",
      "type": "object"
    },
    "UpdateSecurityHubConfigurationResponse": {
      "properties": {},
      "type": "object"
    },
    "UpdateStandardsControlRequest": {
      "properties": {
        "ControlStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/ControlStatus"
            },
            {
              "description": "The updated status of the security standard control."
            }
          ]
        },
        "DisabledReason": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "A description of the reason why you are disabling a security standard control. If you are disabling a control, then this is required."
            }
          ]
        }
      },
      "title": "UpdateStandardsControlRequest",
      "type": "object"
    },
    "UpdateStandardsControlResponse": {
      "properties": {},
      "type": "object"
    },
    "VerificationState": {
      "enum": [
        "UNKNOWN",
        "TRUE_POSITIVE",
        "FALSE_POSITIVE",
        "BENIGN_POSITIVE"
      ],
      "type": "string"
    },
    "Vulnerability": {
      "description": "A vulnerability associated with a finding.",
      "properties": {
        "Cvss": {
          "allOf": [
            {
              "$ref": "#/definitions/CvssList"
            },
            {
              "description": "CVSS scores from the advisory related to the vulnerability."
            }
          ]
        },
        "Id": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The identifier of the vulnerability."
            }
          ]
        },
        "ReferenceUrls": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "A list of URLs that provide additional information about the vulnerability."
            }
          ]
        },
        "RelatedVulnerabilities": {
          "allOf": [
            {
              "$ref": "#/definitions/StringList"
            },
            {
              "description": "List of vulnerabilities that are related to this vulnerability."
            }
          ]
        },
        "Vendor": {
          "allOf": [
            {
              "$ref": "#/definitions/VulnerabilityVendor"
            },
            {
              "description": "Information about the vendor that generates the vulnerability report."
            }
          ]
        },
        "VulnerablePackages": {
          "allOf": [
            {
              "$ref": "#/definitions/SoftwarePackageList"
            },
            {
              "description": "List of software packages that have the vulnerability."
            }
          ]
        }
      },
      "required": [
        "Id"
      ],
      "type": "object"
    },
    "VulnerabilityList": {
      "items": {
        "$ref": "#/definitions/Vulnerability"
      },
      "type": "array"
    },
    "VulnerabilityVendor": {
      "description": "A vendor that generates a vulnerability report.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The name of the vendor."
            }
          ]
        },
        "Url": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The URL of the vulnerability advisory."
            }
          ]
        },
        "VendorCreatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the vulnerability advisory was created.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        },
        "VendorSeverity": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The severity that the vendor assigned to the vulnerability."
            }
          ]
        },
        "VendorUpdatedAt": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Indicates when the vulnerability advisory was last updated.</p> <p>Uses the <code>date-time</code> format specified in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>"
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "WafAction": {
      "description": "Details about the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. ",
      "properties": {
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p>Specifies how you want AWS WAF to respond to requests that match the settings in a rule.</p> <p>Valid settings include the following:</p> <ul> <li> <p> <code>ALLOW</code> - AWS WAF allows requests</p> </li> <li> <p> <code>BLOCK</code> - AWS WAF blocks requests</p> </li> <li> <p> <code>COUNT</code> - AWS WAF increments a counter of the requests that match all of the conditions in the rule. AWS WAF then continues to inspect the web request based on the remaining rules in the web ACL. You can't specify <code>COUNT</code> for the default action for a WebACL.</p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "WafExcludedRule": {
      "description": "Details about a rule to exclude from a rule group.",
      "properties": {
        "RuleId": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "The unique identifier for the rule to exclude from the rule group."
            }
          ]
        }
      },
      "type": "object"
    },
    "WafExcludedRuleList": {
      "items": {
        "$ref": "#/definitions/WafExcludedRule"
      },
      "type": "array"
    },
    "WafOverrideAction": {
      "description": "Details about an override action for a rule.",
      "properties": {
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/NonEmptyString"
            },
            {
              "description": "<p> <code>COUNT</code> overrides the action specified by the individual rule within a <code>RuleGroup</code> .</p> <p>If set to <code>NONE</code>, the rule's action takes place.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "Workflow": {
      "description": "Provides information about the status of the investigation into a finding.",
      "properties": {
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkflowStatus"
            },
            {
              "description": "<p>The status of the investigation into the finding. The allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> </li> <li> <p> <code>NOTIFIED</code> - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>SUPPRESSED</code> - The finding will not be reviewed again and will not be acted upon.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkflowState": {
      "description": "This field is deprecated, use Workflow.Status instead.",
      "enum": [
        "NEW",
        "ASSIGNED",
        "IN_PROGRESS",
        "DEFERRED",
        "RESOLVED"
      ],
      "type": "string",
      "x-deprecated": true
    },
    "WorkflowStatus": {
      "enum": [
        "NEW",
        "NOTIFIED",
        "RESOLVED",
        "SUPPRESSED"
      ],
      "type": "string"
    },
    "WorkflowUpdate": {
      "description": "Used to update information about the investigation into the finding.",
      "properties": {
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/WorkflowStatus"
            },
            {
              "description": "<p>The status of the investigation into the finding. The allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> </li> <li> <p> <code>NOTIFIED</code> - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved.</p> </li> <li> <p> <code>SUPPRESSED</code> - The finding will not be reviewed again and will not be acted upon.</p> </li> </ul>"
            }
          ]
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/securityhub/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}