{
  "swagger": "2.0",
  "info": {
    "description": "This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.",
    "title": "OOXML Automation",
    "version": "0.1.0",
    "x-apisguru-categories": [
      "analytics"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_presalytics.io_static_img_Logo_Logos_Orange-White_navbar.png"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://api.presalytics.io/ooxml-automation/docs/v1/openapi.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "presalytics.io",
    "x-serviceName": "ooxml",
    "x-datafire": {
      "name": "presalytics_ooxml",
      "type": "openapi"
    }
  },
  "host": "api.presalytics.io",
  "basePath": "/ooxml-automation",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Charts/Axes/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.Axes"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/Axes"
        ],
        "description": "Get by Id: Use this method to retrieve a Axes object by its primary key (id)",
        "operationId": "chart_axes_get_id",
        "summary": "Axes: Get by Id"
      }
    },
    "/Charts/AxisDataTypes": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Chart.AxisDataTypes"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/AxisDataTypes"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the AxisDataTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Chart object space.",
        "operationId": "chart_axisdatatypes_get",
        "summary": "AxisDataTypes: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Charts/AxisDataTypes/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.AxisDataTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/AxisDataTypes"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "chart_axisdatatypes_typeid_get_type_id",
        "summary": "AxisDataTypes: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Charts/AxisDataTypes/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.AxisDataTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/AxisDataTypes"
        ],
        "description": "Get by Id: Use this method to retrieve a AxisDataTypes object by its primary key (id)",
        "operationId": "chart_axisdatatypes_get_id",
        "summary": "AxisDataTypes: Get by Id"
      }
    },
    "/Charts/ChartData/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.ChartData"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/ChartData"
        ],
        "description": "Get by Id: Use this method to retrieve a ChartData object by its primary key (id)",
        "operationId": "chart_chartdata_get_id",
        "summary": "ChartData: Get by Id"
      }
    },
    "/Charts/ChartUpdate/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.ChartDataDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts"
        ],
        "description": "Gets a ChartDataDTO object, usually used for downstream analytics and chart updates",
        "operationId": "charts_charts_chartupdate_get_id",
        "summary": "Charts: Get Chart Data"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Chart Id",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ChartDataDto Object",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Chart.ChartDataDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Charts"
        ],
        "description": "Simplifies chart update by allowing users to supply data via ChartDataDTO",
        "operationId": "charts_charts_chartupdate_put_id",
        "summary": "Charts: Update Chart Data"
      }
    },
    "/Charts/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Charts"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this Chart and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "charts_charts_childobjects_get_id",
        "summary": "Charts: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/Charts/ColumnCollections/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.ColumnCollections"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/ColumnCollections"
        ],
        "description": "Get by Id: Use this method to retrieve a ColumnCollections object by its primary key (id)",
        "operationId": "chart_columncollections_get_id",
        "summary": "ColumnCollections: Get by Id"
      }
    },
    "/Charts/Columns/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.Columns"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/Columns"
        ],
        "description": "Get by Id: Use this method to retrieve a Columns object by its primary key (id)",
        "operationId": "chart_columns_get_id",
        "summary": "Columns: Get by Id"
      }
    },
    "/Charts/DataPoints/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.DataPoints"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/DataPoints"
        ],
        "description": "Get by Id: Use this method to retrieve a DataPoints object by its primary key (id)",
        "operationId": "chart_datapoints_get_id",
        "summary": "DataPoints: Get by Id"
      }
    },
    "/Charts/Details/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.Charts.Details"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts"
        ],
        "description": "Returns object metadata and information about relative dependent objects ",
        "operationId": "charts_charts_details_get_id",
        "summary": "Charts: Get Details",
        "x-operationName": "details"
      }
    },
    "/Charts/OpenOfficeXml/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)",
            "in": "query",
            "name": "updated",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Charts"
        ],
        "description": "Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Chart object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Chart objects.",
        "operationId": "charts_charts_openofficexml_get_id_updated",
        "summary": "Charts: Get Underlying Xml",
        "x-operationName": "get-xml"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Charts"
        ],
        "description": "Directly eidt the underlying xml of a Chart object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Chart objects.",
        "operationId": "charts_charts_openofficexml_put_id",
        "summary": "Charts: Modify Underlying Xml",
        "x-operationName": "put-xml"
      }
    },
    "/Charts/PlotType": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Chart.PlotType"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/PlotType"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the PlotType type. Use the Id from oneof the returned elements on to make changes to elements in the Chart object space.",
        "operationId": "chart_plottype_get",
        "summary": "PlotType: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Charts/PlotType/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.PlotType"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/PlotType"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "chart_plottype_typeid_get_type_id",
        "summary": "PlotType: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Charts/PlotType/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.PlotType"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/PlotType"
        ],
        "description": "Get by Id: Use this method to retrieve a PlotType object by its primary key (id)",
        "operationId": "chart_plottype_get_id",
        "summary": "PlotType: Get by Id"
      }
    },
    "/Charts/RowCol": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Chart.RowCol"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/RowCol"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the RowCol type. Use the Id from oneof the returned elements on to make changes to elements in the Chart object space.",
        "operationId": "chart_rowcol_get",
        "summary": "RowCol: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Charts/RowCol/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.RowCol"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/RowCol"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "chart_rowcol_typeid_get_type_id",
        "summary": "RowCol: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Charts/RowCol/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.RowCol"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/RowCol"
        ],
        "description": "Get by Id: Use this method to retrieve a RowCol object by its primary key (id)",
        "operationId": "chart_rowcol_get_id",
        "summary": "RowCol: Get by Id"
      }
    },
    "/Charts/RowCollections/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.RowCollections"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/RowCollections"
        ],
        "description": "Get by Id: Use this method to retrieve a RowCollections object by its primary key (id)",
        "operationId": "chart_rowcollections_get_id",
        "summary": "RowCollections: Get by Id"
      }
    },
    "/Charts/RowNameFormatTypes": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Chart.RowNameFormatTypes"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/RowNameFormatTypes"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the RowNameFormatTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Chart object space.",
        "operationId": "chart_rownameformattypes_get",
        "summary": "RowNameFormatTypes: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Charts/RowNameFormatTypes/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.RowNameFormatTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/RowNameFormatTypes"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "chart_rownameformattypes_typeid_get_type_id",
        "summary": "RowNameFormatTypes: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Charts/RowNameFormatTypes/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.RowNameFormatTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/RowNameFormatTypes"
        ],
        "description": "Get by Id: Use this method to retrieve a RowNameFormatTypes object by its primary key (id)",
        "operationId": "chart_rownameformattypes_get_id",
        "summary": "RowNameFormatTypes: Get by Id"
      }
    },
    "/Charts/Rows/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.Rows"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts/Rows"
        ],
        "description": "Get by Id: Use this method to retrieve a Rows object by its primary key (id)",
        "operationId": "chart_rows_get_id",
        "summary": "Rows: Get by Id"
      }
    },
    "/Charts/Svg/{id}": {
      "get": {
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)",
            "in": "query",
            "name": "use_cache",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an svg formatted-image of this object.",
            "schema": {
              "description": "The file byte stream.",
              "format": "binary",
              "title": "Svg byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Charts"
        ],
        "description": "This endpoint is helpful for rending this Chart as an svg or image object that can then be rendered in a story, dashboard or website.",
        "operationId": "charts_charts_svg_get_id_use_cache",
        "summary": "Charts: Get Svg file",
        "x-operationName": "get-svg"
      }
    },
    "/Charts/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An Id of the respository DTO elemennt",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Chart.Charts"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Charts"
        ],
        "description": "Get by Id: Use this method to retrieve a Charts object by its primary key (id)",
        "operationId": "charts_charts_get_id",
        "summary": "Charts: Get by Id"
      }
    },
    "/ConnectionShapes/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "ConnectionShapes"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "slides_connectionshapes_childobjects_get_id",
        "summary": "Slides: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/ConnectionShapes/Details/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.Connector.Details"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "ConnectionShapes"
        ],
        "description": "Returns object metadata and information about relative dependent objects ",
        "operationId": "slides_connectionshapes_details_get_id",
        "summary": "Slides: Get Details",
        "x-operationName": "details"
      }
    },
    "/ConnectionShapes/OpenOfficeXml/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)",
            "in": "query",
            "name": "updated",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "ConnectionShapes"
        ],
        "description": "Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.",
        "operationId": "slides_connectionshapes_openofficexml_get_id_updated",
        "summary": "Slides: Get Underlying Xml",
        "x-operationName": "get-xml"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "ConnectionShapes"
        ],
        "description": "Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.",
        "operationId": "slides_connectionshapes_openofficexml_put_id",
        "summary": "Slides: Modify Underlying Xml",
        "x-operationName": "put-xml"
      }
    },
    "/ConnectionShapes/Svg/{id}": {
      "get": {
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)",
            "in": "query",
            "name": "use_cache",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an svg formatted-image of this object.",
            "schema": {
              "description": "The file byte stream.",
              "format": "binary",
              "title": "Svg byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "ConnectionShapes"
        ],
        "description": "This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.",
        "operationId": "slides_connectionshapes_svg_get_id_use_cache",
        "summary": "Slides: Get Svg file",
        "x-operationName": "get-svg"
      }
    },
    "/ConnectionShapes/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An Id of the respository DTO elemennt",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.Connector"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "ConnectionShapes"
        ],
        "description": "Get by Id: Use this method to retrieve a ConnectionShapes object by its primary key (id)",
        "operationId": "slides_connectionshapes_get_id",
        "summary": "ConnectionShapes: Get by Id"
      }
    },
    "/Documents": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "The file to upload.  Must be of type .pptx, ppt",
            "format": "binary",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "string"
          },
          {
            "description": "The story_id of the document being uploaded.",
            "format": "uuid",
            "in": "formData",
            "name": "storyId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Document"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "Upload an OpenOfficeXml document (e.g., .xlsx, .pptx) for processing by the API.",
        "operationId": "documents_post",
        "summary": "Documents: Upload"
      }
    },
    "/Documents/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this DocumentsController and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "documents_childobjects_get_id",
        "summary": "DocumentsController: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/Documents/Clone/{id}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "the Source document Id",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "A DocumentCloneDto object with containing information required for cloning the document",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DocumentCloneDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "Clone A Document that has already been uploaded to a new Story",
        "operationId": "documents_clone_post_id",
        "summary": "Documents: Clone an existing Ooxml Document to new Parent Story"
      }
    },
    "/Documents/DocumentType": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/DocumentType"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Documents/DocumentType"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the DocumentType type. Use the Id from oneof the returned elements on to make changes to elements in the Documents object space.",
        "operationId": "documents_documenttype_get",
        "summary": "DocumentType: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Documents/DocumentType/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentType"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Documents/DocumentType"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "documents_documenttype_typeid_get_type_id",
        "summary": "DocumentType: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Documents/DocumentType/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentType"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Documents/DocumentType"
        ],
        "description": "Get by Id: Use this method to retrieve a DocumentType object by its primary key (id)",
        "operationId": "documents_documenttype_get_id",
        "summary": "DocumentType: Get by Id"
      }
    },
    "/Documents/Download/{id}": {
      "get": {
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "in": "query",
            "name": "orginal",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an updated version of the OpenOffice Xml file",
            "schema": {
              "format": "binary",
              "title": "File byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "Download the into a bytestream for client-side processing.",
        "operationId": "documents_download_get_id_orginal",
        "summary": "Documents: Download",
        "x-operationName": "download"
      }
    },
    "/Documents/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "Permantly delete a document from the Ooxml Automation API. Note that is does not make changes to the related Presalytics APIs.\r\nPlease use the delete endpoint in the story API to ensure that stories are not left with orphaned references to the Ooxml Automation API.",
        "operationId": "documents_delete_id",
        "summary": "Documents: Delete by Id"
      },
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "Get by Id: Use this method to retrieve a Documents object by its primary key (id)",
        "operationId": "documents_get_id",
        "summary": "Documents: Get by Id"
      }
    },
    "/Groups/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "slides_groups_childobjects_get_id",
        "summary": "Slides: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/Groups/Details/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.Groups.Details"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Returns object metadata and information about relative dependent objects ",
        "operationId": "slides_groups_details_get_id",
        "summary": "Slides: Get Details",
        "x-operationName": "details"
      }
    },
    "/Groups/OpenOfficeXml/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)",
            "in": "query",
            "name": "updated",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.",
        "operationId": "slides_groups_openofficexml_get_id_updated",
        "summary": "Slides: Get Underlying Xml",
        "x-operationName": "get-xml"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.",
        "operationId": "slides_groups_openofficexml_put_id",
        "summary": "Slides: Modify Underlying Xml",
        "x-operationName": "put-xml"
      }
    },
    "/Groups/Svg/{id}": {
      "get": {
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)",
            "in": "query",
            "name": "use_cache",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an svg formatted-image of this object.",
            "schema": {
              "description": "The file byte stream.",
              "format": "binary",
              "title": "Svg byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.",
        "operationId": "slides_groups_svg_get_id_use_cache",
        "summary": "Slides: Get Svg file",
        "x-operationName": "get-svg"
      }
    },
    "/Groups/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An Id of the respository DTO elemennt",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.Groups"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Get by Id: Use this method to retrieve a Groups object by its primary key (id)",
        "operationId": "slides_groups_get_id",
        "summary": "Groups: Get by Id"
      }
    },
    "/Images/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Images"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this Shared and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "shared_images_childobjects_get_id",
        "summary": "Shared: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/Images/Details/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.Pictures.Details"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Images"
        ],
        "description": "Returns object metadata and information about relative dependent objects ",
        "operationId": "shared_images_details_get_id",
        "summary": "Shared: Get Details",
        "x-operationName": "details"
      }
    },
    "/Images/GetImage/{Id}": {
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The Image Id",
            "format": "uuid",
            "in": "path",
            "name": "Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "504": {
            "description": "Server Error"
          }
        },
        "tags": [
          "Images"
        ],
        "description": "Download Images extracted from Ooxml Documents",
        "operationId": "shared_images_getimage_put_id",
        "summary": "Image: Download Image"
      }
    },
    "/Images/OpenOfficeXml/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)",
            "in": "query",
            "name": "updated",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Images"
        ],
        "description": "Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Shared object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Shared objects.",
        "operationId": "shared_images_openofficexml_get_id_updated",
        "summary": "Shared: Get Underlying Xml",
        "x-operationName": "get-xml"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Images"
        ],
        "description": "Directly eidt the underlying xml of a Shared object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Shared objects.",
        "operationId": "shared_images_openofficexml_put_id",
        "summary": "Shared: Modify Underlying Xml",
        "x-operationName": "put-xml"
      }
    },
    "/Images/Svg/{id}": {
      "get": {
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)",
            "in": "query",
            "name": "use_cache",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an svg formatted-image of this object.",
            "schema": {
              "description": "The file byte stream.",
              "format": "binary",
              "title": "Svg byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Images"
        ],
        "description": "This endpoint is helpful for rending this Shared as an svg or image object that can then be rendered in a story, dashboard or website.",
        "operationId": "shared_images_svg_get_id_use_cache",
        "summary": "Shared: Get Svg file",
        "x-operationName": "get-svg"
      }
    },
    "/Images/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An Id of the respository DTO elemennt",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.Pictures"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Images"
        ],
        "description": "Get by Id: Use this method to retrieve a Images object by its primary key (id)",
        "operationId": "shared_images_get_id",
        "summary": "Images: Get by Id"
      }
    },
    "/ShapeTrees/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "ShapeTrees"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "slides_shapetrees_childobjects_get_id",
        "summary": "Slides: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/ShapeTrees/Details/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.ShapeTrees.Details"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "ShapeTrees"
        ],
        "description": "Returns object metadata and information about relative dependent objects ",
        "operationId": "slides_shapetrees_details_get_id",
        "summary": "Slides: Get Details",
        "x-operationName": "details"
      }
    },
    "/ShapeTrees/OpenOfficeXml/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)",
            "in": "query",
            "name": "updated",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "ShapeTrees"
        ],
        "description": "Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.",
        "operationId": "slides_shapetrees_openofficexml_get_id_updated",
        "summary": "Slides: Get Underlying Xml",
        "x-operationName": "get-xml"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "ShapeTrees"
        ],
        "description": "Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.",
        "operationId": "slides_shapetrees_openofficexml_put_id",
        "summary": "Slides: Modify Underlying Xml",
        "x-operationName": "put-xml"
      }
    },
    "/ShapeTrees/Svg/{id}": {
      "get": {
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)",
            "in": "query",
            "name": "use_cache",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an svg formatted-image of this object.",
            "schema": {
              "description": "The file byte stream.",
              "format": "binary",
              "title": "Svg byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "ShapeTrees"
        ],
        "description": "This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.",
        "operationId": "slides_shapetrees_svg_get_id_use_cache",
        "summary": "Slides: Get Svg file",
        "x-operationName": "get-svg"
      }
    },
    "/ShapeTrees/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An Id of the respository DTO elemennt",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.ShapeTrees"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "ShapeTrees"
        ],
        "description": "Get by Id: Use this method to retrieve a ShapeTrees object by its primary key (id)",
        "operationId": "slides_shapetrees_get_id",
        "summary": "ShapeTrees: Get by Id"
      }
    },
    "/Shapes/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Shapes"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "slides_shapes_childobjects_get_id",
        "summary": "Slides: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/Shapes/Details/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.Shapes.Details"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shapes"
        ],
        "description": "Returns object metadata and information about relative dependent objects ",
        "operationId": "slides_shapes_details_get_id",
        "summary": "Slides: Get Details",
        "x-operationName": "details"
      }
    },
    "/Shapes/OpenOfficeXml/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)",
            "in": "query",
            "name": "updated",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Shapes"
        ],
        "description": "Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.",
        "operationId": "slides_shapes_openofficexml_get_id_updated",
        "summary": "Slides: Get Underlying Xml",
        "x-operationName": "get-xml"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Shapes"
        ],
        "description": "Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.",
        "operationId": "slides_shapes_openofficexml_put_id",
        "summary": "Slides: Modify Underlying Xml",
        "x-operationName": "put-xml"
      }
    },
    "/Shapes/Svg/{id}": {
      "get": {
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)",
            "in": "query",
            "name": "use_cache",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an svg formatted-image of this object.",
            "schema": {
              "description": "The file byte stream.",
              "format": "binary",
              "title": "Svg byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Shapes"
        ],
        "description": "This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.",
        "operationId": "slides_shapes_svg_get_id_use_cache",
        "summary": "Slides: Get Svg file",
        "x-operationName": "get-svg"
      }
    },
    "/Shapes/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An Id of the respository DTO elemennt",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.Shapes"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shapes"
        ],
        "description": "Get by Id: Use this method to retrieve a Shapes object by its primary key (id)",
        "operationId": "slides_shapes_get_id",
        "summary": "Shapes: Get by Id"
      }
    },
    "/Shared/ColorTransformationAttributes/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.ColorTransformationAttributes"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/ColorTransformationAttributes"
        ],
        "description": "Get by Id: Use this method to retrieve a ColorTransformationAttributes object by its primary key (id)",
        "operationId": "shared_colortransformationattributes_get_id",
        "summary": "ColorTransformationAttributes: Get by Id"
      }
    },
    "/Shared/ColorTransformations/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.ColorTransformations"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/ColorTransformations"
        ],
        "description": "Get by Id: Use this method to retrieve a ColorTransformations object by its primary key (id)",
        "operationId": "shared_colortransformations_get_id",
        "summary": "ColorTransformations: Get by Id"
      }
    },
    "/Shared/ColorTypes": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Shared.ColorTypes"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/ColorTypes"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the ColorTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space.",
        "operationId": "shared_colortypes_get",
        "summary": "ColorTypes: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Shared/ColorTypes/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.ColorTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/ColorTypes"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "shared_colortypes_typeid_get_type_id",
        "summary": "ColorTypes: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Shared/ColorTypes/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.ColorTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/ColorTypes"
        ],
        "description": "Get by Id: Use this method to retrieve a ColorTypes object by its primary key (id)",
        "operationId": "shared_colortypes_get_id",
        "summary": "ColorTypes: Get by Id"
      }
    },
    "/Shared/DashTypes": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Shared.DashTypes"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/DashTypes"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the DashTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space.",
        "operationId": "shared_dashtypes_get",
        "summary": "DashTypes: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Shared/DashTypes/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.DashTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/DashTypes"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "shared_dashtypes_typeid_get_type_id",
        "summary": "DashTypes: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Shared/DashTypes/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.DashTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/DashTypes"
        ],
        "description": "Get by Id: Use this method to retrieve a DashTypes object by its primary key (id)",
        "operationId": "shared_dashtypes_get_id",
        "summary": "DashTypes: Get by Id"
      }
    },
    "/Shared/EffectAttributes/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.EffectAttributes"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/EffectAttributes"
        ],
        "description": "Get by Id: Use this method to retrieve a EffectAttributes object by its primary key (id)",
        "operationId": "shared_effectattributes_get_id",
        "summary": "EffectAttributes: Get by Id"
      }
    },
    "/Shared/EffectTypes": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Shared.EffectTypes"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/EffectTypes"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the EffectTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space.",
        "operationId": "shared_effecttypes_get",
        "summary": "EffectTypes: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Shared/EffectTypes/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.EffectTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/EffectTypes"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "shared_effecttypes_typeid_get_type_id",
        "summary": "EffectTypes: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Shared/EffectTypes/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.EffectTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/EffectTypes"
        ],
        "description": "Get by Id: Use this method to retrieve a EffectTypes object by its primary key (id)",
        "operationId": "shared_effecttypes_get_id",
        "summary": "EffectTypes: Get by Id"
      }
    },
    "/Shared/Effects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.Effects"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/Effects"
        ],
        "description": "Get by Id: Use this method to retrieve a Effects object by its primary key (id)",
        "operationId": "shared_effects_get_id",
        "summary": "Effects: Get by Id"
      }
    },
    "/Shared/FillMap/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.FillMap"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/FillMap"
        ],
        "description": "Get by Id: Use this method to retrieve a FillMap object by its primary key (id)",
        "operationId": "shared_fillmap_get_id",
        "summary": "FillMap: Get by Id"
      }
    },
    "/Shared/FillTypes": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Shared.FillTypes"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/FillTypes"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the FillTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space.",
        "operationId": "shared_filltypes_get",
        "summary": "FillTypes: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Shared/FillTypes/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.FillTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/FillTypes"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "shared_filltypes_typeid_get_type_id",
        "summary": "FillTypes: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Shared/FillTypes/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.FillTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/FillTypes"
        ],
        "description": "Get by Id: Use this method to retrieve a FillTypes object by its primary key (id)",
        "operationId": "shared_filltypes_get_id",
        "summary": "FillTypes: Get by Id"
      }
    },
    "/Shared/GradientFills/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.GradientFills"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/GradientFills"
        ],
        "description": "Get by Id: Use this method to retrieve a GradientFills object by its primary key (id)",
        "operationId": "shared_gradientfills_get_id",
        "summary": "GradientFills: Get by Id"
      }
    },
    "/Shared/GradientStops/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.GradientStops"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/GradientStops"
        ],
        "description": "Get by Id: Use this method to retrieve a GradientStops object by its primary key (id)",
        "operationId": "shared_gradientstops_get_id",
        "summary": "GradientStops: Get by Id"
      }
    },
    "/Shared/ImageFills/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.ImageFills"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/ImageFills"
        ],
        "description": "Get by Id: Use this method to retrieve a ImageFills object by its primary key (id)",
        "operationId": "shared_imagefills_get_id",
        "summary": "ImageFills: Get by Id"
      }
    },
    "/Shared/LineEndSizes": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Shared.LineEndSizes"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/LineEndSizes"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the LineEndSizes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space.",
        "operationId": "shared_lineendsizes_get",
        "summary": "LineEndSizes: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Shared/LineEndSizes/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.LineEndSizes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/LineEndSizes"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "shared_lineendsizes_typeid_get_type_id",
        "summary": "LineEndSizes: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Shared/LineEndSizes/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.LineEndSizes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/LineEndSizes"
        ],
        "description": "Get by Id: Use this method to retrieve a LineEndSizes object by its primary key (id)",
        "operationId": "shared_lineendsizes_get_id",
        "summary": "LineEndSizes: Get by Id"
      }
    },
    "/Shared/LineEndTypes": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Shared.LineEndTypes"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/LineEndTypes"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the LineEndTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space.",
        "operationId": "shared_lineendtypes_get",
        "summary": "LineEndTypes: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Shared/LineEndTypes/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.LineEndTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/LineEndTypes"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "shared_lineendtypes_typeid_get_type_id",
        "summary": "LineEndTypes: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Shared/LineEndTypes/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.LineEndTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/LineEndTypes"
        ],
        "description": "Get by Id: Use this method to retrieve a LineEndTypes object by its primary key (id)",
        "operationId": "shared_lineendtypes_get_id",
        "summary": "LineEndTypes: Get by Id"
      }
    },
    "/Shared/Lines/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.Lines"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/Lines"
        ],
        "description": "Get by Id: Use this method to retrieve a Lines object by its primary key (id)",
        "operationId": "shared_lines_get_id",
        "summary": "Lines: Get by Id"
      }
    },
    "/Shared/Paragraph/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.Paragraph"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/Paragraph"
        ],
        "description": "Get by Id: Use this method to retrieve a Paragraph object by its primary key (id)",
        "operationId": "shared_paragraph_get_id",
        "summary": "Paragraph: Get by Id"
      }
    },
    "/Shared/SolidFills/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.SolidFills"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/SolidFills"
        ],
        "description": "Get by Id: Use this method to retrieve a SolidFills object by its primary key (id)",
        "operationId": "shared_solidfills_get_id",
        "summary": "SolidFills: Get by Id"
      }
    },
    "/Shared/Text/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.Text"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/Text"
        ],
        "description": "Get by Id: Use this method to retrieve a Text object by its primary key (id)",
        "operationId": "shared_text_get_id",
        "summary": "Text: Get by Id"
      }
    },
    "/Shared/TextContainer/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Shared.TextContainer"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Shared/TextContainer"
        ],
        "description": "Get by Id: Use this method to retrieve a TextContainer object by its primary key (id)",
        "operationId": "shared_textcontainer_get_id",
        "summary": "TextContainer: Get by Id"
      }
    },
    "/Slides/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Slides"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "slides_slides_childobjects_get_id",
        "summary": "Slides: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/Slides/ColorMaps/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.ColorMaps"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides/ColorMaps"
        ],
        "description": "Get by Id: Use this method to retrieve a ColorMaps object by its primary key (id)",
        "operationId": "slides_colormaps_get_id",
        "summary": "ColorMaps: Get by Id"
      }
    },
    "/Slides/Details/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.Slides.Details"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides"
        ],
        "description": "Returns object metadata and information about relative dependent objects ",
        "operationId": "slides_slides_details_get_id",
        "summary": "Slides: Get Details",
        "x-operationName": "details"
      }
    },
    "/Slides/GraphicTypes": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Slide.GraphicTypes"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides/GraphicTypes"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the GraphicTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Slides object space.",
        "operationId": "slides_graphictypes_get",
        "summary": "GraphicTypes: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Slides/GraphicTypes/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.GraphicTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides/GraphicTypes"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "slides_graphictypes_typeid_get_type_id",
        "summary": "GraphicTypes: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Slides/GraphicTypes/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.GraphicTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides/GraphicTypes"
        ],
        "description": "Get by Id: Use this method to retrieve a GraphicTypes object by its primary key (id)",
        "operationId": "slides_graphictypes_get_id",
        "summary": "GraphicTypes: Get by Id"
      }
    },
    "/Slides/Graphics/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.Graphics"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides/Graphics"
        ],
        "description": "Get by Id: Use this method to retrieve a Graphics object by its primary key (id)",
        "operationId": "slides_graphics_get_id",
        "summary": "Graphics: Get by Id"
      }
    },
    "/Slides/GroupElementTypes": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Slide.GroupElementTypes"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides/GroupElementTypes"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the GroupElementTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Slides object space.",
        "operationId": "slides_groupelementtypes_get",
        "summary": "GroupElementTypes: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Slides/GroupElementTypes/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.GroupElementTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides/GroupElementTypes"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "slides_groupelementtypes_typeid_get_type_id",
        "summary": "GroupElementTypes: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Slides/GroupElementTypes/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.GroupElementTypes"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides/GroupElementTypes"
        ],
        "description": "Get by Id: Use this method to retrieve a GroupElementTypes object by its primary key (id)",
        "operationId": "slides_groupelementtypes_get_id",
        "summary": "GroupElementTypes: Get by Id"
      }
    },
    "/Slides/GroupElements/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.GroupElements"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides/GroupElements"
        ],
        "description": "Get by Id: Use this method to retrieve a GroupElements object by its primary key (id)",
        "operationId": "slides_groupelements_get_id",
        "summary": "GroupElements: Get by Id"
      }
    },
    "/Slides/OpenOfficeXml/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)",
            "in": "query",
            "name": "updated",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Slides"
        ],
        "description": "Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.",
        "operationId": "slides_slides_openofficexml_get_id_updated",
        "summary": "Slides: Get Underlying Xml",
        "x-operationName": "get-xml"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Slides"
        ],
        "description": "Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.",
        "operationId": "slides_slides_openofficexml_put_id",
        "summary": "Slides: Modify Underlying Xml",
        "x-operationName": "put-xml"
      }
    },
    "/Slides/SlideMasters/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.SlideMasters"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides/SlideMasters"
        ],
        "description": "Get by Id: Use this method to retrieve a SlideMasters object by its primary key (id)",
        "operationId": "slides_slidemasters_get_id",
        "summary": "SlideMasters: Get by Id"
      }
    },
    "/Slides/Svg/{id}": {
      "get": {
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)",
            "in": "query",
            "name": "use_cache",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an svg formatted-image of this object.",
            "schema": {
              "description": "The file byte stream.",
              "format": "binary",
              "title": "Svg byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Slides"
        ],
        "description": "This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.",
        "operationId": "slides_slides_svg_get_id_use_cache",
        "summary": "Slides: Get Svg file",
        "x-operationName": "get-svg"
      }
    },
    "/Slides/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An Id of the respository DTO elemennt",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.Slides"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Slides"
        ],
        "description": "Get by Id: Use this method to retrieve a Slides object by its primary key (id)",
        "operationId": "slides_slides_get_id",
        "summary": "Slides: Get by Id"
      }
    },
    "/SmartArts/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "SmartArts"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "slides_smartarts_childobjects_get_id",
        "summary": "Slides: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/SmartArts/Details/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.SmartArts.Details"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "SmartArts"
        ],
        "description": "Returns object metadata and information about relative dependent objects ",
        "operationId": "slides_smartarts_details_get_id",
        "summary": "Slides: Get Details",
        "x-operationName": "details"
      }
    },
    "/SmartArts/OpenOfficeXml/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)",
            "in": "query",
            "name": "updated",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "SmartArts"
        ],
        "description": "Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.",
        "operationId": "slides_smartarts_openofficexml_get_id_updated",
        "summary": "Slides: Get Underlying Xml",
        "x-operationName": "get-xml"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "SmartArts"
        ],
        "description": "Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.",
        "operationId": "slides_smartarts_openofficexml_put_id",
        "summary": "Slides: Modify Underlying Xml",
        "x-operationName": "put-xml"
      }
    },
    "/SmartArts/Svg/{id}": {
      "get": {
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)",
            "in": "query",
            "name": "use_cache",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an svg formatted-image of this object.",
            "schema": {
              "description": "The file byte stream.",
              "format": "binary",
              "title": "Svg byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "SmartArts"
        ],
        "description": "This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.",
        "operationId": "slides_smartarts_svg_get_id_use_cache",
        "summary": "Slides: Get Svg file",
        "x-operationName": "get-svg"
      }
    },
    "/SmartArts/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An Id of the respository DTO elemennt",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide.SmartArts"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "SmartArts"
        ],
        "description": "Get by Id: Use this method to retrieve a SmartArts object by its primary key (id)",
        "operationId": "slides_smartarts_get_id",
        "summary": "SmartArts: Get by Id"
      }
    },
    "/Tables/Borders/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Table.Borders"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Tables/Borders"
        ],
        "description": "Get by Id: Use this method to retrieve a Borders object by its primary key (id)",
        "operationId": "tables_borders_get_id",
        "summary": "Borders: Get by Id"
      }
    },
    "/Tables/Cells/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Table.Cells"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Tables/Cells"
        ],
        "description": "Get by Id: Use this method to retrieve a Cells object by its primary key (id)",
        "operationId": "tables_cells_get_id",
        "summary": "Cells: Get by Id"
      }
    },
    "/Tables/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Tables"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this Table and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "tables_tables_childobjects_get_id",
        "summary": "Tables: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/Tables/Columns/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Table.Columns"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Tables/Columns"
        ],
        "description": "Get by Id: Use this method to retrieve a Columns object by its primary key (id)",
        "operationId": "tables_columns_get_id",
        "summary": "Columns: Get by Id"
      }
    },
    "/Tables/Details/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Table.Tables.Details"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Tables"
        ],
        "description": "Returns object metadata and information about relative dependent objects ",
        "operationId": "tables_tables_details_get_id",
        "summary": "Tables: Get Details",
        "x-operationName": "details"
      }
    },
    "/Tables/OpenOfficeXml/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)",
            "in": "query",
            "name": "updated",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Tables"
        ],
        "description": "Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Table object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Table objects.",
        "operationId": "tables_tables_openofficexml_get_id_updated",
        "summary": "Tables: Get Underlying Xml",
        "x-operationName": "get-xml"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Tables"
        ],
        "description": "Directly eidt the underlying xml of a Table object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Table objects.",
        "operationId": "tables_tables_openofficexml_put_id",
        "summary": "Tables: Modify Underlying Xml",
        "x-operationName": "put-xml"
      }
    },
    "/Tables/Rows/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Table.Rows"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Tables/Rows"
        ],
        "description": "Get by Id: Use this method to retrieve a Rows object by its primary key (id)",
        "operationId": "tables_rows_get_id",
        "summary": "Rows: Get by Id"
      }
    },
    "/Tables/Svg/{id}": {
      "get": {
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)",
            "in": "query",
            "name": "use_cache",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an svg formatted-image of this object.",
            "schema": {
              "description": "The file byte stream.",
              "format": "binary",
              "title": "Svg byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Tables"
        ],
        "description": "This endpoint is helpful for rending this Table as an svg or image object that can then be rendered in a story, dashboard or website.",
        "operationId": "tables_tables_svg_get_id_use_cache",
        "summary": "Tables: Get Svg file",
        "x-operationName": "get-svg"
      }
    },
    "/Tables/TableUpdate/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Table.TableDataDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Tables"
        ],
        "description": "Gets a TabletDataDTO object, usually used for downstream updates to table content",
        "operationId": "tables_tables_tableupdate_get_id",
        "summary": "Table: Get Table Data"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Table.TableDataDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Tables"
        ],
        "description": "Simplifies table update by allowing users to supply strings to table cells  via TableDataDTO",
        "operationId": "tables_tables_tableupdate_put_id",
        "summary": "Tables: Update Table Data"
      }
    },
    "/Tables/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An Id of the respository DTO elemennt",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Table.Tables"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Tables"
        ],
        "description": "Get by Id: Use this method to retrieve a Tables object by its primary key (id)",
        "operationId": "tables_tables_get_id",
        "summary": "Tables: Get by Id"
      }
    },
    "/Themes/BackgroundFills/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.BackgroundFills"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes/BackgroundFills"
        ],
        "description": "Get by Id: Use this method to retrieve a BackgroundFills object by its primary key (id)",
        "operationId": "themes_backgroundfills_get_id",
        "summary": "BackgroundFills: Get by Id"
      }
    },
    "/Themes/ChildObjects/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/ChildObjects"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Themes"
        ],
        "description": "This endpoint is helpful for helping users and bots identify dependent objects to this Theme and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.",
        "operationId": "theme_themes_childobjects_get_id",
        "summary": "Theme: Get Dependent Objects Tree",
        "x-operationName": "get-obj-tree"
      }
    },
    "/Themes/Colors/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.Colors"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes/Colors"
        ],
        "description": "Get by Id: Use this method to retrieve a Colors object by its primary key (id)",
        "operationId": "themes_colors_get_id",
        "summary": "Colors: Get by Id"
      }
    },
    "/Themes/CustomColors/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.CustomColors"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes/CustomColors"
        ],
        "description": "Get by Id: Use this method to retrieve a CustomColors object by its primary key (id)",
        "operationId": "themes_customcolors_get_id",
        "summary": "CustomColors: Get by Id"
      }
    },
    "/Themes/Details/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.Themes.Details"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes"
        ],
        "description": "Returns object metadata and information about relative dependent objects ",
        "operationId": "theme_themes_details_get_id",
        "summary": "Theme: Get Details",
        "x-operationName": "details"
      }
    },
    "/Themes/EffectMap/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.EffectMap"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes/EffectMap"
        ],
        "description": "Get by Id: Use this method to retrieve a EffectMap object by its primary key (id)",
        "operationId": "themes_effectmap_get_id",
        "summary": "EffectMap: Get by Id"
      }
    },
    "/Themes/Fills/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.Fills"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes/Fills"
        ],
        "description": "Get by Id: Use this method to retrieve a Fills object by its primary key (id)",
        "operationId": "themes_fills_get_id",
        "summary": "Fills: Get by Id"
      }
    },
    "/Themes/Fonts/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.Fonts"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes/Fonts"
        ],
        "description": "Get by Id: Use this method to retrieve a Fonts object by its primary key (id)",
        "operationId": "themes_fonts_get_id",
        "summary": "Fonts: Get by Id"
      }
    },
    "/Themes/Intensity": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Theme.Intensity"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes/Intensity"
        ],
        "description": "List Types: Use this method to retreive a list of possible options for the Intensity type. Use the Id from oneof the returned elements on to make changes to elements in the Themes object space.",
        "operationId": "themes_intensity_get",
        "summary": "Intensity: List All Possible Types",
        "x-operationName": "list"
      }
    },
    "/Themes/Intensity/TypeId/{type_id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "type_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.Intensity"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes/Intensity"
        ],
        "description": "This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.",
        "operationId": "themes_intensity_typeid_get_type_id",
        "summary": "Intensity: Get By Type Id",
        "x-operationName": "type-id"
      }
    },
    "/Themes/Intensity/{id}": {
      "get": {
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.Intensity"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes/Intensity"
        ],
        "description": "Get by Id: Use this method to retrieve a Intensity object by its primary key (id)",
        "operationId": "themes_intensity_get_id",
        "summary": "Intensity: Get by Id"
      }
    },
    "/Themes/LineMap/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.LineMap"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes/LineMap"
        ],
        "description": "Get by Id: Use this method to retrieve a LineMap object by its primary key (id)",
        "operationId": "themes_linemap_get_id",
        "summary": "LineMap: Get by Id"
      }
    },
    "/Themes/OpenOfficeXml/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)",
            "in": "query",
            "name": "updated",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Themes"
        ],
        "description": "Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Theme object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Theme objects.",
        "operationId": "theme_themes_openofficexml_get_id_updated",
        "summary": "Theme: Get Underlying Xml",
        "x-operationName": "get-xml"
      },
      "put": {
        "consumes": [
          "application/json",
          "application/json-patch+json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OoxmlDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Themes"
        ],
        "description": "Directly eidt the underlying xml of a Theme object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Theme objects.",
        "operationId": "theme_themes_openofficexml_put_id",
        "summary": "Theme: Modify Underlying Xml",
        "x-operationName": "put-xml"
      }
    },
    "/Themes/Svg/{id}": {
      "get": {
        "produces": [
          "image/svg+xml",
          "application/json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)",
            "in": "query",
            "name": "use_cache",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an svg formatted-image of this object.",
            "schema": {
              "description": "The file byte stream.",
              "format": "binary",
              "title": "Svg byte stream",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "tags": [
          "Themes"
        ],
        "description": "This endpoint is helpful for rending this Theme as an svg or image object that can then be rendered in a story, dashboard or website.",
        "operationId": "theme_themes_svg_get_id_use_cache",
        "summary": "Theme: Get Svg file",
        "x-operationName": "get-svg"
      }
    },
    "/Themes/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "An Id of the respository DTO elemennt",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme.Themes"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Themes"
        ],
        "description": "Get by Id: Use this method to retrieve a Themes object by its primary key (id)",
        "operationId": "theme_themes_get_id",
        "summary": "Themes: Get by Id"
      }
    }
  },
  "definitions": {
    "Chart.Axes": {
      "properties": {
        "axisDataTypeId": {
          "format": "int32",
          "title": "Chart.Axes",
          "type": "integer"
        },
        "chartsId": {
          "format": "uuid",
          "title": "Chart.Axes",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Chart.Axes",
          "type": "string"
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Chart.Axes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Chart.Axes.Details": {
      "properties": {
        "axisDataTypeId": {
          "format": "int32",
          "title": "Chart.Axes.Details",
          "type": "integer"
        },
        "chart": {
          "$ref": "#/definitions/Chart.Charts.Details"
        },
        "chartsId": {
          "format": "uuid",
          "title": "Chart.Axes.Details",
          "type": "string"
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Chart.Axes.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Chart.Axes.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Chart.Axes.Details",
          "type": "string"
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Chart.Axes.Details",
          "type": "integer"
        },
        "titleTextContainer": {
          "$ref": "#/definitions/Shared.TextContainer.Details"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Chart.Axes.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Chart.Axes.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Chart.AxisDataTypes": {
      "properties": {
        "description": {
          "title": "Chart.AxisDataTypes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Chart.AxisDataTypes",
          "type": "string"
        },
        "name": {
          "title": "Chart.AxisDataTypes",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlName": {
          "title": "Chart.AxisDataTypes",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Chart.AxisDataTypes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Chart.ChartData": {
      "properties": {
        "chartId": {
          "format": "uuid",
          "title": "Chart.ChartData",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Chart.ChartData",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Chart.ChartData.Details": {
      "properties": {
        "chart": {
          "$ref": "#/definitions/Chart.Charts.Details"
        },
        "chartId": {
          "format": "uuid",
          "title": "Chart.ChartData.Details",
          "type": "string",
          "x-nullable": true
        },
        "columnCollection": {
          "$ref": "#/definitions/Chart.ColumnCollections.Details"
        },
        "dataPoints": {
          "items": {
            "$ref": "#/definitions/Chart.DataPoints.Details"
          },
          "title": "Chart.ChartData.Details",
          "type": "array",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Chart.ChartData.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Chart.ChartData.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Chart.ChartData.Details",
          "type": "string"
        },
        "rowCollection": {
          "$ref": "#/definitions/Chart.RowCollections.Details"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Chart.ChartData.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Chart.ChartData.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Chart.ChartDataDTO": {
      "properties": {
        "categoryNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        },
        "chartId": {
          "format": "uuid",
          "type": "string"
        },
        "dataPoints": {
          "items": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "type": "array",
          "x-nullable": true
        },
        "seriesNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Chart.Charts": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Chart.Charts",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Chart.Charts",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Chart.Charts",
          "type": "string"
        },
        "name": {
          "title": "Chart.Charts",
          "type": "string",
          "x-nullable": true
        },
        "packageUri": {
          "title": "Chart.Charts",
          "type": "string",
          "x-nullable": true
        },
        "parentGraphicId": {
          "format": "uuid",
          "title": "Chart.Charts",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Chart.Charts",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Chart.Charts.Details": {
      "properties": {
        "axes": {
          "items": {
            "$ref": "#/definitions/Chart.Axes.Details"
          },
          "title": "Chart.Charts.Details",
          "type": "array",
          "x-nullable": true
        },
        "baseElementBlobUrl": {
          "title": "Chart.Charts.Details",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Chart.Charts.Details",
          "type": "string",
          "x-nullable": true
        },
        "chartData": {
          "$ref": "#/definitions/Chart.ChartData.Details"
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Chart.Charts.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Chart.Charts.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Chart.Charts.Details",
          "type": "string"
        },
        "name": {
          "title": "Chart.Charts.Details",
          "type": "string",
          "x-nullable": true
        },
        "packageUri": {
          "title": "Chart.Charts.Details",
          "type": "string",
          "x-nullable": true
        },
        "parentGraphic": {
          "$ref": "#/definitions/Slide.Graphics.Details"
        },
        "parentGraphicId": {
          "format": "uuid",
          "title": "Chart.Charts.Details",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Chart.Charts.Details",
          "type": "string",
          "x-nullable": true
        },
        "titleTextContainer": {
          "$ref": "#/definitions/Shared.TextContainer.Details"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Chart.Charts.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Chart.Charts.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Chart.ColumnCollections": {
      "properties": {
        "chartDataId": {
          "format": "uuid",
          "title": "Chart.ColumnCollections",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Chart.ColumnCollections",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Chart.ColumnCollections.Details": {
      "properties": {
        "chartData": {
          "$ref": "#/definitions/Chart.ChartData.Details"
        },
        "chartDataId": {
          "format": "uuid",
          "title": "Chart.ColumnCollections.Details",
          "type": "string",
          "x-nullable": true
        },
        "columns": {
          "items": {
            "$ref": "#/definitions/Chart.Columns.Details"
          },
          "title": "Chart.ColumnCollections.Details",
          "type": "array",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Chart.ColumnCollections.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Chart.ColumnCollections.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Chart.ColumnCollections.Details",
          "type": "string"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Chart.ColumnCollections.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Chart.ColumnCollections.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Chart.Columns": {
      "properties": {
        "axisId": {
          "format": "uuid",
          "title": "Chart.Columns",
          "type": "string",
          "x-nullable": true
        },
        "columnCollectionId": {
          "format": "uuid",
          "title": "Chart.Columns",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Chart.Columns",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "title": "Chart.Columns",
          "type": "integer"
        },
        "name": {
          "title": "Chart.Columns",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Chart.Columns.Details": {
      "properties": {
        "axis": {
          "$ref": "#/definitions/Chart.Axes.Details"
        },
        "axisId": {
          "format": "uuid",
          "title": "Chart.Columns.Details",
          "type": "string",
          "x-nullable": true
        },
        "columnCollection": {
          "$ref": "#/definitions/Chart.ColumnCollections.Details"
        },
        "columnCollectionId": {
          "format": "uuid",
          "title": "Chart.Columns.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Chart.Columns.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Chart.Columns.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Chart.Columns.Details",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "title": "Chart.Columns.Details",
          "type": "integer"
        },
        "name": {
          "title": "Chart.Columns.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Chart.Columns.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Chart.Columns.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Chart.DataPoints": {
      "properties": {
        "chartDataId": {
          "format": "uuid",
          "title": "Chart.DataPoints",
          "type": "string",
          "x-nullable": true
        },
        "columnId": {
          "format": "uuid",
          "title": "Chart.DataPoints",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Chart.DataPoints",
          "type": "string"
        },
        "rowId": {
          "format": "uuid",
          "title": "Chart.DataPoints",
          "type": "string",
          "x-nullable": true
        },
        "value": {
          "format": "double",
          "title": "Chart.DataPoints",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Chart.DataPoints.Details": {
      "properties": {
        "chartData": {
          "$ref": "#/definitions/Chart.ChartData.Details"
        },
        "chartDataId": {
          "format": "uuid",
          "title": "Chart.DataPoints.Details",
          "type": "string",
          "x-nullable": true
        },
        "column": {
          "$ref": "#/definitions/Chart.Columns.Details"
        },
        "columnId": {
          "format": "uuid",
          "title": "Chart.DataPoints.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Chart.DataPoints.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Chart.DataPoints.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Chart.DataPoints.Details",
          "type": "string"
        },
        "row": {
          "$ref": "#/definitions/Chart.Rows.Details"
        },
        "rowId": {
          "format": "uuid",
          "title": "Chart.DataPoints.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Chart.DataPoints.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Chart.DataPoints.Details",
          "type": "string"
        },
        "value": {
          "format": "double",
          "title": "Chart.DataPoints.Details",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Chart.PlotType": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Chart.PlotType",
          "type": "string"
        },
        "plotQualifedAssy": {
          "title": "Chart.PlotType",
          "type": "string",
          "x-nullable": true
        },
        "plotTypeName": {
          "title": "Chart.PlotType",
          "type": "string",
          "x-nullable": true
        },
        "rowColTypeId": {
          "format": "int32",
          "title": "Chart.PlotType",
          "type": "integer"
        },
        "typeId": {
          "format": "int32",
          "title": "Chart.PlotType",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Chart.RowCol": {
      "properties": {
        "colName": {
          "title": "Chart.RowCol",
          "type": "string",
          "x-nullable": true
        },
        "colQualifiedAssy": {
          "title": "Chart.RowCol",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Chart.RowCol",
          "type": "string"
        },
        "rowName": {
          "title": "Chart.RowCol",
          "type": "string",
          "x-nullable": true
        },
        "rowQualifedAssy": {
          "title": "Chart.RowCol",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Chart.RowCol",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Chart.RowCollections": {
      "properties": {
        "axisId": {
          "format": "uuid",
          "title": "Chart.RowCollections",
          "type": "string",
          "x-nullable": true
        },
        "chartDataId": {
          "format": "uuid",
          "title": "Chart.RowCollections",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Chart.RowCollections",
          "type": "string"
        },
        "nameFormatType": {
          "format": "int32",
          "title": "Chart.RowCollections",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Chart.RowCollections.Details": {
      "properties": {
        "axis": {
          "$ref": "#/definitions/Chart.Axes.Details"
        },
        "axisId": {
          "format": "uuid",
          "title": "Chart.RowCollections.Details",
          "type": "string",
          "x-nullable": true
        },
        "chartData": {
          "$ref": "#/definitions/Chart.ChartData.Details"
        },
        "chartDataId": {
          "format": "uuid",
          "title": "Chart.RowCollections.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Chart.RowCollections.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Chart.RowCollections.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Chart.RowCollections.Details",
          "type": "string"
        },
        "nameFormatType": {
          "format": "int32",
          "title": "Chart.RowCollections.Details",
          "type": "integer"
        },
        "rows": {
          "items": {
            "$ref": "#/definitions/Chart.Rows.Details"
          },
          "title": "Chart.RowCollections.Details",
          "type": "array",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Chart.RowCollections.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Chart.RowCollections.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Chart.RowNameFormatTypes": {
      "properties": {
        "formatCode": {
          "title": "Chart.RowNameFormatTypes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Chart.RowNameFormatTypes",
          "type": "string"
        },
        "powerToolsId": {
          "format": "int32",
          "title": "Chart.RowNameFormatTypes",
          "type": "integer"
        },
        "typeId": {
          "format": "int32",
          "title": "Chart.RowNameFormatTypes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Chart.Rows": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Chart.Rows",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "title": "Chart.Rows",
          "type": "integer"
        },
        "name": {
          "title": "Chart.Rows",
          "type": "string",
          "x-nullable": true
        },
        "rowNameCollectionId": {
          "format": "uuid",
          "title": "Chart.Rows",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Chart.Rows.Details": {
      "properties": {
        "dateCreated": {
          "format": "date-time",
          "title": "Chart.Rows.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Chart.Rows.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Chart.Rows.Details",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "title": "Chart.Rows.Details",
          "type": "integer"
        },
        "name": {
          "title": "Chart.Rows.Details",
          "type": "string",
          "x-nullable": true
        },
        "rowNameCollection": {
          "$ref": "#/definitions/Chart.RowCollections.Details"
        },
        "rowNameCollectionId": {
          "format": "uuid",
          "title": "Chart.Rows.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Chart.Rows.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Chart.Rows.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChildObjects": {
      "properties": {
        "entityId": {
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "entityName": {
          "type": "string",
          "x-nullable": true
        },
        "objectType": {
          "type": "string",
          "x-nullable": true
        },
        "parentEntityId": {
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "parentObjectType": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Document": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Document",
          "type": "string",
          "x-nullable": true
        },
        "blobLocation": {
          "title": "Document",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Document",
          "type": "string",
          "x-nullable": true
        },
        "documentTypeId": {
          "format": "int32",
          "title": "Document",
          "type": "integer"
        },
        "filename": {
          "title": "Document",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Document",
          "type": "string"
        },
        "name": {
          "title": "Document",
          "type": "string",
          "x-nullable": true
        },
        "ownerGuid": {
          "format": "uuid",
          "title": "Document",
          "type": "string"
        },
        "packageUri": {
          "title": "Document",
          "type": "string",
          "x-nullable": true
        },
        "storyId": {
          "format": "uuid",
          "title": "Document",
          "type": "string"
        },
        "tableStylesXmlBlobUrl": {
          "title": "Document",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "title": "Document",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Document.Details": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Document.Details",
          "type": "string",
          "x-nullable": true
        },
        "blobLocation": {
          "title": "Document.Details",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Document.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Document.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Document.Details",
          "type": "string"
        },
        "documentTypeId": {
          "format": "int32",
          "title": "Document.Details",
          "type": "integer"
        },
        "filename": {
          "title": "Document.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Document.Details",
          "type": "string"
        },
        "name": {
          "title": "Document.Details",
          "type": "string",
          "x-nullable": true
        },
        "ownerGuid": {
          "format": "uuid",
          "title": "Document.Details",
          "type": "string"
        },
        "packageUri": {
          "title": "Document.Details",
          "type": "string",
          "x-nullable": true
        },
        "slides": {
          "items": {
            "$ref": "#/definitions/Slide.Slides.Details"
          },
          "title": "Document.Details",
          "type": "array",
          "x-nullable": true
        },
        "storyId": {
          "format": "uuid",
          "title": "Document.Details",
          "type": "string"
        },
        "tableStylesXmlBlobUrl": {
          "title": "Document.Details",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "title": "Document.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Document.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Document.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DocumentCloneDTO": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "DocumentCloneDTO",
          "type": "string"
        },
        "storyId": {
          "format": "uuid",
          "title": "DocumentCloneDTO",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DocumentType": {
      "properties": {
        "description": {
          "title": "DocumentType",
          "type": "string",
          "x-nullable": true
        },
        "fileExtension": {
          "title": "DocumentType",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "DocumentType",
          "type": "string"
        },
        "mimeType": {
          "title": "DocumentType",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "title": "DocumentType",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlPackageType": {
          "title": "DocumentType",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "DocumentType",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OoxmlDTO": {
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string",
          "x-nullable": true
        },
        "openOfficeXml": {
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ProblemDetails": {
      "additionalProperties": {
        "type": "object"
      },
      "properties": {
        "detail": {
          "type": "string",
          "x-nullable": true
        },
        "instance": {
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "title": {
          "type": "string",
          "x-nullable": true
        },
        "type": {
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.ColorTransformationAttributes": {
      "properties": {
        "colorTransformationsId": {
          "format": "uuid",
          "title": "Shared.ColorTransformationAttributes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.ColorTransformationAttributes",
          "type": "string"
        },
        "name": {
          "title": "Shared.ColorTransformationAttributes",
          "type": "string",
          "x-nullable": true
        },
        "value": {
          "title": "Shared.ColorTransformationAttributes",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.ColorTransformationAttributes.Details": {
      "properties": {
        "colorTransformation": {
          "$ref": "#/definitions/Shared.ColorTransformations.Details"
        },
        "colorTransformationsId": {
          "format": "uuid",
          "title": "Shared.ColorTransformationAttributes.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.ColorTransformationAttributes.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.ColorTransformationAttributes.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Shared.ColorTransformationAttributes.Details",
          "type": "string"
        },
        "name": {
          "title": "Shared.ColorTransformationAttributes.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.ColorTransformationAttributes.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.ColorTransformationAttributes.Details",
          "type": "string"
        },
        "value": {
          "title": "Shared.ColorTransformationAttributes.Details",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.ColorTransformations": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Shared.ColorTransformations",
          "type": "string"
        },
        "name": {
          "title": "Shared.ColorTransformations",
          "type": "string",
          "x-nullable": true
        },
        "solidFillsId": {
          "format": "uuid",
          "title": "Shared.ColorTransformations",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.ColorTransformations.Details": {
      "properties": {
        "colorTransformationAttributes": {
          "items": {
            "$ref": "#/definitions/Shared.ColorTransformationAttributes.Details"
          },
          "title": "Shared.ColorTransformations.Details",
          "type": "array",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.ColorTransformations.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.ColorTransformations.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Shared.ColorTransformations.Details",
          "type": "string"
        },
        "name": {
          "title": "Shared.ColorTransformations.Details",
          "type": "string",
          "x-nullable": true
        },
        "parentSolidFill": {
          "$ref": "#/definitions/Shared.SolidFills.Details"
        },
        "solidFillsId": {
          "format": "uuid",
          "title": "Shared.ColorTransformations.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.ColorTransformations.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.ColorTransformations.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.ColorTypes": {
      "properties": {
        "colorSchemeIndexValueEnum": {
          "format": "int32",
          "title": "Shared.ColorTypes",
          "type": "integer",
          "x-nullable": true
        },
        "description": {
          "title": "Shared.ColorTypes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.ColorTypes",
          "type": "string"
        },
        "name": {
          "title": "Shared.ColorTypes",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Shared.ColorTypes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Shared.DashTypes": {
      "properties": {
        "description": {
          "title": "Shared.DashTypes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.DashTypes",
          "type": "string"
        },
        "name": {
          "title": "Shared.DashTypes",
          "type": "string",
          "x-nullable": true
        },
        "serializedAs": {
          "title": "Shared.DashTypes",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Shared.DashTypes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Shared.EffectAttributes": {
      "properties": {
        "attributesJson": {
          "title": "Shared.EffectAttributes",
          "type": "string",
          "x-nullable": true
        },
        "effectId": {
          "format": "uuid",
          "title": "Shared.EffectAttributes",
          "type": "string",
          "x-nullable": true
        },
        "effectTypeId": {
          "format": "int32",
          "title": "Shared.EffectAttributes",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Shared.EffectAttributes",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.EffectAttributes.Details": {
      "properties": {
        "attributesJson": {
          "title": "Shared.EffectAttributes.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.EffectAttributes.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.EffectAttributes.Details",
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/Shared.Effects.Details"
        },
        "effectId": {
          "format": "uuid",
          "title": "Shared.EffectAttributes.Details",
          "type": "string",
          "x-nullable": true
        },
        "effectTypeId": {
          "format": "int32",
          "title": "Shared.EffectAttributes.Details",
          "type": "integer"
        },
        "fillMap": {
          "$ref": "#/definitions/Shared.FillMap.Details"
        },
        "id": {
          "format": "uuid",
          "title": "Shared.EffectAttributes.Details",
          "type": "string"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.EffectAttributes.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.EffectAttributes.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.EffectTypes": {
      "properties": {
        "description": {
          "title": "Shared.EffectTypes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.EffectTypes",
          "type": "string"
        },
        "name": {
          "title": "Shared.EffectTypes",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Shared.EffectTypes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Shared.Effects": {
      "properties": {
        "connectorId": {
          "format": "uuid",
          "title": "Shared.Effects",
          "type": "string",
          "x-nullable": true
        },
        "effectMapId": {
          "format": "uuid",
          "title": "Shared.Effects",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.Effects",
          "type": "string"
        },
        "name": {
          "title": "Shared.Effects",
          "type": "string",
          "x-nullable": true
        },
        "shapeId": {
          "format": "uuid",
          "title": "Shared.Effects",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.Effects.Details": {
      "properties": {
        "connectorId": {
          "format": "uuid",
          "title": "Shared.Effects.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.Effects.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.Effects.Details",
          "type": "string"
        },
        "effectAttributes": {
          "items": {
            "$ref": "#/definitions/Shared.EffectAttributes.Details"
          },
          "title": "Shared.Effects.Details",
          "type": "array",
          "x-nullable": true
        },
        "effectMap": {
          "$ref": "#/definitions/Theme.EffectMap.Details"
        },
        "effectMapId": {
          "format": "uuid",
          "title": "Shared.Effects.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.Effects.Details",
          "type": "string"
        },
        "name": {
          "title": "Shared.Effects.Details",
          "type": "string",
          "x-nullable": true
        },
        "parentConnector": {
          "$ref": "#/definitions/Slide.Connector.Details"
        },
        "parentShape": {
          "$ref": "#/definitions/Slide.Shapes.Details"
        },
        "shapeId": {
          "format": "uuid",
          "title": "Shared.Effects.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.Effects.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.Effects.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.FillMap": {
      "properties": {
        "connectorId": {
          "format": "uuid",
          "title": "Shared.FillMap",
          "type": "string",
          "x-nullable": true
        },
        "effectAttributeId": {
          "format": "uuid",
          "title": "Shared.FillMap",
          "type": "string",
          "x-nullable": true
        },
        "fillTypeId": {
          "format": "int32",
          "title": "Shared.FillMap",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Shared.FillMap",
          "type": "string"
        },
        "shapeId": {
          "format": "uuid",
          "title": "Shared.FillMap",
          "type": "string",
          "x-nullable": true
        },
        "tableCellId": {
          "format": "uuid",
          "title": "Shared.FillMap",
          "type": "string",
          "x-nullable": true
        },
        "themeBackgroundFillId": {
          "format": "uuid",
          "title": "Shared.FillMap",
          "type": "string",
          "x-nullable": true
        },
        "themeFillId": {
          "format": "uuid",
          "title": "Shared.FillMap",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.FillMap.Details": {
      "properties": {
        "connector": {
          "$ref": "#/definitions/Slide.Connector.Details"
        },
        "connectorId": {
          "format": "uuid",
          "title": "Shared.FillMap.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.FillMap.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.FillMap.Details",
          "type": "string"
        },
        "effectAttribute": {
          "$ref": "#/definitions/Shared.EffectAttributes.Details"
        },
        "effectAttributeId": {
          "format": "uuid",
          "title": "Shared.FillMap.Details",
          "type": "string",
          "x-nullable": true
        },
        "fillTypeId": {
          "format": "int32",
          "title": "Shared.FillMap.Details",
          "type": "integer"
        },
        "gradientFill": {
          "$ref": "#/definitions/Shared.GradientFills.Details"
        },
        "id": {
          "format": "uuid",
          "title": "Shared.FillMap.Details",
          "type": "string"
        },
        "imageFill": {
          "$ref": "#/definitions/Shared.ImageFills.Details"
        },
        "shape": {
          "$ref": "#/definitions/Slide.Shapes.Details"
        },
        "shapeId": {
          "format": "uuid",
          "title": "Shared.FillMap.Details",
          "type": "string",
          "x-nullable": true
        },
        "solidFill": {
          "$ref": "#/definitions/Shared.SolidFills.Details"
        },
        "tableCell": {
          "$ref": "#/definitions/Table.Cells.Details"
        },
        "tableCellId": {
          "format": "uuid",
          "title": "Shared.FillMap.Details",
          "type": "string",
          "x-nullable": true
        },
        "themeBackgroundFill": {
          "$ref": "#/definitions/Theme.BackgroundFills.Details"
        },
        "themeBackgroundFillId": {
          "format": "uuid",
          "title": "Shared.FillMap.Details",
          "type": "string",
          "x-nullable": true
        },
        "themeFill": {
          "$ref": "#/definitions/Theme.Fills.Details"
        },
        "themeFillId": {
          "format": "uuid",
          "title": "Shared.FillMap.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.FillMap.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.FillMap.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.FillTypes": {
      "properties": {
        "description": {
          "title": "Shared.FillTypes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.FillTypes",
          "type": "string"
        },
        "name": {
          "title": "Shared.FillTypes",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Shared.FillTypes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Shared.GradientFills": {
      "properties": {
        "angle": {
          "format": "int32",
          "title": "Shared.GradientFills",
          "type": "integer",
          "x-nullable": true
        },
        "fillMapId": {
          "format": "uuid",
          "title": "Shared.GradientFills",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.GradientFills",
          "type": "string"
        },
        "isPath": {
          "title": "Shared.GradientFills",
          "type": "boolean"
        },
        "pathType": {
          "title": "Shared.GradientFills",
          "type": "string",
          "x-nullable": true
        },
        "rotateWithShape": {
          "title": "Shared.GradientFills",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Shared.GradientFills.Details": {
      "properties": {
        "angle": {
          "format": "int32",
          "title": "Shared.GradientFills.Details",
          "type": "integer",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.GradientFills.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.GradientFills.Details",
          "type": "string"
        },
        "fillMap": {
          "$ref": "#/definitions/Shared.FillMap.Details"
        },
        "fillMapId": {
          "format": "uuid",
          "title": "Shared.GradientFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "gradientStops": {
          "items": {
            "$ref": "#/definitions/Shared.GradientStops.Details"
          },
          "title": "Shared.GradientFills.Details",
          "type": "array",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.GradientFills.Details",
          "type": "string"
        },
        "isPath": {
          "title": "Shared.GradientFills.Details",
          "type": "boolean"
        },
        "pathType": {
          "title": "Shared.GradientFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "rotateWithShape": {
          "title": "Shared.GradientFills.Details",
          "type": "boolean"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.GradientFills.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.GradientFills.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.GradientStops": {
      "properties": {
        "gradientFillsId": {
          "format": "uuid",
          "title": "Shared.GradientStops",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.GradientStops",
          "type": "string"
        },
        "position": {
          "format": "int32",
          "title": "Shared.GradientStops",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Shared.GradientStops.Details": {
      "properties": {
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.GradientStops.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.GradientStops.Details",
          "type": "string"
        },
        "gradientFill": {
          "$ref": "#/definitions/Shared.GradientFills.Details"
        },
        "gradientFillsId": {
          "format": "uuid",
          "title": "Shared.GradientStops.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.GradientStops.Details",
          "type": "string"
        },
        "position": {
          "format": "int32",
          "title": "Shared.GradientStops.Details",
          "type": "integer"
        },
        "solidFill": {
          "$ref": "#/definitions/Shared.SolidFills.Details"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.GradientStops.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.GradientStops.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.ImageFills": {
      "properties": {
        "compressionState": {
          "title": "Shared.ImageFills",
          "type": "string",
          "x-nullable": true
        },
        "dpi": {
          "format": "int32",
          "title": "Shared.ImageFills",
          "type": "integer",
          "x-nullable": true
        },
        "effectsJson": {
          "title": "Shared.ImageFills",
          "type": "string",
          "x-nullable": true
        },
        "fillMapId": {
          "format": "uuid",
          "title": "Shared.ImageFills",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.ImageFills",
          "type": "string"
        },
        "rotateWithShape": {
          "title": "Shared.ImageFills",
          "type": "boolean"
        },
        "sourceRectangle": {
          "title": "Shared.ImageFills",
          "type": "string",
          "x-nullable": true
        },
        "stretch": {
          "title": "Shared.ImageFills",
          "type": "boolean"
        },
        "tile": {
          "title": "Shared.ImageFills",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.ImageFills.Details": {
      "properties": {
        "compressionState": {
          "title": "Shared.ImageFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.ImageFills.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.ImageFills.Details",
          "type": "string"
        },
        "dpi": {
          "format": "int32",
          "title": "Shared.ImageFills.Details",
          "type": "integer",
          "x-nullable": true
        },
        "effectsJson": {
          "title": "Shared.ImageFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "fillMap": {
          "$ref": "#/definitions/Shared.FillMap.Details"
        },
        "fillMapId": {
          "format": "uuid",
          "title": "Shared.ImageFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.ImageFills.Details",
          "type": "string"
        },
        "picture": {
          "$ref": "#/definitions/Shared.Pictures.Details"
        },
        "rotateWithShape": {
          "title": "Shared.ImageFills.Details",
          "type": "boolean"
        },
        "sourceRectangle": {
          "title": "Shared.ImageFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "stretch": {
          "title": "Shared.ImageFills.Details",
          "type": "boolean"
        },
        "tile": {
          "title": "Shared.ImageFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.ImageFills.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.ImageFills.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.LineEndSizes": {
      "properties": {
        "description": {
          "title": "Shared.LineEndSizes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.LineEndSizes",
          "type": "string"
        },
        "name": {
          "title": "Shared.LineEndSizes",
          "type": "string",
          "x-nullable": true
        },
        "serializedAs": {
          "title": "Shared.LineEndSizes",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Shared.LineEndSizes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Shared.LineEndTypes": {
      "properties": {
        "description": {
          "title": "Shared.LineEndTypes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.LineEndTypes",
          "type": "string"
        },
        "name": {
          "title": "Shared.LineEndTypes",
          "type": "string",
          "x-nullable": true
        },
        "serializedAs": {
          "title": "Shared.LineEndTypes",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Shared.LineEndTypes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Shared.Lines": {
      "properties": {
        "bLtoTRBorderId": {
          "format": "uuid",
          "title": "Shared.Lines",
          "type": "string",
          "x-nullable": true
        },
        "bottomBorderId": {
          "format": "uuid",
          "title": "Shared.Lines",
          "type": "string",
          "x-nullable": true
        },
        "connectorId": {
          "format": "uuid",
          "title": "Shared.Lines",
          "type": "string",
          "x-nullable": true
        },
        "dashTypeId": {
          "format": "int32",
          "title": "Shared.Lines",
          "type": "integer"
        },
        "headEndHeightId": {
          "format": "int32",
          "title": "Shared.Lines",
          "type": "integer"
        },
        "headEndTypeId": {
          "format": "int32",
          "title": "Shared.Lines",
          "type": "integer"
        },
        "headEndWidthId": {
          "format": "int32",
          "title": "Shared.Lines",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Shared.Lines",
          "type": "string"
        },
        "leftBorderId": {
          "format": "uuid",
          "title": "Shared.Lines",
          "type": "string",
          "x-nullable": true
        },
        "lineMapId": {
          "format": "uuid",
          "title": "Shared.Lines",
          "type": "string",
          "x-nullable": true
        },
        "rightBorderId": {
          "format": "uuid",
          "title": "Shared.Lines",
          "type": "string",
          "x-nullable": true
        },
        "shapeId": {
          "format": "uuid",
          "title": "Shared.Lines",
          "type": "string",
          "x-nullable": true
        },
        "tLtoBRBorderId": {
          "format": "uuid",
          "title": "Shared.Lines",
          "type": "string",
          "x-nullable": true
        },
        "tailEndHeightId": {
          "format": "int32",
          "title": "Shared.Lines",
          "type": "integer"
        },
        "tailEndTypeId": {
          "format": "int32",
          "title": "Shared.Lines",
          "type": "integer"
        },
        "tailEndWidthId": {
          "format": "int32",
          "title": "Shared.Lines",
          "type": "integer"
        },
        "topBorderId": {
          "format": "uuid",
          "title": "Shared.Lines",
          "type": "string",
          "x-nullable": true
        },
        "weight": {
          "format": "int32",
          "title": "Shared.Lines",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Shared.Lines.Details": {
      "properties": {
        "bLtoTRBorder": {
          "$ref": "#/definitions/Table.Borders.Details"
        },
        "bLtoTRBorderId": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string",
          "x-nullable": true
        },
        "bottomBorder": {
          "$ref": "#/definitions/Table.Borders.Details"
        },
        "bottomBorderId": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string",
          "x-nullable": true
        },
        "connectorId": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string",
          "x-nullable": true
        },
        "dashTypeId": {
          "format": "int32",
          "title": "Shared.Lines.Details",
          "type": "integer"
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.Lines.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.Lines.Details",
          "type": "string"
        },
        "headEndHeightId": {
          "format": "int32",
          "title": "Shared.Lines.Details",
          "type": "integer"
        },
        "headEndTypeId": {
          "format": "int32",
          "title": "Shared.Lines.Details",
          "type": "integer"
        },
        "headEndWidthId": {
          "format": "int32",
          "title": "Shared.Lines.Details",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string"
        },
        "leftBorder": {
          "$ref": "#/definitions/Table.Borders.Details"
        },
        "leftBorderId": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string",
          "x-nullable": true
        },
        "lineColorSolidFill": {
          "$ref": "#/definitions/Shared.SolidFills.Details"
        },
        "lineMap": {
          "$ref": "#/definitions/Theme.LineMap.Details"
        },
        "lineMapId": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string",
          "x-nullable": true
        },
        "parentConnector": {
          "$ref": "#/definitions/Slide.Connector.Details"
        },
        "parentShape": {
          "$ref": "#/definitions/Slide.Shapes.Details"
        },
        "rightBorder": {
          "$ref": "#/definitions/Table.Borders.Details"
        },
        "rightBorderId": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string",
          "x-nullable": true
        },
        "shapeId": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string",
          "x-nullable": true
        },
        "tLtoBRBorder": {
          "$ref": "#/definitions/Table.Borders.Details"
        },
        "tLtoBRBorderId": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string",
          "x-nullable": true
        },
        "tailEndHeightId": {
          "format": "int32",
          "title": "Shared.Lines.Details",
          "type": "integer"
        },
        "tailEndTypeId": {
          "format": "int32",
          "title": "Shared.Lines.Details",
          "type": "integer"
        },
        "tailEndWidthId": {
          "format": "int32",
          "title": "Shared.Lines.Details",
          "type": "integer"
        },
        "topBorder": {
          "$ref": "#/definitions/Table.Borders.Details"
        },
        "topBorderId": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.Lines.Details",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "title": "Shared.Lines.Details",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Shared.Paragraph": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Shared.Paragraph",
          "type": "string"
        },
        "number": {
          "format": "int32",
          "title": "Shared.Paragraph",
          "type": "integer"
        },
        "textContainerId": {
          "format": "uuid",
          "title": "Shared.Paragraph",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.Paragraph.Details": {
      "properties": {
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.Paragraph.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.Paragraph.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Shared.Paragraph.Details",
          "type": "string"
        },
        "number": {
          "format": "int32",
          "title": "Shared.Paragraph.Details",
          "type": "integer"
        },
        "text": {
          "items": {
            "$ref": "#/definitions/Shared.Text.Details"
          },
          "title": "Shared.Paragraph.Details",
          "type": "array",
          "x-nullable": true
        },
        "textContainer": {
          "$ref": "#/definitions/Shared.TextContainer.Details"
        },
        "textContainerId": {
          "format": "uuid",
          "title": "Shared.Paragraph.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.Paragraph.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.Paragraph.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.Pictures": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Shared.Pictures",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Shared.Pictures",
          "type": "string",
          "x-nullable": true
        },
        "fileExtension": {
          "title": "Shared.Pictures",
          "type": "string",
          "x-nullable": true
        },
        "graphicsId": {
          "format": "uuid",
          "title": "Shared.Pictures",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.Pictures",
          "type": "string"
        },
        "imageFileBlobUrl": {
          "title": "Shared.Pictures",
          "type": "string",
          "x-nullable": true
        },
        "imageFillsId": {
          "format": "uuid",
          "title": "Shared.Pictures",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "title": "Shared.Pictures",
          "type": "string",
          "x-nullable": true
        },
        "packageUri": {
          "title": "Shared.Pictures",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.Pictures.Details": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Shared.Pictures.Details",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Shared.Pictures.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.Pictures.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.Pictures.Details",
          "type": "string"
        },
        "fileExtension": {
          "title": "Shared.Pictures.Details",
          "type": "string",
          "x-nullable": true
        },
        "graphicsId": {
          "format": "uuid",
          "title": "Shared.Pictures.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.Pictures.Details",
          "type": "string"
        },
        "imageFileBlobUrl": {
          "title": "Shared.Pictures.Details",
          "type": "string",
          "x-nullable": true
        },
        "imageFill": {
          "$ref": "#/definitions/Shared.ImageFills.Details"
        },
        "imageFillsId": {
          "format": "uuid",
          "title": "Shared.Pictures.Details",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "title": "Shared.Pictures.Details",
          "type": "string",
          "x-nullable": true
        },
        "packageUri": {
          "title": "Shared.Pictures.Details",
          "type": "string",
          "x-nullable": true
        },
        "parentGraphic": {
          "$ref": "#/definitions/Slide.Graphics.Details"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.Pictures.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.Pictures.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.SolidFills": {
      "properties": {
        "colorTypeId": {
          "format": "int32",
          "title": "Shared.SolidFills",
          "type": "integer",
          "x-nullable": true
        },
        "fillMapId": {
          "format": "uuid",
          "title": "Shared.SolidFills",
          "type": "string",
          "x-nullable": true
        },
        "hexValue": {
          "title": "Shared.SolidFills",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.SolidFills",
          "type": "string"
        },
        "isUserColor": {
          "title": "Shared.SolidFills",
          "type": "boolean"
        },
        "parentGradientStopId": {
          "format": "uuid",
          "title": "Shared.SolidFills",
          "type": "string",
          "x-nullable": true
        },
        "parentLineId": {
          "format": "uuid",
          "title": "Shared.SolidFills",
          "type": "string",
          "x-nullable": true
        },
        "parentTextId": {
          "format": "uuid",
          "title": "Shared.SolidFills",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.SolidFills.Details": {
      "properties": {
        "colorTransformations": {
          "$ref": "#/definitions/Shared.ColorTransformations.Details"
        },
        "colorTypeId": {
          "format": "int32",
          "title": "Shared.SolidFills.Details",
          "type": "integer",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.SolidFills.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.SolidFills.Details",
          "type": "string"
        },
        "fillMapId": {
          "format": "uuid",
          "title": "Shared.SolidFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "hexValue": {
          "title": "Shared.SolidFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.SolidFills.Details",
          "type": "string"
        },
        "isUserColor": {
          "title": "Shared.SolidFills.Details",
          "type": "boolean"
        },
        "parentFillMap": {
          "$ref": "#/definitions/Shared.FillMap.Details"
        },
        "parentGradientStop": {
          "$ref": "#/definitions/Shared.GradientStops.Details"
        },
        "parentGradientStopId": {
          "format": "uuid",
          "title": "Shared.SolidFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "parentLine": {
          "$ref": "#/definitions/Shared.Lines.Details"
        },
        "parentLineId": {
          "format": "uuid",
          "title": "Shared.SolidFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "parentText": {
          "$ref": "#/definitions/Shared.Text.Details"
        },
        "parentTextId": {
          "format": "uuid",
          "title": "Shared.SolidFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.SolidFills.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.SolidFills.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.Text": {
      "properties": {
        "colorSolidFillsId": {
          "format": "uuid",
          "title": "Shared.Text",
          "type": "string",
          "x-nullable": true
        },
        "font": {
          "title": "Shared.Text",
          "type": "string",
          "x-nullable": true
        },
        "fontSize": {
          "format": "int32",
          "title": "Shared.Text",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.Text",
          "type": "string"
        },
        "isBold": {
          "title": "Shared.Text",
          "type": "boolean"
        },
        "isItalic": {
          "title": "Shared.Text",
          "type": "boolean"
        },
        "isThemeFont": {
          "title": "Shared.Text",
          "type": "boolean"
        },
        "isUnderline": {
          "title": "Shared.Text",
          "type": "boolean"
        },
        "paragraphId": {
          "format": "uuid",
          "title": "Shared.Text",
          "type": "string",
          "x-nullable": true
        },
        "rawText": {
          "title": "Shared.Text",
          "type": "string",
          "x-nullable": true
        },
        "sequence": {
          "format": "int32",
          "title": "Shared.Text",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Shared.Text.Details": {
      "properties": {
        "colorSolidFill": {
          "$ref": "#/definitions/Shared.SolidFills.Details"
        },
        "colorSolidFillsId": {
          "format": "uuid",
          "title": "Shared.Text.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.Text.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.Text.Details",
          "type": "string"
        },
        "font": {
          "title": "Shared.Text.Details",
          "type": "string",
          "x-nullable": true
        },
        "fontSize": {
          "format": "int32",
          "title": "Shared.Text.Details",
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.Text.Details",
          "type": "string"
        },
        "isBold": {
          "title": "Shared.Text.Details",
          "type": "boolean"
        },
        "isItalic": {
          "title": "Shared.Text.Details",
          "type": "boolean"
        },
        "isThemeFont": {
          "title": "Shared.Text.Details",
          "type": "boolean"
        },
        "isUnderline": {
          "title": "Shared.Text.Details",
          "type": "boolean"
        },
        "paragraph": {
          "$ref": "#/definitions/Shared.Paragraph.Details"
        },
        "paragraphId": {
          "format": "uuid",
          "title": "Shared.Text.Details",
          "type": "string",
          "x-nullable": true
        },
        "rawText": {
          "title": "Shared.Text.Details",
          "type": "string",
          "x-nullable": true
        },
        "sequence": {
          "format": "int32",
          "title": "Shared.Text.Details",
          "type": "integer"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.Text.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.Text.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Shared.TextContainer": {
      "properties": {
        "axisId": {
          "format": "uuid",
          "title": "Shared.TextContainer",
          "type": "string",
          "x-nullable": true
        },
        "chartId": {
          "format": "uuid",
          "title": "Shared.TextContainer",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Shared.TextContainer",
          "type": "string"
        },
        "outerXml": {
          "title": "Shared.TextContainer",
          "type": "string",
          "x-nullable": true
        },
        "shapeId": {
          "format": "uuid",
          "title": "Shared.TextContainer",
          "type": "string",
          "x-nullable": true
        },
        "tableCellId": {
          "format": "uuid",
          "title": "Shared.TextContainer",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Shared.TextContainer.Details": {
      "properties": {
        "axis": {
          "$ref": "#/definitions/Chart.Axes.Details"
        },
        "axisId": {
          "format": "uuid",
          "title": "Shared.TextContainer.Details",
          "type": "string",
          "x-nullable": true
        },
        "chart": {
          "$ref": "#/definitions/Chart.Charts.Details"
        },
        "chartId": {
          "format": "uuid",
          "title": "Shared.TextContainer.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Shared.TextContainer.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Shared.TextContainer.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Shared.TextContainer.Details",
          "type": "string"
        },
        "outerXml": {
          "title": "Shared.TextContainer.Details",
          "type": "string",
          "x-nullable": true
        },
        "paragraphs": {
          "items": {
            "$ref": "#/definitions/Shared.Paragraph.Details"
          },
          "title": "Shared.TextContainer.Details",
          "type": "array",
          "x-nullable": true
        },
        "parentShape": {
          "$ref": "#/definitions/Slide.Shapes.Details"
        },
        "shapeId": {
          "format": "uuid",
          "title": "Shared.TextContainer.Details",
          "type": "string",
          "x-nullable": true
        },
        "tableCell": {
          "$ref": "#/definitions/Table.Cells.Details"
        },
        "tableCellId": {
          "format": "uuid",
          "title": "Shared.TextContainer.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Shared.TextContainer.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Shared.TextContainer.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Slide.ColorMaps": {
      "properties": {
        "accent1": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "accent2": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "accent3": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "accent4": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "accent5": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "accent6": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "background1": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "background2": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "followedHyperlink": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "hyperlink": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.ColorMaps",
          "type": "string"
        },
        "slideMasterId": {
          "format": "uuid",
          "title": "Slide.ColorMaps",
          "type": "string",
          "x-nullable": true
        },
        "text1": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        },
        "text2": {
          "format": "int32",
          "title": "Slide.ColorMaps",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Slide.ColorMaps.Details": {
      "properties": {
        "accent1": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "accent2": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "accent3": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "accent4": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "accent5": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "accent6": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "background1": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "background2": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.ColorMaps.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.ColorMaps.Details",
          "type": "string"
        },
        "followedHyperlink": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "hyperlink": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.ColorMaps.Details",
          "type": "string"
        },
        "slideMaster": {
          "$ref": "#/definitions/Slide.SlideMasters.Details"
        },
        "slideMasterId": {
          "format": "uuid",
          "title": "Slide.ColorMaps.Details",
          "type": "string",
          "x-nullable": true
        },
        "text1": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "text2": {
          "format": "int32",
          "title": "Slide.ColorMaps.Details",
          "type": "integer"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.ColorMaps.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.ColorMaps.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Slide.Connector": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.Connector",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.Connector",
          "type": "string",
          "x-nullable": true
        },
        "endConnectionIdx": {
          "format": "int32",
          "title": "Slide.Connector",
          "type": "integer"
        },
        "endConnectionShapeId": {
          "format": "uuid",
          "title": "Slide.Connector",
          "type": "string",
          "x-nullable": true
        },
        "flipHorizontal": {
          "title": "Slide.Connector",
          "type": "boolean"
        },
        "flipVertical": {
          "title": "Slide.Connector",
          "type": "boolean"
        },
        "freeFormPathXml": {
          "title": "Slide.Connector",
          "type": "string",
          "x-nullable": true
        },
        "groupElementsId": {
          "format": "uuid",
          "title": "Slide.Connector",
          "type": "string",
          "x-nullable": true
        },
        "hidden": {
          "title": "Slide.Connector",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.Connector",
          "type": "string"
        },
        "isThemeEffect": {
          "title": "Slide.Connector",
          "type": "boolean"
        },
        "isThemeFill": {
          "title": "Slide.Connector",
          "type": "boolean"
        },
        "isThemeLine": {
          "title": "Slide.Connector",
          "type": "boolean"
        },
        "name": {
          "title": "Slide.Connector",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.Connector",
          "type": "integer"
        },
        "packageUri": {
          "title": "Slide.Connector",
          "type": "string",
          "x-nullable": true
        },
        "presetTypeId": {
          "title": "Slide.Connector",
          "type": "string",
          "x-nullable": true
        },
        "rotation": {
          "format": "int32",
          "title": "Slide.Connector",
          "type": "integer"
        },
        "startConnectionIdx": {
          "format": "int32",
          "title": "Slide.Connector",
          "type": "integer"
        },
        "startConnectionShapeId": {
          "format": "uuid",
          "title": "Slide.Connector",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Slide.Connector",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Slide.Connector.Details": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.Connector.Details",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.Connector.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.Connector.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.Connector.Details",
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/Shared.Effects.Details"
        },
        "endConnectionIdx": {
          "format": "int32",
          "title": "Slide.Connector.Details",
          "type": "integer"
        },
        "endConnectionShape": {
          "$ref": "#/definitions/Slide.Shapes.Details"
        },
        "endConnectionShapeId": {
          "format": "uuid",
          "title": "Slide.Connector.Details",
          "type": "string",
          "x-nullable": true
        },
        "fillMap": {
          "$ref": "#/definitions/Shared.FillMap.Details"
        },
        "flipHorizontal": {
          "title": "Slide.Connector.Details",
          "type": "boolean"
        },
        "flipVertical": {
          "title": "Slide.Connector.Details",
          "type": "boolean"
        },
        "freeFormPathXml": {
          "title": "Slide.Connector.Details",
          "type": "string",
          "x-nullable": true
        },
        "groupElement": {
          "$ref": "#/definitions/Slide.GroupElements.Details"
        },
        "groupElementsId": {
          "format": "uuid",
          "title": "Slide.Connector.Details",
          "type": "string",
          "x-nullable": true
        },
        "hidden": {
          "title": "Slide.Connector.Details",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.Connector.Details",
          "type": "string"
        },
        "isThemeEffect": {
          "title": "Slide.Connector.Details",
          "type": "boolean"
        },
        "isThemeFill": {
          "title": "Slide.Connector.Details",
          "type": "boolean"
        },
        "isThemeLine": {
          "title": "Slide.Connector.Details",
          "type": "boolean"
        },
        "line": {
          "$ref": "#/definitions/Shared.Lines.Details"
        },
        "name": {
          "title": "Slide.Connector.Details",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.Connector.Details",
          "type": "integer"
        },
        "packageUri": {
          "title": "Slide.Connector.Details",
          "type": "string",
          "x-nullable": true
        },
        "presetTypeId": {
          "title": "Slide.Connector.Details",
          "type": "string",
          "x-nullable": true
        },
        "rotation": {
          "format": "int32",
          "title": "Slide.Connector.Details",
          "type": "integer"
        },
        "startConnectionIdx": {
          "format": "int32",
          "title": "Slide.Connector.Details",
          "type": "integer"
        },
        "startConnectionShape": {
          "$ref": "#/definitions/Slide.Shapes.Details"
        },
        "startConnectionShapeId": {
          "format": "uuid",
          "title": "Slide.Connector.Details",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Slide.Connector.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.Connector.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.Connector.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Slide.GraphicTypes": {
      "properties": {
        "description": {
          "title": "Slide.GraphicTypes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Slide.GraphicTypes",
          "type": "string"
        },
        "name": {
          "title": "Slide.GraphicTypes",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Slide.GraphicTypes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Slide.Graphics": {
      "properties": {
        "graphicTypeId": {
          "format": "int32",
          "title": "Slide.Graphics",
          "type": "integer"
        },
        "groupElementsId": {
          "format": "uuid",
          "title": "Slide.Graphics",
          "type": "string",
          "x-nullable": true
        },
        "height": {
          "format": "int32",
          "title": "Slide.Graphics",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.Graphics",
          "type": "string"
        },
        "name": {
          "title": "Slide.Graphics",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.Graphics",
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "title": "Slide.Graphics",
          "type": "integer"
        },
        "xOffset": {
          "format": "int32",
          "title": "Slide.Graphics",
          "type": "integer"
        },
        "yOffset": {
          "format": "int32",
          "title": "Slide.Graphics",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Slide.Graphics.Details": {
      "description": "The graphics class provides a bridge between the Slides and \r\nlower level models including Charts, Tables, Pictures, and SmartArts",
      "properties": {
        "chart": {
          "$ref": "#/definitions/Chart.Charts.Details"
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.Graphics.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.Graphics.Details",
          "type": "string"
        },
        "graphicTypeId": {
          "format": "int32",
          "title": "Slide.Graphics.Details",
          "type": "integer"
        },
        "groupElement": {
          "$ref": "#/definitions/Slide.GroupElements.Details"
        },
        "groupElementsId": {
          "description": "Foreign key to the GroupElements object",
          "format": "uuid",
          "title": "Slide.Graphics.Details",
          "type": "string",
          "x-nullable": true
        },
        "height": {
          "format": "int32",
          "title": "Slide.Graphics.Details",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.Graphics.Details",
          "type": "string"
        },
        "name": {
          "title": "Slide.Graphics.Details",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.Graphics.Details",
          "type": "integer"
        },
        "picture": {
          "$ref": "#/definitions/Shared.Pictures.Details"
        },
        "smartArt": {
          "$ref": "#/definitions/Slide.SmartArts.Details"
        },
        "table": {
          "$ref": "#/definitions/Table.Tables.Details"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.Graphics.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.Graphics.Details",
          "type": "string"
        },
        "width": {
          "format": "int32",
          "title": "Slide.Graphics.Details",
          "type": "integer"
        },
        "xOffset": {
          "format": "int32",
          "title": "Slide.Graphics.Details",
          "type": "integer"
        },
        "yOffset": {
          "format": "int32",
          "title": "Slide.Graphics.Details",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Slide.GroupElementTypes": {
      "properties": {
        "description": {
          "title": "Slide.GroupElementTypes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Slide.GroupElementTypes",
          "type": "string"
        },
        "name": {
          "title": "Slide.GroupElementTypes",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Slide.GroupElementTypes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Slide.GroupElementTypes.Details": {
      "properties": {
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.GroupElementTypes.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.GroupElementTypes.Details",
          "type": "string"
        },
        "description": {
          "title": "Slide.GroupElementTypes.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Slide.GroupElementTypes.Details",
          "type": "string"
        },
        "name": {
          "title": "Slide.GroupElementTypes.Details",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Slide.GroupElementTypes.Details",
          "type": "integer"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.GroupElementTypes.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.GroupElementTypes.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Slide.GroupElements": {
      "properties": {
        "groupElementTypeId": {
          "format": "int32",
          "title": "Slide.GroupElements",
          "type": "integer"
        },
        "groupElementTypePk": {
          "format": "uuid",
          "title": "Slide.GroupElements",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Slide.GroupElements",
          "type": "string"
        },
        "parentGroupElementId": {
          "format": "uuid",
          "title": "Slide.GroupElements",
          "type": "string",
          "x-nullable": true
        },
        "shapeTreeId": {
          "format": "uuid",
          "title": "Slide.GroupElements",
          "type": "string",
          "x-nullable": true
        },
        "ultimateParentShapeTreeId": {
          "format": "uuid",
          "title": "Slide.GroupElements",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Slide.GroupElements.Details": {
      "properties": {
        "childGroupElements": {
          "items": {
            "$ref": "#/definitions/Slide.GroupElements.Details"
          },
          "title": "Slide.GroupElements.Details",
          "type": "array",
          "x-nullable": true
        },
        "connector": {
          "$ref": "#/definitions/Slide.Connector.Details"
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.GroupElements.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.GroupElements.Details",
          "type": "string"
        },
        "graphic": {
          "$ref": "#/definitions/Slide.Graphics.Details"
        },
        "group": {
          "$ref": "#/definitions/Slide.Groups.Details"
        },
        "groupElementTypeId": {
          "format": "int32",
          "title": "Slide.GroupElements.Details",
          "type": "integer"
        },
        "groupElementTypePk": {
          "format": "uuid",
          "title": "Slide.GroupElements.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Slide.GroupElements.Details",
          "type": "string"
        },
        "parentGroupElement": {
          "$ref": "#/definitions/Slide.GroupElements.Details"
        },
        "parentGroupElementId": {
          "format": "uuid",
          "title": "Slide.GroupElements.Details",
          "type": "string",
          "x-nullable": true
        },
        "shape": {
          "$ref": "#/definitions/Slide.Shapes.Details"
        },
        "shapeTree": {
          "$ref": "#/definitions/Slide.ShapeTrees.Details"
        },
        "shapeTreeId": {
          "format": "uuid",
          "title": "Slide.GroupElements.Details",
          "type": "string",
          "x-nullable": true
        },
        "typeInfo": {
          "$ref": "#/definitions/Slide.GroupElementTypes.Details"
        },
        "ultimateParentShapeTreeId": {
          "format": "uuid",
          "title": "Slide.GroupElements.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.GroupElements.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.GroupElements.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Slide.Groups": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.Groups",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.Groups",
          "type": "string",
          "x-nullable": true
        },
        "groupElementId": {
          "format": "uuid",
          "title": "Slide.Groups",
          "type": "string",
          "x-nullable": true
        },
        "hidden": {
          "title": "Slide.Groups",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.Groups",
          "type": "string"
        },
        "name": {
          "title": "Slide.Groups",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.Groups",
          "type": "integer"
        },
        "packageUri": {
          "title": "Slide.Groups",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Slide.Groups",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "title": "Slide.Groups",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Slide.Groups.Details": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.Groups.Details",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.Groups.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.Groups.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.Groups.Details",
          "type": "string"
        },
        "groupElement": {
          "$ref": "#/definitions/Slide.GroupElements.Details"
        },
        "groupElementId": {
          "format": "uuid",
          "title": "Slide.Groups.Details",
          "type": "string",
          "x-nullable": true
        },
        "hidden": {
          "title": "Slide.Groups.Details",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.Groups.Details",
          "type": "string"
        },
        "name": {
          "title": "Slide.Groups.Details",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.Groups.Details",
          "type": "integer"
        },
        "packageUri": {
          "title": "Slide.Groups.Details",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Slide.Groups.Details",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "title": "Slide.Groups.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.Groups.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.Groups.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Slide.ShapeTrees": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.ShapeTrees",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.ShapeTrees",
          "type": "string",
          "x-nullable": true
        },
        "groupElementId": {
          "format": "uuid",
          "title": "Slide.ShapeTrees",
          "type": "string",
          "x-nullable": true
        },
        "hidden": {
          "title": "Slide.ShapeTrees",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.ShapeTrees",
          "type": "string"
        },
        "name": {
          "title": "Slide.ShapeTrees",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.ShapeTrees",
          "type": "integer"
        },
        "packageUri": {
          "title": "Slide.ShapeTrees",
          "type": "string",
          "x-nullable": true
        },
        "slideId": {
          "format": "uuid",
          "title": "Slide.ShapeTrees",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Slide.ShapeTrees",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "title": "Slide.ShapeTrees",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Slide.ShapeTrees.Details": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.ShapeTrees.Details",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.ShapeTrees.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.ShapeTrees.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.ShapeTrees.Details",
          "type": "string"
        },
        "groupElement": {
          "$ref": "#/definitions/Slide.GroupElements.Details"
        },
        "groupElementId": {
          "format": "uuid",
          "title": "Slide.ShapeTrees.Details",
          "type": "string",
          "x-nullable": true
        },
        "groupElements": {
          "items": {
            "$ref": "#/definitions/Slide.GroupElements.Details"
          },
          "title": "Slide.ShapeTrees.Details",
          "type": "array",
          "x-nullable": true
        },
        "hidden": {
          "title": "Slide.ShapeTrees.Details",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.ShapeTrees.Details",
          "type": "string"
        },
        "name": {
          "title": "Slide.ShapeTrees.Details",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.ShapeTrees.Details",
          "type": "integer"
        },
        "packageUri": {
          "title": "Slide.ShapeTrees.Details",
          "type": "string",
          "x-nullable": true
        },
        "slide": {
          "$ref": "#/definitions/Slide.Slides.Details"
        },
        "slideId": {
          "format": "uuid",
          "title": "Slide.ShapeTrees.Details",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Slide.ShapeTrees.Details",
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "title": "Slide.ShapeTrees.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.ShapeTrees.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.ShapeTrees.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Slide.Shapes": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.Shapes",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.Shapes",
          "type": "string",
          "x-nullable": true
        },
        "flipHorizontal": {
          "title": "Slide.Shapes",
          "type": "boolean"
        },
        "flipVertical": {
          "title": "Slide.Shapes",
          "type": "boolean"
        },
        "freeFormPathXml": {
          "title": "Slide.Shapes",
          "type": "string",
          "x-nullable": true
        },
        "groupElementsId": {
          "format": "uuid",
          "title": "Slide.Shapes",
          "type": "string",
          "x-nullable": true
        },
        "height": {
          "format": "int32",
          "title": "Slide.Shapes",
          "type": "integer"
        },
        "hidden": {
          "title": "Slide.Shapes",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.Shapes",
          "type": "string"
        },
        "isThemeEffect": {
          "title": "Slide.Shapes",
          "type": "boolean"
        },
        "isThemeFill": {
          "title": "Slide.Shapes",
          "type": "boolean"
        },
        "isThemeLine": {
          "title": "Slide.Shapes",
          "type": "boolean"
        },
        "name": {
          "title": "Slide.Shapes",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.Shapes",
          "type": "integer"
        },
        "packageUri": {
          "title": "Slide.Shapes",
          "type": "string",
          "x-nullable": true
        },
        "presetTypeId": {
          "title": "Slide.Shapes",
          "type": "string",
          "x-nullable": true
        },
        "rotation": {
          "format": "int32",
          "title": "Slide.Shapes",
          "type": "integer"
        },
        "svgBlobUrl": {
          "title": "Slide.Shapes",
          "type": "string",
          "x-nullable": true
        },
        "width": {
          "format": "int32",
          "title": "Slide.Shapes",
          "type": "integer"
        },
        "xOffset": {
          "format": "int32",
          "title": "Slide.Shapes",
          "type": "integer"
        },
        "yOffset": {
          "format": "int32",
          "title": "Slide.Shapes",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Slide.Shapes.Details": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.Shapes.Details",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.Shapes.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.Shapes.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.Shapes.Details",
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/Shared.Effects.Details"
        },
        "fillMap": {
          "$ref": "#/definitions/Shared.FillMap.Details"
        },
        "flipHorizontal": {
          "title": "Slide.Shapes.Details",
          "type": "boolean"
        },
        "flipVertical": {
          "title": "Slide.Shapes.Details",
          "type": "boolean"
        },
        "freeFormPathXml": {
          "title": "Slide.Shapes.Details",
          "type": "string",
          "x-nullable": true
        },
        "groupElement": {
          "$ref": "#/definitions/Slide.GroupElements.Details"
        },
        "groupElementsId": {
          "format": "uuid",
          "title": "Slide.Shapes.Details",
          "type": "string",
          "x-nullable": true
        },
        "height": {
          "format": "int32",
          "title": "Slide.Shapes.Details",
          "type": "integer"
        },
        "hidden": {
          "title": "Slide.Shapes.Details",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.Shapes.Details",
          "type": "string"
        },
        "isThemeEffect": {
          "title": "Slide.Shapes.Details",
          "type": "boolean"
        },
        "isThemeFill": {
          "title": "Slide.Shapes.Details",
          "type": "boolean"
        },
        "isThemeLine": {
          "title": "Slide.Shapes.Details",
          "type": "boolean"
        },
        "line": {
          "$ref": "#/definitions/Shared.Lines.Details"
        },
        "name": {
          "title": "Slide.Shapes.Details",
          "type": "string",
          "x-nullable": true
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.Shapes.Details",
          "type": "integer"
        },
        "packageUri": {
          "title": "Slide.Shapes.Details",
          "type": "string",
          "x-nullable": true
        },
        "presetTypeId": {
          "title": "Slide.Shapes.Details",
          "type": "string",
          "x-nullable": true
        },
        "rotation": {
          "format": "int32",
          "title": "Slide.Shapes.Details",
          "type": "integer"
        },
        "svgBlobUrl": {
          "title": "Slide.Shapes.Details",
          "type": "string",
          "x-nullable": true
        },
        "textContainer": {
          "$ref": "#/definitions/Shared.TextContainer.Details"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.Shapes.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.Shapes.Details",
          "type": "string"
        },
        "width": {
          "format": "int32",
          "title": "Slide.Shapes.Details",
          "type": "integer"
        },
        "xOffset": {
          "format": "int32",
          "title": "Slide.Shapes.Details",
          "type": "integer"
        },
        "yOffset": {
          "format": "int32",
          "title": "Slide.Shapes.Details",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Slide.SlideMasters": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Slide.SlideMasters",
          "type": "string"
        },
        "slideId": {
          "format": "uuid",
          "title": "Slide.SlideMasters",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Slide.SlideMasters.Details": {
      "properties": {
        "colorMap": {
          "$ref": "#/definitions/Slide.ColorMaps.Details"
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.SlideMasters.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.SlideMasters.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Slide.SlideMasters.Details",
          "type": "string"
        },
        "parentSlide": {
          "$ref": "#/definitions/Slide.Slides.Details"
        },
        "slideId": {
          "format": "uuid",
          "title": "Slide.SlideMasters.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.SlideMasters.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.SlideMasters.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Slide.Slides": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.Slides",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.Slides",
          "type": "string",
          "x-nullable": true
        },
        "documentId": {
          "format": "uuid",
          "title": "Slide.Slides",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Slide.Slides",
          "type": "string"
        },
        "name": {
          "title": "Slide.Slides",
          "type": "string",
          "x-nullable": true
        },
        "number": {
          "format": "int32",
          "title": "Slide.Slides",
          "type": "integer"
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.Slides",
          "type": "integer"
        },
        "packageUri": {
          "title": "Slide.Slides",
          "type": "string",
          "x-nullable": true
        },
        "slideDocumentUrl": {
          "title": "Slide.Slides",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Slide.Slides",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Slide.Slides.Details": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.Slides.Details",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.Slides.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.Slides.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.Slides.Details",
          "type": "string"
        },
        "document": {
          "$ref": "#/definitions/Document.Details"
        },
        "documentId": {
          "format": "uuid",
          "title": "Slide.Slides.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Slide.Slides.Details",
          "type": "string"
        },
        "name": {
          "title": "Slide.Slides.Details",
          "type": "string",
          "x-nullable": true
        },
        "number": {
          "format": "int32",
          "title": "Slide.Slides.Details",
          "type": "integer"
        },
        "ooxmlId": {
          "format": "int32",
          "title": "Slide.Slides.Details",
          "type": "integer"
        },
        "packageUri": {
          "title": "Slide.Slides.Details",
          "type": "string",
          "x-nullable": true
        },
        "shapeTree": {
          "$ref": "#/definitions/Slide.ShapeTrees.Details"
        },
        "slideDocumentUrl": {
          "title": "Slide.Slides.Details",
          "type": "string",
          "x-nullable": true
        },
        "slideMaster": {
          "$ref": "#/definitions/Slide.SlideMasters.Details"
        },
        "svgBlobUrl": {
          "title": "Slide.Slides.Details",
          "type": "string",
          "x-nullable": true
        },
        "theme": {
          "$ref": "#/definitions/Theme.Themes.Details"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.Slides.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.Slides.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Slide.SmartArts": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.SmartArts",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.SmartArts",
          "type": "string",
          "x-nullable": true
        },
        "graphicsId": {
          "format": "uuid",
          "title": "Slide.SmartArts",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Slide.SmartArts",
          "type": "string"
        },
        "name": {
          "title": "Slide.SmartArts",
          "type": "string",
          "x-nullable": true
        },
        "packageUri": {
          "title": "Slide.SmartArts",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Slide.SmartArts",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Slide.SmartArts.Details": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Slide.SmartArts.Details",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Slide.SmartArts.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Slide.SmartArts.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Slide.SmartArts.Details",
          "type": "string"
        },
        "graphicsId": {
          "format": "uuid",
          "title": "Slide.SmartArts.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Slide.SmartArts.Details",
          "type": "string"
        },
        "name": {
          "title": "Slide.SmartArts.Details",
          "type": "string",
          "x-nullable": true
        },
        "packageUri": {
          "title": "Slide.SmartArts.Details",
          "type": "string",
          "x-nullable": true
        },
        "parentGraphic": {
          "$ref": "#/definitions/Slide.Graphics.Details"
        },
        "svgBlobUrl": {
          "title": "Slide.SmartArts.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Slide.SmartArts.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Slide.SmartArts.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Table.Borders": {
      "properties": {
        "cellId": {
          "format": "uuid",
          "title": "Table.Borders",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Table.Borders",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Table.Borders.Details": {
      "properties": {
        "bLtoTR": {
          "$ref": "#/definitions/Shared.Lines.Details"
        },
        "bottom": {
          "$ref": "#/definitions/Shared.Lines.Details"
        },
        "cell": {
          "$ref": "#/definitions/Table.Cells.Details"
        },
        "cellId": {
          "format": "uuid",
          "title": "Table.Borders.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Table.Borders.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Table.Borders.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Table.Borders.Details",
          "type": "string"
        },
        "left": {
          "$ref": "#/definitions/Shared.Lines.Details"
        },
        "right": {
          "$ref": "#/definitions/Shared.Lines.Details"
        },
        "tLtoBR": {
          "$ref": "#/definitions/Shared.Lines.Details"
        },
        "top": {
          "$ref": "#/definitions/Shared.Lines.Details"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Table.Borders.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Table.Borders.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Table.Cells": {
      "properties": {
        "columnId": {
          "format": "uuid",
          "title": "Table.Cells",
          "type": "string",
          "x-nullable": true
        },
        "columnSpan": {
          "format": "int32",
          "title": "Table.Cells",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Table.Cells",
          "type": "string"
        },
        "isMergedHorozontal": {
          "title": "Table.Cells",
          "type": "boolean"
        },
        "isMergedVertical": {
          "title": "Table.Cells",
          "type": "boolean"
        },
        "rowId": {
          "format": "uuid",
          "title": "Table.Cells",
          "type": "string",
          "x-nullable": true
        },
        "rowSpan": {
          "format": "int32",
          "title": "Table.Cells",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Table.Cells.Details": {
      "properties": {
        "border": {
          "$ref": "#/definitions/Table.Borders.Details"
        },
        "column": {
          "$ref": "#/definitions/Table.Columns.Details"
        },
        "columnId": {
          "format": "uuid",
          "title": "Table.Cells.Details",
          "type": "string",
          "x-nullable": true
        },
        "columnSpan": {
          "format": "int32",
          "title": "Table.Cells.Details",
          "type": "integer"
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Table.Cells.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Table.Cells.Details",
          "type": "string"
        },
        "fillMap": {
          "$ref": "#/definitions/Shared.FillMap.Details"
        },
        "id": {
          "format": "uuid",
          "title": "Table.Cells.Details",
          "type": "string"
        },
        "isMergedHorozontal": {
          "title": "Table.Cells.Details",
          "type": "boolean"
        },
        "isMergedVertical": {
          "title": "Table.Cells.Details",
          "type": "boolean"
        },
        "row": {
          "$ref": "#/definitions/Table.Rows.Details"
        },
        "rowId": {
          "format": "uuid",
          "title": "Table.Cells.Details",
          "type": "string",
          "x-nullable": true
        },
        "rowSpan": {
          "format": "int32",
          "title": "Table.Cells.Details",
          "type": "integer"
        },
        "textContainer": {
          "$ref": "#/definitions/Shared.TextContainer.Details"
        },
        "userCreated": {
          "format": "uuid",
          "title": "Table.Cells.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Table.Cells.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Table.Columns": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Table.Columns",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "title": "Table.Columns",
          "type": "integer"
        },
        "tableId": {
          "format": "uuid",
          "title": "Table.Columns",
          "type": "string",
          "x-nullable": true
        },
        "width": {
          "format": "int64",
          "title": "Table.Columns",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Table.Columns.Details": {
      "properties": {
        "cells": {
          "items": {
            "$ref": "#/definitions/Table.Cells.Details"
          },
          "title": "Table.Columns.Details",
          "type": "array",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Table.Columns.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Table.Columns.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Table.Columns.Details",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "title": "Table.Columns.Details",
          "type": "integer"
        },
        "table": {
          "$ref": "#/definitions/Table.Tables.Details"
        },
        "tableId": {
          "format": "uuid",
          "title": "Table.Columns.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Table.Columns.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Table.Columns.Details",
          "type": "string"
        },
        "width": {
          "format": "int64",
          "title": "Table.Columns.Details",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Table.Rows": {
      "properties": {
        "height": {
          "format": "int64",
          "title": "Table.Rows",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Table.Rows",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "title": "Table.Rows",
          "type": "integer"
        },
        "tableId": {
          "format": "uuid",
          "title": "Table.Rows",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Table.Rows.Details": {
      "properties": {
        "cells": {
          "items": {
            "$ref": "#/definitions/Table.Cells.Details"
          },
          "title": "Table.Rows.Details",
          "type": "array",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Table.Rows.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Table.Rows.Details",
          "type": "string"
        },
        "height": {
          "format": "int64",
          "title": "Table.Rows.Details",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "title": "Table.Rows.Details",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "title": "Table.Rows.Details",
          "type": "integer"
        },
        "table": {
          "$ref": "#/definitions/Table.Tables.Details"
        },
        "tableId": {
          "format": "uuid",
          "title": "Table.Rows.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Table.Rows.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Table.Rows.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Table.TableDataDTO": {
      "properties": {
        "tableData": {
          "items": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "array",
          "x-nullable": true
        },
        "tableId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Table.Tables": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Table.Tables",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Table.Tables",
          "type": "string",
          "x-nullable": true
        },
        "hasStylePart": {
          "title": "Table.Tables",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "title": "Table.Tables",
          "type": "string"
        },
        "name": {
          "title": "Table.Tables",
          "type": "string",
          "x-nullable": true
        },
        "packageUri": {
          "title": "Table.Tables",
          "type": "string",
          "x-nullable": true
        },
        "parentGraphicId": {
          "format": "uuid",
          "title": "Table.Tables",
          "type": "string",
          "x-nullable": true
        },
        "stylePartOuterXml": {
          "title": "Table.Tables",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Table.Tables",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Table.Tables.Details": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Table.Tables.Details",
          "type": "string",
          "x-nullable": true
        },
        "cells": {
          "items": {
            "$ref": "#/definitions/Table.Cells.Details"
          },
          "title": "Table.Tables.Details",
          "type": "array",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Table.Tables.Details",
          "type": "string",
          "x-nullable": true
        },
        "columns": {
          "items": {
            "$ref": "#/definitions/Table.Columns.Details"
          },
          "title": "Table.Tables.Details",
          "type": "array",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Table.Tables.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Table.Tables.Details",
          "type": "string"
        },
        "hasStylePart": {
          "title": "Table.Tables.Details",
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "title": "Table.Tables.Details",
          "type": "string"
        },
        "name": {
          "title": "Table.Tables.Details",
          "type": "string",
          "x-nullable": true
        },
        "packageUri": {
          "title": "Table.Tables.Details",
          "type": "string",
          "x-nullable": true
        },
        "parentGraphic": {
          "$ref": "#/definitions/Slide.Graphics.Details"
        },
        "parentGraphicId": {
          "format": "uuid",
          "title": "Table.Tables.Details",
          "type": "string",
          "x-nullable": true
        },
        "rows": {
          "items": {
            "$ref": "#/definitions/Table.Rows.Details"
          },
          "title": "Table.Tables.Details",
          "type": "array",
          "x-nullable": true
        },
        "stylePartOuterXml": {
          "title": "Table.Tables.Details",
          "type": "string",
          "x-nullable": true
        },
        "svgBlobUrl": {
          "title": "Table.Tables.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Table.Tables.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Table.Tables.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Theme.BackgroundFills": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Theme.BackgroundFills",
          "type": "string"
        },
        "intensityId": {
          "format": "int32",
          "title": "Theme.BackgroundFills",
          "type": "integer"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.BackgroundFills",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Theme.BackgroundFills.Details": {
      "properties": {
        "dateCreated": {
          "format": "date-time",
          "title": "Theme.BackgroundFills.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Theme.BackgroundFills.Details",
          "type": "string"
        },
        "fillMap": {
          "$ref": "#/definitions/Shared.FillMap.Details"
        },
        "id": {
          "format": "uuid",
          "title": "Theme.BackgroundFills.Details",
          "type": "string"
        },
        "intensityId": {
          "format": "int32",
          "title": "Theme.BackgroundFills.Details",
          "type": "integer"
        },
        "theme": {
          "$ref": "#/definitions/Theme.Themes.Details"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.BackgroundFills.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Theme.BackgroundFills.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Theme.BackgroundFills.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Theme.Colors": {
      "properties": {
        "accent1": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "accent2": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "accent3": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "accent4": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "accent5": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "accent6": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "dark1": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "dark2": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "followedHyperlink": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "hyperlink": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Theme.Colors",
          "type": "string"
        },
        "light1": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "light2": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.Colors",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Theme.Colors.Details": {
      "properties": {
        "accent1": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "accent2": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "accent3": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "accent4": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "accent5": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "accent6": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "dark1": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "dark2": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Theme.Colors.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Theme.Colors.Details",
          "type": "string"
        },
        "followedHyperlink": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "hyperlink": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Theme.Colors.Details",
          "type": "string"
        },
        "light1": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "light2": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "theme": {
          "$ref": "#/definitions/Theme.Themes.Details"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.Colors.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Theme.Colors.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Theme.Colors.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Theme.CustomColors": {
      "properties": {
        "hexValue": {
          "title": "Theme.CustomColors",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Theme.CustomColors",
          "type": "string"
        },
        "name": {
          "title": "Theme.CustomColors",
          "type": "string",
          "x-nullable": true
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.CustomColors",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Theme.CustomColors.Details": {
      "properties": {
        "dateCreated": {
          "format": "date-time",
          "title": "Theme.CustomColors.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Theme.CustomColors.Details",
          "type": "string"
        },
        "hexValue": {
          "title": "Theme.CustomColors.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Theme.CustomColors.Details",
          "type": "string"
        },
        "name": {
          "title": "Theme.CustomColors.Details",
          "type": "string",
          "x-nullable": true
        },
        "theme": {
          "$ref": "#/definitions/Theme.Themes.Details"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.CustomColors.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Theme.CustomColors.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Theme.CustomColors.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Theme.EffectMap": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Theme.EffectMap",
          "type": "string"
        },
        "intensityId": {
          "format": "int32",
          "title": "Theme.EffectMap",
          "type": "integer"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.EffectMap",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Theme.EffectMap.Details": {
      "properties": {
        "dateCreated": {
          "format": "date-time",
          "title": "Theme.EffectMap.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Theme.EffectMap.Details",
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/Shared.Effects.Details"
        },
        "id": {
          "format": "uuid",
          "title": "Theme.EffectMap.Details",
          "type": "string"
        },
        "intensityId": {
          "format": "int32",
          "title": "Theme.EffectMap.Details",
          "type": "integer"
        },
        "theme": {
          "$ref": "#/definitions/Theme.Themes.Details"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.EffectMap.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Theme.EffectMap.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Theme.EffectMap.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Theme.Fills": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Theme.Fills",
          "type": "string"
        },
        "intensityId": {
          "format": "int32",
          "title": "Theme.Fills",
          "type": "integer"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.Fills",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Theme.Fills.Details": {
      "properties": {
        "dateCreated": {
          "format": "date-time",
          "title": "Theme.Fills.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Theme.Fills.Details",
          "type": "string"
        },
        "fillMap": {
          "$ref": "#/definitions/Shared.FillMap.Details"
        },
        "id": {
          "format": "uuid",
          "title": "Theme.Fills.Details",
          "type": "string"
        },
        "intensityId": {
          "format": "int32",
          "title": "Theme.Fills.Details",
          "type": "integer"
        },
        "theme": {
          "$ref": "#/definitions/Theme.Themes.Details"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.Fills.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Theme.Fills.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Theme.Fills.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Theme.Fonts": {
      "properties": {
        "bodyFont": {
          "title": "Theme.Fonts",
          "type": "string",
          "x-nullable": true
        },
        "headingFont": {
          "title": "Theme.Fonts",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Theme.Fonts",
          "type": "string"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.Fonts",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Theme.Fonts.Details": {
      "properties": {
        "bodyFont": {
          "title": "Theme.Fonts.Details",
          "type": "string",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Theme.Fonts.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Theme.Fonts.Details",
          "type": "string"
        },
        "headingFont": {
          "title": "Theme.Fonts.Details",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Theme.Fonts.Details",
          "type": "string"
        },
        "theme": {
          "$ref": "#/definitions/Theme.Themes.Details"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.Fonts.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Theme.Fonts.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Theme.Fonts.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Theme.Intensity": {
      "properties": {
        "description": {
          "title": "Theme.Intensity",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Theme.Intensity",
          "type": "string"
        },
        "name": {
          "title": "Theme.Intensity",
          "type": "string",
          "x-nullable": true
        },
        "typeId": {
          "format": "int32",
          "title": "Theme.Intensity",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Theme.LineMap": {
      "properties": {
        "id": {
          "format": "uuid",
          "title": "Theme.LineMap",
          "type": "string"
        },
        "intensityId": {
          "format": "int32",
          "title": "Theme.LineMap",
          "type": "integer"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.LineMap",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Theme.LineMap.Details": {
      "properties": {
        "dateCreated": {
          "format": "date-time",
          "title": "Theme.LineMap.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Theme.LineMap.Details",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "title": "Theme.LineMap.Details",
          "type": "string"
        },
        "intensityId": {
          "format": "int32",
          "title": "Theme.LineMap.Details",
          "type": "integer"
        },
        "line": {
          "$ref": "#/definitions/Shared.Lines.Details"
        },
        "theme": {
          "$ref": "#/definitions/Theme.Themes.Details"
        },
        "themeId": {
          "format": "uuid",
          "title": "Theme.LineMap.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Theme.LineMap.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Theme.LineMap.Details",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Theme.Themes": {
      "properties": {
        "baseElementBlobUrl": {
          "title": "Theme.Themes",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Theme.Themes",
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "format": "uuid",
          "title": "Theme.Themes",
          "type": "string"
        },
        "name": {
          "title": "Theme.Themes",
          "type": "string",
          "x-nullable": true
        },
        "packageUri": {
          "title": "Theme.Themes",
          "type": "string",
          "x-nullable": true
        },
        "slideId": {
          "format": "uuid",
          "title": "Theme.Themes",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "Theme.Themes.Details": {
      "properties": {
        "backgroundFills": {
          "items": {
            "$ref": "#/definitions/Theme.BackgroundFills.Details"
          },
          "title": "Theme.Themes.Details",
          "type": "array",
          "x-nullable": true
        },
        "baseElementBlobUrl": {
          "title": "Theme.Themes.Details",
          "type": "string",
          "x-nullable": true
        },
        "changedBaseElementBlobUrl": {
          "title": "Theme.Themes.Details",
          "type": "string",
          "x-nullable": true
        },
        "colors": {
          "$ref": "#/definitions/Theme.Colors.Details"
        },
        "customColors": {
          "items": {
            "$ref": "#/definitions/Theme.CustomColors.Details"
          },
          "title": "Theme.Themes.Details",
          "type": "array",
          "x-nullable": true
        },
        "dateCreated": {
          "format": "date-time",
          "title": "Theme.Themes.Details",
          "type": "string"
        },
        "dateModified": {
          "format": "date-time",
          "title": "Theme.Themes.Details",
          "type": "string"
        },
        "effectMaps": {
          "items": {
            "$ref": "#/definitions/Theme.EffectMap.Details"
          },
          "title": "Theme.Themes.Details",
          "type": "array",
          "x-nullable": true
        },
        "fills": {
          "items": {
            "$ref": "#/definitions/Theme.Fills.Details"
          },
          "title": "Theme.Themes.Details",
          "type": "array",
          "x-nullable": true
        },
        "fonts": {
          "$ref": "#/definitions/Theme.Fonts.Details"
        },
        "id": {
          "format": "uuid",
          "title": "Theme.Themes.Details",
          "type": "string"
        },
        "lineMaps": {
          "items": {
            "$ref": "#/definitions/Theme.LineMap.Details"
          },
          "title": "Theme.Themes.Details",
          "type": "array",
          "x-nullable": true
        },
        "name": {
          "title": "Theme.Themes.Details",
          "type": "string",
          "x-nullable": true
        },
        "packageUri": {
          "title": "Theme.Themes.Details",
          "type": "string",
          "x-nullable": true
        },
        "slide": {
          "$ref": "#/definitions/Slide.Slides.Details"
        },
        "slideId": {
          "format": "uuid",
          "title": "Theme.Themes.Details",
          "type": "string",
          "x-nullable": true
        },
        "userCreated": {
          "format": "uuid",
          "title": "Theme.Themes.Details",
          "type": "string"
        },
        "userModified": {
          "format": "uuid",
          "title": "Theme.Themes.Details",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "tags": [
    {
      "description": "Charts",
      "name": "Charts"
    },
    {
      "description": "Charts / Axes",
      "name": "Charts/Axes"
    },
    {
      "description": "Charts / AxisDataTypes",
      "name": "Charts/AxisDataTypes"
    },
    {
      "description": "Charts / ChartData",
      "name": "Charts/ChartData"
    },
    {
      "description": "Charts / ColumnCollections",
      "name": "Charts/ColumnCollections"
    },
    {
      "description": "Charts / Columns",
      "name": "Charts/Columns"
    },
    {
      "description": "Charts / DataPoints",
      "name": "Charts/DataPoints"
    },
    {
      "description": "Charts / PlotType",
      "name": "Charts/PlotType"
    },
    {
      "description": "Charts / RowCol",
      "name": "Charts/RowCol"
    },
    {
      "description": "Charts / RowCollections",
      "name": "Charts/RowCollections"
    },
    {
      "description": "Charts / RowNameFormatTypes",
      "name": "Charts/RowNameFormatTypes"
    },
    {
      "description": "Charts / Rows",
      "name": "Charts/Rows"
    },
    {
      "description": "ConnectionShapes",
      "name": "ConnectionShapes"
    },
    {
      "description": "Documents",
      "name": "Documents"
    },
    {
      "description": "Documents / DocumentType",
      "name": "Documents/DocumentType"
    },
    {
      "description": "Groups",
      "name": "Groups"
    },
    {
      "description": "Images",
      "name": "Images"
    },
    {
      "description": "Shapes",
      "name": "Shapes"
    },
    {
      "description": "ShapeTrees",
      "name": "ShapeTrees"
    },
    {
      "description": "Shared / ColorTransformationAttributes",
      "name": "Shared/ColorTransformationAttributes"
    },
    {
      "description": "Shared / ColorTransformations",
      "name": "Shared/ColorTransformations"
    },
    {
      "description": "Shared / ColorTypes",
      "name": "Shared/ColorTypes"
    },
    {
      "description": "Shared / DashTypes",
      "name": "Shared/DashTypes"
    },
    {
      "description": "Shared / EffectAttributes",
      "name": "Shared/EffectAttributes"
    },
    {
      "description": "Shared / Effects",
      "name": "Shared/Effects"
    },
    {
      "description": "Shared / EffectTypes",
      "name": "Shared/EffectTypes"
    },
    {
      "description": "Shared / FillMap",
      "name": "Shared/FillMap"
    },
    {
      "description": "Shared / FillTypes",
      "name": "Shared/FillTypes"
    },
    {
      "description": "Shared / GradientFills",
      "name": "Shared/GradientFills"
    },
    {
      "description": "Shared / GradientStops",
      "name": "Shared/GradientStops"
    },
    {
      "description": "Shared / ImageFills",
      "name": "Shared/ImageFills"
    },
    {
      "description": "Shared / LineEndSizes",
      "name": "Shared/LineEndSizes"
    },
    {
      "description": "Shared / LineEndTypes",
      "name": "Shared/LineEndTypes"
    },
    {
      "description": "Shared / Lines",
      "name": "Shared/Lines"
    },
    {
      "description": "Shared / Paragraph",
      "name": "Shared/Paragraph"
    },
    {
      "description": "Shared / SolidFills",
      "name": "Shared/SolidFills"
    },
    {
      "description": "Shared / Text",
      "name": "Shared/Text"
    },
    {
      "description": "Shared / TextContainer",
      "name": "Shared/TextContainer"
    },
    {
      "description": "Slides",
      "name": "Slides"
    },
    {
      "description": "Slides / ColorMaps",
      "name": "Slides/ColorMaps"
    },
    {
      "description": "Slides / Graphics",
      "name": "Slides/Graphics"
    },
    {
      "description": "Slides / GraphicTypes",
      "name": "Slides/GraphicTypes"
    },
    {
      "description": "Slides / GroupElements",
      "name": "Slides/GroupElements"
    },
    {
      "description": "Slides / GroupElementTypes",
      "name": "Slides/GroupElementTypes"
    },
    {
      "description": "Slides / SlideMasters",
      "name": "Slides/SlideMasters"
    },
    {
      "description": "SmartArts",
      "name": "SmartArts"
    },
    {
      "description": "Tables",
      "name": "Tables"
    },
    {
      "description": "Tables / Borders",
      "name": "Tables/Borders"
    },
    {
      "description": "Tables / Cells",
      "name": "Tables/Cells"
    },
    {
      "description": "Tables / Columns",
      "name": "Tables/Columns"
    },
    {
      "description": "Tables / Rows",
      "name": "Tables/Rows"
    },
    {
      "description": "Themes",
      "name": "Themes"
    },
    {
      "description": "Themes / BackgroundFills",
      "name": "Themes/BackgroundFills"
    },
    {
      "description": "Themes / Colors",
      "name": "Themes/Colors"
    },
    {
      "description": "Themes / CustomColors",
      "name": "Themes/CustomColors"
    },
    {
      "description": "Themes / EffectMap",
      "name": "Themes/EffectMap"
    },
    {
      "description": "Themes / Fills",
      "name": "Themes/Fills"
    },
    {
      "description": "Themes / Fonts",
      "name": "Themes/Fonts"
    },
    {
      "description": "Themes / Intensity",
      "name": "Themes/Intensity"
    },
    {
      "description": "Themes / LineMap",
      "name": "Themes/LineMap"
    }
  ],
  "x-components": {}
}