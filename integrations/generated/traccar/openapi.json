{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "support@traccar.org",
      "name": "Traccar Support",
      "url": "https://www.traccar.org/"
    },
    "description": "Open Source GPS Tracking Platform",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Traccar",
    "version": "4.11",
    "x-apisguru-categories": [
      "location"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_590395195268538368_oScd6DxA_400x400.png"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://raw.githubusercontent.com/tananaev/traccar/master/swagger.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "traccar.org",
    "x-datafire": {
      "name": "traccar",
      "type": "openapi"
    }
  },
  "host": "demo.traccar.org",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/attributes/computed": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Can only be used by admins or managers to fetch all entities",
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "description": "Standard users can use this only with their own _userId_",
            "in": "query",
            "name": "userId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _deviceId_s, they have access to",
            "in": "query",
            "name": "deviceId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _groupId_s, they have access to",
            "in": "query",
            "name": "groupId",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "refresh",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Attribute"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Attributes"
        ],
        "description": "Without params, it returns a list of Attributes the user has access to",
        "summary": "Fetch a list of Attributes"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attribute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attribute"
            }
          }
        },
        "tags": [
          "Attributes"
        ],
        "summary": "Create an Attribute",
        "x-codegen-request-body-name": "body"
      }
    },
    "/attributes/computed/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Attributes"
        ],
        "summary": "Delete an Attribute"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attribute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attribute"
            }
          }
        },
        "tags": [
          "Attributes"
        ],
        "summary": "Update an Attribute",
        "x-codegen-request-body-name": "body"
      }
    },
    "/calendars": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Can only be used by admins or managers to fetch all entities",
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "description": "Standard users can use this only with their own _userId_",
            "in": "query",
            "name": "userId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Calendar"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Calendars"
        ],
        "description": "Without params, it returns a list of Calendars the user has access to",
        "summary": "Fetch a list of Calendars"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          }
        },
        "tags": [
          "Calendars"
        ],
        "summary": "Create a Calendar",
        "x-codegen-request-body-name": "body"
      }
    },
    "/calendars/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Calendars"
        ],
        "summary": "Delete a Calendar"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          }
        },
        "tags": [
          "Calendars"
        ],
        "summary": "Update a Calendar",
        "x-codegen-request-body-name": "body"
      }
    },
    "/commands": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Can only be used by admins or managers to fetch all entities",
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "description": "Standard users can use this only with their own _userId_",
            "in": "query",
            "name": "userId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _deviceId_s, they have access to",
            "in": "query",
            "name": "deviceId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _groupId_s, they have access to",
            "in": "query",
            "name": "groupId",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "refresh",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Command"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Commands"
        ],
        "description": "Without params, it returns a list of Saved Commands the user has access to",
        "summary": "Fetch a list of Saved Commands"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Command"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Command"
            }
          }
        },
        "tags": [
          "Commands"
        ],
        "summary": "Create a Saved Command",
        "x-codegen-request-body-name": "body"
      }
    },
    "/commands/send": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Standard users can use this only with _deviceId_s, they have access to",
            "in": "query",
            "name": "deviceId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Command"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Could happen when the user doesn't have permission for the device"
          }
        },
        "tags": [
          "Commands"
        ],
        "description": "Return a list of saved commands linked to Device and its groups, filtered by current Device protocol support",
        "summary": "Fetch a list of Saved Commands supported by Device at the moment"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Command"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Command sent",
            "schema": {
              "$ref": "#/definitions/Command"
            }
          },
          "202": {
            "description": "Command queued",
            "schema": {
              "$ref": "#/definitions/Command"
            }
          },
          "400": {
            "description": "Could happen when the user doesn't have permission or an incorrect command _type_ for the device"
          }
        },
        "tags": [
          "Commands"
        ],
        "description": "Dispatch a new command or Saved Command if _body.id_ set",
        "summary": "Dispatch commands to device",
        "x-codegen-request-body-name": "body"
      }
    },
    "/commands/types": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Internal device identifier. Only works if device has already reported some locations",
            "in": "query",
            "name": "deviceId",
            "type": "integer"
          },
          {
            "description": "Protocol name. Can be used instead of device id",
            "in": "query",
            "name": "protocol",
            "type": "string"
          },
          {
            "description": "When `true` return SMS commands. If not specified or `false` return data commands",
            "in": "query",
            "name": "textChannel",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/CommandType"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Could happen when trying to fetch from a device the user does not have permission"
          }
        },
        "tags": [
          "Commands"
        ],
        "summary": "Fetch a list of available Commands for the Device or all possible Commands if Device ommited"
      }
    },
    "/commands/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Commands"
        ],
        "summary": "Delete a Saved Command"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Command"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Command"
            }
          }
        },
        "tags": [
          "Commands"
        ],
        "summary": "Update a Saved Command",
        "x-codegen-request-body-name": "body"
      }
    },
    "/devices": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Can only be used by admins or managers to fetch all entities",
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "description": "Standard users can use this only with their own _userId_",
            "in": "query",
            "name": "userId",
            "type": "integer"
          },
          {
            "description": "To fetch one or more devices. Multiple params can be passed like `id=31&id=42`",
            "in": "query",
            "name": "id",
            "type": "integer"
          },
          {
            "description": "To fetch one or more devices. Multiple params can be passed like `uniqueId=333331&uniqieId=44442`",
            "in": "query",
            "name": "uniqueId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Device"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "No permission"
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Without any params, returns a list of the user's devices",
        "summary": "Fetch a list of Devices"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "summary": "Create a Device",
        "x-codegen-request-body-name": "body"
      }
    },
    "/devices/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Devices"
        ],
        "summary": "Delete a Device"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "summary": "Update a Device",
        "x-codegen-request-body-name": "body"
      }
    },
    "/devices/{id}/accumulators": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceAccumulators"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Devices"
        ],
        "summary": "Update total distance and hours of the Device",
        "x-codegen-request-body-name": "body"
      }
    },
    "/drivers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Can only be used by admins or managers to fetch all entities",
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "description": "Standard users can use this only with their own _userId_",
            "in": "query",
            "name": "userId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _deviceId_s, they have access to",
            "in": "query",
            "name": "deviceId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _groupId_s, they have access to",
            "in": "query",
            "name": "groupId",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "refresh",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Driver"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Drivers"
        ],
        "description": "Without params, it returns a list of Drivers the user has access to",
        "summary": "Fetch a list of Drivers"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Driver"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Driver"
            }
          }
        },
        "tags": [
          "Drivers"
        ],
        "summary": "Create a Driver",
        "x-codegen-request-body-name": "body"
      }
    },
    "/drivers/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Drivers"
        ],
        "summary": "Delete a Driver"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Driver"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Driver"
            }
          }
        },
        "tags": [
          "Drivers"
        ],
        "summary": "Update a Driver",
        "x-codegen-request-body-name": "body"
      }
    },
    "/events/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        },
        "tags": [
          "Events"
        ]
      }
    },
    "/geofences": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Can only be used by admins or managers to fetch all entities",
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "description": "Standard users can use this only with their own _userId_",
            "in": "query",
            "name": "userId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _deviceId_s, they have access to",
            "in": "query",
            "name": "deviceId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _groupId_s, they have access to",
            "in": "query",
            "name": "groupId",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "refresh",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Geofence"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Geofences"
        ],
        "description": "Without params, it returns a list of Geofences the user has access to",
        "summary": "Fetch a list of Geofences"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Geofence"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Geofence"
            }
          }
        },
        "tags": [
          "Geofences"
        ],
        "summary": "Create a Geofence",
        "x-codegen-request-body-name": "body"
      }
    },
    "/geofences/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Geofences"
        ],
        "summary": "Delete a Geofence"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Geofence"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Geofence"
            }
          }
        },
        "tags": [
          "Geofences"
        ],
        "summary": "Update a Geofence",
        "x-codegen-request-body-name": "body"
      }
    },
    "/groups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Can only be used by admins or managers to fetch all entities",
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "description": "Standard users can use this only with their own _userId_",
            "in": "query",
            "name": "userId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Group"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Without any params, returns a list of the Groups the user belongs to",
        "summary": "Fetch a list of Groups"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "No permission"
          }
        },
        "tags": [
          "Groups"
        ],
        "summary": "Create a Group",
        "x-codegen-request-body-name": "body"
      }
    },
    "/groups/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Groups"
        ],
        "summary": "Delete a Group"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "summary": "Update a Group",
        "x-codegen-request-body-name": "body"
      }
    },
    "/maintenance": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Can only be used by admins or managers to fetch all entities",
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "description": "Standard users can use this only with their own _userId_",
            "in": "query",
            "name": "userId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _deviceId_s, they have access to",
            "in": "query",
            "name": "deviceId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _groupId_s, they have access to",
            "in": "query",
            "name": "groupId",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "refresh",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Maintenance"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Maintenance"
        ],
        "description": "Without params, it returns a list of Maintenance the user has access to",
        "summary": "Fetch a list of Maintenance"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Maintenance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Maintenance"
            }
          }
        },
        "tags": [
          "Maintenance"
        ],
        "summary": "Create a Maintenance",
        "x-codegen-request-body-name": "body"
      }
    },
    "/maintenance/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Maintenance"
        ],
        "summary": "Delete a Maintenance"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Maintenance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Maintenance"
            }
          }
        },
        "tags": [
          "Maintenance"
        ],
        "summary": "Update a Maintenance",
        "x-codegen-request-body-name": "body"
      }
    },
    "/notifications": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Can only be used by admins or managers to fetch all entities",
            "in": "query",
            "name": "all",
            "type": "boolean"
          },
          {
            "description": "Standard users can use this only with their own _userId_",
            "in": "query",
            "name": "userId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _deviceId_s, they have access to",
            "in": "query",
            "name": "deviceId",
            "type": "integer"
          },
          {
            "description": "Standard users can use this only with _groupId_s, they have access to",
            "in": "query",
            "name": "groupId",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "refresh",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Notification"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "description": "Without params, it returns a list of Notifications the user has access to",
        "summary": "Fetch a list of Notifications"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "summary": "Create a Notification",
        "x-codegen-request-body-name": "body"
      }
    },
    "/notifications/test": {
      "post": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful sending"
          },
          "400": {
            "description": "Could happen if sending has failed"
          }
        },
        "tags": [
          "Notifications"
        ],
        "summary": "Send test notification to current user via Email and SMS"
      }
    },
    "/notifications/types": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/NotificationType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "summary": "Fetch a list of available Notification types"
      }
    },
    "/notifications/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Notifications"
        ],
        "summary": "Delete a Notification"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "summary": "Update a Notification",
        "x-codegen-request-body-name": "body"
      }
    },
    "/permissions": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Permissions"
        ],
        "summary": "Unlink an Object from another Object",
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          },
          "400": {
            "description": "No permission"
          }
        },
        "tags": [
          "Permissions"
        ],
        "summary": "Link an Object to another Object",
        "x-codegen-request-body-name": "body"
      }
    },
    "/positions": {
      "get": {
        "produces": [
          "application/gpx+xml",
          "application/json",
          "text/csv"
        ],
        "parameters": [
          {
            "description": "_deviceId_ is optional, but requires the _from_ and _to_ parameters when used",
            "in": "query",
            "name": "deviceId",
            "type": "integer"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "from",
            "type": "string"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "to",
            "type": "string"
          },
          {
            "description": "To fetch one or more positions. Multiple params can be passed like `id=31&id=42`",
            "in": "query",
            "name": "id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Position"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Positions"
        ],
        "description": "We strongly recommend using [Traccar WebSocket API](https://www.traccar.org/traccar-api/) instead of periodically polling positions endpoint. Without any params, it returns a list of last known positions for all the user's Devices. _from_ and _to_ fields are not required with _id_.",
        "summary": "Fetches a list of Positions"
      }
    },
    "/reports/events": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "deviceId",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "groupId",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "% can be used to return events of all types",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "type",
            "type": "array"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "from",
            "required": true,
            "type": "string"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Event"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "description": "At least one _deviceId_ or one _groupId_ must be passed",
        "summary": "Fetch a list of Events within the time period for the Devices or Groups"
      }
    },
    "/reports/route": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "deviceId",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "groupId",
            "type": "array"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "from",
            "required": true,
            "type": "string"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Position"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "description": "At least one _deviceId_ or one _groupId_ must be passed",
        "summary": "Fetch a list of Positions within the time period for the Devices or Groups"
      }
    },
    "/reports/stops": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "deviceId",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "groupId",
            "type": "array"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "from",
            "required": true,
            "type": "string"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportStops"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "description": "At least one _deviceId_ or one _groupId_ must be passed",
        "summary": "Fetch a list of ReportStops within the time period for the Devices or Groups"
      }
    },
    "/reports/summary": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "deviceId",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "groupId",
            "type": "array"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "from",
            "required": true,
            "type": "string"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportSummary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "description": "At least one _deviceId_ or one _groupId_ must be passed",
        "summary": "Fetch a list of ReportSummary within the time period for the Devices or Groups"
      }
    },
    "/reports/trips": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "deviceId",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "groupId",
            "type": "array"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "from",
            "required": true,
            "type": "string"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportTrips"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "description": "At least one _deviceId_ or one _groupId_ must be passed",
        "summary": "Fetch a list of ReportTrips within the time period for the Devices or Groups"
      }
    },
    "/server": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        },
        "tags": [
          "Server"
        ],
        "summary": "Fetch Server information"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        },
        "tags": [
          "Server"
        ],
        "summary": "Update Server information",
        "x-codegen-request-body-name": "body"
      }
    },
    "/session": {
      "delete": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Session"
        ],
        "summary": "Close the Session"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Session"
        ],
        "summary": "Fetch Session information"
      },
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Session"
        ],
        "summary": "Create a new Session"
      }
    },
    "/statistics": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "from",
            "required": true,
            "type": "string"
          },
          {
            "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
            "format": "date-time",
            "in": "query",
            "name": "to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Statistics"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Statistics"
        ],
        "summary": "Fetch server Statistics"
      }
    },
    "/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Can only be used by admin or manager users",
            "in": "query",
            "name": "userId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "No Permission"
          }
        },
        "tags": [
          "Users"
        ],
        "summary": "Fetch a list of Users"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "summary": "Create a User",
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Users"
        ],
        "summary": "Delete a User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "summary": "Update a User",
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "definitions": {
    "Attribute": {
      "properties": {
        "attribute": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "expression": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "type": {
          "description": "String|Number|Boolean",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Calendar": {
      "properties": {
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "data": {
          "description": "base64 encoded in iCalendar format",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Command": {
      "properties": {
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "deviceId": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommandType": {
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Device": {
      "properties": {
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "category": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "geofenceIds": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "groupId": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "lastUpdate": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "positionId": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "uniqueId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceAccumulators": {
      "properties": {
        "deviceId": {
          "type": "integer"
        },
        "hours": {
          "type": "number"
        },
        "totalDistance": {
          "description": "in meters",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Driver": {
      "properties": {
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "uniqueId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Event": {
      "properties": {
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "deviceId": {
          "type": "integer"
        },
        "geofenceId": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "maintenanceId": {
          "type": "integer"
        },
        "positionId": {
          "type": "integer"
        },
        "serverTime": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Geofence": {
      "properties": {
        "area": {
          "type": "string"
        },
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "calendarId": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Group": {
      "properties": {
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "groupId": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Maintenance": {
      "properties": {
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "period": {
          "type": "number"
        },
        "start": {
          "type": "number"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Notification": {
      "properties": {
        "always": {
          "type": "boolean"
        },
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "calendarId": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "mail": {
          "type": "boolean"
        },
        "sms": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "web": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "NotificationType": {
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Permission": {
      "description": "This is a permission map that contain two object indexes. It is used to link/unlink objects. Order is important. Example: { deviceId:8, geofenceId: 16 }",
      "properties": {
        "attributeId": {
          "description": "Computed Attribute Id, can be second parameter only",
          "type": "integer"
        },
        "calendarId": {
          "description": "Calendar Id, can be second parameter only and only in combination with userId",
          "type": "integer"
        },
        "deviceId": {
          "description": "Device Id, can be first parameter or second only in combination with userId",
          "type": "integer"
        },
        "driverId": {
          "description": "Driver Id, can be second parameter only",
          "type": "integer"
        },
        "geofenceId": {
          "description": "Geofence Id, can be second parameter only",
          "type": "integer"
        },
        "groupId": {
          "description": "Group Id, can be first parameter or second only in combination with userId",
          "type": "integer"
        },
        "managedUserId": {
          "description": "User Id, can be second parameter only and only in combination with userId",
          "type": "integer"
        },
        "userId": {
          "description": "User Id, can be only first parameter",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Position": {
      "properties": {
        "accuracy": {
          "type": "number"
        },
        "address": {
          "type": "string"
        },
        "altitude": {
          "type": "number"
        },
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "course": {
          "type": "number"
        },
        "deviceId": {
          "type": "integer"
        },
        "deviceTime": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        },
        "fixTime": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "network": {
          "properties": {},
          "type": "object"
        },
        "outdated": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "serverTime": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        },
        "speed": {
          "description": "in knots",
          "type": "number"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReportStops": {
      "properties": {
        "address": {
          "type": "string"
        },
        "deviceId": {
          "type": "integer"
        },
        "deviceName": {
          "type": "string"
        },
        "duration": {
          "type": "integer"
        },
        "endTime": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        },
        "engineHours": {
          "type": "integer"
        },
        "lat": {
          "type": "number"
        },
        "lon": {
          "type": "number"
        },
        "spentFuel": {
          "description": "in liters",
          "type": "number"
        },
        "startTime": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReportSummary": {
      "properties": {
        "averageSpeed": {
          "description": "in knots",
          "type": "number"
        },
        "deviceId": {
          "type": "integer"
        },
        "deviceName": {
          "type": "string"
        },
        "distance": {
          "description": "in meters",
          "type": "number"
        },
        "engineHours": {
          "type": "integer"
        },
        "maxSpeed": {
          "description": "in knots",
          "type": "number"
        },
        "spentFuel": {
          "description": "in liters",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ReportTrips": {
      "properties": {
        "averageSpeed": {
          "description": "in knots",
          "type": "number"
        },
        "deviceId": {
          "type": "integer"
        },
        "deviceName": {
          "type": "string"
        },
        "distance": {
          "description": "in meters",
          "type": "number"
        },
        "driverName": {
          "type": "string"
        },
        "driverUniqueId": {
          "type": "integer"
        },
        "duration": {
          "type": "integer"
        },
        "endAddress": {
          "type": "string"
        },
        "endLat": {
          "type": "number"
        },
        "endLon": {
          "type": "number"
        },
        "endTime": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        },
        "maxSpeed": {
          "description": "in knots",
          "type": "number"
        },
        "spentFuel": {
          "description": "in liters",
          "type": "number"
        },
        "startAddress": {
          "type": "string"
        },
        "startLat": {
          "type": "number"
        },
        "startLon": {
          "type": "number"
        },
        "startTime": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Server": {
      "properties": {
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "bingKey": {
          "type": "string"
        },
        "coordinateFormat": {
          "type": "string"
        },
        "deviceReadonly": {
          "type": "boolean"
        },
        "forceSettings": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        },
        "latitude": {
          "type": "number"
        },
        "limitCommands": {
          "type": "boolean"
        },
        "longitude": {
          "type": "number"
        },
        "map": {
          "type": "string"
        },
        "mapUrl": {
          "type": "string"
        },
        "poiLayer": {
          "type": "string"
        },
        "readonly": {
          "type": "boolean"
        },
        "registration": {
          "type": "boolean"
        },
        "twelveHourFormat": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "zoom": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Statistics": {
      "properties": {
        "activeDevices": {
          "type": "integer"
        },
        "activeUsers": {
          "type": "integer"
        },
        "captureTime": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        },
        "messagesReceived": {
          "type": "integer"
        },
        "messagesStored": {
          "type": "integer"
        },
        "requests": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "administrator": {
          "type": "boolean"
        },
        "attributes": {
          "properties": {},
          "type": "object"
        },
        "coordinateFormat": {
          "type": "string"
        },
        "deviceLimit": {
          "type": "integer"
        },
        "deviceReadonly": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "expirationTime": {
          "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "latitude": {
          "type": "number"
        },
        "limitCommands": {
          "type": "boolean"
        },
        "longitude": {
          "type": "number"
        },
        "map": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "poiLayer": {
          "type": "string"
        },
        "readonly": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        },
        "twelveHourFormat": {
          "type": "boolean"
        },
        "userLimit": {
          "type": "integer"
        },
        "zoom": {
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "description": "Basic HTTP authorization with _email_ and _password_",
      "type": "basic"
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "tags": [
    {
      "description": "Server information",
      "name": "Server"
    },
    {
      "description": "User session management",
      "name": "Session"
    },
    {
      "description": "Device management",
      "name": "Devices"
    },
    {
      "description": "Group management",
      "name": "Groups"
    },
    {
      "description": "User management",
      "name": "Users"
    },
    {
      "description": "User permissions and other object linking",
      "name": "Permissions"
    },
    {
      "description": "Retrieving raw location information",
      "name": "Positions"
    },
    {
      "description": "Retrieving event information",
      "name": "Events"
    },
    {
      "description": "Reports generation",
      "name": "Reports"
    },
    {
      "description": "User notifications management",
      "name": "Notifications"
    },
    {
      "description": "Geofence management",
      "name": "Geofences"
    },
    {
      "description": "Sending commands to devices and stored command management",
      "name": "Commands"
    },
    {
      "description": "Computed attributes management",
      "name": "Attributes"
    },
    {
      "description": "Drivers management",
      "name": "Drivers"
    },
    {
      "description": "Maintenance management",
      "name": "Maintenance"
    },
    {
      "description": "Calendar management",
      "name": "Calendars"
    },
    {
      "description": "Retrieving server statistics",
      "name": "Statistics"
    }
  ],
  "x-components": {
    "parameters": {
      "all": {
        "description": "Can only be used by admins or managers to fetch all entities",
        "in": "query",
        "name": "all",
        "schema": {
          "type": "boolean"
        }
      },
      "deviceId": {
        "description": "Standard users can use this only with _deviceId_s, they have access to",
        "in": "query",
        "name": "deviceId",
        "schema": {
          "type": "integer"
        }
      },
      "deviceIdArray": {
        "explode": true,
        "in": "query",
        "name": "deviceId",
        "schema": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "style": "form"
      },
      "entityId": {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "fromTime": {
        "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
        "in": "query",
        "name": "from",
        "required": true,
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "groupId": {
        "description": "Standard users can use this only with _groupId_s, they have access to",
        "in": "query",
        "name": "groupId",
        "schema": {
          "type": "integer"
        }
      },
      "groupIdArray": {
        "explode": true,
        "in": "query",
        "name": "groupId",
        "schema": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "style": "form"
      },
      "refresh": {
        "in": "query",
        "name": "refresh",
        "schema": {
          "type": "boolean"
        }
      },
      "toTime": {
        "description": "in IS0 8601 format. eg. `1963-11-22T18:30:00Z`",
        "in": "query",
        "name": "to",
        "required": true,
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "userId": {
        "description": "Standard users can use this only with their own _userId_",
        "in": "query",
        "name": "userId",
        "schema": {
          "type": "integer"
        }
      }
    },
    "requestBodies": {
      "Attribute": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Attribute"
            }
          }
        },
        "required": true
      },
      "Calendar": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          }
        },
        "required": true
      },
      "Command": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Command"
            }
          }
        },
        "required": true
      },
      "Device": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "required": true
      },
      "Driver": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Driver"
            }
          }
        },
        "required": true
      },
      "Geofence": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Geofence"
            }
          }
        },
        "required": true
      },
      "Group": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "required": true
      },
      "Maintenance": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Maintenance"
            }
          }
        },
        "required": true
      },
      "Notification": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "required": true
      },
      "Permission": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        },
        "required": true
      },
      "User": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "required": true
      }
    }
  }
}