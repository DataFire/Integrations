{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "support@adyen.com",
      "name": "Adyen Support",
      "url": "https://support.adyen.com/"
    },
    "description": "The Hosted Onboarding Page (HOP) API provides endpoints for using the Hosted Onboarding Page. The related entities include account holders only. \nFor more information, refer to our [documentation](https://docs.adyen.com/platforms/onboarding-and-verification/hosted-onboarding-page).\n## Authentication\nTo connect to the HOP API, you must use basic authentication credentials of your web service user. If you don't have one, please contact the [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:\n\n```\ncurl\n-U \"ws@MarketPlace.YourMarketPlace\":\"YourWsPassword\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\nNote that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).\n\n## Versioning\nThe HOP API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://cal-test.adyen.com/cal/services/Hop/v6/getOnboardingUrl\n```",
    "termsOfService": "https://www.adyen.com/legal/terms-and-conditions",
    "title": "Adyen for Platforms: Hosted Onboarding Page API",
    "version": "6",
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://raw.githubusercontent.com/Adyen/adyen-openapi/master/json/HopService-v6.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "adyen.com",
    "x-serviceName": "HopService",
    "x-datafire": {
      "name": "adyen_hopservice",
      "type": "openapi"
    }
  },
  "host": "cal-test.adyen.com",
  "basePath": "/cal/services/Hop/v6",
  "schemes": [
    "https"
  ],
  "paths": {
    "/getOnboardingUrl": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetOnboardingUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GetOnboardingUrlResponse"
            }
          },
          "400": {
            "description": "Bad Request - a problem reading or understanding the request."
          },
          "401": {
            "description": "Unauthorized - authentication required."
          },
          "403": {
            "description": "Forbidden - insufficient permissions to process the request."
          },
          "422": {
            "description": "Unprocessable Entity - a request validation error."
          },
          "500": {
            "description": "Internal Server Error - the server could not process the request."
          }
        },
        "description": "This endpoint is used to get a new onboarding url for a specific account holder. Each account holder represents a single sub-merchant, and each sub-merchant must be represented by an account holder. A returnUrl can also be specified as part of this request.",
        "operationId": "post-getOnboardingUrl",
        "summary": "Get a new onboarding url for an account holder.",
        "x-groupName": "Hosted Onboarding Page",
        "x-sortIndex": 1
      }
    }
  },
  "definitions": {
    "ErrorFieldType": {
      "properties": {
        "errorCode": {
          "description": "The validation error code.",
          "format": "int32",
          "type": "integer"
        },
        "errorDescription": {
          "description": "A description of the validation error.",
          "type": "string"
        },
        "fieldType": {
          "$ref": "#/definitions/FieldType",
          "description": "The type of error field."
        }
      }
    },
    "FieldType": {
      "properties": {
        "field": {
          "description": "The full name of the property.",
          "type": "string"
        },
        "fieldName": {
          "description": "The type of the field.",
          "enum": [
            "accountCode",
            "accountHolderCode",
            "accountHolderDetails",
            "accountNumber",
            "accountStateType",
            "accountStatus",
            "accountType",
            "address",
            "bankAccount",
            "bankAccountCode",
            "bankAccountName",
            "bankAccountUUID",
            "bankBicSwift",
            "bankCity",
            "bankCode",
            "bankName",
            "bankStatement",
            "branchCode",
            "businessContact",
            "cardToken",
            "checkCode",
            "city",
            "companyRegistration",
            "country",
            "countryCode",
            "currency",
            "currencyCode",
            "dateOfBirth",
            "description",
            "destinationAccountCode",
            "document",
            "documentExpirationDate",
            "documentIssuerCountry",
            "documentIssuerState",
            "documentName",
            "documentNumber",
            "documentType",
            "doingBusinessAs",
            "drivingLicence",
            "drivingLicenceBack",
            "drivingLicense",
            "email",
            "firstName",
            "fullPhoneNumber",
            "gender",
            "hopWebserviceUser",
            "houseNumberOrName",
            "iban",
            "idCard",
            "idCardBack",
            "idCardFront",
            "idNumber",
            "identityDocument",
            "individualDetails",
            "lastName",
            "legalBusinessName",
            "legalEntity",
            "legalEntityType",
            "merchantAccount",
            "merchantCategoryCode",
            "merchantReference",
            "microDeposit",
            "name",
            "nationality",
            "originalReference",
            "ownerCity",
            "ownerCountryCode",
            "ownerHouseNumberOrName",
            "ownerName",
            "ownerPostalCode",
            "ownerState",
            "ownerStreet",
            "passport",
            "passportNumber",
            "payoutMethodCode",
            "personalData",
            "phoneCountryCode",
            "phoneNumber",
            "postalCode",
            "primaryCurrency",
            "reason",
            "registrationNumber",
            "returnUrl",
            "schedule",
            "shareholder",
            "shareholderCode",
            "socialSecurityNumber",
            "sourceAccountCode",
            "stateOrProvince",
            "status",
            "stockExchange",
            "stockNumber",
            "stockTicker",
            "store",
            "storeDetail",
            "storeName",
            "storeReference",
            "street",
            "taxId",
            "tier",
            "tierNumber",
            "transferCode",
            "unknown",
            "value",
            "virtualAccount",
            "visaNumber",
            "webAddress"
          ],
          "type": "string"
        },
        "shareholderCode": {
          "description": "The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.",
          "type": "string"
        }
      }
    },
    "GetOnboardingUrlRequest": {
      "properties": {
        "accountHolderCode": {
          "description": "The account holder code you provided when you created the account holder.",
          "type": "string"
        },
        "editMode": {
          "description": "Allows editing checks even if all the checks have passed.",
          "type": "boolean"
        },
        "platformName": {
          "description": "The platform name which will show up in the welcome page.",
          "type": "string"
        },
        "returnUrl": {
          "description": "The URL where the sub-merchant will be redirected back to after they complete the onboarding, or if their session times out. Maximum length of 500 characters. If you don't provide this, the sub-merchant will be redirected back to the default return URL configured in your platform account.",
          "type": "string"
        }
      },
      "required": [
        "accountHolderCode"
      ]
    },
    "GetOnboardingUrlResponse": {
      "properties": {
        "invalidFields": {
          "description": "Contains field validation errors that would prevent requests from being processed.",
          "items": {
            "$ref": "#/definitions/ErrorFieldType"
          },
          "type": "array"
        },
        "pspReference": {
          "description": "The reference of a request. Can be used to uniquely identify the request.",
          "type": "string"
        },
        "redirectUrl": {
          "description": "The URL to the Hosted Onboarding Page where you should redirect your sub-merchant. This URL must be used within 15 seconds and can only be used once.",
          "type": "string"
        },
        "resultCode": {
          "description": "The result code.",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "in": "header",
      "name": "X-API-Key",
      "type": "apiKey"
    },
    "BasicAuth": {
      "type": "basic"
    }
  },
  "x-components": {},
  "x-groups": [
    "Hosted Onboarding Page"
  ]
}