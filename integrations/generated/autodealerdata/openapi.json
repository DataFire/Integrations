{
  "swagger": "2.0",
  "info": {
    "description": "<div style=\"\">This API provides access to our Automotive Data. Use of this API is subject to our <a href=\"https://autodealerdata.com/tos\">Terms of Service</a></div>\n&nbsp;\n<h3 style=\"\">For a quick start guide <a href=\"/APIQuickStart\">click here</a></h3>\n&nbsp;\n<div> If you signed up through RapidAPI make your test calls <a href=\"https://rapidapi.com/competitive-intelligence-solutions-llc-competitive-intelligence-solutions-llc-default/api/cis-automotive\">here</a></div>\n&nbsp;\n<div>The general workflow is to: <br/>&nbsp;<div><strong>1.</strong> Authenticate with your CIS Automotive API Keys to get a Json Web Token (JWT). Do not use RapidAPI keys.</div>\n<div><div><strong>2.</strong> Then use that token as an argument when calling other endpoints.</div>\n&nbsp;\n<div>Equivalent HTTP GET and POST methods are available for some endpoints. </div>\n&nbsp;\n<div>Endpoints may appear more than once on this page if they are associated with multiple tags. eg \"Sales Data\", \"Premium\", \"Pro Plan or Greater\" To see which endpoints are included in different\nplans look under the \"X Plan or Greater\" tags for the respective plan name.</div>\n&nbsp;\n<h3>If you signed up for our API through RapidAPI you can make your test calls <a href=\"https://rapidapi.com/competitive-intelligence-solutions-llc-competitive-intelligence-solutions-llc-default/api/cis-automotive\">on their platform</a>. \nYour RapidAPI credentials will not work on this page.</h3><h3> Do not use your RapidAPI keys on this page.</h3>\n<h3>If you signed up with us and have an account, you must first authenticate with your API Keys \nand retrieve a Json Web Token (JWT) from the /getToken endpoint to access the other endpoints.</h3> \n\n<h3>Your JWT is a required argument to all endpoints.</h3></div>",
    "title": "CIS Automotive API",
    "version": "0.1",
    "x-apisguru-categories": [
      "ecommerce"
    ],
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://api.autodealerdata.com/openapi.json",
        "version": "3.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "autodealerdata.com",
    "x-datafire": {
      "name": "autodealerdata",
      "type": "openapi"
    }
  },
  "paths": {
    "/daysSupply": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Supply Data",
          "Pro Plan Or Greater"
        ],
        "description": "Average, median, standard deviation, population variance, and whole region average of the \ndays of supply left on dealer lots for a given brand and region. The average, median, stdDev, and pVar fields are calculated on\na dealer by dealer basis while the whole region average treats the entire region like a single dealership. \nThe average field may differ from the whole region average, especially when dealers are out of \na given model. \n\nThe available brand and region names can be retrieved from their respective endpoints.",
        "operationId": "daysSupply_daysSupply_get",
        "summary": "Days worth of supply left on dealer lots"
      }
    },
    "/daysToSell": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Supply Data",
          "Pro Plan Or Greater"
        ],
        "description": "Average, median, standard deviation, population variance, and whole region average of the \nnumber of days a vehicle spends on dealer lots for a given brand and region. The average, median, stdDev, and pVar fields are calculated on\na dealer by dealer basis while the whole region average treats the entire region like a single dealership. \nThe average field may differ from the whole region average.\n\nThe available brand and region names can be retrieved from their respective endpoints.",
        "operationId": "daysToSell_daysToSell_get",
        "summary": "Days a vehicle takes to sell"
      }
    },
    "/getBrands": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/BrandResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Static Data",
          "Standard Plan Or Greater"
        ],
        "description": "Get vehicle brand names. \n\nThese names are used as arguments for other endpoints. The names are generally not case sensitive\nwhen used with other endpoints, but it is best practice to use the names returned by this endpoint without changes.",
        "operationId": "getBrandNames_getBrands_get",
        "summary": "Get a list of brand names"
      }
    },
    "/getDealers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "zipCode",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/DealershipDataResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Dealership Data",
          "Premium",
          "Pro Plan Or Greater"
        ],
        "description": "Premium. Dealership information in a given zip code using the first 4 digits. Returns name, address, state, zipCode, and IDs.\nFor example a call with the zip code 92701 would return dealers with zip codes in the range [92700, 92709]",
        "operationId": "getDealers_getDealers_get",
        "summary": "Premium. Dealers in a zip code."
      }
    },
    "/getDealersByID": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dealerID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/DealershipDataResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Dealership Data",
          "Premium",
          "Pro Plan Or Greater"
        ],
        "description": "Premium. Dealership information using the internal ID. Returns name, address, state, zipCode, and ID for a single dealer in the same format as the /getDealers endpoint.\nDealer IDs are generally retrieved via the /getDealers or /getDealersByRegion endpoints.",
        "operationId": "getDealers_getDealersByID_get",
        "summary": "Premium. Dealers by ID"
      }
    },
    "/getDealersByRegion": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/DealershipDataPaginatedResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Dealership Data",
          "Premium",
          "Pro Plan Or Greater"
        ],
        "description": "Premium. Dealership information in a given region. Returns name, address, state, zipCode, and IDs. Results are paginated with up to 30 results per page.",
        "operationId": "getDealers_getDealersByRegion_get",
        "summary": "Premium. Dealers in a region."
      }
    },
    "/getInactiveModels": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/ModelResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Static Data",
          "Standard Plan Or Greater"
        ],
        "description": "Get all model names including discontinued models. Because these models are no longer built, or have very poor market performance\nthey are not incuded in the normal getModels endpoint. Many users itterate through the model names with our new vehicle sales\nendpoints and waste some of their quota making self contradictory requests. This endpoint was created to aleviate the use case where\nsomeone requests information on new vehicle sales for a model that has not been sold new for a long, long, time. \n\nThese names are used as arguments for other endpoints. The names are generally not case sensitive\nwhen used with other endpoints, but it is best practice to use the names returned by this endpoint without changes.",
        "operationId": "getModelNamesAll_getInactiveModels_get",
        "summary": "Get a list of model names including discontinued models"
      }
    },
    "/getModels": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/ModelResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Static Data",
          "Standard Plan Or Greater"
        ],
        "description": "Get brand model names for currently active models. This endpoint does not return model names that have been discontinued or have \nsold less than 10 vehicles in the last month and a half.\n\nThese names are used as arguments for other endpoints. The names are generally not case sensitive\nwhen used with other endpoints, but it is best practice to use the names returned by this endpoint without changes.",
        "operationId": "getModelNames_getModels_get",
        "summary": "Get a list of model names"
      }
    },
    "/getRegionBrandMarketShare": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Sales Data",
          "Ultra Plan Or Greater"
        ],
        "description": "Market share of a given brand in a given region by number of vehicles sold over the last 45 days.",
        "operationId": "getRegionBrandMarketShare_getRegionBrandMarketShare_get",
        "summary": "Market share of a brand in region"
      }
    },
    "/getRegionMarketShare": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Sales Data",
          "Premium",
          "Ultra Plan Or Greater"
        ],
        "description": "Market share of a all brands in a given region by number of vehicles sold over the last 45 days.",
        "operationId": "getRegionMarketShare_getRegionMarketShare_get",
        "summary": "Market share of all brands in region"
      }
    },
    "/getRegions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/RegionResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Static Data",
          "Standard Plan Or Greater"
        ],
        "description": "Get region names. These names are used as arguments for other endpoints. The names are generally not case sensitive\nwhen used with other endpoints, but it is best practice to use the names returned by this endpoint without changes.",
        "operationId": "getRegions_getRegions_get",
        "summary": "Get a list of region names"
      }
    },
    "/getSubUserKeys": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "apiID",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "apiKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Get a list of your issued SubUser API Keys. Includes active and revoked keys.",
        "operationId": "getSubUserKeys_getSubUserKeys_get",
        "summary": "Get all Sub User Keys associated with your account."
      }
    },
    "/getToken": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "apiID",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "apiKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/JSONWebToken"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This is the first function you should call. \n\nIf you are accessing our API through a third party provider they will handle authenticating to our API for you \nand you will not need call this function or retrieve a JSON Web Token. \n\nAll other functions require the JSON Web Token (JWT) from this function to \nbe incuded in their arguments. The value of the \"token\" field is the actual JWT and any other values in the returned JSON\nare metadata there for your convenience. Tokens are valid for a default of 24 hours (86400 seconds). If you try calling an\nAPI endpoint with a missing, invalid, or expired JWT it will return a HTTP 403 code. You would then need to call this end point\nto get a new token.",
        "operationId": "makeToken_getToken_get",
        "summary": "Get a JWT from your API credentials"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "apiID",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "apiKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/JSONWebToken"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This is the first function you should call. \n\nIf you are accessing our API through a third party provider they will handle authenticating to our API for you \nand you will not need call this function or retrieve a JSON Web Token. \n\nAll other functions require the JSON Web Token (JWT) from this function to \nbe incuded in their arguments. The value of the \"token\" field is the actual JWT and any other values in the returned JSON\nare metadata there for your convenience. Tokens are valid for a default of 24 hours (86400 seconds). If you try calling an\nAPI endpoint with a missing, invalid, or expired JWT it will return a HTTP 403 code. You would then need to call this end point\nto get a new token.",
        "operationId": "makeToken_getToken_post",
        "summary": "Get a JWT from your API credentials"
      }
    },
    "/listPrice": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/BasicModelStatsResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Pricing Data",
          "Standard Plan Or Greater"
        ],
        "description": "Average, median, standard deviation, and population variance of the ask price of new vehicles over the last 15 days for a given brand and region.\n\nThe available brand and region names can be retrieved from their respective endpoints.",
        "operationId": "getAvgListPrice_listPrice_get",
        "summary": "Stats on ask price of new vehicles"
      }
    },
    "/listings": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "dealerID",
            "required": true,
            "type": "integer"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": true,
            "in": "query",
            "name": "newCars",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/ListingResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Vehicle Data",
          "Ultra Plan Or Greater"
        ],
        "description": "Returns a dealer's listings over the last 45 days by dealer ID. The ID can be found by calling the /getDealers endpoint. \nListing keys are: vin, askPrice, msrp, isNew, firstSeen, lastSeen, modelName, brandName.\nResults are paginated in chunks of up to 20 vehicles. Prices are in the dealer's local currency (generally USD).",
        "operationId": "getListingsByDealer_listings_get",
        "summary": "Listings by Dealer ID"
      }
    },
    "/listingsByRegion": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "modelName",
            "required": true,
            "type": "string"
          },
          {
            "default": 45,
            "in": "query",
            "name": "daysBack",
            "required": false,
            "type": "integer"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": true,
            "in": "query",
            "name": "newCars",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/ListingResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Vehicle Data",
          "Ultra Plan Or Greater"
        ],
        "description": "Returns a dealer's listings over up to the last 45 days by region. \nListing keys are: vin, askPrice, msrp, isNew, firstSeen, lastSeen, modelName, brandName.\nResults are paginated in chunks of up to 20 vehicles. Prices are in the dealer's local currency (generally USD).",
        "operationId": "getListingsByRegion_listingsByRegion_get",
        "summary": "Listings by Region"
      }
    },
    "/listingsByRegionAndDate": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "modelName",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "startDate",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "endDate",
            "required": true,
            "type": "string"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": true,
            "in": "query",
            "name": "newCars",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/ListingResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Vehicle Data",
          "Ultra Plan Or Greater"
        ],
        "description": "Returns listings active in a region in the given date range [startdate, endDate), or in other words dates that satisfy startDate <= X < endDate. Maximum range is 45 days \nListing keys are: vin, askPrice, msrp, isNew, firstSeen, lastSeen, modelName, brandName.\nResults are paginated in chunks of up to 20 vehicles. Prices are in the dealer's local currency (generally USD).",
        "operationId": "getListingsByRegionAndDate_listingsByRegionAndDate_get",
        "summary": "Listings by Dealer ID"
      }
    },
    "/makeSubUserKey": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "apiID",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "apiKey",
            "required": true,
            "type": "string"
          },
          {
            "default": "localhost",
            "in": "query",
            "name": "siteName",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/SubUserJSONWebToken"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This endpoint is only fully available to users with a paid plan. Users on Basic or Trial plans may only create keys valid on the \"localhost\" domain.\nThis endpoint creates an API key that can be embedded in frontend applications such as web pages that allow your users to directly make API calls. \nThe \"endpoints\" value is an array of strings that name the allowed endpoints that may be called using the Sub User Key. Passing a \"*\" value in the array will allow\nall endpoints that require a JWT (JSON Web Token) to be called by the Sub User Key. The keys are valid for as long as your account is valid or you revoke the Sub User Key.\nAll API calls made by the Sub User Keys are billed to your account. Additionally you should not call this endpoint or the /revokeSubUserKey endpoint at a combined rate \nhigher than once per second. ",
        "operationId": "makeSubUserKey_makeSubUserKey_post",
        "summary": "Generate a Sub User Key that can be used by your users to make API calls in frontend applications."
      }
    },
    "/modelYearDist": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "modelName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/ModelYearDistResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Sales Data",
          "Standard Plan Or Greater"
        ],
        "description": "Market share of used vehicles over the last 45 days by model and year. All values are relative to vehicles of the same model.\nFor example: a percentOfMarket value of 25, year of 2017, and modelName of Camry means that 25% of used Camrys on the market \nin the given region over the last 45 days were from the 2017 model year.",
        "operationId": "getModelUsedDist_modelYearDist_get",
        "summary": "Used market share of model year by model"
      }
    },
    "/regionDailySales": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionName",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "day",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Sales Data",
          "Ultra Plan Or Greater"
        ],
        "description": "Get regional sales by brand and day. Most recent data is typically only 2 days old for this endpoint.\n    \nThe Day field is in YYYY-MM-DD format. For example if you wanted sales data from April 5th of 2020 the day field would be '2020-04-05'\n\nData availability depends on region and goes back up to 2016.",
        "operationId": "getDealerSales_regionDailySales_get",
        "summary": "Brand sales by region and Day"
      }
    },
    "/regionSales": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionName",
            "required": true,
            "type": "string"
          },
          {
            "format": "date",
            "in": "query",
            "name": "month",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Sales Data",
          "Premium",
          "Ultra Plan Or Greater"
        ],
        "description": "Premium. Get regional sales by brand and month, broken down by day. Most recent data is typically only 2 days old for this endpoint.\n    \nThe month field is in YYYY-MM-DD format. For example if you wanted sales data from April of 2020 the month field would be '2020-04-01'\n\nData availability depends on region and goes back up to 2016.",
        "operationId": "getDealerSales_regionSales_get",
        "summary": "Premium. Brand sales by region and month"
      }
    },
    "/revokeSubUserKey": {
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "apiID",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "apiKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "subUserKeyUUID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Revoke a SubUser API Key with the given UUID. This action can not be undone.",
        "operationId": "revokeSubUserKey_revokeSubUserKey_put",
        "summary": "Revoke a Sub User Key associated with your account."
      }
    },
    "/salePrice": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/BasicModelStatsResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Pricing Data",
          "Standard Plan Or Greater"
        ],
        "description": "Average, median, standard deviation, and population variance of the sale price of new vehicles over the last 15 days for a given brand and region.\n\nThe available brand and region names can be retrieved from their respective endpoints.",
        "operationId": "getAvgSalePrice_salePrice_get",
        "summary": "Stats on sale price of new vehicles"
      }
    },
    "/salePriceHistogram": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "modelName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "brandName",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/BucketResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Pricing Data",
          "Standard Plan Or Greater"
        ],
        "description": "Histogram of the sale price of vehicles over the last 45 days for a given model and region. \nPrice buckets are grouped in units of $1000\nThe available brand, model, and region names can be retrieved from their respective endpoints.",
        "operationId": "getModelSaleBuckets_salePriceHistogram_get",
        "summary": "Histogram of sales price of new vehicles by model"
      }
    },
    "/similarSalePrice": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "vin",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          },
          {
            "default": 45,
            "in": "query",
            "name": "daysBack",
            "required": false,
            "type": "integer"
          },
          {
            "default": false,
            "in": "query",
            "name": "sameYear",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/SimilarSalePriceResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Vehicle Data",
          "Premium",
          "Pricing Data",
          "Standard Plan Or Greater"
        ],
        "description": "Premium. Provides the average, stdDev, and count, of the sale price and mileage of similar new and used vehicles in a given region based off the provided VIN. \nOptionally restricts report to vehicles of the same model year and goes back up to 120 days.",
        "operationId": "getMarket3_similarSalePrice_get",
        "summary": "Premium. Simple Vehicle Market Report"
      }
    },
    "/topModels": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "default": "REGION_STATE_CA",
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/TopModelResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Sales Data",
          "Standard Plan Or Greater"
        ],
        "description": "Sales ranking of different models by region over the last 45 days. \nThe <strong>percentOfTopSales</strong> value is the percent of the top seller the model represents. \n\nFor example: a value of 80% means that model sold 8 vehicles for every 10 of the top model sold.\n\nThe other fields represent the model percent of X. The <strong>brandMarketShare</strong> field is that brand's market share of the region\nover the report's time interval.",
        "operationId": "getTopModels_topModels_get",
        "summary": "Top models in a given region"
      }
    },
    "/vehicleHistory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "vin",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/HistoryResp"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Vehicle Data",
          "Premium",
          "Pro Plan Or Greater"
        ],
        "description": "Premium. Provides a simple report detailing a vechicle's sales history at dealerships. Data includes the name of the dealership, dates it was for sale,\nprice, new/used condition, mileage, dealership state, and dealership zip code. The data for this endpoint is generally refreshed weekly.",
        "operationId": "getHistory2_vehicleHistory_get",
        "summary": "Premium. Simple Vehicle History Report"
      }
    },
    "/vinDecode": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jwt",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "vin",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "in": "query",
            "name": "passEmpty",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "tags": [
          "Vehicle Data",
          "Standard Plan Or Greater"
        ],
        "description": "Decodes the provided North American vin and provides recall information if available. \nWe require at least the first 12 out of 17 characters in the vin to attempt a decode. The vin is not case sensitive.\nIf passEmpty (default False) is True we will also include the empty fields in the response json. ",
        "operationId": "vinDecode_vinDecode_get",
        "summary": "Vin decoder and Recall Info"
      }
    }
  },
  "definitions": {
    "BasicModelStats": {
      "properties": {
        "average": {
          "title": "Average",
          "type": "number"
        },
        "median": {
          "title": "Median",
          "type": "number"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "pVariance": {
          "title": "Pvariance",
          "type": "number"
        },
        "stdDev": {
          "title": "Stddev",
          "type": "number"
        }
      },
      "required": [
        "name",
        "average",
        "median",
        "stdDev",
        "pVariance"
      ],
      "title": "BasicModelStats",
      "type": "object"
    },
    "BasicModelStatsResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/BasicModelStats"
          },
          "title": "Data",
          "type": "array"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "BasicModelStatsResp",
      "type": "object"
    },
    "BrandResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "items": {
            "type": "string"
          },
          "title": "Data",
          "type": "array"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "BrandResp",
      "type": "object"
    },
    "BucketEntry": {
      "properties": {
        "bucket": {
          "title": "Bucket",
          "type": "number"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "percentOfMarket": {
          "title": "Percentofmarket",
          "type": "number"
        }
      },
      "required": [
        "percentOfMarket",
        "bucket",
        "modelName"
      ],
      "title": "BucketEntry",
      "type": "object"
    },
    "BucketResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/BucketEntry"
          },
          "title": "Data",
          "type": "array"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "BucketResp",
      "type": "object"
    },
    "DealershipData": {
      "properties": {
        "address": {
          "title": "Address",
          "type": "string"
        },
        "dealerName": {
          "title": "Dealername",
          "type": "string"
        },
        "ids": {
          "items": {
            "type": "integer"
          },
          "title": "Ids",
          "type": "array"
        },
        "state": {
          "title": "State",
          "type": "string"
        },
        "zipCode": {
          "title": "Zipcode",
          "type": "integer"
        }
      },
      "required": [
        "dealerName",
        "zipCode",
        "state",
        "address",
        "ids"
      ],
      "title": "DealershipData",
      "type": "object"
    },
    "DealershipDataPaginated": {
      "properties": {
        "dealers": {
          "items": {
            "$ref": "#/definitions/DealershipData"
          },
          "title": "Dealers",
          "type": "array"
        },
        "maxPages": {
          "title": "Maxpages",
          "type": "integer"
        },
        "page": {
          "title": "Page",
          "type": "integer"
        }
      },
      "required": [
        "page",
        "maxPages",
        "dealers"
      ],
      "title": "DealershipDataPaginated",
      "type": "object"
    },
    "DealershipDataPaginatedResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/DealershipDataPaginated"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "DealershipDataPaginatedResp",
      "type": "object"
    },
    "DealershipDataResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/DealershipData"
          },
          "title": "Data",
          "type": "array"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "DealershipDataResp",
      "type": "object"
    },
    "EndpointList": {
      "properties": {
        "endPoints": {
          "default": [
            "*"
          ],
          "items": {
            "type": "string"
          },
          "title": "Endpoints",
          "type": "array"
        }
      },
      "title": "EndpointList",
      "type": "object"
    },
    "GenericResponse": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "title": "Data"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "title": "GenericResponse",
      "type": "object"
    },
    "HTTPValidationError": {
      "properties": {
        "detail": {
          "items": {
            "$ref": "#/definitions/ValidationError"
          },
          "title": "Detail",
          "type": "array"
        }
      },
      "title": "HTTPValidationError",
      "type": "object"
    },
    "HistoryResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/VehHistoryData"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "HistoryResp",
      "type": "object"
    },
    "JSONWebToken": {
      "properties": {
        "createdOn": {
          "title": "Createdon",
          "type": "integer"
        },
        "expires": {
          "title": "Expires",
          "type": "integer"
        },
        "token": {
          "title": "Token",
          "type": "string"
        }
      },
      "required": [
        "token"
      ],
      "title": "JSONWebToken",
      "type": "object"
    },
    "Listing": {
      "properties": {
        "askPrice": {
          "title": "Askprice",
          "type": "number"
        },
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "color": {
          "title": "Color",
          "type": "string"
        },
        "dealerID": {
          "title": "Dealerid",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date",
          "title": "Firstseen",
          "type": "string"
        },
        "interiorColor": {
          "title": "Interiorcolor",
          "type": "string"
        },
        "isNew": {
          "title": "Isnew",
          "type": "boolean"
        },
        "lastSeen": {
          "format": "date",
          "title": "Lastseen",
          "type": "string"
        },
        "mileage": {
          "default": 0,
          "title": "Mileage",
          "type": "number"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msrp": {
          "title": "Msrp",
          "type": "number"
        },
        "vin": {
          "title": "Vin",
          "type": "string"
        },
        "vinDecode": {
          "default": {},
          "title": "Vindecode",
          "type": "object"
        },
        "year": {
          "title": "Year",
          "type": "number"
        }
      },
      "required": [
        "vin",
        "askPrice",
        "msrp",
        "isNew",
        "firstSeen",
        "lastSeen",
        "modelName",
        "brandName",
        "year",
        "dealerID"
      ],
      "title": "Listing",
      "type": "object"
    },
    "ListingResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/ListingRespPaginated"
        },
        "endDate": {
          "format": "date",
          "title": "Enddate",
          "type": "string"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "title": "Startdate",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "ListingResp",
      "type": "object"
    },
    "ListingRespPaginated": {
      "properties": {
        "listings": {
          "items": {
            "$ref": "#/definitions/Listing"
          },
          "title": "Listings",
          "type": "array"
        },
        "maxPages": {
          "title": "Maxpages",
          "type": "integer"
        },
        "page": {
          "title": "Page",
          "type": "integer"
        }
      },
      "required": [
        "page",
        "maxPages",
        "listings"
      ],
      "title": "ListingRespPaginated",
      "type": "object"
    },
    "ModelDict": {
      "properties": {
        "modelName": {
          "title": "Modelname",
          "type": "string"
        }
      },
      "required": [
        "modelName"
      ],
      "title": "ModelDict",
      "type": "object"
    },
    "ModelResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/ModelDict"
          },
          "title": "Data",
          "type": "array"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "ModelResp",
      "type": "object"
    },
    "ModelYearDistEntry": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "percentOfMarket": {
          "title": "Percentofmarket",
          "type": "number"
        },
        "year": {
          "title": "Year",
          "type": "integer"
        }
      },
      "required": [
        "percentOfMarket",
        "modelName",
        "year",
        "brandName"
      ],
      "title": "ModelYearDistEntry",
      "type": "object"
    },
    "ModelYearDistResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/ModelYearDistEntry"
          },
          "title": "Data",
          "type": "array"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "ModelYearDistResp",
      "type": "object"
    },
    "RegionResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "items": {
            "type": "string"
          },
          "title": "Data",
          "type": "array"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "RegionResp",
      "type": "object"
    },
    "SimilarSalePriceData": {
      "properties": {
        "daysBack": {
          "title": "Daysback",
          "type": "integer"
        },
        "mileCount": {
          "title": "Milecount",
          "type": "integer"
        },
        "milesAvg": {
          "title": "Milesavg",
          "type": "number"
        },
        "milesStdDev": {
          "title": "Milesstddev",
          "type": "number"
        },
        "newCount": {
          "title": "Newcount",
          "type": "integer"
        },
        "newSaleAvg": {
          "title": "Newsaleavg",
          "type": "number"
        },
        "newSaleStdDev": {
          "title": "Newsalestddev",
          "type": "number"
        },
        "usedCount": {
          "title": "Usedcount",
          "type": "integer"
        },
        "usedSaleAvg": {
          "title": "Usedsaleavg",
          "type": "number"
        },
        "usedSaleStdDev": {
          "title": "Usedsalestddev",
          "type": "number"
        }
      },
      "required": [
        "newSaleAvg",
        "newSaleStdDev",
        "newCount",
        "usedSaleAvg",
        "usedSaleStdDev",
        "usedCount",
        "milesAvg",
        "milesStdDev",
        "mileCount",
        "daysBack"
      ],
      "title": "SimilarSalePriceData",
      "type": "object"
    },
    "SimilarSalePriceResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/SimilarSalePriceData"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "SimilarSalePriceResp",
      "type": "object"
    },
    "SubUserJSONWebToken": {
      "properties": {
        "createdOn": {
          "title": "Createdon",
          "type": "integer"
        },
        "domain": {
          "title": "Domain",
          "type": "string"
        },
        "endPoints": {
          "default": [
            "*"
          ],
          "items": {
            "type": "string"
          },
          "title": "Endpoints",
          "type": "array"
        },
        "expires": {
          "title": "Expires",
          "type": "integer"
        },
        "token": {
          "title": "Token",
          "type": "string"
        },
        "uuid": {
          "title": "Uuid",
          "type": "string"
        }
      },
      "required": [
        "token",
        "domain",
        "uuid"
      ],
      "title": "SubUserJSONWebToken",
      "type": "object"
    },
    "TopModelEntry": {
      "properties": {
        "brandMarketShare": {
          "title": "Brandmarketshare",
          "type": "number"
        },
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "percentOfBrandSales": {
          "title": "Percentofbrandsales",
          "type": "number"
        },
        "percentOfTopSales": {
          "title": "Percentoftopsales",
          "type": "number"
        }
      },
      "required": [
        "percentOfTopSales",
        "modelName",
        "brandName",
        "percentOfBrandSales",
        "brandMarketShare"
      ],
      "title": "TopModelEntry",
      "type": "object"
    },
    "TopModelResp": {
      "properties": {
        "brandName": {
          "title": "Brandname",
          "type": "string"
        },
        "cacheTimeLimit": {
          "default": 600,
          "title": "Cachetimelimit",
          "type": "integer"
        },
        "condition": {
          "title": "Condition",
          "type": "string"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/TopModelEntry"
          },
          "title": "Data",
          "type": "array"
        },
        "modelName": {
          "title": "Modelname",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "type": "string"
        },
        "regionName": {
          "title": "Regionname",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "title": "TopModelResp",
      "type": "object"
    },
    "ValidationError": {
      "properties": {
        "loc": {
          "items": {
            "type": "string"
          },
          "title": "Location",
          "type": "array"
        },
        "msg": {
          "title": "Message",
          "type": "string"
        },
        "type": {
          "title": "Error Type",
          "type": "string"
        }
      },
      "required": [
        "loc",
        "msg",
        "type"
      ],
      "title": "ValidationError",
      "type": "object"
    },
    "VehHistory": {
      "properties": {
        "dealerName": {
          "title": "Dealername",
          "type": "string"
        },
        "firstSeen": {
          "format": "date",
          "title": "Firstseen",
          "type": "string"
        },
        "lastSeen": {
          "format": "date",
          "title": "Lastseen",
          "type": "string"
        },
        "miles": {
          "title": "Miles",
          "type": "integer"
        },
        "new": {
          "title": "New",
          "type": "boolean"
        },
        "price": {
          "title": "Price",
          "type": "number"
        },
        "state": {
          "title": "State",
          "type": "string"
        },
        "zip": {
          "title": "Zip",
          "type": "integer"
        }
      },
      "required": [
        "dealerName",
        "firstSeen",
        "lastSeen",
        "price",
        "new",
        "miles",
        "state",
        "zip"
      ],
      "title": "VehHistory",
      "type": "object"
    },
    "VehHistoryData": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/VehHistory"
          },
          "title": "Data",
          "type": "array"
        },
        "vin": {
          "title": "Vin",
          "type": "string"
        }
      },
      "required": [
        "vin",
        "data"
      ],
      "title": "VehHistoryData",
      "type": "object"
    }
  },
  "x-components": {}
}