{
  "swagger": "2.0",
  "info": {
    "description": "API integration layer for linked biological objects.\n\n __Source:__ https://github.com/biolink/biolink-api/",
    "license": {
      "name": "BSD3"
    },
    "title": "BioLink API",
    "version": "1.0.1",
    "x-apisguru-categories": [
      "open_data"
    ],
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://api.monarchinitiative.org/api/swagger.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "monarchinitiative.org",
    "x-datafire": {
      "name": "monarchinitiative",
      "type": "openapi"
    }
  },
  "basePath": "/api",
  "paths": {
    "/association/between/{subject}/{object}": {
      "parameters": [
        {
          "description": "Return associations pointing to this node, e.g. MP:0013765. Can also be a biological entity such as a gene",
          "in": "path",
          "name": "object",
          "required": true,
          "type": "string"
        },
        {
          "description": "Return associations emanating from this node, e.g. MGI:1342287 (If ID is from an ontology then results would include inferred associations, by default)",
          "in": "path",
          "name": "subject",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "association"
        ],
        "description": "Given two entities (e.g. a particular gene and a particular disease), if these two entities\nare connected (directly or indirectly), then return the association objects describing\nthe connection.",
        "operationId": "get_associations_between",
        "summary": "Returns associations connecting two entities"
      }
    },
    "/association/find/{subject_category}": {
      "parameters": [
        {
          "description": "Category of entity at link Subject (source), e.g. gene, disease, phenotype",
          "in": "path",
          "name": "subject_category",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "description": "Subject taxon ID, e.g. NCBITaxon:9606 (Includes inferred associations, by default)",
            "in": "query",
            "name": "subject_taxon",
            "type": "string"
          },
          {
            "description": "Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)",
            "in": "query",
            "name": "object_taxon",
            "type": "string"
          },
          {
            "description": "Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc.",
            "in": "query",
            "name": "relation",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "association"
        ],
        "operationId": "get_association_by_subject_category_search",
        "summary": "Returns list of matching associations for a given subject category"
      }
    },
    "/association/find/{subject_category}/{object_category}": {
      "parameters": [
        {
          "description": "Category of entity at link Object (target), e.g. gene, disease, phenotype",
          "in": "path",
          "name": "object_category",
          "required": true,
          "type": "string"
        },
        {
          "description": "Category of entity at link Subject (source), e.g. gene, disease, phenotype",
          "in": "path",
          "name": "subject_category",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "description": "Subject CURIE",
            "in": "query",
            "name": "subject",
            "type": "string"
          },
          {
            "description": "Object CURIE",
            "in": "query",
            "name": "object",
            "type": "string"
          },
          {
            "description": "Subject taxon ID, e.g. NCBITaxon:9606 (Includes inferred associations, by default)",
            "in": "query",
            "name": "subject_taxon",
            "type": "string"
          },
          {
            "description": "Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)",
            "in": "query",
            "name": "object_taxon",
            "type": "string"
          },
          {
            "description": "Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc.",
            "in": "query",
            "name": "relation",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "association"
        ],
        "operationId": "get_association_by_subject_and_object_category_search",
        "summary": "Returns list of matching associations between a given subject and object category"
      }
    },
    "/association/from/{subject}": {
      "parameters": [
        {
          "description": "Return associations emanating from this node, e.g. NCBIGene:84570, ZFIN:ZDB-GENE-050417-357 (If ID is from an ontology then results would include inferred associations, by default)",
          "in": "path",
          "name": "subject",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "description": "Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)",
            "in": "query",
            "name": "object_taxon",
            "type": "string"
          },
          {
            "description": "Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc.",
            "in": "query",
            "name": "relation",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "association"
        ],
        "operationId": "get_associations_from",
        "summary": "Returns list of matching associations starting from a given subject (source)"
      }
    },
    "/association/to/{object}": {
      "parameters": [
        {
          "description": "Return associations pointing to this node, e.g. specifying MP:0013765 will return all genes, variants, strains, etc. annotated with this term. Can also be a biological entity such as a gene",
          "in": "path",
          "name": "object",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "association"
        ],
        "operationId": "get_associations_to",
        "summary": "Returns list of matching associations pointing to a given object (target)"
      }
    },
    "/association/type/{association_type}": {
      "parameters": [
        {
          "description": "Association type, eg gene_phenotype",
          "in": "path",
          "name": "association_type",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "description": "Subject CURIE",
            "in": "query",
            "name": "subject",
            "type": "string"
          },
          {
            "description": "Object CURIE",
            "in": "query",
            "name": "object",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "association"
        ],
        "operationId": "get_association_by_subject_and_assoc_type",
        "summary": "Returns list of matching associations of a given type"
      }
    },
    "/association/{id}": {
      "parameters": [
        {
          "description": "identifier for an association, e.g. f5ba436c-f851-41b3-9d9d-bb2b5fc879d4",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "association"
        ],
        "description": "An association connects, at a minimum, two things, designated subject and object,\nvia some relationship. Associations also include evidence, provenance etc.",
        "operationId": "get_association_object",
        "summary": "Returns the association with a given identifier"
      }
    },
    "/bioentity/anatomy/{id}/genes": {
      "parameters": [
        {
          "description": "CURIE identifier of anatomical entity, e.g. GO:0005634 (nucleus), UBERON:0002037 (cerebellum), CL:0000540 (neuron). Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_anatomy_gene_associations",
        "summary": "Returns genes associated with a given anatomy"
      }
    },
    "/bioentity/anatomy/{id}/genes/{taxid}": {
      "parameters": [
        {
          "description": "Species or high level taxon grouping, e.g  NCBITaxon:10090 (Mus musculus)",
          "in": "path",
          "name": "taxid",
          "required": true,
          "type": "string"
        },
        {
          "description": "CURIE identifier of anatomical entity, e.g. GO:0005634 (nucleus), UBERON:0002037 (cerebellum), CL:0000540 (neuron). Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentity"
        ],
        "deprecated": true,
        "description": "For example, + NCBITaxon:10090 (mouse)",
        "operationId": "get_anatomy_gene_by_taxon_associations",
        "summary": "Returns gene IDs for all genes associated with a given anatomy, filtered by taxon"
      }
    },
    "/bioentity/case/{id}/diseases": {
      "parameters": [
        {
          "description": "CURIE identifier for a case",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_case_disease_associations",
        "summary": "Returns diseases associated with a case"
      }
    },
    "/bioentity/case/{id}/genotypes": {
      "parameters": [
        {
          "description": "CURIE identifier for a case",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_case_genotype_associations",
        "summary": "Returns genotypes associated with a case"
      }
    },
    "/bioentity/case/{id}/models": {
      "parameters": [
        {
          "description": "CURIE identifier for a case",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_case_model_associations",
        "summary": "Returns models associated with a case"
      }
    },
    "/bioentity/case/{id}/phenotypes": {
      "parameters": [
        {
          "description": "CURIE identifier for a case",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_case_phenotype_associations",
        "summary": "Returns phenotypes associated with a case"
      }
    },
    "/bioentity/case/{id}/variants": {
      "parameters": [
        {
          "description": "CURIE identifier for a case",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_case_variant_associations",
        "summary": "Returns variants associated with a case"
      }
    },
    "/bioentity/disease/{id}/cases": {
      "parameters": [
        {
          "description": "CURIE identifier of disease, e.g. MONDO:0007103, MONDO:0010918. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_disease_case_associations",
        "summary": "Returns cases associated with a disease"
      }
    },
    "/bioentity/disease/{id}/genes": {
      "parameters": [
        {
          "description": "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "default": "both",
            "description": "Additional filters: causal, non_causal, both",
            "enum": [
              "causal",
              "non_causal",
              "both"
            ],
            "in": "query",
            "name": "association_type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_disease_gene_associations",
        "summary": "Returns genes associated with a disease"
      }
    },
    "/bioentity/disease/{id}/genotypes": {
      "parameters": [
        {
          "description": "CURIE identifier of disease, e.g. Orphanet:399158, DOID:0080008. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_disease_genotype_associations",
        "summary": "Returns genotypes associated with a disease"
      }
    },
    "/bioentity/disease/{id}/models": {
      "parameters": [
        {
          "description": "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "description": "In the association object returned, the subject will be the disease, and the object will be the model.\nThe model may be a gene or genetic element.\n\nIf the query disease is a general class, the association subject may be to a specific disease.\n\nIn some cases the association will be *direct*, for example if a paper asserts a genotype is a model of a disease.\n\nIn other cases, the association will be *indirect*, for\nexample, chaining over orthology. In these cases the chain\nwill be reflected in the *evidence graph*\n\n* TODO: provide hook into owlsim for dynamic computation of models by similarity",
        "operationId": "get_disease_model_associations",
        "summary": "Returns associations to models of the disease"
      }
    },
    "/bioentity/disease/{id}/models/{taxon}": {
      "parameters": [
        {
          "description": "CURIE of organism taxonomy class to constrain models, e.g NCBITaxon:10090 (M. musculus).\n\n Higher level taxa may be used",
          "in": "path",
          "name": "taxon",
          "required": true,
          "type": "string"
        },
        {
          "description": "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "deprecated": true,
        "description": "See /disease/<id>/models route for full details",
        "operationId": "get_disease_model_taxon_associations",
        "summary": "Returns associations to models of the disease constrained by taxon"
      }
    },
    "/bioentity/disease/{id}/pathways": {
      "parameters": [
        {
          "description": "CURIE identifier of disease, e.g. DOID:4450. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_disease_pathway_associations",
        "summary": "Returns pathways associated with a disease"
      }
    },
    "/bioentity/disease/{id}/phenotypes": {
      "parameters": [
        {
          "description": "CURIE identifier of disease, e.g. OMIM:605543, Orphanet:1934, DOID:678. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/D2PAssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_disease_phenotype_associations",
        "summary": "Returns phenotypes associated with disease"
      }
    },
    "/bioentity/disease/{id}/publications": {
      "parameters": [
        {
          "description": "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_disease_publication_associations",
        "summary": "Returns publications associated with a disease"
      }
    },
    "/bioentity/disease/{id}/treatment": {
      "parameters": [
        {
          "description": "CURIE identifier of disease, e.g. DOID:2841 (asthma). Equivalent IDs not yet supported",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentity"
        ],
        "description": "e.g. drugs or small molecules used to treat",
        "operationId": "get_disease_substance_associations",
        "summary": "Returns substances associated with a disease"
      }
    },
    "/bioentity/disease/{id}/variants": {
      "parameters": [
        {
          "description": "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_disease_variant_associations",
        "summary": "Returns variants associated with a disease"
      }
    },
    "/bioentity/function/{id}": {
      "parameters": [
        {
          "description": "CURIE identifier of a function term (e.g. GO:0044598)",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "default": 0,
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "evidence",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_function_associations",
        "summary": "Returns annotations associated to a function term"
      }
    },
    "/bioentity/function/{id}/genes": {
      "parameters": [
        {
          "description": "CURIE identifier of a GO term, e.g. GO:0044598",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "default": "involved_in",
            "description": "relationship type ('involved_in', 'involved_in_regulation_of' or 'acts_upstream_of_or_within')",
            "enum": [
              "involved_in",
              "involved_in_regulation_of",
              "acts_upstream_of_or_within"
            ],
            "in": "query",
            "name": "relationship_type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_function_gene_associations",
        "summary": "Returns genes associated to a GO term"
      }
    },
    "/bioentity/function/{id}/publications": {
      "parameters": [
        {
          "description": "CURIE identifier of a GO term, e.g. GO:0044598",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "default": 0,
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "evidence",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_function_publication_associations",
        "summary": "Returns publications associated to a GO term"
      }
    },
    "/bioentity/function/{id}/taxons": {
      "parameters": [
        {
          "description": "CURIE identifier of a GO term, e.g. GO:0044598",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "default": 0,
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "evidence",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_function_taxon_associations",
        "summary": "Returns taxons associated to a GO term"
      }
    },
    "/bioentity/gene/{id}/anatomy": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. NCBIGene:13434",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_anatomy_associations",
        "summary": "Returns anatomical entities associated with a gene"
      }
    },
    "/bioentity/gene/{id}/cases": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. HGNC:613, HGNC:11025",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_case_associations",
        "summary": "Returns cases associated with a gene"
      }
    },
    "/bioentity/gene/{id}/diseases": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. NCBIGene:4750. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "default": "both",
            "description": "Additional filters: causal, non_causal, both",
            "enum": [
              "causal",
              "non_causal",
              "both"
            ],
            "in": "query",
            "name": "association_type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_disease_associations",
        "summary": "Returns diseases associated with gene"
      }
    },
    "/bioentity/gene/{id}/expression/anatomy": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. NCBIGene:4750. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_expression_associations",
        "summary": "Returns expression events for a gene"
      }
    },
    "/bioentity/gene/{id}/function": {
      "parameters": [
        {
          "description": "id, e.g. NCBIGene:6469. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "description": "IMPLEMENTATION DETAILS\n----------------------\n\nNote: currently this is implemented as a query to the GO/AmiGO solr instance.\nThis directly supports IDs such as:\n\n - ZFIN e.g. ZFIN:ZDB-GENE-050417-357\n\nNote that the AmiGO GOlr natively stores MGI annotations to MGI:MGI:nn. However,\nthe standard for biolink is MGI:nnnn, so you should use this (will be transparently\nmapped to legacy ID)\n\nAdditionally, for some species such as Human, GO has the annotation attached to the UniProt ID.\nAgain, this should be transparently handled; e.g. you can use NCBIGene:6469, and this will be\nmapped behind the scenes for querying.",
        "operationId": "get_gene_function_associations",
        "summary": "Returns function associations for a gene"
      }
    },
    "/bioentity/gene/{id}/genotypes": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. ZFIN:ZDB-GENE-980526-166",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_genotype_associations",
        "summary": "Returns genotypes associated with a gene"
      }
    },
    "/bioentity/gene/{id}/homologs": {
      "parameters": [
        {
          "description": "id, e.g. NCBIGene:3630. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Taxon CURIE of homolog, e.g. NCBITaxon:9606 (Can be an ancestral node in the ontology; includes inferred associations by default)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "description": "P (paralog), O (Ortholog) or LDO (least-diverged ortholog)",
            "enum": [
              "P",
              "O",
              "LDO"
            ],
            "in": "query",
            "name": "homology_type",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_homolog_associations",
        "summary": "Returns homologs for a gene"
      }
    },
    "/bioentity/gene/{id}/interactions": {
      "parameters": [
        {
          "description": "id, e.g. NCBIGene:3630. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_interactions",
        "summary": "Returns interactions for a gene"
      }
    },
    "/bioentity/gene/{id}/models": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. NCBIGene:17988",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_model_associations",
        "summary": "Returns models associated with a gene"
      }
    },
    "/bioentity/gene/{id}/ortholog/diseases": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. NCBIGene:4750",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_ortholog_disease_associations",
        "summary": "Return diseases associated with orthologs of a gene"
      }
    },
    "/bioentity/gene/{id}/ortholog/phenotypes": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. NCBIGene:4750",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_ortholog_phenotype_associations",
        "summary": "Return phenotypes associated with orthologs for a gene"
      }
    },
    "/bioentity/gene/{id}/pathways": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. NCBIGene:50846. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_pathway_associations",
        "summary": "Returns pathways associated with gene"
      }
    },
    "/bioentity/gene/{id}/phenotypes": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. NCBIGene:4750. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_phenotype_associations",
        "summary": "Returns phenotypes associated with gene"
      }
    },
    "/bioentity/gene/{id}/publications": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. NCBIGene:4750",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_publication_associations",
        "summary": "Returns publications associated with a gene"
      }
    },
    "/bioentity/gene/{id}/variants": {
      "parameters": [
        {
          "description": "CURIE identifier of gene, e.g. HGNC:10896",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_gene_variant_associations",
        "summary": "Returns variants associated with a gene"
      }
    },
    "/bioentity/genotype/{id}/cases": {
      "parameters": [
        {
          "description": "CURIE identifier of genotype, e.g. dbSNPIndividual:10440, dbSNPIndividual:22633",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_genotype_case_associations",
        "summary": "Returns cases associated with a genotype"
      }
    },
    "/bioentity/genotype/{id}/diseases": {
      "parameters": [
        {
          "description": "CURIE identifier of genotype, e.g. dbSNPIndividual:11441 (if non-human will return models)",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_genotype_disease_associations",
        "summary": "Returns diseases associated with a genotype"
      }
    },
    "/bioentity/genotype/{id}/genes": {
      "parameters": [
        {
          "description": "CURIE identifier of genotype, e.g. ZFIN:ZDB-FISH-150901-6607",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_genotype_gene_associations",
        "summary": "Returns genes associated with a genotype"
      }
    },
    "/bioentity/genotype/{id}/genotypes": {
      "parameters": [
        {
          "description": "CURIE identifier of genotype, e.g. ZFIN:ZDB-FISH-150901-6607",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "description": "Genotypes may be related to one another according to the GENO model",
        "operationId": "get_genotype_genotype_associations",
        "summary": "Returns genotypes-genotype associations"
      }
    },
    "/bioentity/genotype/{id}/models": {
      "parameters": [
        {
          "description": "CURIE identifier of genotype, e.g. ZFIN:ZDB-FISH-150901-6607",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_genotype_model_associations",
        "summary": "Returns models associated with a genotype"
      }
    },
    "/bioentity/genotype/{id}/phenotypes": {
      "parameters": [
        {
          "description": "CURIE identifier of genotype, e.g. ZFIN:ZDB-FISH-150901-4286",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_genotype_phenotype_associations",
        "summary": "Returns phenotypes associated with a genotype"
      }
    },
    "/bioentity/genotype/{id}/publications": {
      "parameters": [
        {
          "description": "CURIE identifier of genotype, e.g. ZFIN:ZDB-FISH-150901-6607",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_genotype_publication_associations",
        "summary": "Returns publications associated with a genotype"
      }
    },
    "/bioentity/genotype/{id}/variants": {
      "parameters": [
        {
          "description": "CURIE identifier of genotype, e.g. MONARCH:FBgeno422705",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_genotype_variant_associations",
        "summary": "Returns genotypes-variant associations"
      }
    },
    "/bioentity/goterm/{id}/genes": {
      "parameters": [
        {
          "description": "CURIE identifier of a GO term, e.g. GO:0044598",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "default": "involved_in",
            "description": "relationship type ('involved_in', 'involved_in_regulation_of' or 'acts_upstream_of_or_within')",
            "enum": [
              "involved_in",
              "involved_in_regulation_of",
              "acts_upstream_of_or_within"
            ],
            "in": "query",
            "name": "relationship_type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "deprecated": true,
        "operationId": "get_goterm_gene_associations",
        "summary": "Returns associations to GO terms for a gene"
      }
    },
    "/bioentity/model/{id}/cases": {
      "parameters": [
        {
          "description": "CURIE identifier for a model, e.g. Coriell:GM22295, Coriell:HG02187",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_model_case_associations",
        "summary": "Returns cases associated with a model"
      }
    },
    "/bioentity/model/{id}/diseases": {
      "parameters": [
        {
          "description": "CURIE identifier for a model, e.g. MGI:5573196",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_model_disease_associations",
        "summary": "Returns diseases associated with a model"
      }
    },
    "/bioentity/model/{id}/genes": {
      "parameters": [
        {
          "description": "CURIE identifier for a model, e.g. MMRRC:042787",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_model_gene_associations",
        "summary": "Returns genes associated with a model"
      }
    },
    "/bioentity/model/{id}/genotypes": {
      "parameters": [
        {
          "description": "CURIE identifier for a model, e.g. Coriell:NA16660",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_model_genotype_associations",
        "summary": "Returns genotypes associated with a model"
      }
    },
    "/bioentity/model/{id}/phenotypes": {
      "parameters": [
        {
          "description": "id",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_model_phenotype_associations",
        "summary": "Returns phenotypes associated with a model"
      }
    },
    "/bioentity/model/{id}/publications": {
      "parameters": [
        {
          "description": "CURIE identifier for a model, e.g. MGI:5644542",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_model_publication_associations",
        "summary": "Returns publications associated with a model"
      }
    },
    "/bioentity/model/{id}/variants": {
      "parameters": [
        {
          "description": "CURIE identifier for a model, e.g. MMRRC:042787",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_model_variant_associations",
        "summary": "Returns variants associated with a model"
      }
    },
    "/bioentity/pathway/{id}/diseases": {
      "parameters": [
        {
          "description": "CURIE any pathway element. E.g. REACT:R-HSA-5387390",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_pathway_disease_associations",
        "summary": "Returns diseases associated with a pathway"
      }
    },
    "/bioentity/pathway/{id}/genes": {
      "parameters": [
        {
          "description": "CURIE any pathway element. E.g. REACT:R-HSA-5387390",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_pathway_gene_associations",
        "summary": "Returns genes associated with a pathway"
      }
    },
    "/bioentity/pathway/{id}/phenotypes": {
      "parameters": [
        {
          "description": "CURIE any pathway element. E.g. REACT:R-HSA-5387390",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_pathway_phenotype_associations",
        "summary": "Returns phenotypes associated with a pathway"
      }
    },
    "/bioentity/phenotype/{id}/anatomy": {
      "parameters": [
        {
          "description": "CURIE identifier of phenotype, e.g. MP:0008521. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/NamedObject"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "description": "Example IDs:\n\n * MP:0008521 abnormal Bowman membrane",
        "operationId": "get_phenotype_anatomy_associations",
        "summary": "Returns anatomical entities associated with a phenotype"
      }
    },
    "/bioentity/phenotype/{id}/cases": {
      "parameters": [
        {
          "description": "Pheno class CURIE identifier, e.g  HP:0011951 (Aspiration pneumonia), HP:0002450 (Abnormal motor neuron morphology)",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_phenotype_case_associations",
        "summary": "Returns cases associated with a phenotype"
      }
    },
    "/bioentity/phenotype/{id}/diseases": {
      "parameters": [
        {
          "description": "CURIE identifier of phenotype, e.g. HP:0007359. Equivalent IDs can be used with same results",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/D2PAssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_phenotype_disease_associations",
        "summary": "Returns diseases associated with a phenotype"
      }
    },
    "/bioentity/phenotype/{id}/gene/{taxid}/ids": {
      "parameters": [
        {
          "description": "Species or high level taxon grouping, e.g  NCBITaxon:10090 (Mus musculus)",
          "in": "path",
          "name": "taxid",
          "required": true,
          "type": "string"
        },
        {
          "description": "Pheno class CURIE identifier, e.g  MP:0001569 (abnormal circulating bilirubin level)",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentity"
        ],
        "deprecated": true,
        "description": "For example, MP:0001569 + NCBITaxon:10090 (mouse)",
        "operationId": "get_phenotype_gene_by_taxon_associations",
        "summary": "Returns gene IDs for all genes associated with a given phenotype, filtered by taxon"
      }
    },
    "/bioentity/phenotype/{id}/genes": {
      "parameters": [
        {
          "description": "Pheno class CURIE identifier, e.g  WBPhenotype:0000180 (axon morphology variant), MP:0001569 (abnormal circulating bilirubin level), ",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_phenotype_gene_associations",
        "summary": "Returns genes associated with a phenotype"
      }
    },
    "/bioentity/phenotype/{id}/genotypes": {
      "parameters": [
        {
          "description": "Pheno class CURIE identifier, e.g  WBPhenotype:0000180 (axon morphology variant), MP:0001569 (abnormal circulating bilirubin level)",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_phenotype_genotype_associations",
        "summary": "Returns genotypes associated with a phenotype"
      }
    },
    "/bioentity/phenotype/{id}/pathways": {
      "parameters": [
        {
          "description": "Pheno class CURIE identifier, e.g  MP:0001569 (abnormal circulating bilirubin level)",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_phenotype_pathway_associations",
        "summary": "Returns pathways associated with a phenotype"
      }
    },
    "/bioentity/phenotype/{id}/publications": {
      "parameters": [
        {
          "description": "Pheno class CURIE identifier, e.g  WBPhenotype:0000180 (axon morphology variant), MP:0001569 (abnormal circulating bilirubin level)",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_phenotype_publication_associations",
        "summary": "Returns publications associated with a phenotype"
      }
    },
    "/bioentity/phenotype/{id}/variants": {
      "parameters": [
        {
          "description": "Pheno class CURIE identifier, e.g  WBPhenotype:0000180 (axon morphology variant), MP:0001569 (abnormal circulating bilirubin level)",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_phenotype_variant_associations",
        "summary": "Returns variants associated with a phenotype"
      }
    },
    "/bioentity/publication/{id}/diseases": {
      "parameters": [
        {
          "description": "CURIE identifier for a publication, e.g. PMID:11751940",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_publication_disease_associations",
        "summary": "Returns diseases associated with a publication"
      }
    },
    "/bioentity/publication/{id}/genes": {
      "parameters": [
        {
          "description": "CURIE identifier for a publication, e.g. PMID:11751940",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_publication_gene_associations",
        "summary": "Returns genes associated with a publication"
      }
    },
    "/bioentity/publication/{id}/genotypes": {
      "parameters": [
        {
          "description": "CURIE identifier for a publication, e.g. PMID:11751940",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_publication_genotype_associations",
        "summary": "Returns genotypes associated with a publication"
      }
    },
    "/bioentity/publication/{id}/models": {
      "parameters": [
        {
          "description": "CURIE identifier for a publication, e.g. PMID:11751940",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_publication_model_associations",
        "summary": "Returns models associated with a publication"
      }
    },
    "/bioentity/publication/{id}/phenotypes": {
      "parameters": [
        {
          "description": "CURIE identifier for a publication, e.g. PMID:11751940",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_publication_phenotype_associations",
        "summary": "Returns phenotypes associated with a publication"
      }
    },
    "/bioentity/publication/{id}/variants": {
      "parameters": [
        {
          "description": "CURIE identifier for a publication, e.g. PMID:11751940",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_publication_variant_associations",
        "summary": "Returns variants associated with a publication"
      }
    },
    "/bioentity/substance/{id}/participant_in": {
      "parameters": [
        {
          "description": "CURIE identifier of substance, e.g. CHEBI:40036",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "description": "Examples relationships:\n\n * substance is a metabolite of a process\n * substance is synthesized by a process\n * substance is modified by an activity\n * substance elicits a response program/pathway\n * substance is transported by activity or pathway\n\nFor example, CHEBI:40036 (amitrole)",
        "operationId": "get_substance_participant_in_associations",
        "summary": "Returns associations between an activity and process and the specified substance"
      }
    },
    "/bioentity/substance/{id}/roles": {
      "parameters": [
        {
          "description": "CURIE identifier of substance, e.g. CHEBI:40036",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "description": "Roles may be human-oriented (e.g. pesticide) or molecular (e.g. enzyme inhibitor)",
        "operationId": "get_substance_role_associations",
        "summary": "Returns associations between given drug and roles"
      }
    },
    "/bioentity/substance/{id}/treats": {
      "parameters": [
        {
          "description": "CURIE identifier of substance, e.g. CHEBI:40036",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentity"
        ],
        "description": "e.g. drugs or small molecules used to treat",
        "operationId": "get_substance_treats_associations",
        "summary": "Returns substances associated with a disease"
      }
    },
    "/bioentity/variant/{id}/cases": {
      "parameters": [
        {
          "description": "CURIE identifier of variant, e.g. OMIM:309550.0004, dbSNP:rs5030868",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_variant_case_associations",
        "summary": "Returns cases associated with a variant"
      }
    },
    "/bioentity/variant/{id}/diseases": {
      "parameters": [
        {
          "description": "CURIE identifier of variant, e.g. ClinVarVariant:14925",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_variant_disease_associations",
        "summary": "Returns diseases associated with a variant"
      }
    },
    "/bioentity/variant/{id}/genes": {
      "parameters": [
        {
          "description": "CURIE identifier of variant, e.g. ZFIN:ZDB-ALT-010427-8, ClinVarVariant:39783",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_variant_gene_associations",
        "summary": "Returns genes associated with a variant"
      }
    },
    "/bioentity/variant/{id}/genotypes": {
      "parameters": [
        {
          "description": "CURIE identifier of variant, e.g. ZFIN:ZDB-ALT-010427-8",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_variant_genotype_associations",
        "summary": "Returns genotypes associated with a variant"
      }
    },
    "/bioentity/variant/{id}/models": {
      "parameters": [
        {
          "description": "CURIE identifier of variant, e.g. OMIM:607623.0012, dbSNP:rs5030868",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_variant_model_associations",
        "summary": "Returns models associated with a variant"
      }
    },
    "/bioentity/variant/{id}/phenotypes": {
      "parameters": [
        {
          "description": "CURIE identifier of variant, e.g. ZFIN:ZDB-ALT-010427-8, ClinVarVariant:39783",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_variant_phenotype_associations",
        "summary": "Returns phenotypes associated with a variant"
      }
    },
    "/bioentity/variant/{id}/publications": {
      "parameters": [
        {
          "description": "CURIE identifier of variant, e.g. ZFIN:ZDB-ALT-010427-8, ClinVarVariant:39783",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_variant_publication_associations",
        "summary": "Returns publications associated with a variant"
      }
    },
    "/bioentity/{id}": {
      "parameters": [
        {
          "description": "id, e.g. NCBIGene:84570",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BioObject"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_generic_object",
        "summary": "Returns basic info on object of any type"
      }
    },
    "/bioentity/{id}/associations": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": false,
            "description": "Set true to exclude inferred taxa",
            "in": "query",
            "name": "direct_taxon",
            "type": "boolean"
          },
          {
            "description": "A relation CURIE to filter associations",
            "in": "query",
            "name": "relation",
            "type": "string"
          },
          {
            "description": "Sorting responses <field> <desc,asc>",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "description": "Query string to filter documents",
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssociationResults"
            }
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_generic_associations",
        "summary": "Returns associations for an entity regardless of the type"
      }
    },
    "/bioentity/{type}/{id}": {
      "parameters": [
        {
          "description": "bioentity type",
          "enum": [
            "gene",
            "variant",
            "genotype",
            "phenotype",
            "disease",
            "goterm",
            "pathway",
            "anatomy",
            "substance",
            "individual",
            "publication",
            "model",
            "case"
          ],
          "in": "path",
          "name": "type",
          "required": true,
          "type": "string"
        },
        {
          "description": "id, e.g. NCBIGene:84570",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          },
          {
            "default": false,
            "description": "Enable faceting",
            "in": "query",
            "name": "facet",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Fields to facet on",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "facet_fields",
            "type": "array"
          },
          {
            "default": false,
            "description": "If true, excludes evidence objects in response",
            "in": "query",
            "name": "unselect_evidence",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload",
            "in": "query",
            "name": "fetch_objects",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If true, returns results in compact associations format",
            "in": "query",
            "name": "use_compact_associations",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2",
            "in": "query",
            "name": "evidence",
            "type": "string"
          },
          {
            "default": false,
            "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False",
            "in": "query",
            "name": "direct",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Get association counts",
            "in": "query",
            "name": "get_association_counts",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Get distinct counts for associations (to be used in conjunction with 'get_association_counts' parameter)",
            "in": "query",
            "name": "distinct_counts",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentity"
        ],
        "operationId": "get_generic_object_by_type",
        "summary": "Return basic info on an object for a given type"
      }
    },
    "/bioentityset/associations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "subject",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "background",
            "type": "array"
          },
          {
            "description": "E.g. phenotype, function",
            "in": "query",
            "name": "object_category",
            "type": "string"
          },
          {
            "description": "Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED",
            "in": "query",
            "name": "object_slim",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "bioentityset"
        ],
        "operationId": "get_entity_set_associations",
        "summary": "Returns compact associations for a given input set"
      }
    },
    "/bioentityset/descriptor/counts": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "subject",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "background",
            "type": "array"
          },
          {
            "description": "E.g. phenotype, function",
            "in": "query",
            "name": "object_category",
            "type": "string"
          },
          {
            "description": "Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED",
            "in": "query",
            "name": "object_slim",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentityset"
        ],
        "operationId": "get_entity_set_summary",
        "summary": "Summary statistics for objects associated"
      }
    },
    "/bioentityset/graph": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "subject",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "background",
            "type": "array"
          },
          {
            "description": "E.g. phenotype, function",
            "in": "query",
            "name": "object_category",
            "type": "string"
          },
          {
            "description": "Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED",
            "in": "query",
            "name": "object_slim",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentityset"
        ],
        "operationId": "get_entity_set_graph_resource",
        "summary": "TODO Graph object spanning all entities"
      }
    },
    "/bioentityset/homologs/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "subject",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "bioentityset/homologs"
        ],
        "operationId": "get_entity_set_homologs",
        "summary": "Returns homology associations for a given input set of genes"
      }
    },
    "/bioentityset/overrepresentation": {
      "get": {
        "parameters": [
          {
            "description": "E.g. phenotype, function",
            "in": "query",
            "name": "object_category",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "subject",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "background",
            "type": "array"
          },
          {
            "default": "gene",
            "description": "Default: gene. Other types may be used e.g. disease but statistics may not make sense",
            "in": "query",
            "name": "subject_category",
            "type": "string"
          },
          {
            "default": "0.05",
            "description": "Exclude results with p-value greater than this",
            "in": "query",
            "name": "max_p_value",
            "type": "string"
          },
          {
            "description": "ontology id. Must be obo id. Examples: go, mp, hp, uberon (optional: will be inferred if left blank)",
            "in": "query",
            "name": "ontology",
            "type": "string"
          },
          {
            "description": "must be NCBITaxon CURIE. Example: NCBITaxon:9606",
            "in": "query",
            "name": "taxon",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentityset"
        ],
        "operationId": "get_over_representation",
        "summary": "Summary statistics for objects associated"
      }
    },
    "/bioentityset/slimmer/anatomy": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "subject",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID (IMPLEMENTED) or subset ID (TODO)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "required": true,
            "type": "array"
          },
          {
            "default": false,
            "description": "If set, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentityset/slimmer"
        ],
        "operationId": "get_entity_set_anatomy_slimmer",
        "summary": "For a given gene(s), summarize its annotations over a defined set of slim"
      }
    },
    "/bioentityset/slimmer/function": {
      "get": {
        "parameters": [
          {
            "default": "acts_upstream_of_or_within",
            "description": "relationship type ('involved_in' or 'acts_upstream_of_or_within')",
            "enum": [
              "involved_in",
              "acts_upstream_of_or_within"
            ],
            "in": "query",
            "name": "relationship_type",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "subject",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID (IMPLEMENTED) or subset ID (TODO)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "required": true,
            "type": "array"
          },
          {
            "default": false,
            "description": "If set, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentityset/slimmer"
        ],
        "operationId": "get_entity_set_function_slimmer",
        "summary": "For a given gene(s), summarize its annotations over a defined set of slim"
      }
    },
    "/bioentityset/slimmer/phenotype": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "subject",
            "required": true,
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID (IMPLEMENTED) or subset ID (TODO)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "required": true,
            "type": "array"
          },
          {
            "default": false,
            "description": "If set, excludes associations that involve IEAs (ECO:0000501)",
            "in": "query",
            "name": "exclude_automatic_assertions",
            "type": "boolean"
          },
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "description": "beginning row",
            "in": "query",
            "name": "start",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "bioentityset/slimmer"
        ],
        "operationId": "get_entity_set_phenotype_slimmer",
        "summary": "For a given gene(s), summarize its annotations over a defined set of slim"
      }
    },
    "/cam/activity": {
      "get": {
        "parameters": [
          {
            "description": "string to search for in title of model",
            "in": "query",
            "name": "title",
            "type": "string"
          },
          {
            "description": "string to search for in contributor of model",
            "in": "query",
            "name": "contributor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cam"
        ],
        "operationId": "get_activity_collection",
        "summary": "Returns list of models"
      }
    },
    "/cam/instance/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "string to search for in title of model",
            "in": "query",
            "name": "title",
            "type": "string"
          },
          {
            "description": "string to search for in contributor of model",
            "in": "query",
            "name": "contributor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "cam"
        ],
        "operationId": "get_instance_object",
        "summary": "Returns list of matches"
      }
    },
    "/cam/instances": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cam"
        ],
        "operationId": "get_model_instances",
        "summary": "Returns list of all instances"
      }
    },
    "/cam/model": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cam"
        ],
        "operationId": "get_model_collection",
        "summary": "Returns list of ALL models"
      }
    },
    "/cam/model/contributors": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cam"
        ],
        "operationId": "get_model_contributors",
        "summary": "Returns list of all contributors across all models"
      }
    },
    "/cam/model/properties": {
      "get": {
        "parameters": [
          {
            "description": "string to search for in title of model",
            "in": "query",
            "name": "title",
            "type": "string"
          },
          {
            "description": "string to search for in contributor of model",
            "in": "query",
            "name": "contributor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cam"
        ],
        "operationId": "get_model_properties",
        "summary": "Returns list of all properties used across all models"
      }
    },
    "/cam/model/property_values": {
      "get": {
        "parameters": [
          {
            "description": "string to search for in title of model",
            "in": "query",
            "name": "title",
            "type": "string"
          },
          {
            "description": "string to search for in contributor of model",
            "in": "query",
            "name": "contributor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cam"
        ],
        "operationId": "get_model_property_values",
        "summary": "Returns list property-values for all models"
      }
    },
    "/cam/model/query": {
      "get": {
        "parameters": [
          {
            "description": "string to search for in title of model",
            "in": "query",
            "name": "title",
            "type": "string"
          },
          {
            "description": "string to search for in contributor of model",
            "in": "query",
            "name": "contributor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cam"
        ],
        "operationId": "get_model_query",
        "summary": "Returns list of models matching query"
      }
    },
    "/cam/model/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cam"
        ],
        "operationId": "get_model_object",
        "summary": "Returns a complete model"
      }
    },
    "/cam/physical_interaction": {
      "get": {
        "parameters": [
          {
            "description": "string to search for in title of model",
            "in": "query",
            "name": "title",
            "type": "string"
          },
          {
            "description": "string to search for in contributor of model",
            "in": "query",
            "name": "contributor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "cam"
        ],
        "operationId": "get_physical_interaction",
        "summary": "Returns list of models"
      }
    },
    "/evidence/graph/{id}": {
      "parameters": [
        {
          "description": "association id, e.g. 68e686f6-d05b-46b8-ab1f-1da2fff97ada",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Graph"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "evidence/graph"
        ],
        "description": "Note that every association is assumed to have a unique ID",
        "operationId": "get_evidence_graph_object",
        "summary": "Returns evidence graph object for a given association"
      }
    },
    "/evidence/graph/{id}/table": {
      "parameters": [
        {
          "description": "association id, e.g. 68e686f6-d05b-46b8-ab1f-1da2fff97ada",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": false,
            "description": "If true, considers dc:source as edge",
            "in": "query",
            "name": "is_publication",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "evidence/graph"
        ],
        "description": "Note that every association is assumed to have a unique ID",
        "operationId": "get_evidence_graph_table",
        "summary": "Returns evidence as a association_results object given an association"
      }
    },
    "/genome/features/within/{build}/{reference}/{begin}/{end}": {
      "parameters": [
        {
          "in": "path",
          "name": "build",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "reference",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "begin",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "end",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/SequenceFeature"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "genome/features"
        ],
        "operationId": "get_features_within_resource",
        "summary": "Returns list of matches"
      }
    },
    "/graph/edges/from/{id}": {
      "parameters": [
        {
          "description": "CURIE e.g. HP:0000465",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 1,
            "description": "How far to traverse for neighbors",
            "in": "query",
            "name": "depth",
            "type": "integer"
          },
          {
            "default": "BOTH",
            "description": "Which direction to traverse (used only if relationship_type is defined)",
            "enum": [
              "INCOMING",
              "OUTGOING",
              "BOTH"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Relationship type to traverse",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "relationship_type",
            "type": "array"
          },
          {
            "default": false,
            "description": "Include sub-properties and equivalent properties",
            "in": "query",
            "name": "entail",
            "type": "boolean"
          },
          {
            "default": "data",
            "description": "Which monarch graph to query",
            "enum": [
              "data",
              "ontology"
            ],
            "in": "query",
            "name": "graph",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Graph"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "graph"
        ],
        "operationId": "get_edge_resource",
        "summary": "Returns edges emanating from a given node"
      }
    },
    "/graph/node/{id}": {
      "parameters": [
        {
          "description": "CURIE e.g. HP:0000465",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/BioObject"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "graph"
        ],
        "description": "A node is an abstract representation of some kind of entity. The entity may be a physical thing such as a patient,\na molecular entity such as a gene or protein, or a conceptual entity such as a class from an ontology.",
        "operationId": "get_node_resource",
        "summary": "Returns a graph node"
      }
    },
    "/identifier/mapper/{source}/{target}/": {
      "parameters": [
        {
          "in": "path",
          "name": "source",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "target",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "identifier/mapper"
        ],
        "operationId": "get_identifier_mapper",
        "summary": "TODO maps a list of identifiers from a source to a target"
      }
    },
    "/identifier/prefixes/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "identifier/prefixes"
        ],
        "operationId": "get_prefix_collection",
        "summary": "Returns list of prefixes"
      }
    },
    "/identifier/prefixes/contract/{uri}": {
      "parameters": [
        {
          "description": "URI of entity to be contracted to identifier/CURIE, e.g \"http://www.informatics.jax.org/accession/MGI:1\"",
          "in": "path",
          "name": "uri",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "identifier/prefixes"
        ],
        "operationId": "get_prefix_contract",
        "summary": "Returns contracted URI"
      }
    },
    "/identifier/prefixes/expand/{id}": {
      "parameters": [
        {
          "description": "ID of entity to be contracted to URI, e.g \"MGI:1\"",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "identifier/prefixes"
        ],
        "operationId": "get_prefix_expand",
        "summary": "Returns expanded URI"
      }
    },
    "/individual/pedigree/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "individual"
        ],
        "operationId": "get_pedigree",
        "summary": "Returns list of matches"
      }
    },
    "/individual/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "individual"
        ],
        "operationId": "get_individual",
        "summary": "Returns list of matches"
      }
    },
    "/mart/case/{object_category}/{taxon}": {
      "parameters": [
        {
          "description": "taxon of case, must be of form NCBITaxon:9606",
          "in": "path",
          "name": "taxon",
          "required": true,
          "type": "string"
        },
        {
          "description": "Category of entity at link Subject (target), e.g. phenotype, disease",
          "in": "path",
          "name": "object_category",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "mart"
        ],
        "description": "NOTE: this route has a limiter on it, you may be restricted in the number of downloads per hour. Use carefully.",
        "operationId": "get_mart_case_associations_resource",
        "summary": "Bulk download of case associations"
      }
    },
    "/mart/disease/{object_category}/{taxon}": {
      "parameters": [
        {
          "description": "taxon of disease, must be of form NCBITaxon:9606",
          "in": "path",
          "name": "taxon",
          "required": true,
          "type": "string"
        },
        {
          "description": "Category of entity at link Object (target), e.g. phenotype, disease",
          "in": "path",
          "name": "object_category",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "mart"
        ],
        "description": "NOTE: this route has a limiter on it, you may be restricted in the number of downloads per hour. Use carefully.",
        "operationId": "get_mart_disease_associations_resource",
        "summary": "Bulk download of disease associations"
      }
    },
    "/mart/gene/{object_category}/{taxon}": {
      "parameters": [
        {
          "description": "taxon of gene, must be of form NCBITaxon:9606",
          "in": "path",
          "name": "taxon",
          "required": true,
          "type": "string"
        },
        {
          "description": "Category of entity at link Object (target), e.g. phenotype, disease",
          "in": "path",
          "name": "object_category",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "slim",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "mart"
        ],
        "description": "NOTE: this route has a limiter on it, you may be restricted in the number of downloads per hour. Use carefully.",
        "operationId": "get_mart_gene_associations_resource",
        "summary": "Bulk download of gene associations"
      }
    },
    "/mart/ortholog/{taxon1}/{taxon2}": {
      "parameters": [
        {
          "description": "object taxon, e.g. NCBITaxon:10090",
          "in": "path",
          "name": "taxon2",
          "required": true,
          "type": "string"
        },
        {
          "description": "subject taxon, e.g. NCBITaxon:9606",
          "in": "path",
          "name": "taxon1",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "mart"
        ],
        "operationId": "get_mart_ortholog_associations_resource",
        "summary": "Bulk download of orthologs"
      }
    },
    "/mart/paralog/{taxon1}/{taxon2}": {
      "parameters": [
        {
          "description": "object taxon, e.g. NCBITaxon:9606",
          "in": "path",
          "name": "taxon2",
          "required": true,
          "type": "string"
        },
        {
          "description": "subject taxon, e.g. NCBITaxon:9606",
          "in": "path",
          "name": "taxon1",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "mart"
        ],
        "operationId": "get_mart_paralog_associations_resource",
        "summary": "Bulk download of paralogs"
      }
    },
    "/metadata/datasets": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "metadata"
        ],
        "operationId": "get_metadata_for_datasets",
        "summary": "Get metadata for all datasets from SciGraph"
      }
    },
    "/nlp/annotate/": {
      "get": {
        "parameters": [
          {
            "description": "The text content to annotate",
            "in": "query",
            "name": "content",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Categories to include for annotation",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include_category",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Categories to exclude for annotation",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude_category",
            "type": "array"
          },
          {
            "default": 4,
            "description": "The minimum number of characters in the annotated entity",
            "in": "query",
            "name": "min_length",
            "type": "string"
          },
          {
            "default": false,
            "description": "Should only the longest entity be returned for an overlapping group",
            "in": "query",
            "name": "longest_only",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should abbreviations be included",
            "in": "query",
            "name": "include_abbreviation",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should acronyms be included",
            "in": "query",
            "name": "include_acronym",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should numbers be included",
            "in": "query",
            "name": "include_numbers",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "nlp/annotate"
        ],
        "operationId": "get_annotate",
        "summary": "Annotate a given text using SciGraph annotator"
      },
      "post": {
        "parameters": [
          {
            "description": "The text content to annotate",
            "in": "query",
            "name": "content",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Categories to include for annotation",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include_category",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Categories to exclude for annotation",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude_category",
            "type": "array"
          },
          {
            "default": 4,
            "description": "The minimum number of characters in the annotated entity",
            "in": "query",
            "name": "min_length",
            "type": "string"
          },
          {
            "default": false,
            "description": "Should only the longest entity be returned for an overlapping group",
            "in": "query",
            "name": "longest_only",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should abbreviations be included",
            "in": "query",
            "name": "include_abbreviation",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should acronyms be included",
            "in": "query",
            "name": "include_acronym",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should numbers be included",
            "in": "query",
            "name": "include_numbers",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "nlp/annotate"
        ],
        "operationId": "post_annotate",
        "summary": "Annotate a given text using SciGraph annotator"
      }
    },
    "/nlp/annotate/entities": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The text content to annotate",
            "in": "query",
            "name": "content",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Categories to include for annotation",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include_category",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Categories to exclude for annotation",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude_category",
            "type": "array"
          },
          {
            "default": 4,
            "description": "The minimum number of characters in the annotated entity",
            "in": "query",
            "name": "min_length",
            "type": "string"
          },
          {
            "default": false,
            "description": "Should only the longest entity be returned for an overlapping group",
            "in": "query",
            "name": "longest_only",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should abbreviations be included",
            "in": "query",
            "name": "include_abbreviation",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should acronyms be included",
            "in": "query",
            "name": "include_acronym",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should numbers be included",
            "in": "query",
            "name": "include_numbers",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EntityAnnotationResult"
            }
          }
        },
        "tags": [
          "nlp/annotate"
        ],
        "operationId": "get_annotate_entities",
        "summary": "Annotate a given content using SciGraph annotator and get all entities from content"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The text content to annotate",
            "in": "query",
            "name": "content",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Categories to include for annotation",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include_category",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Categories to exclude for annotation",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude_category",
            "type": "array"
          },
          {
            "default": 4,
            "description": "The minimum number of characters in the annotated entity",
            "in": "query",
            "name": "min_length",
            "type": "string"
          },
          {
            "default": false,
            "description": "Should only the longest entity be returned for an overlapping group",
            "in": "query",
            "name": "longest_only",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should abbreviations be included",
            "in": "query",
            "name": "include_abbreviation",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should acronyms be included",
            "in": "query",
            "name": "include_acronym",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Should numbers be included",
            "in": "query",
            "name": "include_numbers",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EntityAnnotationResult"
            }
          }
        },
        "tags": [
          "nlp/annotate"
        ],
        "operationId": "post_annotate_entities",
        "summary": "Annotate a given content using SciGraph annotator and get all entities from content"
      }
    },
    "/ontol/information_content/{subject_category}/{object_category}/{subject_taxon}": {
      "parameters": [
        {
          "in": "path",
          "name": "subject_category",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "object_category",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "subject_taxon",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    ",
            "in": "query",
            "name": "evidence",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ontol"
        ],
        "description": "```\nIC = -log2( freq(t) / popSize )\n```\n\nHere the frequency and population is calculated for a particular dataset:\ne.g. all human disease-phenotype associations",
        "operationId": "get_information_content_resource",
        "summary": "Returns information content (IC) for a set of relevant ontology classes"
      }
    },
    "/ontol/labeler/": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "List of ids",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "id",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ontol/labeler"
        ],
        "operationId": "get_ontol_labeler_resource",
        "summary": "Fetches a map from CURIEs/IDs to labels"
      }
    },
    "/ontol/subgraph/{ontology}/{node}": {
      "parameters": [
        {
          "description": "class ID, e.g. HP:0001288",
          "in": "path",
          "name": "node",
          "required": true,
          "type": "string"
        },
        {
          "description": "ontology ID, e.g. go, uberon, mp, hp",
          "in": "path",
          "name": "ontology",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Additional classes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "cnode",
            "type": "array"
          },
          {
            "default": true,
            "description": "Include Ancestors",
            "in": "query",
            "name": "include_ancestors",
            "type": "boolean"
          },
          {
            "description": "Include Descendants",
            "in": "query",
            "name": "include_descendants",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "default": [
              "subClassOf",
              "BFO:0000050"
            ],
            "description": "Additional classes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "relation",
            "type": "array"
          },
          {
            "default": false,
            "description": "Include metadata in response",
            "in": "query",
            "name": "include_meta",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ontol"
        ],
        "operationId": "get_extract_ontology_subgraph_resource",
        "summary": "Extract a subgraph from an ontology"
      },
      "post": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Additional classes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "cnode",
            "type": "array"
          },
          {
            "default": true,
            "description": "Include Ancestors",
            "in": "query",
            "name": "include_ancestors",
            "type": "boolean"
          },
          {
            "description": "Include Descendants",
            "in": "query",
            "name": "include_descendants",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "default": [
              "subClassOf",
              "BFO:0000050"
            ],
            "description": "Additional classes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "relation",
            "type": "array"
          },
          {
            "default": false,
            "description": "Include metadata in response",
            "in": "query",
            "name": "include_meta",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ontol"
        ],
        "operationId": "post_extract_ontology_subgraph_resource",
        "summary": "Extract a subgraph from an ontology"
      }
    },
    "/ontology/shared/{subject}/{object}": {
      "parameters": [
        {
          "description": "CURIE identifier of a GO term, e.g. GO:0006259",
          "in": "path",
          "name": "subject",
          "required": true,
          "type": "string"
        },
        {
          "description": "CURIE identifier of a GO term, e.g. GO:0046483",
          "in": "path",
          "name": "object",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ontology"
        ],
        "operationId": "get_ontology_terms_shared_ancestor",
        "summary": "Returns the ancestor ontology terms shared by two ontology terms"
      }
    },
    "/ontology/subset/{id}": {
      "parameters": [
        {
          "description": "name of a slim subset, e.g. goslim_agr, goslim_generic",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ontology"
        ],
        "operationId": "get_ontology_subset",
        "summary": "Returns meta data of an ontology subset (slim)"
      }
    },
    "/ontology/term/{id}": {
      "parameters": [
        {
          "description": "CURIE identifier of a GO term, e.g. GO:0003677",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ontology"
        ],
        "operationId": "get_ontology_term",
        "summary": "Returns meta data of an ontology term"
      }
    },
    "/ontology/term/{id}/graph": {
      "parameters": [
        {
          "description": "CURIE identifier of a GO term, e.g. GO:0000981",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "default": "topology_graph",
            "description": "graph type ('topology_graph', 'regulates_transitivity_graph' or 'neighborhood_graph')",
            "enum": [
              "topology_graph",
              "regulates_transitivity_graph",
              "neighborhood_graph",
              "neighborhood_limited_graph"
            ],
            "in": "query",
            "name": "graph_type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ontology"
        ],
        "operationId": "get_ontology_term_graph",
        "summary": "Returns graph of an ontology term"
      }
    },
    "/ontology/term/{id}/subgraph": {
      "parameters": [
        {
          "description": "CURIE identifier of a GO term, e.g. GO:0007275",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Additional classes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "cnode",
            "type": "array"
          },
          {
            "default": true,
            "description": "Include Ancestors",
            "in": "query",
            "name": "include_ancestors",
            "type": "boolean"
          },
          {
            "description": "Include Descendants",
            "in": "query",
            "name": "include_descendants",
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "default": [
              "subClassOf",
              "BFO:0000050"
            ],
            "description": "Additional classes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "relation",
            "type": "array"
          },
          {
            "default": false,
            "description": "Include metadata in response",
            "in": "query",
            "name": "include_meta",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ontology"
        ],
        "operationId": "get_ontology_term_subgraph",
        "summary": "Extract a subgraph from an ontology term"
      }
    },
    "/ontology/term/{id}/subsets": {
      "parameters": [
        {
          "description": "CURIE identifier of a GO term, e.g. GO:0006259",
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "ontology"
        ],
        "operationId": "get_ontology_term_subsets",
        "summary": "Returns subsets (slims) associated to an ontology term"
      }
    },
    "/owl/ontology/dlquery/{query}": {
      "parameters": [
        {
          "in": "path",
          "name": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "owl/ontology"
        ],
        "operationId": "get_dl_query",
        "summary": "Placeholder - use OWLery for now"
      }
    },
    "/owl/ontology/sparql/{query}": {
      "parameters": [
        {
          "in": "path",
          "name": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "owl/ontology"
        ],
        "operationId": "get_sparql_query",
        "summary": "Placeholder - use direct SPARQL endpoint for now"
      }
    },
    "/pair/sim/jaccard/{id1}/{id2}": {
      "parameters": [
        {
          "description": "id, e.g. NCBIGene:1200; ZFIN:ZDB-GENE-980528-2059; UniProtKB:P12644",
          "in": "path",
          "name": "id2",
          "required": true,
          "type": "string"
        },
        {
          "description": "id, e.g. NCBIGene:10891; ZFIN:ZDB-GENE-980526-166; UniProtKB:Q15465",
          "in": "path",
          "name": "id1",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "e.g. disease, phenotype, gene. Two subjects will be compared based on overlap between associations to objects in this category",
            "in": "query",
            "name": "object_category",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "pair/sim"
        ],
        "operationId": "get_pair_sim_jaccard_resource",
        "summary": "Get pairwise similarity"
      }
    },
    "/relation/usage/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default",
            "in": "query",
            "name": "subject_taxon",
            "type": "string"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    ",
            "in": "query",
            "name": "evidence",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "relation/usage"
        ],
        "operationId": "get_relation_usage_resource",
        "summary": "All relations used plus count of associations"
      }
    },
    "/relation/usage/between/{subject_category}/{object_category}": {
      "parameters": [
        {
          "in": "path",
          "name": "subject_category",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "object_category",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default",
            "in": "query",
            "name": "subject_taxon",
            "type": "string"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    ",
            "in": "query",
            "name": "evidence",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "relation/usage"
        ],
        "operationId": "get_relation_usage_between_resource",
        "summary": "All relations used plus count of associations"
      }
    },
    "/relation/usage/pivot": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default",
            "in": "query",
            "name": "subject_taxon",
            "type": "string"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    ",
            "in": "query",
            "name": "evidence",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "relation/usage"
        ],
        "operationId": "get_relation_usage_pivot_resource",
        "summary": "Relation usage count for all subj x obj category combinations"
      }
    },
    "/relation/usage/pivot/label": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default",
            "in": "query",
            "name": "subject_taxon",
            "type": "string"
          },
          {
            "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    ",
            "in": "query",
            "name": "evidence",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AssociationResults"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "relation/usage"
        ],
        "operationId": "get_relation_usage_pivot_label_resource",
        "summary": "Relation usage count for all subj x obj category combinations, showing label"
      }
    },
    "/search/entity/autocomplete/{term}": {
      "parameters": [
        {
          "in": "path",
          "name": "term",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "fq string passed directly to solr, note that multiple filters will be combined with an AND operator. Combining fq_string with other parameters may result in unexpected behavior.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fq",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "e.g. gene, disease",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "category",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "ontology prefix: HP, -MONDO",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "prefix",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "boost function e.g. pow(edges,0.334)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "boost_fx",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "boost query e.g. category:genotype^-10",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "boost_q",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "taxon filter, eg NCBITaxon:9606, includes inferred taxa",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": 20,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "default": "0",
            "description": "row number to start from",
            "in": "query",
            "name": "start",
            "type": "string"
          },
          {
            "description": "highlight class",
            "in": "query",
            "name": "highlight_class",
            "type": "string"
          },
          {
            "description": "minimum should match parameter, see solr docs for details",
            "in": "query",
            "name": "min_match",
            "type": "string"
          },
          {
            "default": false,
            "description": "set to true to use the minimal tokenizer, good for variants and genotypes",
            "in": "query",
            "name": "minimal_tokenizer",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AutocompleteResults"
            }
          }
        },
        "tags": [
          "search"
        ],
        "operationId": "get_autocomplete",
        "summary": "Returns list of matching concepts or entities using lexical search"
      }
    },
    "/search/entity/hpo-pl/{term}": {
      "parameters": [
        {
          "description": "search string, e.g. muscle atrophy, frequent infections",
          "in": "path",
          "name": "term",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 10,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "default": "0",
            "description": "row number to start from",
            "in": "query",
            "name": "start",
            "type": "string"
          },
          {
            "description": "phenotype group id",
            "in": "query",
            "name": "phenotype_group",
            "type": "string"
          },
          {
            "description": "phenotype group label",
            "in": "query",
            "name": "phenotype_group_label",
            "type": "string"
          },
          {
            "description": "anatomical system id",
            "in": "query",
            "name": "anatomical_system",
            "type": "string"
          },
          {
            "description": "anatomical system label",
            "in": "query",
            "name": "anatomical_system_label",
            "type": "string"
          },
          {
            "description": "highlight class",
            "in": "query",
            "name": "highlight_class",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LayResults"
            }
          }
        },
        "tags": [
          "search"
        ],
        "operationId": "get_search_hpo_entities",
        "summary": "Returns list of matching concepts or entities using lexical search"
      }
    },
    "/search/entity/{term}": {
      "parameters": [
        {
          "description": "search string, e.g. shh, parkinson, femur",
          "in": "path",
          "name": "term",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "fq string passed directly to solr, note that multiple filters will be combined with an AND operator. Combining fq_string with other parameters may result in unexpected behavior.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "fq",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "e.g. gene, disease",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "category",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "ontology prefix: HP, -MONDO",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "prefix",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "boost function e.g. pow(edges,0.334)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "boost_fx",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "boost query e.g. category:genotype^-10",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "boost_q",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "taxon filter, eg NCBITaxon:9606, includes inferred taxa",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "taxon",
            "type": "array"
          },
          {
            "default": 20,
            "description": "number of rows",
            "in": "query",
            "name": "rows",
            "type": "integer"
          },
          {
            "default": "0",
            "description": "row number to start from",
            "in": "query",
            "name": "start",
            "type": "string"
          },
          {
            "description": "highlight class",
            "in": "query",
            "name": "highlight_class",
            "type": "string"
          },
          {
            "description": "minimum should match parameter, see solr docs for details",
            "in": "query",
            "name": "min_match",
            "type": "string"
          },
          {
            "default": false,
            "description": "set to true to use the minimal tokenizer, good for variants and genotypes",
            "in": "query",
            "name": "minimal_tokenizer",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchResult"
            }
          }
        },
        "tags": [
          "search"
        ],
        "operationId": "get_search_entities",
        "summary": "Returns list of matching concepts or entities using lexical search"
      }
    },
    "/sim/compare": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": true,
            "description": "set to true if *all* input ids are phenotypic features, else set to false",
            "in": "query",
            "name": "is_feature_set",
            "type": "boolean"
          },
          {
            "default": "phenodigm",
            "description": "Metric for computing similarity",
            "enum": [
              "phenodigm",
              "jaccard",
              "simGIC",
              "resnik",
              "symmetric_resnik"
            ],
            "in": "query",
            "name": "metric",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "default": [],
            "description": "A phenotype or identifier that is composed of phenotypes (eg disease, gene)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ref_id",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "default": [],
            "description": "A phenotype or identifier that is composed of phenotypes (eg disease, gene)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "query_id",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimResult"
            }
          }
        },
        "tags": [
          "sim"
        ],
        "operationId": "get_sim_compare",
        "summary": "Compare a reference profile vs one profiles"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompareInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimResult"
            }
          }
        },
        "tags": [
          "sim"
        ],
        "operationId": "post_sim_compare",
        "summary": "Compare a reference profile vs one or more profiles"
      }
    },
    "/sim/score": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Phenotype identifier (eg HP:0004935)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "id",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "default": [],
            "description": "absent phenotype (eg HP:0002828)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "absent_id",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SufficiencyOutput"
            }
          }
        },
        "tags": [
          "sim"
        ],
        "operationId": "get_annotation_score",
        "summary": "Get annotation score"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SufficiencyPostInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SufficiencyOutput"
            }
          }
        },
        "tags": [
          "sim"
        ],
        "operationId": "post_annotation_score",
        "summary": "Get annotation score"
      }
    },
    "/sim/search": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": true,
            "description": "set to true if *all* input ids are phenotypic features, else set to false",
            "in": "query",
            "name": "is_feature_set",
            "type": "boolean"
          },
          {
            "default": "phenodigm",
            "description": "Metric for computing similarity",
            "enum": [
              "phenodigm",
              "jaccard",
              "simGIC",
              "resnik",
              "symmetric_resnik"
            ],
            "in": "query",
            "name": "metric",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "default": [],
            "description": "A phenotype or identifier that is composed of phenotypes (eg disease, gene)",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "id",
            "type": "array"
          },
          {
            "default": 100,
            "description": "number of rows",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "ncbi taxon id",
            "in": "query",
            "name": "taxon",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimResult"
            }
          }
        },
        "tags": [
          "sim"
        ],
        "operationId": "get_sim_search",
        "summary": "Search for phenotypically similar diseases or model genes"
      }
    },
    "/variation/set/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 1,
            "description": "Page number",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Results per page {error_msg}",
            "enum": [
              2,
              10,
              20,
              30,
              40,
              50
            ],
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page_of_variant_sets"
            }
          }
        },
        "tags": [
          "variation/set"
        ],
        "operationId": "get_variant_sets_collection",
        "summary": "Returns list of variant sets"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/variant_set"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "variation/set"
        ],
        "operationId": "post_variant_sets_collection",
        "summary": "Creates a new variant set"
      }
    },
    "/variation/set/analyze/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "variation/set"
        ],
        "operationId": "get_variant_analyze",
        "summary": "Returns list of matches"
      }
    },
    "/variation/set/archive/{year}/{month}/{day}": {
      "parameters": [
        {
          "in": "path",
          "name": "year",
          "required": true,
          "type": "integer"
        },
        {
          "in": "path",
          "name": "month",
          "required": true,
          "type": "integer"
        },
        {
          "in": "path",
          "name": "day",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 1,
            "description": "Page number",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Results per page {error_msg}",
            "enum": [
              2,
              10,
              20,
              30,
              40,
              50
            ],
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page_of_variant_sets"
            }
          }
        },
        "tags": [
          "variation/set"
        ],
        "operationId": "get_variant_sets_archive_collection",
        "summary": "Returns list of variant sets from a specified time period"
      }
    },
    "/variation/set/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "VariantSet successfully deleted."
          },
          "404": {
            "description": "VariantSet not found."
          }
        },
        "tags": [
          "variation/set"
        ],
        "operationId": "delete_variant_set_item",
        "summary": "Deletes variant set"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/variant_set"
            }
          },
          "404": {
            "description": "VariantSet not found."
          }
        },
        "tags": [
          "variation/set"
        ],
        "operationId": "get_variant_set_item",
        "summary": "Returns a variant set"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/variant_set"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "VariantSet successfully updated."
          },
          "404": {
            "description": "VariantSet not found."
          }
        },
        "tags": [
          "variation/set"
        ],
        "operationId": "put_variant_set_item",
        "summary": "Updates a variant set"
      }
    }
  },
  "definitions": {
    "A_page_of_results": {
      "properties": {
        "page": {
          "description": "Number of this page of results",
          "type": "integer"
        },
        "pages": {
          "description": "Total number of pages of results",
          "type": "integer"
        },
        "per_page": {
          "description": "Number of items per page of results",
          "type": "integer"
        },
        "total": {
          "description": "Total number of results",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AbstractPropertyValue": {
      "properties": {
        "pred": {
          "description": "predicate (attribute) part",
          "type": "string"
        },
        "val": {
          "description": "value part",
          "type": "string"
        },
        "xrefs": {
          "description": "Xrefs provenance for property-value",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AnnotationExtension": {
      "properties": {
        "filler": {
          "allOf": [
            {
              "$ref": "#/definitions/NamedObject"
            }
          ],
          "description": "Extension interpreted as OWL expression (r1 some r2 some .. some filler)."
        },
        "relation_chain": {
          "description": "Relationship type. If more than one value, interpreted as chain",
          "items": {
            "$ref": "#/definitions/Relation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Association": {
      "properties": {
        "evidence_graph": {
          "allOf": [
            {
              "$ref": "#/definitions/Graph"
            }
          ],
          "description": "An indirect association is a join between two or more direct assocations, e.g. gene to disease via ortholog. We record the full set of associations as a graph object"
        },
        "evidence_types": {
          "description": "Evidence types (ECO classes)",
          "items": {
            "$ref": "#/definitions/EntityReference"
          },
          "type": "array"
        },
        "id": {
          "description": "Association/annotation unique ID",
          "type": "string"
        },
        "negated": {
          "description": "True if association is negated",
          "type": "boolean"
        },
        "object": {
          "allOf": [
            {
              "$ref": "#/definitions/BioObjectCore"
            }
          ],
          "description": "Object (sensu RDF), aka target, e.g. HP:0000448, MP:0002109, DOID:14330"
        },
        "object_eq": {
          "description": "Equivalent identifiers to object node",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "object_extensions": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/AnnotationExtension"
              }
            ],
            "description": "Additional properties of the object in the context of this association. See http://www.biomedcentral.com/1471-2105/15/155"
          },
          "type": "array"
        },
        "provided_by": {
          "description": "Provider of association, e.g. Orphanet, ClinVar",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "publications": {
          "description": "Publications supporting association, extracted from evidence graph",
          "items": {
            "$ref": "#/definitions/EntityReference"
          },
          "type": "array"
        },
        "qualifiers": {
          "description": "Qualifier on the association",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "relation": {
          "allOf": [
            {
              "$ref": "#/definitions/RelationRef"
            }
          ],
          "description": "Relationship type connecting subject and object"
        },
        "slim": {
          "description": "Objects mapped to a slim",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subject": {
          "allOf": [
            {
              "$ref": "#/definitions/BioObjectCore"
            }
          ],
          "description": "Subject of association (what it is about), e.g. ClinVar:nnn, MGI:1201606"
        },
        "subject_eq": {
          "description": "Equivalent identifiers to subject node",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subject_extensions": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/AnnotationExtension"
              }
            ],
            "description": "Additional properties of the subject in the context of this association."
          },
          "type": "array"
        },
        "type": {
          "description": "Type of association, e.g. gene-phenotype",
          "type": "string"
        }
      },
      "required": [
        "id",
        "object",
        "relation",
        "subject"
      ],
      "type": "object"
    },
    "AssociationResults": {
      "allOf": [
        {
          "$ref": "#/definitions/SearchResult"
        },
        {
          "properties": {
            "associations": {
              "description": "Complete representation of full association object, plus evidence",
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            },
            "compact_associations": {
              "description": "Compact representation in which objects (e.g. phenotypes) are collected for subject-predicate pairs",
              "items": {
                "$ref": "#/definitions/CompactAssociationSet"
              },
              "type": "array"
            },
            "objects": {
              "description": "List of distinct objects used",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ]
    },
    "AutocompleteResult": {
      "properties": {
        "category": {
          "description": "node categories",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "has_highlight": {
          "description": "True if highlight can be interpreted as html, else False",
          "type": "boolean"
        },
        "highlight": {
          "description": "solr highlight",
          "type": "string"
        },
        "id": {
          "description": "curie formatted id",
          "type": "string"
        },
        "label": {
          "description": "primary label (rdfs:label)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "match": {
          "description": "matched part of document (may be primary label, synonym, id, etc)",
          "type": "string"
        },
        "taxon": {
          "description": "taxon as NCBITaxon curie",
          "type": "string"
        },
        "taxon_label": {
          "description": "taxon label",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AutocompleteResults": {
      "properties": {
        "docs": {
          "description": "list of AutocompleteResult docs",
          "items": {
            "$ref": "#/definitions/AutocompleteResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BioObject": {
      "allOf": [
        {
          "$ref": "#/definitions/NamedObject"
        },
        {
          "properties": {
            "association_counts": {
              "description": "association counts",
              "type": "object"
            },
            "taxon": {
              "allOf": [
                {
                  "$ref": "#/definitions/Taxon"
                }
              ],
              "description": "Taxon to which the object belongs"
            },
            "xrefs": {
              "description": "Database cross-references. These are usually CURIEs, but may also be URLs. E.g. ENSEMBL:ENSG00000099940 ",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ]
    },
    "BioObjectCore": {
      "allOf": [
        {
          "$ref": "#/definitions/NamedObjectCore"
        },
        {
          "properties": {
            "taxon": {
              "allOf": [
                {
                  "$ref": "#/definitions/Taxon"
                }
              ],
              "description": "Taxon to which the object belongs"
            }
          },
          "type": "object"
        }
      ]
    },
    "CompactAssociationSet": {
      "properties": {
        "objects": {
          "description": "List of O, for a given (S,R) pair, yielding (S,R,O) triples. E.g. list of MPs for (MGI:nnn, has_phenotype)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "relation": {
          "description": "Relationship type connecting subject and object list",
          "type": "string"
        },
        "subject": {
          "description": "Subject of association (what it is about), e.g. MGI:1201606",
          "type": "string"
        }
      },
      "required": [
        "objects",
        "relation",
        "subject"
      ],
      "type": "object"
    },
    "CompareInput": {
      "properties": {
        "query_ids": {
          "description": "list of query profiles",
          "items": {
            "description": "list of ids",
            "items": {
              "description": "curie formatted id",
              "type": "string"
            },
            "type": "array"
          },
          "type": "array"
        },
        "reference_ids": {
          "description": "list of ids",
          "items": {
            "description": "curie formatted id",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "D2PAssociation": {
      "allOf": [
        {
          "$ref": "#/definitions/Association"
        },
        {
          "properties": {
            "frequency": {
              "allOf": [
                {
                  "$ref": "#/definitions/EntityReference"
                }
              ],
              "description": "Frequency of phenotype in patients with disease"
            },
            "onset": {
              "allOf": [
                {
                  "$ref": "#/definitions/EntityReference"
                }
              ],
              "description": "Onset of phenotype in disease process"
            }
          },
          "type": "object"
        }
      ]
    },
    "D2PAssociationResults": {
      "allOf": [
        {
          "$ref": "#/definitions/SearchResult"
        },
        {
          "properties": {
            "associations": {
              "description": "Complete representation of full disease to phenotype association, plus evidence",
              "items": {
                "$ref": "#/definitions/D2PAssociation"
              },
              "type": "array"
            },
            "compact_associations": {
              "description": "Compact representation in which objects (e.g. phenotypes) are collected for subject-predicate pairs",
              "items": {
                "$ref": "#/definitions/CompactAssociationSet"
              },
              "type": "array"
            },
            "objects": {
              "description": "List of distinct objects used",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ]
    },
    "Edge": {
      "properties": {
        "meta": {
          "description": "metadata about the Edge",
          "type": "object"
        },
        "obj": {
          "description": "Object (target) Node ID",
          "type": "string"
        },
        "pred": {
          "description": "Predicate (relation) ID",
          "type": "string"
        },
        "sub": {
          "description": "Subject (source) Node ID",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EntityAnnotationResult": {
      "properties": {
        "content": {
          "default": "The content from which the entities are extracted from",
          "type": "string"
        },
        "spans": {
          "description": "A marked-up span of text",
          "items": {
            "$ref": "#/definitions/Span"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EntityReference": {
      "properties": {
        "id": {
          "description": "ID or CURIE e.g. MGI:1201606",
          "type": "string"
        },
        "label": {
          "description": "RDFS Label",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Feature": {
      "properties": {
        "id": {
          "description": "curie formatted id",
          "type": "string"
        },
        "isPresent": {
          "description": "is the feature present",
          "type": "boolean"
        },
        "label": {
          "description": "curie formatted id",
          "type": "string"
        },
        "type": {
          "description": "feature type (only phenotype supported)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Graph": {
      "properties": {
        "edges": {
          "description": "All edges in graph",
          "items": {
            "$ref": "#/definitions/Edge"
          },
          "type": "array"
        },
        "nodes": {
          "description": "All nodes in graph",
          "items": {
            "$ref": "#/definitions/Node"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IcNode": {
      "allOf": [
        {
          "$ref": "#/definitions/Node"
        },
        {
          "properties": {
            "IC": {
              "description": "Information content",
              "type": "number"
            }
          },
          "type": "object"
        }
      ]
    },
    "LayAutocomplete": {
      "properties": {
        "highlight": {
          "description": "solr highlight",
          "type": "string"
        },
        "id": {
          "description": "curie formatted id",
          "type": "string"
        },
        "label": {
          "description": "primary label (rdfs:label)",
          "type": "string"
        },
        "matched_synonym": {
          "description": "matched synonym",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LayResults": {
      "properties": {
        "results": {
          "description": "list of AutocompleteResult docs",
          "items": {
            "$ref": "#/definitions/LayAutocomplete"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "NamedObject": {
      "allOf": [
        {
          "$ref": "#/definitions/NamedObjectCore"
        },
        {
          "properties": {
            "consider": {
              "items": {
                "description": "Potential replacement object (if named object is obsoleted)",
                "type": "string"
              },
              "type": "array"
            },
            "deprecated": {
              "description": "True if the node is deprecated/obsoleted.",
              "type": "boolean"
            },
            "description": {
              "description": "Descriptive text for the entity. For ontology classes, this will be a definition.",
              "type": "string"
            },
            "replaced_by": {
              "items": {
                "description": "Direct 1:1 replacement (if named object is obsoleted)",
                "type": "string"
              },
              "type": "array"
            },
            "synonyms": {
              "description": "list of synonyms or alternate labels",
              "items": {
                "$ref": "#/definitions/SynonymPropertyValue"
              },
              "type": "array"
            },
            "types": {
              "items": {
                "description": "Type of object (direct)",
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ]
    },
    "NamedObjectCore": {
      "properties": {
        "category": {
          "items": {
            "description": "Type of object",
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "description": "ID or CURIE e.g. MGI:1201606",
          "type": "string"
        },
        "iri": {
          "description": "IRI",
          "type": "string"
        },
        "label": {
          "description": "RDFS Label",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "Node": {
      "properties": {
        "id": {
          "description": "ID or CURIE e.g. MGI:1201606",
          "type": "string"
        },
        "label": {
          "description": "RDFS Label",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "Page_of_variant_sets": {
      "allOf": [
        {
          "$ref": "#/definitions/A_page_of_results"
        },
        {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/definitions/variant_set"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ]
    },
    "PairwiseMatch": {
      "properties": {
        "lcs": {
          "allOf": [
            {
              "$ref": "#/definitions/IcNode"
            }
          ],
          "description": "lowest common subsumer"
        },
        "match": {
          "allOf": [
            {
              "$ref": "#/definitions/IcNode"
            }
          ],
          "description": "match id"
        },
        "reference": {
          "allOf": [
            {
              "$ref": "#/definitions/IcNode"
            }
          ],
          "description": "reference id"
        }
      },
      "type": "object"
    },
    "Relation": {
      "allOf": [
        {
          "$ref": "#/definitions/NamedObject"
        },
        {
          "properties": {},
          "type": "object"
        }
      ]
    },
    "RelationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/NamedObjectCore"
        },
        {
          "properties": {
            "inverse": {
              "default": false,
              "description": "is relation inverted",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ]
    },
    "SearchResult": {
      "properties": {
        "docs": {
          "description": "solr docs",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "facet_counts": {
          "description": "Mapping between field names and association counts",
          "type": "object"
        },
        "highlighting": {
          "description": "Mapping between id and solr highlight",
          "type": "object"
        },
        "numFound": {
          "description": "total number of associations matching query",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Seq": {
      "allOf": [
        {
          "$ref": "#/definitions/BioObject"
        },
        {
          "properties": {
            "alphabet": {
              "description": "one of: DNA, RNA or AA",
              "type": "string"
            },
            "md5checksum": {
              "description": "checksum",
              "type": "string"
            },
            "residues": {
              "description": "string representing sequence of residues",
              "type": "string"
            },
            "seqlen": {
              "description": "length of sequence",
              "type": "string"
            }
          },
          "type": "object"
        }
      ]
    },
    "SequenceFeature": {
      "allOf": [
        {
          "$ref": "#/definitions/BioObject"
        },
        {
          "properties": {
            "homology_associations": {
              "items": {
                "$ref": "#/definitions/Association"
              },
              "type": "array"
            },
            "locations": {
              "items": {
                "$ref": "#/definitions/SequenceLocation"
              },
              "type": "array"
            },
            "seq": {
              "$ref": "#/definitions/Seq"
            }
          },
          "type": "object"
        }
      ]
    },
    "SequenceLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/BioObject"
        },
        {
          "properties": {
            "end": {
              "$ref": "#/definitions/SequencePosition"
            },
            "phase": {
              "type": "integer"
            },
            "score": {
              "type": "integer"
            },
            "start": {
              "$ref": "#/definitions/SequencePosition"
            },
            "strand": {
              "description": "Strand direction: 1=='+', -1=='-', 0 or null infers unknown.",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ]
    },
    "SequencePosition": {
      "properties": {
        "position": {
          "type": "integer"
        },
        "reference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SimMatch": {
      "allOf": [
        {
          "$ref": "#/definitions/TypedNode"
        },
        {
          "properties": {
            "pairwise_match": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/PairwiseMatch"
                  }
                ],
                "description": "list of pairwise matches"
              },
              "type": "array"
            },
            "rank": {
              "description": "rank",
              "type": "string"
            },
            "score": {
              "description": "sim score",
              "type": "number"
            },
            "significance": {
              "description": "p-value",
              "type": "string"
            }
          },
          "type": "object"
        }
      ]
    },
    "SimMetadata": {
      "properties": {
        "max_max_ic": {
          "description": "max IC",
          "type": "number"
        }
      },
      "type": "object"
    },
    "SimQuery": {
      "properties": {
        "ids": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Node"
              }
            ],
            "description": "list of ids"
          },
          "type": "array"
        },
        "negated_ids": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Node"
              }
            ],
            "description": "list of ids"
          },
          "type": "array"
        },
        "reference": {
          "allOf": [
            {
              "$ref": "#/definitions/TypedNode"
            }
          ],
          "description": "reference individual or class (eg gene, disease)"
        },
        "target_ids": {
          "items": {
            "items": {
              "allOf": [
                {
                  "$ref": "#/definitions/Node"
                }
              ],
              "description": "query ids"
            },
            "type": "array"
          },
          "type": "array"
        },
        "unresolved_ids": {
          "description": "list of unresolved ids",
          "items": {
            "description": "curie formatted id",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SimResult": {
      "properties": {
        "matches": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/SimMatch"
              }
            ],
            "description": "list of matches"
          },
          "type": "array"
        },
        "metadata": {
          "$ref": "#/definitions/SimMetadata"
        },
        "query": {
          "$ref": "#/definitions/SimQuery"
        }
      },
      "type": "object"
    },
    "Span": {
      "properties": {
        "end": {
          "description": "end of span text relative to content",
          "type": "integer"
        },
        "start": {
          "description": "start of span text relative to content",
          "type": "integer"
        },
        "text": {
          "description": "span text",
          "type": "string"
        },
        "token": {
          "description": "A token or entity extracted from the span text",
          "items": {
            "$ref": "#/definitions/Token"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SufficiencyOutput": {
      "properties": {
        "categorical_score": {
          "description": "categorical score",
          "type": "number"
        },
        "scaled_score": {
          "description": "scaled score",
          "type": "number"
        },
        "simple_score": {
          "description": "simple score",
          "type": "number"
        }
      },
      "type": "object"
    },
    "SufficiencyPostInput": {
      "properties": {
        "features": {
          "description": "list of features",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "type": "array"
        },
        "id": {
          "description": "curie formatted id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SynonymPropertyValue": {
      "allOf": [
        {
          "$ref": "#/definitions/AbstractPropertyValue"
        },
        {
          "properties": {},
          "type": "object"
        }
      ]
    },
    "Taxon": {
      "properties": {
        "id": {
          "description": "CURIE ID, e.g. NCBITaxon:9606",
          "type": "string"
        },
        "label": {
          "description": "RDFS Label",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Token": {
      "properties": {
        "category": {
          "description": "entity categories",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "description": "The CURIE for the entity or token",
          "type": "string"
        },
        "terms": {
          "description": "terms",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TypedNode": {
      "allOf": [
        {
          "$ref": "#/definitions/Node"
        },
        {
          "properties": {
            "taxon": {
              "allOf": [
                {
                  "$ref": "#/definitions/Node"
                }
              ],
              "description": "taxon"
            },
            "type": {
              "description": "node type (eg phenotype, disease)",
              "type": "string"
            }
          },
          "type": "object"
        }
      ]
    },
    "variant_set": {
      "properties": {
        "body": {
          "description": "Article content",
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "category_id": {
          "type": "integer"
        },
        "id": {
          "description": "The unique identifier of a variant set",
          "type": "integer"
        },
        "pub_date": {
          "format": "date-time",
          "type": "string"
        },
        "title": {
          "description": "Article title",
          "type": "string"
        }
      },
      "required": [
        "body",
        "title"
      ],
      "type": "object"
    }
  },
  "tags": [
    {
      "description": "Retrieval of domain entities plus associations",
      "name": "bioentity"
    },
    {
      "description": "Retrieve associations between entities or entity and descriptors",
      "name": "association"
    },
    {
      "description": "Operations on GO Causal Activity Models (GO-CAMs)",
      "name": "cam"
    },
    {
      "description": "Operations over sets of entities",
      "name": "bioentityset"
    },
    {
      "description": "Map gene IDs to their homologs",
      "name": "bioentityset/homologs"
    },
    {
      "description": "maps a set of entities to a slim",
      "name": "bioentityset/slimmer"
    },
    {
      "description": "Operations on evidence graphs",
      "name": "evidence/graph"
    },
    {
      "description": "Operations to retrieve sequence features",
      "name": "genome/features"
    },
    {
      "description": "Operations over data graphs",
      "name": "graph"
    },
    {
      "description": "mapping and resolution of identifiers",
      "name": "identifier/mapper"
    },
    {
      "description": "identifier prefixes",
      "name": "identifier/prefixes"
    },
    {
      "description": "Perform bulk operations",
      "name": "mart"
    },
    {
      "description": "annotate text using named entities",
      "name": "nlp/annotate"
    },
    {
      "description": "extract a subgraph from an ontology",
      "name": "ontol"
    },
    {
      "description": "Assign labels to IDs",
      "name": "ontol/labeler"
    },
    {
      "description": "Operations on Ontology Terms and Subsets",
      "name": "ontology"
    },
    {
      "description": "OWL-level operations on an ontology",
      "name": "owl/ontology"
    },
    {
      "description": "pairwise similarity between two entities",
      "name": "pair/sim"
    },
    {
      "description": "Individual humans (including patients), or organisms",
      "name": "individual"
    },
    {
      "description": "Usage of different relationship types",
      "name": "relation/usage"
    },
    {
      "description": "Search for entities",
      "name": "search"
    },
    {
      "description": "Operations related to sets of variants",
      "name": "variation/set"
    },
    {
      "description": "Perform semantic similarity, ranking, and sufficiency scoring",
      "name": "sim"
    },
    {
      "description": "Get metadata",
      "name": "metadata"
    }
  ],
  "x-components": {
    "responses": {
      "AmbiguousPrefix": {
        "description": "Error handler to handle AmbiguousPrefix"
      },
      "InvalidSyntax": {
        "description": "Error handler to handle InvalidSyntax"
      },
      "MaskError": {
        "description": "When any error occurs on mask"
      },
      "NoContraction": {
        "description": "Error handler to handle NoContraction"
      },
      "NoExpansion": {
        "description": "Error handler to handle NoExpansion"
      },
      "NoPrefix": {
        "description": "Error handler to handle NoPrefix"
      },
      "NoResultFound": {
        "description": ""
      },
      "NoResultFoundException": {
        "description": "Error handler to handle NoResultFoundException"
      },
      "ParseError": {
        "description": "When a mask can't be parsed"
      },
      "RouteNotImplementedException": {
        "description": "Error handler to handle RouteNotImplementedException"
      },
      "UnhandledException": {
        "description": "Error handler to handle UnhandledException"
      },
      "UnrecognizedBioentityTypeException": {
        "description": "Error handler to handle UnrecognizedBioentityTypeException"
      }
    },
    "requestBodies": {
      "variant_set": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/variant_set"
            }
          }
        },
        "required": true
      }
    }
  }
}