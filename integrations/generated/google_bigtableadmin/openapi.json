{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com",
      "x-twitter": "youtube"
    },
    "description": "Administer your Cloud Bigtable tables and instances.",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/",
    "title": "Cloud Bigtable Admin API",
    "version": "v1",
    "x-apiClientRegistration": {
      "url": "https://console.developers.google.com"
    },
    "x-apisguru-categories": [
      "analytics",
      "media"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
    },
    "x-origin": [
      {
        "format": "google",
        "url": "https://bigtableadmin.googleapis.com/$discovery/rest?version=v1",
        "version": "v1"
      }
    ],
    "x-preferred": true,
    "x-providerName": "googleapis.com",
    "x-serviceName": "bigtableadmin",
    "x-datafire": {
      "name": "google_bigtableadmin",
      "type": "openapi"
    }
  },
  "host": "bigtableadmin.googleapis.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {},
  "definitions": {
    "Backup": {
      "description": "A backup of a Cloud Bigtable table.",
      "properties": {
        "endTime": {
          "description": "Output only. `end_time` is the time that the backup was finished. The row data in the backup will be no newer than this timestamp.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "expireTime": {
          "description": "Required. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`.",
          "type": "string"
        },
        "sizeBytes": {
          "description": "Output only. Size of the backup in bytes.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "sourceTable": {
          "description": "Required. Immutable. Name of the table from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects/{project}/instances/{instance}/tables/{source_table}`.",
          "type": "string"
        },
        "startTime": {
          "description": "Output only. `start_time` is the time that the backup was started (i.e. approximately the time the CreateBackup request is received). The row data in this backup will be no older than this timestamp.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. The current state of the backup.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupInfo": {
      "description": "Information about a backup.",
      "properties": {
        "backup": {
          "description": "Output only. Name of the backup.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "description": "Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "sourceTable": {
          "description": "Output only. Name of the table the backup was created from.",
          "readOnly": true,
          "type": "string"
        },
        "startTime": {
          "description": "Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Cluster": {
      "description": "A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance.",
      "properties": {
        "defaultStorageType": {
          "description": "Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string"
        },
        "location": {
          "description": "Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`.",
          "type": "string"
        },
        "name": {
          "description": "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.",
          "type": "string"
        },
        "serveNodes": {
          "description": "Required. The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance.",
          "format": "int32",
          "type": "integer"
        },
        "state": {
          "description": "Output only. The current state of the cluster.",
          "enum": [
            "STATE_NOT_KNOWN",
            "READY",
            "CREATING",
            "RESIZING",
            "DISABLED"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateBackupMetadata": {
      "description": "Metadata type for the operation returned by CreateBackup.",
      "properties": {
        "endTime": {
          "description": "If set, the time at which this operation finished or was cancelled.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "The name of the backup being created.",
          "type": "string"
        },
        "sourceTable": {
          "description": "The name of the table the backup is created from.",
          "type": "string"
        },
        "startTime": {
          "description": "The time at which this operation started.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateClusterMetadata": {
      "description": "The metadata for the Operation returned by CreateCluster.",
      "properties": {
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "originalRequest": {
          "$ref": "#/definitions/CreateClusterRequest",
          "description": "The request that prompted the initiation of this CreateCluster operation."
        },
        "requestTime": {
          "description": "The time at which the original request was received.",
          "format": "google-datetime",
          "type": "string"
        },
        "tables": {
          "additionalProperties": {
            "$ref": "#/definitions/TableProgress"
          },
          "description": "Keys: the full `name` of each table that existed in the instance when CreateCluster was first called, i.e. `projects//instances//tables/`. Any table added to the instance by a later API call will be created in the new cluster by that API call, not this one. Values: information on how much of a table's data has been copied to the newly-created cluster so far.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "CreateClusterRequest": {
      "description": "Request message for BigtableInstanceAdmin.CreateCluster.",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/Cluster",
          "description": "Required. The cluster to be created. Fields marked `OutputOnly` must be left blank."
        },
        "clusterId": {
          "description": "Required. The ID to be used when referring to the new cluster within its instance, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`.",
          "type": "string"
        },
        "parent": {
          "description": "Required. The unique name of the instance in which to create the new cluster. Values are of the form `projects/{project}/instances/{instance}`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateInstanceMetadata": {
      "description": "The metadata for the Operation returned by CreateInstance.",
      "properties": {
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "originalRequest": {
          "$ref": "#/definitions/CreateInstanceRequest",
          "description": "The request that prompted the initiation of this CreateInstance operation."
        },
        "requestTime": {
          "description": "The time at which the original request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateInstanceRequest": {
      "description": "Request message for BigtableInstanceAdmin.CreateInstance.",
      "properties": {
        "clusters": {
          "additionalProperties": {
            "$ref": "#/definitions/Cluster"
          },
          "description": "Required. The clusters to be created within the instance, mapped by desired cluster ID, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`. Fields marked `OutputOnly` must be left blank. Currently, at most four clusters can be specified.",
          "type": "object"
        },
        "instance": {
          "$ref": "#/definitions/Instance",
          "description": "Required. The instance to create. Fields marked `OutputOnly` must be left blank."
        },
        "instanceId": {
          "description": "Required. The ID to be used when referring to the new instance within its project, e.g., just `myinstance` rather than `projects/myproject/instances/myinstance`.",
          "type": "string"
        },
        "parent": {
          "description": "Required. The unique name of the project in which to create the new instance. Values are of the form `projects/{project}`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FailureTrace": {
      "description": "Added to the error payload.",
      "properties": {
        "frames": {
          "items": {
            "$ref": "#/definitions/Frame"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Frame": {
      "properties": {
        "targetName": {
          "type": "string"
        },
        "workflowGuid": {
          "type": "string"
        },
        "zoneId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Instance": {
      "description": "A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance.",
      "properties": {
        "displayName": {
          "description": "Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Required. Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\\p{Ll}\\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes.",
          "type": "object"
        },
        "name": {
          "description": "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`.",
          "type": "string"
        },
        "state": {
          "description": "Output only. The current state of the instance.",
          "enum": [
            "STATE_NOT_KNOWN",
            "READY",
            "CREATING"
          ],
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Required. The type of the instance. Defaults to `PRODUCTION`.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PRODUCTION",
            "DEVELOPMENT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationProgress": {
      "description": "Encapsulates progress related information for a Cloud Bigtable long running operation.",
      "properties": {
        "endTime": {
          "description": "If set, the time at which this operation failed or was completed successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "progressPercent": {
          "description": "Percent completion of the operation. Values are between 0 and 100 inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "description": "Time the request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OptimizeRestoredTableMetadata": {
      "description": "Metadata type for the long-running operation used to track the progress of optimizations performed on a newly restored table. This long-running operation is automatically created by the system after the successful completion of a table restore, and cannot be cancelled.",
      "properties": {
        "name": {
          "description": "Name of the restored table being optimized.",
          "type": "string"
        },
        "progress": {
          "$ref": "#/definitions/OperationProgress",
          "description": "The progress of the post-restore optimizations."
        }
      },
      "type": "object"
    },
    "PartialUpdateInstanceRequest": {
      "description": "Request message for BigtableInstanceAdmin.PartialUpdateInstance.",
      "properties": {
        "instance": {
          "$ref": "#/definitions/Instance",
          "description": "Required. The Instance which will (partially) replace the current value."
        },
        "updateMask": {
          "description": "Required. The subset of Instance fields which should be replaced. Must be explicitly set.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RestoreTableMetadata": {
      "description": "Metadata type for the long-running operation returned by RestoreTable.",
      "properties": {
        "backupInfo": {
          "$ref": "#/definitions/BackupInfo"
        },
        "name": {
          "description": "Name of the table being created and restored to.",
          "type": "string"
        },
        "optimizeTableOperationName": {
          "description": "If exists, the name of the long-running operation that will be used to track the post-restore optimization process to optimize the performance of the restored table. The metadata type of the long-running operation is OptimizeRestoreTableMetadata. The response type is Empty. This long-running operation may be automatically created by the system if applicable after the RestoreTable long-running operation completes successfully. This operation may not be created if the table is already optimized or the restore was not successful.",
          "type": "string"
        },
        "progress": {
          "$ref": "#/definitions/OperationProgress",
          "description": "The progress of the RestoreTable operation."
        },
        "sourceType": {
          "description": "The type of the restore source.",
          "enum": [
            "RESTORE_SOURCE_TYPE_UNSPECIFIED",
            "BACKUP"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TableProgress": {
      "description": "Progress info for copying a table's data to the new cluster.",
      "properties": {
        "estimatedCopiedBytes": {
          "description": "Estimate of the number of bytes copied so far for this table. This will eventually reach 'estimated_size_bytes' unless the table copy is CANCELLED.",
          "format": "int64",
          "type": "string"
        },
        "estimatedSizeBytes": {
          "description": "Estimate of the size of the table to be copied.",
          "format": "int64",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "COPYING",
            "COMPLETED",
            "CANCELLED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateAppProfileMetadata": {
      "description": "The metadata for the Operation returned by UpdateAppProfile.",
      "properties": {},
      "type": "object"
    },
    "UpdateClusterMetadata": {
      "description": "The metadata for the Operation returned by UpdateCluster.",
      "properties": {
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "originalRequest": {
          "$ref": "#/definitions/Cluster",
          "description": "The request that prompted the initiation of this UpdateCluster operation."
        },
        "requestTime": {
          "description": "The time at which the original request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateInstanceMetadata": {
      "description": "The metadata for the Operation returned by UpdateInstance.",
      "properties": {
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "originalRequest": {
          "$ref": "#/definitions/PartialUpdateInstanceRequest",
          "description": "The request that prompted the initiation of this UpdateInstance operation."
        },
        "requestTime": {
          "description": "The time at which the original request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "tags": [],
  "externalDocs": {
    "url": "https://cloud.google.com/bigtable/"
  },
  "x-components": {
    "parameters": {
      "_.xgafv": {
        "description": "V1 error format.",
        "in": "query",
        "name": "$.xgafv",
        "schema": {
          "enum": [
            "1",
            "2"
          ],
          "type": "string"
        }
      },
      "access_token": {
        "description": "OAuth access token.",
        "in": "query",
        "name": "access_token",
        "schema": {
          "type": "string"
        }
      },
      "alt": {
        "description": "Data format for response.",
        "in": "query",
        "name": "alt",
        "schema": {
          "enum": [
            "json",
            "media",
            "proto"
          ],
          "type": "string"
        }
      },
      "callback": {
        "description": "JSONP",
        "in": "query",
        "name": "callback",
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "in": "query",
        "name": "fields",
        "schema": {
          "type": "string"
        }
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "in": "query",
        "name": "key",
        "schema": {
          "type": "string"
        }
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "in": "query",
        "name": "oauth_token",
        "schema": {
          "type": "string"
        }
      },
      "prettyPrint": {
        "description": "Returns response with indentations and line breaks.",
        "in": "query",
        "name": "prettyPrint",
        "schema": {
          "type": "boolean"
        }
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
        "in": "query",
        "name": "quotaUser",
        "schema": {
          "type": "string"
        }
      },
      "uploadType": {
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
        "in": "query",
        "name": "uploadType",
        "schema": {
          "type": "string"
        }
      },
      "upload_protocol": {
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
        "in": "query",
        "name": "upload_protocol",
        "schema": {
          "type": "string"
        }
      }
    }
  }
}