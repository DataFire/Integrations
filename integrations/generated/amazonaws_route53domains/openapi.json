{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi",
      "x-twitter": "PermittedSoc"
    },
    "description": "Amazon Route 53 API actions let you register domain names and perform related operations.",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Route 53 Domains",
    "version": "2014-05-15",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/route53domains-2014-05-15.normal.json",
        "x-apisguru-driver": "external"
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "route53domains",
    "x-datafire": {
      "name": "amazonaws_route53domains",
      "type": "openapi"
    }
  },
  "host": "route53domains.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/#X-Amz-Target=Route53Domains_v20140515.AcceptDomainTransferFromAnotherAwsAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.AcceptDomainTransferFromAnotherAwsAccount"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptDomainTransferFromAnotherAwsAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AcceptDomainTransferFromAnotherAwsAccountResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "482": {
            "description": "DomainLimitExceeded",
            "schema": {
              "$ref": "#/definitions/DomainLimitExceeded"
            }
          }
        },
        "description": "<p>Accepts the transfer of a domain from another AWS account to the current AWS account. You initiate a transfer between AWS accounts using <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_TransferDomainToAnotherAwsAccount.html\">TransferDomainToAnotherAwsAccount</a>. </p> <p>Use either <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ListOperations.html\">ListOperations</a> or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a> to determine whether the operation succeeded. <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a> provides additional information, for example, <code>Domain Transfer from Aws Account 111122223333 has been cancelled</code>. </p>",
        "operationId": "AcceptDomainTransferFromAnotherAwsAccount"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.CancelDomainTransferToAnotherAwsAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.CancelDomainTransferToAnotherAwsAccount"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelDomainTransferToAnotherAwsAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CancelDomainTransferToAnotherAwsAccountResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          }
        },
        "description": "<p>Cancels the transfer of a domain from the current AWS account to another AWS account. You initiate a transfer between AWS accounts using <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_TransferDomainToAnotherAwsAccount.html\">TransferDomainToAnotherAwsAccount</a>. </p> <important> <p>You must cancel the transfer before the other AWS account accepts the transfer using <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_AcceptDomainTransferFromAnotherAwsAccount.html\">AcceptDomainTransferFromAnotherAwsAccount</a>.</p> </important> <p>Use either <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ListOperations.html\">ListOperations</a> or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a> to determine whether the operation succeeded. <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a> provides additional information, for example, <code>Domain Transfer from Aws Account 111122223333 has been cancelled</code>. </p>",
        "operationId": "CancelDomainTransferToAnotherAwsAccount"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.CheckDomainAvailability": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.CheckDomainAvailability"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckDomainAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckDomainAvailabilityResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "This operation checks the availability of one domain name. Note that if the availability status of a domain is pending, you must submit another request to determine the availability of the domain name.",
        "operationId": "CheckDomainAvailability"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.CheckDomainTransferability": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.CheckDomainTransferability"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckDomainTransferabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckDomainTransferabilityResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "Checks whether a domain name can be transferred to Amazon Route 53. ",
        "operationId": "CheckDomainTransferability"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.DeleteTagsForDomain": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.DeleteTagsForDomain"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteTagsForDomainRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteTagsForDomainResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "482": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "<p>This operation deletes the specified tags for a domain.</p> <p>All tag operations are eventually consistent; subsequent operations might not immediately represent all issued operations.</p>",
        "operationId": "DeleteTagsForDomain"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.DisableDomainAutoRenew": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.DisableDomainAutoRenew"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableDomainAutoRenewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisableDomainAutoRenewResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "This operation disables automatic renewal of domain registration for the specified domain.",
        "operationId": "DisableDomainAutoRenew"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.DisableDomainTransferLock": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.DisableDomainTransferLock"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableDomainTransferLockRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DisableDomainTransferLockResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "DuplicateRequest",
            "schema": {
              "$ref": "#/definitions/DuplicateRequest"
            }
          },
          "482": {
            "description": "TLDRulesViolation",
            "schema": {
              "$ref": "#/definitions/TLDRulesViolation"
            }
          },
          "483": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "484": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "This operation removes the transfer lock on the domain (specifically the <code>clientTransferProhibited</code> status) to allow domain transfers. We recommend you refrain from performing this action unless you intend to transfer the domain to a different registrar. Successful submission returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email.",
        "operationId": "DisableDomainTransferLock"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.EnableDomainAutoRenew": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.EnableDomainAutoRenew"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnableDomainAutoRenewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnableDomainAutoRenewResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          },
          "482": {
            "description": "TLDRulesViolation",
            "schema": {
              "$ref": "#/definitions/TLDRulesViolation"
            }
          }
        },
        "description": "<p>This operation configures Amazon Route 53 to automatically renew the specified domain before the domain registration expires. The cost of renewing your domain registration is billed to your AWS account.</p> <p>The period during which you can renew a domain name varies by TLD. For a list of TLDs and their renewal policies, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains That You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>. Route 53 requires that you renew before the end of the renewal period so we can complete processing before the deadline.</p>",
        "operationId": "EnableDomainAutoRenew"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.EnableDomainTransferLock": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.EnableDomainTransferLock"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnableDomainTransferLockRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnableDomainTransferLockResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "DuplicateRequest",
            "schema": {
              "$ref": "#/definitions/DuplicateRequest"
            }
          },
          "482": {
            "description": "TLDRulesViolation",
            "schema": {
              "$ref": "#/definitions/TLDRulesViolation"
            }
          },
          "483": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "484": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "This operation sets the transfer lock on the domain (specifically the <code>clientTransferProhibited</code> status) to prevent domain transfers. Successful submission returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email.",
        "operationId": "EnableDomainTransferLock"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.GetContactReachabilityStatus": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.GetContactReachabilityStatus"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetContactReachabilityStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetContactReachabilityStatusResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "482": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "<p>For operations that require confirmation that the email address for the registrant contact is valid, such as registering a new domain, this operation returns information about whether the registrant contact has responded.</p> <p>If you want us to resend the email, use the <code>ResendContactReachabilityEmail</code> operation.</p>",
        "operationId": "GetContactReachabilityStatus"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.GetDomainDetail": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.GetDomainDetail"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDomainDetailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDomainDetailResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "This operation returns detailed information about a specified domain that is associated with the current AWS account. Contact information for the domain is also returned as part of the output.",
        "operationId": "GetDomainDetail"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.GetDomainSuggestions": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.GetDomainSuggestions"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDomainSuggestionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDomainSuggestionsResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "The GetDomainSuggestions operation returns a list of suggested domain names.",
        "operationId": "GetDomainSuggestions"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.GetOperationDetail": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.GetOperationDetail"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOperationDetailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetOperationDetailResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          }
        },
        "description": "This operation returns the current status of an operation that is not completed.",
        "operationId": "GetOperationDetail"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.ListDomains": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "Route53Domains_v20140515.ListDomains"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListDomainsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDomainsResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          }
        },
        "description": "This operation returns all the domain names registered with Amazon Route 53 for the current AWS account.",
        "operationId": "ListDomains"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.ListOperations": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxItems",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "Route53Domains_v20140515.ListOperations"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListOperationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListOperationsResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          }
        },
        "description": "Returns information about all of the operations that return an operation ID and that have ever been performed on domains that were registered by the current account. ",
        "operationId": "ListOperations"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.ListTagsForDomain": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.ListTagsForDomain"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTagsForDomainRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForDomainResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "482": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "<p>This operation returns all of the tags that are associated with the specified domain.</p> <p>All tag operations are eventually consistent; subsequent operations might not immediately represent all issued operations.</p>",
        "operationId": "ListTagsForDomain"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.RegisterDomain": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.RegisterDomain"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterDomainRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegisterDomainResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          },
          "482": {
            "description": "DuplicateRequest",
            "schema": {
              "$ref": "#/definitions/DuplicateRequest"
            }
          },
          "483": {
            "description": "TLDRulesViolation",
            "schema": {
              "$ref": "#/definitions/TLDRulesViolation"
            }
          },
          "484": {
            "description": "DomainLimitExceeded",
            "schema": {
              "$ref": "#/definitions/DomainLimitExceeded"
            }
          },
          "485": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          }
        },
        "description": "<p>This operation registers a domain. Domains are registered either by Amazon Registrar (for .com, .net, and .org domains) or by our registrar associate, Gandi (for all other domains). For some top-level domains (TLDs), this operation requires extra parameters.</p> <p>When you register a domain, Amazon Route 53 does the following:</p> <ul> <li> <p>Creates a Route 53 hosted zone that has the same name as the domain. Route 53 assigns four name servers to your hosted zone and automatically updates your domain registration with the names of these name servers.</p> </li> <li> <p>Enables autorenew, so your domain registration will renew automatically each year. We'll notify you in advance of the renewal date so you can choose whether to renew the registration.</p> </li> <li> <p>Optionally enables privacy protection, so WHOIS queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If you don't enable privacy protection, WHOIS queries return the information that you entered for the registrant, admin, and tech contacts.</p> </li> <li> <p>If registration is successful, returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant is notified by email.</p> </li> <li> <p>Charges your AWS account an amount based on the top-level domain. For more information, see <a href=\"http://aws.amazon.com/route53/pricing/\">Amazon Route 53 Pricing</a>.</p> </li> </ul>",
        "operationId": "RegisterDomain"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.RejectDomainTransferFromAnotherAwsAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.RejectDomainTransferFromAnotherAwsAccount"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectDomainTransferFromAnotherAwsAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RejectDomainTransferFromAnotherAwsAccountResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          }
        },
        "description": "<p>Rejects the transfer of a domain from another AWS account to the current AWS account. You initiate a transfer between AWS accounts using <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_TransferDomainToAnotherAwsAccount.html\">TransferDomainToAnotherAwsAccount</a>. </p> <p>Use either <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ListOperations.html\">ListOperations</a> or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a> to determine whether the operation succeeded. <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a> provides additional information, for example, <code>Domain Transfer from Aws Account 111122223333 has been cancelled</code>. </p>",
        "operationId": "RejectDomainTransferFromAnotherAwsAccount"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.RenewDomain": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.RenewDomain"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RenewDomainRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RenewDomainResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          },
          "482": {
            "description": "DuplicateRequest",
            "schema": {
              "$ref": "#/definitions/DuplicateRequest"
            }
          },
          "483": {
            "description": "TLDRulesViolation",
            "schema": {
              "$ref": "#/definitions/TLDRulesViolation"
            }
          },
          "484": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          }
        },
        "description": "<p>This operation renews a domain for the specified number of years. The cost of renewing your domain is billed to your AWS account.</p> <p>We recommend that you renew your domain several weeks before the expiration date. Some TLD registries delete domains before the expiration date if you haven't renewed far enough in advance. For more information about renewing domain registration, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/domain-renew.html\">Renewing Registration for a Domain</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>",
        "operationId": "RenewDomain"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.ResendContactReachabilityEmail": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.ResendContactReachabilityEmail"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResendContactReachabilityEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResendContactReachabilityEmailResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "482": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "For operations that require confirmation that the email address for the registrant contact is valid, such as registering a new domain, this operation resends the confirmation email to the current email address for the registrant contact.",
        "operationId": "ResendContactReachabilityEmail"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.RetrieveDomainAuthCode": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.RetrieveDomainAuthCode"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetrieveDomainAuthCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveDomainAuthCodeResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "This operation returns the AuthCode for the domain. To transfer a domain to another registrar, you provide this value to the new registrar.",
        "operationId": "RetrieveDomainAuthCode"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.TransferDomain": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.TransferDomain"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferDomainRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransferDomainResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          },
          "482": {
            "description": "DuplicateRequest",
            "schema": {
              "$ref": "#/definitions/DuplicateRequest"
            }
          },
          "483": {
            "description": "TLDRulesViolation",
            "schema": {
              "$ref": "#/definitions/TLDRulesViolation"
            }
          },
          "484": {
            "description": "DomainLimitExceeded",
            "schema": {
              "$ref": "#/definitions/DomainLimitExceeded"
            }
          },
          "485": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          }
        },
        "description": "<p>Transfers a domain from another registrar to Amazon Route 53. When the transfer is complete, the domain is registered either with Amazon Registrar (for .com, .net, and .org domains) or with our registrar associate, Gandi (for all other TLDs).</p> <p>For more information about transferring domains, see the following topics:</p> <ul> <li> <p>For transfer requirements, a detailed procedure, and information about viewing the status of a domain that you're transferring to Route 53, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/domain-transfer-to-route-53.html\">Transferring Registration for a Domain to Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </li> <li> <p>For information about how to transfer a domain from one AWS account to another, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_TransferDomainToAnotherAwsAccount.html\">TransferDomainToAnotherAwsAccount</a>. </p> </li> <li> <p>For information about how to transfer a domain to another domain registrar, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/domain-transfer-from-route-53.html\">Transferring a Domain from Amazon Route 53 to Another Registrar</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </li> </ul> <p>If the registrar for your domain is also the DNS service provider for the domain, we highly recommend that you transfer your DNS service to Route 53 or to another DNS service provider before you transfer your registration. Some registrars provide free DNS service when you purchase a domain registration. When you transfer the registration, the previous registrar will not renew your domain registration and could end your DNS service at any time.</p> <important> <p>If the registrar for your domain is also the DNS service provider for the domain and you don't transfer DNS service to another provider, your website, email, and the web applications associated with the domain might become unavailable.</p> </important> <p>If the transfer is successful, this method returns an operation ID that you can use to track the progress and completion of the action. If the transfer doesn't complete successfully, the domain registrant will be notified by email.</p>",
        "operationId": "TransferDomain"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.TransferDomainToAnotherAwsAccount": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.TransferDomainToAnotherAwsAccount"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferDomainToAnotherAwsAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransferDomainToAnotherAwsAccountResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "482": {
            "description": "DuplicateRequest",
            "schema": {
              "$ref": "#/definitions/DuplicateRequest"
            }
          }
        },
        "description": "<p>Transfers a domain from the current AWS account to another AWS account. Note the following:</p> <ul> <li> <p>The AWS account that you're transferring the domain to must accept the transfer. If the other account doesn't accept the transfer within 3 days, we cancel the transfer. See <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_AcceptDomainTransferFromAnotherAwsAccount.html\">AcceptDomainTransferFromAnotherAwsAccount</a>. </p> </li> <li> <p>You can cancel the transfer before the other account accepts it. See <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_CancelDomainTransferToAnotherAwsAccount.html\">CancelDomainTransferToAnotherAwsAccount</a>. </p> </li> <li> <p>The other account can reject the transfer. See <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_RejectDomainTransferFromAnotherAwsAccount.html\">RejectDomainTransferFromAnotherAwsAccount</a>. </p> </li> </ul> <important> <p>When you transfer a domain from one AWS account to another, Route 53 doesn't transfer the hosted zone that is associated with the domain. DNS resolution isn't affected if the domain and the hosted zone are owned by separate accounts, so transferring the hosted zone is optional. For information about transferring the hosted zone to another AWS account, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/hosted-zones-migrating.html\">Migrating a Hosted Zone to a Different AWS Account</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </important> <p>Use either <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ListOperations.html\">ListOperations</a> or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a> to determine whether the operation succeeded. <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a> provides additional information, for example, <code>Domain Transfer from Aws Account 111122223333 has been cancelled</code>. </p>",
        "operationId": "TransferDomainToAnotherAwsAccount"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.UpdateDomainContact": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.UpdateDomainContact"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDomainContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateDomainContactResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "DuplicateRequest",
            "schema": {
              "$ref": "#/definitions/DuplicateRequest"
            }
          },
          "482": {
            "description": "TLDRulesViolation",
            "schema": {
              "$ref": "#/definitions/TLDRulesViolation"
            }
          },
          "483": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "484": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "<p>This operation updates the contact information for a particular domain. You must specify information for at least one contact: registrant, administrator, or technical.</p> <p>If the update is successful, this method returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email.</p>",
        "operationId": "UpdateDomainContact"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.UpdateDomainContactPrivacy": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.UpdateDomainContactPrivacy"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDomainContactPrivacyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateDomainContactPrivacyResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "DuplicateRequest",
            "schema": {
              "$ref": "#/definitions/DuplicateRequest"
            }
          },
          "482": {
            "description": "TLDRulesViolation",
            "schema": {
              "$ref": "#/definitions/TLDRulesViolation"
            }
          },
          "483": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "484": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "<p>This operation updates the specified domain contact's privacy setting. When privacy protection is enabled, contact information such as email address is replaced either with contact information for Amazon Registrar (for .com, .net, and .org domains) or with contact information for our registrar associate, Gandi.</p> <p>This operation affects only the contact information for the specified contact type (registrant, administrator, or tech). If the request succeeds, Amazon Route 53 returns an operation ID that you can use with <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a> to track the progress and completion of the action. If the request doesn't complete successfully, the domain registrant will be notified by email.</p> <important> <p>By disabling the privacy service via API, you consent to the publication of the contact information provided for this domain via the public WHOIS database. You certify that you are the registrant of this domain name and have the authority to make this decision. You may withdraw your consent at any time by enabling privacy protection using either <code>UpdateDomainContactPrivacy</code> or the Route 53 console. Enabling privacy protection removes the contact information provided for this domain from the WHOIS database. For more information on our privacy practices, see <a href=\"https://aws.amazon.com/privacy/\">https://aws.amazon.com/privacy/</a>.</p> </important>",
        "operationId": "UpdateDomainContactPrivacy"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.UpdateDomainNameservers": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.UpdateDomainNameservers"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDomainNameserversRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateDomainNameserversResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "DuplicateRequest",
            "schema": {
              "$ref": "#/definitions/DuplicateRequest"
            }
          },
          "482": {
            "description": "TLDRulesViolation",
            "schema": {
              "$ref": "#/definitions/TLDRulesViolation"
            }
          },
          "483": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "484": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "<p>This operation replaces the current set of name servers for the domain with the specified set of name servers. If you use Amazon Route 53 as your DNS service, specify the four name servers in the delegation set for the hosted zone for the domain.</p> <p>If successful, this operation returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email.</p>",
        "operationId": "UpdateDomainNameservers"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.UpdateTagsForDomain": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.UpdateTagsForDomain"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTagsForDomainRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateTagsForDomainResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "481": {
            "description": "OperationLimitExceeded",
            "schema": {
              "$ref": "#/definitions/OperationLimitExceeded"
            }
          },
          "482": {
            "description": "UnsupportedTLD",
            "schema": {
              "$ref": "#/definitions/UnsupportedTLD"
            }
          }
        },
        "description": "<p>This operation adds or updates tags for a specified domain.</p> <p>All tag operations are eventually consistent; subsequent operations might not immediately represent all issued operations.</p>",
        "operationId": "UpdateTagsForDomain"
      }
    },
    "/#X-Amz-Target=Route53Domains_v20140515.ViewBilling": {
      "parameters": [
        {
          "in": "header",
          "name": "X-Amz-Content-Sha256",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Date",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Algorithm",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Credential",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Security-Token",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-Signature",
          "required": false,
          "type": "string"
        },
        {
          "in": "header",
          "name": "X-Amz-SignedHeaders",
          "required": false,
          "type": "string"
        }
      ],
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "enum": [
              "Route53Domains_v20140515.ViewBilling"
            ],
            "in": "header",
            "name": "X-Amz-Target",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ViewBillingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ViewBillingResponse"
            }
          },
          "480": {
            "description": "InvalidInput",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          }
        },
        "description": "Returns all the domain-related billing records for the current AWS account for a specified period",
        "operationId": "ViewBilling"
      }
    }
  },
  "definitions": {
    "AcceptDomainTransferFromAnotherAwsAccountRequest": {
      "description": "The AcceptDomainTransferFromAnotherAwsAccount request includes the following elements.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that was specified when another AWS account submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_TransferDomainToAnotherAwsAccount.html\">TransferDomainToAnotherAwsAccount</a> request. "
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "The password that was returned by the <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_TransferDomainToAnotherAwsAccount.html\">TransferDomainToAnotherAwsAccount</a> request. "
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "Password"
      ],
      "title": "AcceptDomainTransferFromAnotherAwsAccountRequest",
      "type": "object"
    },
    "AcceptDomainTransferFromAnotherAwsAccountResponse": {
      "description": "The AcceptDomainTransferFromAnotherAwsAccount response includes the following element.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier for tracking the progress of the request. To query the operation status, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a>."
            }
          ]
        }
      },
      "type": "object"
    },
    "AccountId": {
      "pattern": "^(\\d{12})$",
      "type": "string"
    },
    "AddressLine": {
      "maxLength": 255,
      "type": "string"
    },
    "BillingRecord": {
      "description": "Information for one billing record.",
      "properties": {
        "BillDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date that the operation was billed, in Unix format."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that the billing record applies to. If the domain name contains characters other than a-z, 0-9, and - (hyphen), such as an internationalized domain name, then this value is in Punycode. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html\">DNS Domain Name Format</a> in the <i>Amazon Route 53 Developer Guide</i>."
            }
          ]
        },
        "InvoiceId": {
          "allOf": [
            {
              "$ref": "#/definitions/InvoiceId"
            },
            {
              "description": "The ID of the invoice that is associated with the billing record."
            }
          ]
        },
        "Operation": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationType"
            },
            {
              "description": "The operation that you were charged for."
            }
          ]
        },
        "Price": {
          "allOf": [
            {
              "$ref": "#/definitions/Price"
            },
            {
              "description": "<p>The price that you were charged for the operation, in US dollars.</p> <p>Example value: 12.0</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "BillingRecords": {
      "items": {
        "$ref": "#/definitions/BillingRecord"
      },
      "type": "array"
    },
    "Boolean": {
      "type": "boolean"
    },
    "CancelDomainTransferToAnotherAwsAccountRequest": {
      "description": "The CancelDomainTransferToAnotherAwsAccount request includes the following element.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain for which you want to cancel the transfer to another AWS account."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "CancelDomainTransferToAnotherAwsAccountRequest",
      "type": "object"
    },
    "CancelDomainTransferToAnotherAwsAccountResponse": {
      "description": "The <code>CancelDomainTransferToAnotherAwsAccount</code> response includes the following element.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "The identifier that <code>TransferDomainToAnotherAwsAccount</code> returned to track the progress of the request. Because the transfer request was canceled, the value is no longer valid, and you can't use <code>GetOperationDetail</code> to query the operation status."
            }
          ]
        }
      },
      "type": "object"
    },
    "CheckDomainAvailabilityRequest": {
      "description": "The CheckDomainAvailability request contains the following elements.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "<p>The name of the domain that you want to get availability for. The top-level domain (TLD), such as .com, must be a TLD that Route 53 supports. For a list of supported TLDs, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>The domain name can contain only the following characters:</p> <ul> <li> <p>Letters a through z. Domain names are not case sensitive.</p> </li> <li> <p>Numbers 0 through 9.</p> </li> <li> <p>Hyphen (-). You can't specify a hyphen at the beginning or end of a label. </p> </li> <li> <p>Period (.) to separate the labels in the name, such as the <code>.</code> in <code>example.com</code>.</p> </li> </ul> <p>Internationalized domain names are not supported for some top-level domains. To determine whether the TLD that you want to use supports internationalized domain names, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html#domain-name-format-idns\">Formatting Internationalized Domain Names</a>. </p>"
            }
          ]
        },
        "IdnLangCode": {
          "allOf": [
            {
              "$ref": "#/definitions/LangCode"
            },
            {
              "description": "Reserved for future use."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "CheckDomainAvailabilityRequest",
      "type": "object"
    },
    "CheckDomainAvailabilityResponse": {
      "description": "The CheckDomainAvailability response includes the following elements.",
      "properties": {
        "Availability": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainAvailability"
            },
            {
              "description": "<p>Whether the domain name is available for registering.</p> <note> <p>You can register only domains designated as <code>AVAILABLE</code>.</p> </note> <p>Valid values:</p> <dl> <dt>AVAILABLE</dt> <dd> <p>The domain name is available.</p> </dd> <dt>AVAILABLE_RESERVED</dt> <dd> <p>The domain name is reserved under specific conditions.</p> </dd> <dt>AVAILABLE_PREORDER</dt> <dd> <p>The domain name is available and can be preordered.</p> </dd> <dt>DONT_KNOW</dt> <dd> <p>The TLD registry didn't reply with a definitive answer about whether the domain name is available. Route 53 can return this response for a variety of reasons, for example, the registry is performing maintenance. Try again later.</p> </dd> <dt>PENDING</dt> <dd> <p>The TLD registry didn't return a response in the expected amount of time. When the response is delayed, it usually takes just a few extra seconds. You can resubmit the request immediately.</p> </dd> <dt>RESERVED</dt> <dd> <p>The domain name has been reserved for another person or organization.</p> </dd> <dt>UNAVAILABLE</dt> <dd> <p>The domain name is not available.</p> </dd> <dt>UNAVAILABLE_PREMIUM</dt> <dd> <p>The domain name is not available.</p> </dd> <dt>UNAVAILABLE_RESTRICTED</dt> <dd> <p>The domain name is forbidden.</p> </dd> </dl>"
            }
          ]
        }
      },
      "required": [
        "Availability"
      ],
      "type": "object"
    },
    "CheckDomainTransferabilityRequest": {
      "description": "The CheckDomainTransferability request contains the following elements.",
      "properties": {
        "AuthCode": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainAuthCode"
            },
            {
              "description": "If the registrar for the top-level domain (TLD) requires an authorization code to transfer the domain, the code that you got from the current registrar for the domain."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "<p>The name of the domain that you want to transfer to Route 53. The top-level domain (TLD), such as .com, must be a TLD that Route 53 supports. For a list of supported TLDs, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>The domain name can contain only the following characters:</p> <ul> <li> <p>Letters a through z. Domain names are not case sensitive.</p> </li> <li> <p>Numbers 0 through 9.</p> </li> <li> <p>Hyphen (-). You can't specify a hyphen at the beginning or end of a label. </p> </li> <li> <p>Period (.) to separate the labels in the name, such as the <code>.</code> in <code>example.com</code>.</p> </li> </ul>"
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "CheckDomainTransferabilityRequest",
      "type": "object"
    },
    "CheckDomainTransferabilityResponse": {
      "description": "The CheckDomainTransferability response includes the following elements.",
      "properties": {
        "Transferability": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainTransferability"
            },
            {
              "description": "A complex type that contains information about whether the specified domain can be transferred to Route 53."
            }
          ]
        }
      },
      "required": [
        "Transferability"
      ],
      "type": "object"
    },
    "City": {
      "maxLength": 255,
      "type": "string"
    },
    "ContactDetail": {
      "description": "ContactDetail includes the following elements.",
      "properties": {
        "AddressLine1": {
          "allOf": [
            {
              "$ref": "#/definitions/AddressLine"
            },
            {
              "description": "First line of the contact's address."
            }
          ]
        },
        "AddressLine2": {
          "allOf": [
            {
              "$ref": "#/definitions/AddressLine"
            },
            {
              "description": "Second line of contact's address, if any."
            }
          ]
        },
        "City": {
          "allOf": [
            {
              "$ref": "#/definitions/City"
            },
            {
              "description": "The city of the contact's address."
            }
          ]
        },
        "ContactType": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactType"
            },
            {
              "description": "<p>Indicates whether the contact is a person, company, association, or public organization. Note the following:</p> <ul> <li> <p>If you specify a value other than <code>PERSON</code>, you must also specify a value for <code>OrganizationName</code>.</p> </li> <li> <p>For some TLDs, the privacy protection available depends on the value that you specify for <code>Contact Type</code>. For the privacy protection settings for your TLD, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i> </p> </li> <li> <p>For .es domains, if you specify <code>PERSON</code>, you must specify <code>INDIVIDUAL</code> for the value of <code>ES_LEGAL_FORM</code>.</p> </li> </ul>"
            }
          ]
        },
        "CountryCode": {
          "allOf": [
            {
              "$ref": "#/definitions/CountryCode"
            },
            {
              "description": "Code for the country of the contact's address."
            }
          ]
        },
        "Email": {
          "allOf": [
            {
              "$ref": "#/definitions/Email"
            },
            {
              "description": "Email address of the contact."
            }
          ]
        },
        "ExtraParams": {
          "allOf": [
            {
              "$ref": "#/definitions/ExtraParamList"
            },
            {
              "description": "A list of name-value pairs for parameters required by certain top-level domains."
            }
          ]
        },
        "Fax": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactNumber"
            },
            {
              "description": "<p>Fax number of the contact.</p> <p>Constraints: Phone number must be specified in the format \"+[country dialing code].[number including any area code]\". For example, a US phone number might appear as <code>\"+1.1234567890\"</code>.</p>"
            }
          ]
        },
        "FirstName": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactName"
            },
            {
              "description": "First name of contact."
            }
          ]
        },
        "LastName": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactName"
            },
            {
              "description": "Last name of contact."
            }
          ]
        },
        "OrganizationName": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactName"
            },
            {
              "description": "Name of the organization for contact types other than <code>PERSON</code>."
            }
          ]
        },
        "PhoneNumber": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactNumber"
            },
            {
              "description": "<p>The phone number of the contact.</p> <p>Constraints: Phone number must be specified in the format \"+[country dialing code].[number including any area code&gt;]\". For example, a US phone number might appear as <code>\"+1.1234567890\"</code>.</p>"
            }
          ]
        },
        "State": {
          "allOf": [
            {
              "$ref": "#/definitions/State"
            },
            {
              "description": "The state or province of the contact's city."
            }
          ]
        },
        "ZipCode": {
          "allOf": [
            {
              "$ref": "#/definitions/ZipCode"
            },
            {
              "description": "The zip or postal code of the contact's address."
            }
          ]
        }
      },
      "type": "object"
    },
    "ContactName": {
      "maxLength": 255,
      "type": "string"
    },
    "ContactNumber": {
      "maxLength": 30,
      "type": "string"
    },
    "ContactType": {
      "enum": [
        "PERSON",
        "COMPANY",
        "ASSOCIATION",
        "PUBLIC_BODY",
        "RESELLER"
      ],
      "type": "string"
    },
    "CountryCode": {
      "enum": [
        "AD",
        "AE",
        "AF",
        "AG",
        "AI",
        "AL",
        "AM",
        "AN",
        "AO",
        "AQ",
        "AR",
        "AS",
        "AT",
        "AU",
        "AW",
        "AZ",
        "BA",
        "BB",
        "BD",
        "BE",
        "BF",
        "BG",
        "BH",
        "BI",
        "BJ",
        "BL",
        "BM",
        "BN",
        "BO",
        "BR",
        "BS",
        "BT",
        "BW",
        "BY",
        "BZ",
        "CA",
        "CC",
        "CD",
        "CF",
        "CG",
        "CH",
        "CI",
        "CK",
        "CL",
        "CM",
        "CN",
        "CO",
        "CR",
        "CU",
        "CV",
        "CX",
        "CY",
        "CZ",
        "DE",
        "DJ",
        "DK",
        "DM",
        "DO",
        "DZ",
        "EC",
        "EE",
        "EG",
        "ER",
        "ES",
        "ET",
        "FI",
        "FJ",
        "FK",
        "FM",
        "FO",
        "FR",
        "GA",
        "GB",
        "GD",
        "GE",
        "GH",
        "GI",
        "GL",
        "GM",
        "GN",
        "GQ",
        "GR",
        "GT",
        "GU",
        "GW",
        "GY",
        "HK",
        "HN",
        "HR",
        "HT",
        "HU",
        "ID",
        "IE",
        "IL",
        "IM",
        "IN",
        "IQ",
        "IR",
        "IS",
        "IT",
        "JM",
        "JO",
        "JP",
        "KE",
        "KG",
        "KH",
        "KI",
        "KM",
        "KN",
        "KP",
        "KR",
        "KW",
        "KY",
        "KZ",
        "LA",
        "LB",
        "LC",
        "LI",
        "LK",
        "LR",
        "LS",
        "LT",
        "LU",
        "LV",
        "LY",
        "MA",
        "MC",
        "MD",
        "ME",
        "MF",
        "MG",
        "MH",
        "MK",
        "ML",
        "MM",
        "MN",
        "MO",
        "MP",
        "MR",
        "MS",
        "MT",
        "MU",
        "MV",
        "MW",
        "MX",
        "MY",
        "MZ",
        "NA",
        "NC",
        "NE",
        "NG",
        "NI",
        "NL",
        "NO",
        "NP",
        "NR",
        "NU",
        "NZ",
        "OM",
        "PA",
        "PE",
        "PF",
        "PG",
        "PH",
        "PK",
        "PL",
        "PM",
        "PN",
        "PR",
        "PT",
        "PW",
        "PY",
        "QA",
        "RO",
        "RS",
        "RU",
        "RW",
        "SA",
        "SB",
        "SC",
        "SD",
        "SE",
        "SG",
        "SH",
        "SI",
        "SK",
        "SL",
        "SM",
        "SN",
        "SO",
        "SR",
        "ST",
        "SV",
        "SY",
        "SZ",
        "TC",
        "TD",
        "TG",
        "TH",
        "TJ",
        "TK",
        "TL",
        "TM",
        "TN",
        "TO",
        "TR",
        "TT",
        "TV",
        "TW",
        "TZ",
        "UA",
        "UG",
        "US",
        "UY",
        "UZ",
        "VA",
        "VC",
        "VE",
        "VG",
        "VI",
        "VN",
        "VU",
        "WF",
        "WS",
        "YE",
        "YT",
        "ZA",
        "ZM",
        "ZW"
      ],
      "type": "string"
    },
    "CurrentExpiryYear": {
      "type": "integer"
    },
    "DNSSec": {
      "type": "string"
    },
    "DeleteTagsForDomainRequest": {
      "description": "The DeleteTagsForDomainRequest includes the following elements.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The domain for which you want to delete one or more tags."
            }
          ]
        },
        "TagsToDelete": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKeyList"
            },
            {
              "description": "A list of tag keys to delete."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "TagsToDelete"
      ],
      "title": "DeleteTagsForDomainRequest",
      "type": "object"
    },
    "DeleteTagsForDomainResponse": {
      "properties": {},
      "type": "object"
    },
    "DisableDomainAutoRenewRequest": {
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to disable automatic renewal for."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "DisableDomainAutoRenewRequest",
      "type": "object"
    },
    "DisableDomainAutoRenewResponse": {
      "properties": {},
      "type": "object"
    },
    "DisableDomainTransferLockRequest": {
      "description": "The DisableDomainTransferLock request includes the following element.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to remove the transfer lock for."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "DisableDomainTransferLockRequest",
      "type": "object"
    },
    "DisableDomainTransferLockResponse": {
      "description": "The DisableDomainTransferLock response includes the following element.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier for tracking the progress of the request. To query the operation status, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a>."
            }
          ]
        }
      },
      "required": [
        "OperationId"
      ],
      "type": "object"
    },
    "DomainAuthCode": {
      "format": "password",
      "maxLength": 1024,
      "type": "string"
    },
    "DomainAvailability": {
      "enum": [
        "AVAILABLE",
        "AVAILABLE_RESERVED",
        "AVAILABLE_PREORDER",
        "UNAVAILABLE",
        "UNAVAILABLE_PREMIUM",
        "UNAVAILABLE_RESTRICTED",
        "RESERVED",
        "DONT_KNOW"
      ],
      "type": "string"
    },
    "DomainLimitExceeded": {},
    "DomainName": {
      "maxLength": 255,
      "type": "string"
    },
    "DomainStatus": {
      "type": "string"
    },
    "DomainStatusList": {
      "items": {
        "$ref": "#/definitions/DomainStatus"
      },
      "type": "array"
    },
    "DomainSuggestion": {
      "description": "Information about one suggested domain name.",
      "properties": {
        "Availability": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "<p>Whether the domain name is available for registering.</p> <note> <p>You can register only the domains that are designated as <code>AVAILABLE</code>.</p> </note> <p>Valid values:</p> <dl> <dt>AVAILABLE</dt> <dd> <p>The domain name is available.</p> </dd> <dt>AVAILABLE_RESERVED</dt> <dd> <p>The domain name is reserved under specific conditions.</p> </dd> <dt>AVAILABLE_PREORDER</dt> <dd> <p>The domain name is available and can be preordered.</p> </dd> <dt>DONT_KNOW</dt> <dd> <p>The TLD registry didn't reply with a definitive answer about whether the domain name is available. Route 53 can return this response for a variety of reasons, for example, the registry is performing maintenance. Try again later.</p> </dd> <dt>PENDING</dt> <dd> <p>The TLD registry didn't return a response in the expected amount of time. When the response is delayed, it usually takes just a few extra seconds. You can resubmit the request immediately.</p> </dd> <dt>RESERVED</dt> <dd> <p>The domain name has been reserved for another person or organization.</p> </dd> <dt>UNAVAILABLE</dt> <dd> <p>The domain name is not available.</p> </dd> <dt>UNAVAILABLE_PREMIUM</dt> <dd> <p>The domain name is not available.</p> </dd> <dt>UNAVAILABLE_RESTRICTED</dt> <dd> <p>The domain name is forbidden.</p> </dd> </dl>"
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "A suggested domain name."
            }
          ]
        }
      },
      "type": "object"
    },
    "DomainSuggestionsList": {
      "items": {
        "$ref": "#/definitions/DomainSuggestion"
      },
      "type": "array"
    },
    "DomainSummary": {
      "description": "Summary information about one domain.",
      "properties": {
        "AutoRenew": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether the domain is automatically renewed upon expiration."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that the summary information applies to."
            }
          ]
        },
        "Expiry": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "Expiration date of the domain in Unix time format and Coordinated Universal Time (UTC)."
            }
          ]
        },
        "TransferLock": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Indicates whether a domain is locked from unauthorized transfer to another party."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "object"
    },
    "DomainSummaryList": {
      "items": {
        "$ref": "#/definitions/DomainSummary"
      },
      "type": "array"
    },
    "DomainTransferability": {
      "description": "A complex type that contains information about whether the specified domain can be transferred to Route 53.",
      "properties": {
        "Transferable": {
          "$ref": "#/definitions/Transferable"
        }
      },
      "type": "object"
    },
    "DuplicateRequest": {},
    "DurationInYears": {
      "maximum": 10,
      "minimum": 1,
      "type": "integer"
    },
    "Email": {
      "maxLength": 254,
      "type": "string"
    },
    "EnableDomainAutoRenewRequest": {
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to enable automatic renewal for."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "EnableDomainAutoRenewRequest",
      "type": "object"
    },
    "EnableDomainAutoRenewResponse": {
      "properties": {},
      "type": "object"
    },
    "EnableDomainTransferLockRequest": {
      "description": "A request to set the transfer lock for the specified domain.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to set the transfer lock for."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "EnableDomainTransferLockRequest",
      "type": "object"
    },
    "EnableDomainTransferLockResponse": {
      "description": "The EnableDomainTransferLock response includes the following elements.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier for tracking the progress of the request. To use this ID to query the operation status, use GetOperationDetail."
            }
          ]
        }
      },
      "required": [
        "OperationId"
      ],
      "type": "object"
    },
    "ErrorMessage": {
      "type": "string"
    },
    "ExtraParam": {
      "description": "ExtraParam includes the following elements.",
      "properties": {
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/ExtraParamName"
            },
            {
              "description": "<p>The name of an additional parameter that is required by a top-level domain. Here are the top-level domains that require additional parameters and the names of the parameters that they require:</p> <dl> <dt>.com.au and .net.au</dt> <dd> <ul> <li> <p> <code>AU_ID_NUMBER</code> </p> </li> <li> <p> <code>AU_ID_TYPE</code> </p> <p>Valid values include the following:</p> <ul> <li> <p> <code>ABN</code> (Australian business number)</p> </li> <li> <p> <code>ACN</code> (Australian company number)</p> </li> <li> <p> <code>TM</code> (Trademark number)</p> </li> </ul> </li> </ul> </dd> <dt>.ca</dt> <dd> <ul> <li> <p> <code>BRAND_NUMBER</code> </p> </li> <li> <p> <code>CA_BUSINESS_ENTITY_TYPE</code> </p> <p>Valid values include the following:</p> <ul> <li> <p> <code>BANK</code> (Bank)</p> </li> <li> <p> <code>COMMERCIAL_COMPANY</code> (Commercial company)</p> </li> <li> <p> <code>COMPANY</code> (Company)</p> </li> <li> <p> <code>COOPERATION</code> (Cooperation)</p> </li> <li> <p> <code>COOPERATIVE</code> (Cooperative)</p> </li> <li> <p> <code>COOPRIX</code> (Cooprix)</p> </li> <li> <p> <code>CORP</code> (Corporation)</p> </li> <li> <p> <code>CREDIT_UNION</code> (Credit union)</p> </li> <li> <p> <code>FOMIA</code> (Federation of mutual insurance associations)</p> </li> <li> <p> <code>INC</code> (Incorporated)</p> </li> <li> <p> <code>LTD</code> (Limited)</p> </li> <li> <p> <code>LTEE</code> (Limitée)</p> </li> <li> <p> <code>LLC</code> (Limited liability corporation)</p> </li> <li> <p> <code>LLP</code> (Limited liability partnership)</p> </li> <li> <p> <code>LTE</code> (Lte.)</p> </li> <li> <p> <code>MBA</code> (Mutual benefit association)</p> </li> <li> <p> <code>MIC</code> (Mutual insurance company)</p> </li> <li> <p> <code>NFP</code> (Not-for-profit corporation)</p> </li> <li> <p> <code>SA</code> (S.A.)</p> </li> <li> <p> <code>SAVINGS_COMPANY</code> (Savings company)</p> </li> <li> <p> <code>SAVINGS_UNION</code> (Savings union)</p> </li> <li> <p> <code>SARL</code> (Société à responsabilité limitée)</p> </li> <li> <p> <code>TRUST</code> (Trust)</p> </li> <li> <p> <code>ULC</code> (Unlimited liability corporation)</p> </li> </ul> </li> <li> <p> <code>CA_LEGAL_TYPE</code> </p> <p>When <code>ContactType</code> is <code>PERSON</code>, valid values include the following:</p> <ul> <li> <p> <code>ABO</code> (Aboriginal Peoples indigenous to Canada)</p> </li> <li> <p> <code>CCT</code> (Canadian citizen)</p> </li> <li> <p> <code>LGR</code> (Legal Representative of a Canadian Citizen or Permanent Resident)</p> </li> <li> <p> <code>RES</code> (Permanent resident of Canada)</p> </li> </ul> <p>When <code>ContactType</code> is a value other than <code>PERSON</code>, valid values include the following:</p> <ul> <li> <p> <code>ASS</code> (Canadian unincorporated association)</p> </li> <li> <p> <code>CCO</code> (Canadian corporation)</p> </li> <li> <p> <code>EDU</code> (Canadian educational institution)</p> </li> <li> <p> <code>GOV</code> (Government or government entity in Canada)</p> </li> <li> <p> <code>HOP</code> (Canadian Hospital)</p> </li> <li> <p> <code>INB</code> (Indian Band recognized by the Indian Act of Canada)</p> </li> <li> <p> <code>LAM</code> (Canadian Library, Archive, or Museum)</p> </li> <li> <p> <code>MAJ</code> (Her/His Majesty the Queen/King)</p> </li> <li> <p> <code>OMK</code> (Official mark registered in Canada)</p> </li> <li> <p> <code>PLT</code> (Canadian Political Party)</p> </li> <li> <p> <code>PRT</code> (Partnership Registered in Canada)</p> </li> <li> <p> <code>TDM</code> (Trademark registered in Canada)</p> </li> <li> <p> <code>TRD</code> (Canadian Trade Union)</p> </li> <li> <p> <code>TRS</code> (Trust established in Canada)</p> </li> </ul> </li> </ul> </dd> <dt>.es</dt> <dd> <ul> <li> <p> <code>ES_IDENTIFICATION</code> </p> <p>Specify the applicable value:</p> <ul> <li> <p> <b>For contacts inside Spain:</b> Enter your passport ID.</p> </li> <li> <p> <b>For contacts outside of Spain:</b> Enter the VAT identification number for the company.</p> <note> <p>For .es domains, the value of <code>ContactType</code> must be <code>PERSON</code>.</p> </note> </li> </ul> </li> <li> <p> <code>ES_IDENTIFICATION_TYPE</code> </p> <p>Valid values include the following:</p> <ul> <li> <p> <code>DNI_AND_NIF</code> (For Spanish contacts)</p> </li> <li> <p> <code>NIE</code> (For foreigners with legal residence)</p> </li> <li> <p> <code>OTHER</code> (For contacts outside of Spain)</p> </li> </ul> </li> <li> <p> <code>ES_LEGAL_FORM</code> </p> <p>Valid values include the following:</p> <ul> <li> <p> <code>ASSOCIATION</code> </p> </li> <li> <p> <code>CENTRAL_GOVERNMENT_BODY</code> </p> </li> <li> <p> <code>CIVIL_SOCIETY</code> </p> </li> <li> <p> <code>COMMUNITY_OF_OWNERS</code> </p> </li> <li> <p> <code>COMMUNITY_PROPERTY</code> </p> </li> <li> <p> <code>CONSULATE</code> </p> </li> <li> <p> <code>COOPERATIVE</code> </p> </li> <li> <p> <code>DESIGNATION_OF_ORIGIN_SUPERVISORY_COUNCIL</code> </p> </li> <li> <p> <code>ECONOMIC_INTEREST_GROUP</code> </p> </li> <li> <p> <code>EMBASSY</code> </p> </li> <li> <p> <code>ENTITY_MANAGING_NATURAL_AREAS</code> </p> </li> <li> <p> <code>FARM_PARTNERSHIP</code> </p> </li> <li> <p> <code>FOUNDATION</code> </p> </li> <li> <p> <code>GENERAL_AND_LIMITED_PARTNERSHIP</code> </p> </li> <li> <p> <code>GENERAL_PARTNERSHIP</code> </p> </li> <li> <p> <code>INDIVIDUAL</code> </p> </li> <li> <p> <code>LIMITED_COMPANY</code> </p> </li> <li> <p> <code>LOCAL_AUTHORITY</code> </p> </li> <li> <p> <code>LOCAL_PUBLIC_ENTITY</code> </p> </li> <li> <p> <code>MUTUAL_INSURANCE_COMPANY</code> </p> </li> <li> <p> <code>NATIONAL_PUBLIC_ENTITY</code> </p> </li> <li> <p> <code>ORDER_OR_RELIGIOUS_INSTITUTION</code> </p> </li> <li> <p> <code>OTHERS (Only for contacts outside of Spain)</code> </p> </li> <li> <p> <code>POLITICAL_PARTY</code> </p> </li> <li> <p> <code>PROFESSIONAL_ASSOCIATION</code> </p> </li> <li> <p> <code>PUBLIC_LAW_ASSOCIATION</code> </p> </li> <li> <p> <code>PUBLIC_LIMITED_COMPANY</code> </p> </li> <li> <p> <code>REGIONAL_GOVERNMENT_BODY</code> </p> </li> <li> <p> <code>REGIONAL_PUBLIC_ENTITY</code> </p> </li> <li> <p> <code>SAVINGS_BANK</code> </p> </li> <li> <p> <code>SPANISH_OFFICE</code> </p> </li> <li> <p> <code>SPORTS_ASSOCIATION</code> </p> </li> <li> <p> <code>SPORTS_FEDERATION</code> </p> </li> <li> <p> <code>SPORTS_LIMITED_COMPANY</code> </p> </li> <li> <p> <code>TEMPORARY_ALLIANCE_OF_ENTERPRISES</code> </p> </li> <li> <p> <code>TRADE_UNION</code> </p> </li> <li> <p> <code>WORKER_OWNED_COMPANY</code> </p> </li> <li> <p> <code>WORKER_OWNED_LIMITED_COMPANY</code> </p> </li> </ul> </li> </ul> </dd> <dt>.fi</dt> <dd> <ul> <li> <p> <code>BIRTH_DATE_IN_YYYY_MM_DD</code> </p> </li> <li> <p> <code>FI_BUSINESS_NUMBER</code> </p> </li> <li> <p> <code>FI_ID_NUMBER</code> </p> </li> <li> <p> <code>FI_NATIONALITY</code> </p> <p>Valid values include the following:</p> <ul> <li> <p> <code>FINNISH</code> </p> </li> <li> <p> <code>NOT_FINNISH</code> </p> </li> </ul> </li> <li> <p> <code>FI_ORGANIZATION_TYPE</code> </p> <p>Valid values include the following:</p> <ul> <li> <p> <code>COMPANY</code> </p> </li> <li> <p> <code>CORPORATION</code> </p> </li> <li> <p> <code>GOVERNMENT</code> </p> </li> <li> <p> <code>INSTITUTION</code> </p> </li> <li> <p> <code>POLITICAL_PARTY</code> </p> </li> <li> <p> <code>PUBLIC_COMMUNITY</code> </p> </li> <li> <p> <code>TOWNSHIP</code> </p> </li> </ul> </li> </ul> </dd> <dt>.fr</dt> <dd> <ul> <li> <p> <code>BIRTH_CITY</code> </p> </li> <li> <p> <code>BIRTH_COUNTRY</code> </p> </li> <li> <p> <code>BIRTH_DATE_IN_YYYY_MM_DD</code> </p> </li> <li> <p> <code>BIRTH_DEPARTMENT</code>: Specify the INSEE code that corresponds with the department where the contact was born. If the contact was born somewhere other than France or its overseas departments, specify <code>99</code>. For more information, including a list of departments and the corresponding INSEE numbers, see the Wikipedia entry <a href=\"https://en.wikipedia.org/wiki/Departments_of_France\">Departments of France</a>.</p> </li> <li> <p> <code>BRAND_NUMBER</code> </p> </li> </ul> </dd> <dt>.it</dt> <dd> <ul> <li> <p> <code>IT_NATIONALITY</code> </p> </li> <li> <p> <code>IT_PIN</code> </p> </li> <li> <p> <code>IT_REGISTRANT_ENTITY_TYPE</code> </p> <p>Valid values include the following:</p> <ul> <li> <p> <code>FOREIGNERS</code> </p> </li> <li> <p> <code>FREELANCE_WORKERS</code> (Freelance workers and professionals)</p> </li> <li> <p> <code>ITALIAN_COMPANIES</code> (Italian companies and one-person companies)</p> </li> <li> <p> <code>NON_PROFIT_ORGANIZATIONS</code> </p> </li> <li> <p> <code>OTHER_SUBJECTS</code> </p> </li> <li> <p> <code>PUBLIC_ORGANIZATIONS</code> </p> </li> </ul> </li> </ul> </dd> <dt>.ru</dt> <dd> <ul> <li> <p> <code>BIRTH_DATE_IN_YYYY_MM_DD</code> </p> </li> <li> <p> <code>RU_PASSPORT_DATA</code> </p> </li> </ul> </dd> <dt>.se</dt> <dd> <ul> <li> <p> <code>BIRTH_COUNTRY</code> </p> </li> <li> <p> <code>SE_ID_NUMBER</code> </p> </li> </ul> </dd> <dt>.sg</dt> <dd> <ul> <li> <p> <code>SG_ID_NUMBER</code> </p> </li> </ul> </dd> <dt>.co.uk, .me.uk, and .org.uk</dt> <dd> <ul> <li> <p> <code>UK_CONTACT_TYPE</code> </p> <p>Valid values include the following:</p> <ul> <li> <p> <code>CRC</code> (UK Corporation by Royal Charter)</p> </li> <li> <p> <code>FCORP</code> (Non-UK Corporation)</p> </li> <li> <p> <code>FIND</code> (Non-UK Individual, representing self)</p> </li> <li> <p> <code>FOTHER</code> (Non-UK Entity that does not fit into any other category)</p> </li> <li> <p> <code>GOV</code> (UK Government Body)</p> </li> <li> <p> <code>IND</code> (UK Individual (representing self))</p> </li> <li> <p> <code>IP</code> (UK Industrial/Provident Registered Company)</p> </li> <li> <p> <code>LLP</code> (UK Limited Liability Partnership)</p> </li> <li> <p> <code>LTD</code> (UK Limited Company)</p> </li> <li> <p> <code>OTHER</code> (UK Entity that does not fit into any other category)</p> </li> <li> <p> <code>PLC</code> (UK Public Limited Company)</p> </li> <li> <p> <code>PTNR</code> (UK Partnership)</p> </li> <li> <p> <code>RCHAR</code> (UK Registered Charity)</p> </li> <li> <p> <code>SCH</code> (UK School)</p> </li> <li> <p> <code>STAT</code> (UK Statutory Body)</p> </li> <li> <p> <code>STRA</code> (UK Sole Trader)</p> </li> </ul> </li> <li> <p> <code>UK_COMPANY_NUMBER</code> </p> </li> </ul> </dd> </dl> <p>In addition, many TLDs require a <code>VAT_NUMBER</code>.</p>"
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/ExtraParamValue"
            },
            {
              "description": "The value that corresponds with the name of an extra parameter."
            }
          ]
        }
      },
      "required": [
        "Name",
        "Value"
      ],
      "type": "object"
    },
    "ExtraParamList": {
      "items": {
        "$ref": "#/definitions/ExtraParam"
      },
      "type": "array"
    },
    "ExtraParamName": {
      "enum": [
        "DUNS_NUMBER",
        "BRAND_NUMBER",
        "BIRTH_DEPARTMENT",
        "BIRTH_DATE_IN_YYYY_MM_DD",
        "BIRTH_COUNTRY",
        "BIRTH_CITY",
        "DOCUMENT_NUMBER",
        "AU_ID_NUMBER",
        "AU_ID_TYPE",
        "CA_LEGAL_TYPE",
        "CA_BUSINESS_ENTITY_TYPE",
        "CA_LEGAL_REPRESENTATIVE",
        "CA_LEGAL_REPRESENTATIVE_CAPACITY",
        "ES_IDENTIFICATION",
        "ES_IDENTIFICATION_TYPE",
        "ES_LEGAL_FORM",
        "FI_BUSINESS_NUMBER",
        "FI_ID_NUMBER",
        "FI_NATIONALITY",
        "FI_ORGANIZATION_TYPE",
        "IT_NATIONALITY",
        "IT_PIN",
        "IT_REGISTRANT_ENTITY_TYPE",
        "RU_PASSPORT_DATA",
        "SE_ID_NUMBER",
        "SG_ID_NUMBER",
        "VAT_NUMBER",
        "UK_CONTACT_TYPE",
        "UK_COMPANY_NUMBER"
      ],
      "type": "string"
    },
    "ExtraParamValue": {
      "maxLength": 2048,
      "type": "string"
    },
    "FIAuthKey": {
      "type": "string"
    },
    "GetContactReachabilityStatusRequest": {
      "properties": {
        "domainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain for which you want to know whether the registrant contact has confirmed that the email address is valid."
            }
          ]
        }
      },
      "title": "GetContactReachabilityStatusRequest",
      "type": "object"
    },
    "GetContactReachabilityStatusResponse": {
      "properties": {
        "domainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The domain name for which you requested the reachability status."
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/ReachabilityStatus"
            },
            {
              "description": "<p>Whether the registrant contact has responded. Values include the following:</p> <dl> <dt>PENDING</dt> <dd> <p>We sent the confirmation email and haven't received a response yet.</p> </dd> <dt>DONE</dt> <dd> <p>We sent the email and got confirmation from the registrant contact.</p> </dd> <dt>EXPIRED</dt> <dd> <p>The time limit expired before the registrant contact responded.</p> </dd> </dl>"
            }
          ]
        }
      },
      "type": "object"
    },
    "GetDomainDetailRequest": {
      "description": "The GetDomainDetail request includes the following element.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to get detailed information about."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "GetDomainDetailRequest",
      "type": "object"
    },
    "GetDomainDetailResponse": {
      "description": "The GetDomainDetail response includes the following elements.",
      "properties": {
        "AbuseContactEmail": {
          "allOf": [
            {
              "$ref": "#/definitions/Email"
            },
            {
              "description": "Email address to contact to report incorrect contact information for a domain, to report that the domain is being used to send spam, to report that someone is cybersquatting on a domain name, or report some other type of abuse."
            }
          ]
        },
        "AbuseContactPhone": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactNumber"
            },
            {
              "description": "Phone number for reporting abuse."
            }
          ]
        },
        "AdminContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides details about the domain administrative contact."
            }
          ]
        },
        "AdminPrivacy": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies whether contact information is concealed from WHOIS queries. If the value is <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If the value is <code>false</code>, WHOIS queries return the information that you entered for the admin contact."
            }
          ]
        },
        "AutoRenew": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies whether the domain registration is set to renew automatically."
            }
          ]
        },
        "CreationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date when the domain was created as found in the response to a WHOIS query. The date and time is in Unix time format and Coordinated Universal time (UTC)."
            }
          ]
        },
        "DnsSec": {
          "allOf": [
            {
              "$ref": "#/definitions/DNSSec"
            },
            {
              "description": "Reserved for future use."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of a domain."
            }
          ]
        },
        "ExpirationDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date when the registration for the domain is set to expire. The date and time is in Unix time format and Coordinated Universal time (UTC)."
            }
          ]
        },
        "Nameservers": {
          "allOf": [
            {
              "$ref": "#/definitions/NameserverList"
            },
            {
              "description": "The name of the domain."
            }
          ]
        },
        "RegistrantContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides details about the domain registrant."
            }
          ]
        },
        "RegistrantPrivacy": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies whether contact information is concealed from WHOIS queries. If the value is <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If the value is <code>false</code>, WHOIS queries return the information that you entered for the registrant contact (domain owner)."
            }
          ]
        },
        "RegistrarName": {
          "allOf": [
            {
              "$ref": "#/definitions/RegistrarName"
            },
            {
              "description": "Name of the registrar of the domain as identified in the registry. Domains with a .com, .net, or .org TLD are registered by Amazon Registrar. All other domains are registered by our registrar associate, Gandi. The value for domains that are registered by Gandi is <code>\"GANDI SAS\"</code>. "
            }
          ]
        },
        "RegistrarUrl": {
          "allOf": [
            {
              "$ref": "#/definitions/RegistrarUrl"
            },
            {
              "description": "Web address of the registrar."
            }
          ]
        },
        "RegistryDomainId": {
          "allOf": [
            {
              "$ref": "#/definitions/RegistryDomainId"
            },
            {
              "description": "Reserved for future use."
            }
          ]
        },
        "Reseller": {
          "allOf": [
            {
              "$ref": "#/definitions/Reseller"
            },
            {
              "description": "Reseller of the domain. Domains registered or transferred using Route 53 domains will have <code>\"Amazon\"</code> as the reseller. "
            }
          ]
        },
        "StatusList": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainStatusList"
            },
            {
              "description": "<p>An array of domain name status codes, also known as Extensible Provisioning Protocol (EPP) status codes.</p> <p>ICANN, the organization that maintains a central database of domain names, has developed a set of domain name status codes that tell you the status of a variety of operations on a domain name, for example, registering a domain name, transferring a domain name to another registrar, renewing the registration for a domain name, and so on. All registrars use this same set of status codes.</p> <p>For a current list of domain name status codes and an explanation of what each code means, go to the <a href=\"https://www.icann.org/\">ICANN website</a> and search for <code>epp status codes</code>. (Search on the ICANN website; web searches sometimes return an old version of the document.)</p>"
            }
          ]
        },
        "TechContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides details about the domain technical contact."
            }
          ]
        },
        "TechPrivacy": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Specifies whether contact information is concealed from WHOIS queries. If the value is <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If the value is <code>false</code>, WHOIS queries return the information that you entered for the technical contact."
            }
          ]
        },
        "UpdatedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The last updated date of the domain as found in the response to a WHOIS query. The date and time is in Unix time format and Coordinated Universal time (UTC)."
            }
          ]
        },
        "WhoIsServer": {
          "allOf": [
            {
              "$ref": "#/definitions/RegistrarWhoIsServer"
            },
            {
              "description": "The fully qualified name of the WHOIS server that can answer the WHOIS query for the domain."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "Nameservers",
        "AdminContact",
        "RegistrantContact",
        "TechContact"
      ],
      "type": "object"
    },
    "GetDomainSuggestionsRequest": {
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "<p>A domain name that you want to use as the basis for a list of possible domain names. The top-level domain (TLD), such as .com, must be a TLD that Route 53 supports. For a list of supported TLDs, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>The domain name can contain only the following characters:</p> <ul> <li> <p>Letters a through z. Domain names are not case sensitive.</p> </li> <li> <p>Numbers 0 through 9.</p> </li> <li> <p>Hyphen (-). You can't specify a hyphen at the beginning or end of a label. </p> </li> <li> <p>Period (.) to separate the labels in the name, such as the <code>.</code> in <code>example.com</code>.</p> </li> </ul> <p>Internationalized domain names are not supported for some top-level domains. To determine whether the TLD that you want to use supports internationalized domain names, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a>. </p>"
            }
          ]
        },
        "OnlyAvailable": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "If <code>OnlyAvailable</code> is <code>true</code>, Route 53 returns only domain names that are available. If <code>OnlyAvailable</code> is <code>false</code>, Route 53 returns domain names without checking whether they're available to be registered. To determine whether the domain is available, you can call <code>checkDomainAvailability</code> for each suggestion."
            }
          ]
        },
        "SuggestionCount": {
          "allOf": [
            {
              "$ref": "#/definitions/Integer"
            },
            {
              "description": "The number of suggested domain names that you want Route 53 to return. Specify a value between 1 and 50."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "SuggestionCount",
        "OnlyAvailable"
      ],
      "title": "GetDomainSuggestionsRequest",
      "type": "object"
    },
    "GetDomainSuggestionsResponse": {
      "properties": {
        "SuggestionsList": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainSuggestionsList"
            },
            {
              "description": "A list of possible domain names. If you specified <code>true</code> for <code>OnlyAvailable</code> in the request, the list contains only domains that are available for registration."
            }
          ]
        }
      },
      "type": "object"
    },
    "GetOperationDetailRequest": {
      "description": "The <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a> request includes the following element.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "The identifier for the operation for which you want to get the status. Route 53 returned the identifier in the response to the original request."
            }
          ]
        }
      },
      "required": [
        "OperationId"
      ],
      "title": "GetOperationDetailRequest",
      "type": "object"
    },
    "GetOperationDetailResponse": {
      "description": "The GetOperationDetail response includes the following elements.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of a domain."
            }
          ]
        },
        "Message": {
          "allOf": [
            {
              "$ref": "#/definitions/ErrorMessage"
            },
            {
              "description": "Detailed information on the status including possible errors."
            }
          ]
        },
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "The identifier for the operation."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationStatus"
            },
            {
              "description": "The current status of the requested operation in the system."
            }
          ]
        },
        "SubmittedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date when the request was submitted."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationType"
            },
            {
              "description": "The type of operation that was requested."
            }
          ]
        }
      },
      "type": "object"
    },
    "GlueIp": {
      "maxLength": 45,
      "type": "string"
    },
    "GlueIpList": {
      "items": {
        "$ref": "#/definitions/GlueIp"
      },
      "type": "array"
    },
    "HostName": {
      "maxLength": 255,
      "pattern": "[a-zA-Z0-9_\\-.]*",
      "type": "string"
    },
    "Integer": {
      "type": "integer"
    },
    "InvalidInput": {},
    "InvoiceId": {
      "type": "string"
    },
    "LangCode": {
      "maxLength": 3,
      "type": "string"
    },
    "ListDomainsRequest": {
      "description": "The ListDomains request includes the following elements.",
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/PageMarker"
            },
            {
              "description": "<p>For an initial request for a list of domains, omit this element. If the number of domains that are associated with the current AWS account is greater than the value that you specified for <code>MaxItems</code>, you can use <code>Marker</code> to return additional domains. Get the value of <code>NextPageMarker</code> from the previous response, and submit another request that includes the value of <code>NextPageMarker</code> in the <code>Marker</code> element.</p> <p>Constraints: The marker must match the value specified in the previous request.</p>"
            }
          ]
        },
        "MaxItems": {
          "allOf": [
            {
              "$ref": "#/definitions/PageMaxItems"
            },
            {
              "description": "<p>Number of domains to be returned.</p> <p>Default: 20</p>"
            }
          ]
        }
      },
      "title": "ListDomainsRequest",
      "type": "object"
    },
    "ListDomainsResponse": {
      "description": "The ListDomains response includes the following elements.",
      "properties": {
        "Domains": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainSummaryList"
            },
            {
              "description": "A summary of domains."
            }
          ]
        },
        "NextPageMarker": {
          "allOf": [
            {
              "$ref": "#/definitions/PageMarker"
            },
            {
              "description": "If there are more domains than you specified for <code>MaxItems</code> in the request, submit another request and include the value of <code>NextPageMarker</code> in the value of <code>Marker</code>."
            }
          ]
        }
      },
      "required": [
        "Domains"
      ],
      "type": "object"
    },
    "ListOperationsRequest": {
      "description": "The ListOperations request includes the following elements.",
      "properties": {
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/PageMarker"
            },
            {
              "description": "For an initial request for a list of operations, omit this element. If the number of operations that are not yet complete is greater than the value that you specified for <code>MaxItems</code>, you can use <code>Marker</code> to return additional operations. Get the value of <code>NextPageMarker</code> from the previous response, and submit another request that includes the value of <code>NextPageMarker</code> in the <code>Marker</code> element."
            }
          ]
        },
        "MaxItems": {
          "allOf": [
            {
              "$ref": "#/definitions/PageMaxItems"
            },
            {
              "description": "<p>Number of domains to be returned.</p> <p>Default: 20</p>"
            }
          ]
        },
        "SubmittedSince": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "An optional parameter that lets you get information about all the operations that you submitted after a specified date and time. Specify the date and time in Unix time format and Coordinated Universal time (UTC)."
            }
          ]
        }
      },
      "title": "ListOperationsRequest",
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The ListOperations response includes the following elements.",
      "properties": {
        "NextPageMarker": {
          "allOf": [
            {
              "$ref": "#/definitions/PageMarker"
            },
            {
              "description": "If there are more operations than you specified for <code>MaxItems</code> in the request, submit another request and include the value of <code>NextPageMarker</code> in the value of <code>Marker</code>."
            }
          ]
        },
        "Operations": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationSummaryList"
            },
            {
              "description": "Lists summaries of the operations."
            }
          ]
        }
      },
      "required": [
        "Operations"
      ],
      "type": "object"
    },
    "ListTagsForDomainRequest": {
      "description": "The ListTagsForDomainRequest includes the following elements.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The domain for which you want to get a list of tags."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "ListTagsForDomainRequest",
      "type": "object"
    },
    "ListTagsForDomainResponse": {
      "description": "The ListTagsForDomain response includes the following elements.",
      "properties": {
        "TagList": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "A list of the tags that are associated with the specified domain."
            }
          ]
        }
      },
      "required": [
        "TagList"
      ],
      "type": "object"
    },
    "Nameserver": {
      "description": "Nameserver includes the following elements.",
      "properties": {
        "GlueIps": {
          "allOf": [
            {
              "$ref": "#/definitions/GlueIpList"
            },
            {
              "description": "<p>Glue IP address of a name server entry. Glue IP addresses are required only when the name of the name server is a subdomain of the domain. For example, if your domain is example.com and the name server for the domain is ns.example.com, you need to specify the IP address for ns.example.com.</p> <p>Constraints: The list can contain only one IPv4 and one IPv6 address.</p>"
            }
          ]
        },
        "Name": {
          "allOf": [
            {
              "$ref": "#/definitions/HostName"
            },
            {
              "description": "<p>The fully qualified host name of the name server.</p> <p>Constraint: Maximum 255 characters</p>"
            }
          ]
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "NameserverList": {
      "items": {
        "$ref": "#/definitions/Nameserver"
      },
      "type": "array"
    },
    "OperationId": {
      "maxLength": 255,
      "type": "string"
    },
    "OperationLimitExceeded": {},
    "OperationStatus": {
      "enum": [
        "SUBMITTED",
        "IN_PROGRESS",
        "ERROR",
        "SUCCESSFUL",
        "FAILED"
      ],
      "type": "string"
    },
    "OperationSummary": {
      "description": "OperationSummary includes the following elements.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier returned to track the requested action."
            }
          ]
        },
        "Status": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationStatus"
            },
            {
              "description": "The current status of the requested operation in the system."
            }
          ]
        },
        "SubmittedDate": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The date when the request was submitted."
            }
          ]
        },
        "Type": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationType"
            },
            {
              "description": "Type of the action requested."
            }
          ]
        }
      },
      "required": [
        "OperationId",
        "Status",
        "Type",
        "SubmittedDate"
      ],
      "type": "object"
    },
    "OperationSummaryList": {
      "items": {
        "$ref": "#/definitions/OperationSummary"
      },
      "type": "array"
    },
    "OperationType": {
      "enum": [
        "REGISTER_DOMAIN",
        "DELETE_DOMAIN",
        "TRANSFER_IN_DOMAIN",
        "UPDATE_DOMAIN_CONTACT",
        "UPDATE_NAMESERVER",
        "CHANGE_PRIVACY_PROTECTION",
        "DOMAIN_LOCK",
        "ENABLE_AUTORENEW",
        "DISABLE_AUTORENEW",
        "ADD_DNSSEC",
        "REMOVE_DNSSEC",
        "EXPIRE_DOMAIN",
        "TRANSFER_OUT_DOMAIN",
        "CHANGE_DOMAIN_OWNER",
        "RENEW_DOMAIN",
        "PUSH_DOMAIN",
        "INTERNAL_TRANSFER_OUT_DOMAIN",
        "INTERNAL_TRANSFER_IN_DOMAIN"
      ],
      "type": "string"
    },
    "PageMarker": {
      "maxLength": 4096,
      "type": "string"
    },
    "PageMaxItems": {
      "maximum": 100,
      "type": "integer"
    },
    "Price": {
      "format": "double",
      "type": "number"
    },
    "ReachabilityStatus": {
      "enum": [
        "PENDING",
        "DONE",
        "EXPIRED"
      ],
      "type": "string"
    },
    "RegisterDomainRequest": {
      "description": "The RegisterDomain request includes the following elements.",
      "properties": {
        "AdminContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides detailed contact information. For information about the values that you specify for each element, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html\">ContactDetail</a>."
            }
          ]
        },
        "AutoRenew": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Indicates whether the domain will be automatically renewed (<code>true</code>) or not (<code>false</code>). Autorenewal only takes effect after the account is charged.</p> <p>Default: <code>true</code> </p>"
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "<p>The domain name that you want to register. The top-level domain (TLD), such as .com, must be a TLD that Route 53 supports. For a list of supported TLDs, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>The domain name can contain only the following characters:</p> <ul> <li> <p>Letters a through z. Domain names are not case sensitive.</p> </li> <li> <p>Numbers 0 through 9.</p> </li> <li> <p>Hyphen (-). You can't specify a hyphen at the beginning or end of a label. </p> </li> <li> <p>Period (.) to separate the labels in the name, such as the <code>.</code> in <code>example.com</code>.</p> </li> </ul> <p>Internationalized domain names are not supported for some top-level domains. To determine whether the TLD that you want to use supports internationalized domain names, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a>. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html#domain-name-format-idns\">Formatting Internationalized Domain Names</a>. </p>"
            }
          ]
        },
        "DurationInYears": {
          "allOf": [
            {
              "$ref": "#/definitions/DurationInYears"
            },
            {
              "description": "<p>The number of years that you want to register the domain for. Domains are registered for a minimum of one year. The maximum period depends on the top-level domain. For the range of valid values for your domain, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>Default: 1</p>"
            }
          ]
        },
        "IdnLangCode": {
          "allOf": [
            {
              "$ref": "#/definitions/LangCode"
            },
            {
              "description": "Reserved for future use."
            }
          ]
        },
        "PrivacyProtectAdminContact": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>, WHOIS queries return the information that you entered for the admin contact.</p> <p>Default: <code>true</code> </p>"
            }
          ]
        },
        "PrivacyProtectRegistrantContact": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>, WHOIS queries return the information that you entered for the registrant contact (the domain owner).</p> <p>Default: <code>true</code> </p>"
            }
          ]
        },
        "PrivacyProtectTechContact": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>, WHOIS queries return the information that you entered for the technical contact.</p> <p>Default: <code>true</code> </p>"
            }
          ]
        },
        "RegistrantContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides detailed contact information. For information about the values that you specify for each element, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html\">ContactDetail</a>."
            }
          ]
        },
        "TechContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides detailed contact information. For information about the values that you specify for each element, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html\">ContactDetail</a>."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "DurationInYears",
        "AdminContact",
        "RegistrantContact",
        "TechContact"
      ],
      "title": "RegisterDomainRequest",
      "type": "object"
    },
    "RegisterDomainResponse": {
      "description": "The RegisterDomain response includes the following element.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier for tracking the progress of the request. To query the operation status, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a>."
            }
          ]
        }
      },
      "required": [
        "OperationId"
      ],
      "type": "object"
    },
    "RegistrarName": {
      "type": "string"
    },
    "RegistrarUrl": {
      "type": "string"
    },
    "RegistrarWhoIsServer": {
      "type": "string"
    },
    "RegistryDomainId": {
      "type": "string"
    },
    "RejectDomainTransferFromAnotherAwsAccountRequest": {
      "description": "The RejectDomainTransferFromAnotherAwsAccount request includes the following element.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that was specified when another AWS account submitted a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_TransferDomainToAnotherAwsAccount.html\">TransferDomainToAnotherAwsAccount</a> request. "
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "RejectDomainTransferFromAnotherAwsAccountRequest",
      "type": "object"
    },
    "RejectDomainTransferFromAnotherAwsAccountResponse": {
      "description": "The RejectDomainTransferFromAnotherAwsAccount response includes the following element.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "The identifier that <code>TransferDomainToAnotherAwsAccount</code> returned to track the progress of the request. Because the transfer request was rejected, the value is no longer valid, and you can't use <code>GetOperationDetail</code> to query the operation status."
            }
          ]
        }
      },
      "type": "object"
    },
    "RenewDomainRequest": {
      "description": "A <code>RenewDomain</code> request includes the number of years that you want to renew for and the current expiration year.",
      "properties": {
        "CurrentExpiryYear": {
          "allOf": [
            {
              "$ref": "#/definitions/CurrentExpiryYear"
            },
            {
              "description": "The year when the registration for the domain is set to expire. This value must match the current expiration date for the domain."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to renew."
            }
          ]
        },
        "DurationInYears": {
          "allOf": [
            {
              "$ref": "#/definitions/DurationInYears"
            },
            {
              "description": "<p>The number of years that you want to renew the domain for. The maximum number of years depends on the top-level domain. For the range of valid values for your domain, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>Default: 1</p>"
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "CurrentExpiryYear"
      ],
      "title": "RenewDomainRequest",
      "type": "object"
    },
    "RenewDomainResponse": {
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier for tracking the progress of the request. To query the operation status, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a>."
            }
          ]
        }
      },
      "required": [
        "OperationId"
      ],
      "type": "object"
    },
    "Reseller": {
      "type": "string"
    },
    "ResendContactReachabilityEmailRequest": {
      "properties": {
        "domainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain for which you want Route 53 to resend a confirmation email to the registrant contact."
            }
          ]
        }
      },
      "title": "ResendContactReachabilityEmailRequest",
      "type": "object"
    },
    "ResendContactReachabilityEmailResponse": {
      "properties": {
        "domainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The domain name for which you requested a confirmation email."
            }
          ]
        },
        "emailAddress": {
          "allOf": [
            {
              "$ref": "#/definitions/Email"
            },
            {
              "description": "The email address for the registrant contact at the time that we sent the verification email."
            }
          ]
        },
        "isAlreadyVerified": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": " <code>True</code> if the email address for the registrant contact has already been verified, and <code>false</code> otherwise. If the email address has already been verified, we don't send another confirmation email."
            }
          ]
        }
      },
      "type": "object"
    },
    "RetrieveDomainAuthCodeRequest": {
      "description": "A request for the authorization code for the specified domain. To transfer a domain to another registrar, you provide this value to the new registrar.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to get an authorization code for."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "RetrieveDomainAuthCodeRequest",
      "type": "object"
    },
    "RetrieveDomainAuthCodeResponse": {
      "description": "The RetrieveDomainAuthCode response includes the following element.",
      "properties": {
        "AuthCode": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainAuthCode"
            },
            {
              "description": "The authorization code for the domain."
            }
          ]
        }
      },
      "required": [
        "AuthCode"
      ],
      "type": "object"
    },
    "State": {
      "maxLength": 255,
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "TLDRulesViolation": {},
    "Tag": {
      "description": "Each tag includes the following elements.",
      "properties": {
        "Key": {
          "allOf": [
            {
              "$ref": "#/definitions/TagKey"
            },
            {
              "description": "<p>The key (name) of a tag.</p> <p>Valid values: A-Z, a-z, 0-9, space, \".:/=+\\-@\"</p> <p>Constraints: Each key can be 1-128 characters long.</p>"
            }
          ]
        },
        "Value": {
          "allOf": [
            {
              "$ref": "#/definitions/TagValue"
            },
            {
              "description": "<p>The value of a tag.</p> <p>Valid values: A-Z, a-z, 0-9, space, \".:/=+\\-@\"</p> <p>Constraints: Each value can be 0-256 characters long.</p>"
            }
          ]
        }
      },
      "type": "object"
    },
    "TagKey": {
      "type": "string"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "type": "array"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TagValue": {
      "type": "string"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string"
    },
    "TransferDomainRequest": {
      "description": "The TransferDomain request includes the following elements.",
      "properties": {
        "AdminContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides detailed contact information."
            }
          ]
        },
        "AuthCode": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainAuthCode"
            },
            {
              "description": "The authorization code for the domain. You get this value from the current registrar."
            }
          ]
        },
        "AutoRenew": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Indicates whether the domain will be automatically renewed (true) or not (false). Autorenewal only takes effect after the account is charged.</p> <p>Default: true</p>"
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "<p>The name of the domain that you want to transfer to Route 53. The top-level domain (TLD), such as .com, must be a TLD that Route 53 supports. For a list of supported TLDs, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html\">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>The domain name can contain only the following characters:</p> <ul> <li> <p>Letters a through z. Domain names are not case sensitive.</p> </li> <li> <p>Numbers 0 through 9.</p> </li> <li> <p>Hyphen (-). You can't specify a hyphen at the beginning or end of a label. </p> </li> <li> <p>Period (.) to separate the labels in the name, such as the <code>.</code> in <code>example.com</code>.</p> </li> </ul>"
            }
          ]
        },
        "DurationInYears": {
          "allOf": [
            {
              "$ref": "#/definitions/DurationInYears"
            },
            {
              "description": "<p>The number of years that you want to register the domain for. Domains are registered for a minimum of one year. The maximum period depends on the top-level domain.</p> <p>Default: 1</p>"
            }
          ]
        },
        "IdnLangCode": {
          "allOf": [
            {
              "$ref": "#/definitions/LangCode"
            },
            {
              "description": "Reserved for future use."
            }
          ]
        },
        "Nameservers": {
          "allOf": [
            {
              "$ref": "#/definitions/NameserverList"
            },
            {
              "description": "Contains details for the host and glue IP addresses."
            }
          ]
        },
        "PrivacyProtectAdminContact": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>, WHOIS queries return the information that you entered for the admin contact.</p> <p>Default: <code>true</code> </p>"
            }
          ]
        },
        "PrivacyProtectRegistrantContact": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>, WHOIS queries return the information that you entered for the registrant contact (domain owner).</p> <p>Default: <code>true</code> </p>"
            }
          ]
        },
        "PrivacyProtectTechContact": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "<p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>, WHOIS queries return the information that you entered for the technical contact.</p> <p>Default: <code>true</code> </p>"
            }
          ]
        },
        "RegistrantContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides detailed contact information."
            }
          ]
        },
        "TechContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides detailed contact information."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "DurationInYears",
        "AdminContact",
        "RegistrantContact",
        "TechContact"
      ],
      "title": "TransferDomainRequest",
      "type": "object"
    },
    "TransferDomainResponse": {
      "description": "The TransferDomain response includes the following element.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier for tracking the progress of the request. To query the operation status, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a>."
            }
          ]
        }
      },
      "required": [
        "OperationId"
      ],
      "type": "object"
    },
    "TransferDomainToAnotherAwsAccountRequest": {
      "description": "The TransferDomainToAnotherAwsAccount request includes the following elements.",
      "properties": {
        "AccountId": {
          "allOf": [
            {
              "$ref": "#/definitions/AccountId"
            },
            {
              "description": "The account ID of the AWS account that you want to transfer the domain to, for example, <code>111122223333</code>."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to transfer from the current AWS account to another account."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "AccountId"
      ],
      "title": "TransferDomainToAnotherAwsAccountRequest",
      "type": "object"
    },
    "TransferDomainToAnotherAwsAccountResponse": {
      "description": "The <code>TransferDomainToAnotherAwsAccount</code> response includes the following elements.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier for tracking the progress of the request. To query the operation status, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a>."
            }
          ]
        },
        "Password": {
          "allOf": [
            {
              "$ref": "#/definitions/String"
            },
            {
              "description": "To finish transferring a domain to another AWS account, the account that the domain is being transferred to must submit an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_AcceptDomainTransferFromAnotherAwsAccount.html\">AcceptDomainTransferFromAnotherAwsAccount</a> request. The request must include the value of the <code>Password</code> element that was returned in the <code>TransferDomainToAnotherAwsAccount</code> response."
            }
          ]
        }
      },
      "type": "object"
    },
    "Transferable": {
      "description": "<p>Whether the domain name can be transferred to Route 53.</p> <note> <p>You can transfer only domains that have a value of <code>TRANSFERABLE</code> for <code>Transferable</code>.</p> </note> <p>Valid values:</p> <dl> <dt>TRANSFERABLE</dt> <dd> <p>The domain name can be transferred to Route 53.</p> </dd> <dt>UNTRANSFERRABLE</dt> <dd> <p>The domain name can't be transferred to Route 53.</p> </dd> <dt>DONT_KNOW</dt> <dd> <p>Reserved for future use.</p> </dd> </dl>",
      "enum": [
        "TRANSFERABLE",
        "UNTRANSFERABLE",
        "DONT_KNOW"
      ],
      "type": "string"
    },
    "UnsupportedTLD": {},
    "UpdateDomainContactPrivacyRequest": {
      "description": "The UpdateDomainContactPrivacy request includes the following elements.",
      "properties": {
        "AdminPrivacy": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>, WHOIS queries return the information that you entered for the admin contact."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to update the privacy setting for."
            }
          ]
        },
        "RegistrantPrivacy": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>, WHOIS queries return the information that you entered for the registrant contact (domain owner)."
            }
          ]
        },
        "TechPrivacy": {
          "allOf": [
            {
              "$ref": "#/definitions/Boolean"
            },
            {
              "description": "Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>, WHOIS (\"who is\") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains) or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>, WHOIS queries return the information that you entered for the technical contact."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "UpdateDomainContactPrivacyRequest",
      "type": "object"
    },
    "UpdateDomainContactPrivacyResponse": {
      "description": "The UpdateDomainContactPrivacy response includes the following element.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier for tracking the progress of the request. To use this ID to query the operation status, use GetOperationDetail."
            }
          ]
        }
      },
      "required": [
        "OperationId"
      ],
      "type": "object"
    },
    "UpdateDomainContactRequest": {
      "description": "The UpdateDomainContact request includes the following elements.",
      "properties": {
        "AdminContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides detailed contact information."
            }
          ]
        },
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to update contact information for."
            }
          ]
        },
        "RegistrantContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides detailed contact information."
            }
          ]
        },
        "TechContact": {
          "allOf": [
            {
              "$ref": "#/definitions/ContactDetail"
            },
            {
              "description": "Provides detailed contact information."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "UpdateDomainContactRequest",
      "type": "object"
    },
    "UpdateDomainContactResponse": {
      "description": "The UpdateDomainContact response includes the following element.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier for tracking the progress of the request. To query the operation status, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a>."
            }
          ]
        }
      },
      "required": [
        "OperationId"
      ],
      "type": "object"
    },
    "UpdateDomainNameserversRequest": {
      "description": "<p>Replaces the current set of name servers for the domain with the specified set of name servers. If you use Amazon Route 53 as your DNS service, specify the four name servers in the delegation set for the hosted zone for the domain.</p> <p>If successful, this operation returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email. </p>",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The name of the domain that you want to change name servers for."
            }
          ]
        },
        "FIAuthKey": {
          "allOf": [
            {
              "$ref": "#/definitions/FIAuthKey"
            },
            {
              "description": "The authorization key for .fi domains",
              "x-deprecated": true
            }
          ]
        },
        "Nameservers": {
          "allOf": [
            {
              "$ref": "#/definitions/NameserverList"
            },
            {
              "description": "A list of new name servers for the domain."
            }
          ]
        }
      },
      "required": [
        "DomainName",
        "Nameservers"
      ],
      "title": "UpdateDomainNameserversRequest",
      "type": "object"
    },
    "UpdateDomainNameserversResponse": {
      "description": "The UpdateDomainNameservers response includes the following element.",
      "properties": {
        "OperationId": {
          "allOf": [
            {
              "$ref": "#/definitions/OperationId"
            },
            {
              "description": "Identifier for tracking the progress of the request. To query the operation status, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html\">GetOperationDetail</a>."
            }
          ]
        }
      },
      "required": [
        "OperationId"
      ],
      "type": "object"
    },
    "UpdateTagsForDomainRequest": {
      "description": "The UpdateTagsForDomainRequest includes the following elements.",
      "properties": {
        "DomainName": {
          "allOf": [
            {
              "$ref": "#/definitions/DomainName"
            },
            {
              "description": "The domain for which you want to add or update tags."
            }
          ]
        },
        "TagsToUpdate": {
          "allOf": [
            {
              "$ref": "#/definitions/TagList"
            },
            {
              "description": "A list of the tag keys and values that you want to add or update. If you specify a key that already exists, the corresponding value will be replaced."
            }
          ]
        }
      },
      "required": [
        "DomainName"
      ],
      "title": "UpdateTagsForDomainRequest",
      "type": "object"
    },
    "UpdateTagsForDomainResponse": {
      "properties": {},
      "type": "object"
    },
    "ViewBillingRequest": {
      "description": "The ViewBilling request includes the following elements.",
      "properties": {
        "End": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The end date and time for the time period for which you want a list of billing records. Specify the date and time in Unix time format and Coordinated Universal time (UTC)."
            }
          ]
        },
        "Marker": {
          "allOf": [
            {
              "$ref": "#/definitions/PageMarker"
            },
            {
              "description": "<p>For an initial request for a list of billing records, omit this element. If the number of billing records that are associated with the current AWS account during the specified period is greater than the value that you specified for <code>MaxItems</code>, you can use <code>Marker</code> to return additional billing records. Get the value of <code>NextPageMarker</code> from the previous response, and submit another request that includes the value of <code>NextPageMarker</code> in the <code>Marker</code> element. </p> <p>Constraints: The marker must match the value of <code>NextPageMarker</code> that was returned in the previous response.</p>"
            }
          ]
        },
        "MaxItems": {
          "allOf": [
            {
              "$ref": "#/definitions/PageMaxItems"
            },
            {
              "description": "<p>The number of billing records to be returned.</p> <p>Default: 20</p>"
            }
          ]
        },
        "Start": {
          "allOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "description": "The beginning date and time for the time period for which you want a list of billing records. Specify the date and time in Unix time format and Coordinated Universal time (UTC)."
            }
          ]
        }
      },
      "title": "ViewBillingRequest",
      "type": "object"
    },
    "ViewBillingResponse": {
      "description": "The ViewBilling response includes the following elements.",
      "properties": {
        "BillingRecords": {
          "allOf": [
            {
              "$ref": "#/definitions/BillingRecords"
            },
            {
              "description": "A summary of billing records."
            }
          ]
        },
        "NextPageMarker": {
          "allOf": [
            {
              "$ref": "#/definitions/PageMarker"
            },
            {
              "description": "If there are more billing records than you specified for <code>MaxItems</code> in the request, submit another request and include the value of <code>NextPageMarker</code> in the value of <code>Marker</code>."
            }
          ]
        }
      },
      "type": "object"
    },
    "ZipCode": {
      "maxLength": 255,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://docs.aws.amazon.com/route53domains/"
  },
  "x-components": {
    "parameters": {
      "X-Amz-Algorithm": {
        "in": "header",
        "name": "X-Amz-Algorithm",
        "required": false,
        "type": "string"
      },
      "X-Amz-Content-Sha256": {
        "in": "header",
        "name": "X-Amz-Content-Sha256",
        "required": false,
        "type": "string"
      },
      "X-Amz-Credential": {
        "in": "header",
        "name": "X-Amz-Credential",
        "required": false,
        "type": "string"
      },
      "X-Amz-Date": {
        "in": "header",
        "name": "X-Amz-Date",
        "required": false,
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "in": "header",
        "name": "X-Amz-Security-Token",
        "required": false,
        "type": "string"
      },
      "X-Amz-Signature": {
        "in": "header",
        "name": "X-Amz-Signature",
        "required": false,
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "in": "header",
        "name": "X-Amz-SignedHeaders",
        "required": false,
        "type": "string"
      }
    }
  },
  "x-hasEquivalentPaths": true
}