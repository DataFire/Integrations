{
  "swagger": "2.0",
  "info": {
    "description": "RiteKit API is based on REST principles.\n\nAuthentication uses standard OAuth 2.0 process\n\n##Getting started\n\n1. Sign up for [RiteKit](https://ritekit.com/)\n\n1. Go to [developer dashboard](https://ritekit.com/developer/dashboard/)\n\n1. Click \"Create a token\" button to get your **Client ID** and **Client secret**\n\n1. When you reach your free limit of calls per month, [upgrade to paid tiers](https://ritekit.com/developer/)\n\n## Options for authorizing API Calls\n\n#### Using Client ID directly\n\nYou can directly connect to our API using your **client ID** by sending it as a GET query parameter. This option is simple (no need for oAuth) but it should be used only in case the Client ID is not exposed publicly.\n\nGET  https://api.ritekit.com/v1/stats/multiple-hashtags?tags=php&client_id=292c6912e7710c838347ae178b4a",
    "title": "RiteKit API",
    "version": "1.0.0",
    "x-apisguru-categories": [
      "social"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_781729376161366016_qdUFUsCN_400x400.jpg"
    },
    "x-origin": [
      {
        "converter": {
          "url": "https://github.com/lucybot/api-spec-converter",
          "version": "2.7.31"
        },
        "format": "apiBlueprint",
        "url": "https://raw.githubusercontent.com/RiteKit/api-docs/master/apiary.apib",
        "version": "1A"
      }
    ],
    "x-preferred": true,
    "x-providerName": "ritekit.com",
    "x-datafire": {
      "name": "ritekit",
      "type": "openapi"
    }
  },
  "host": "api.ritekit.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/emoji/auto-emojify": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "description": "Text of the post",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string",
            "x-example": "Why robots may soon steal all manufacturing jobs – but it’s not all bad news"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns text of the post with emoji added",
        "operationId": "Auto-Emojify",
        "summary": "Auto-Emojify"
      }
    },
    "/v1/emoji/suggestions": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "description": "Text of the post",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string",
            "x-example": "Why robots may soon steal all manufacturing jobs – but it’s not all bad news"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns list of emoji suggestions for a given text of the post",
        "operationId": "Emoji Suggestions",
        "summary": "Emoji Suggestions"
      }
    },
    "/v1/images/animate": {
      "get": {
        "produces": [
          "image/gif"
        ],
        "parameters": [
          {
            "description": "URL of the company",
            "in": "query",
            "name": "url",
            "required": true,
            "type": "string",
            "x-example": "https://jpeg.org/images/jpeg-home.jpg"
          },
          {
            "description": "URL of the company",
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string",
            "x-example": "glint"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns URL of an animated GIF.",
        "operationId": "Animate Image",
        "summary": "Animate Image"
      }
    },
    "/v1/images/logo": {
      "get": {
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "description": "URL of the company",
            "in": "query",
            "name": "domain",
            "required": true,
            "type": "string",
            "x-example": "google.com"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns a company logo based on website domain. If the logo is not in our database yet, it will be extracted from the site on the fly. White logo background is automatically removed to make the logo look better on color backgrounds.\n\nNote: It is not possible to access our company logo API publicly without authentication. If you wish to do so, you have to create proxy on your own server that calls our API from the server side.",
        "operationId": "Company Logo",
        "summary": "Company Logo"
      }
    },
    "/v1/images/quote": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "description": "Text of the quote",
            "in": "query",
            "name": "quote",
            "required": true,
            "type": "string",
            "x-example": "If you love life, don't waste time, for time is what life is made up of"
          },
          {
            "description": "Name of the author/source",
            "in": "query",
            "name": "author",
            "required": true,
            "type": "string",
            "x-example": "Bruce Lee"
          },
          {
            "description": "Font size for the quote (author font size is calculated automatically)",
            "in": "query",
            "name": "fontSize",
            "required": true,
            "type": "integer",
            "x-example": "60"
          },
          {
            "description": "Font-family used for quote text",
            "in": "query",
            "name": "quoteFont",
            "required": true,
            "type": "string",
            "x-example": "Lora"
          },
          {
            "description": "Font color of the quote text",
            "in": "query",
            "name": "quoteFontColor",
            "required": true,
            "type": "string",
            "x-example": "#4f4f4f"
          },
          {
            "description": "Font-family used for author name",
            "in": "query",
            "name": "authorFont",
            "required": true,
            "type": "string",
            "x-example": "Lato Black"
          },
          {
            "description": "Font color of the author",
            "in": "query",
            "name": "authorFontColor",
            "required": true,
            "type": "string",
            "x-example": "#e5e5e5"
          },
          {
            "description": "Enable highlight on quote text",
            "in": "query",
            "name": "enableHighlight",
            "required": true,
            "type": "integer",
            "x-example": "1"
          },
          {
            "description": "Color used for highlight",
            "in": "query",
            "name": "highlightColor",
            "required": true,
            "type": "string",
            "x-example": "#f0ea66"
          },
          {
            "description": "Background type (gradient/solid)",
            "in": "query",
            "name": "bgType",
            "required": true,
            "type": "string",
            "x-example": "gradient"
          },
          {
            "description": "Background color for solid background type",
            "in": "query",
            "name": "backgroundColor",
            "required": true,
            "type": "string",
            "x-example": "#000000"
          },
          {
            "description": "Type of gradient background (linear/radial)",
            "in": "query",
            "name": "gradientType",
            "required": true,
            "type": "string",
            "x-example": "linear"
          },
          {
            "description": "First color for gradient background type",
            "in": "query",
            "name": "gradientColor1",
            "required": true,
            "type": "string",
            "x-example": "#1ee691"
          },
          {
            "description": "Second color for gradient background type",
            "in": "query",
            "name": "gradientColor2",
            "required": true,
            "type": "string",
            "x-example": "#1ddad6"
          },
          {
            "description": "URL of the brand logo",
            "in": "query",
            "name": "brandLogo",
            "required": true,
            "type": "string",
            "x-example": "https://cdn.ritekit.com/assets/img/common/made-with-ritekit-white.png"
          },
          {
            "description": "Animation type: none, rays, glint, circle",
            "in": "query",
            "name": "animation",
            "required": true,
            "type": "string",
            "x-example": "glint"
          },
          {
            "description": "showing/hiding quote mark",
            "in": "query",
            "name": "showQuoteMark",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns URL of an image created from text according to given style parameters",
        "operationId": "Text to Image",
        "summary": "Text to Image"
      }
    },
    "/v1/link/cta": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns list of available CTA for current user. Requires each user to authenticate with RiteKit",
        "operationId": "List of CTAs",
        "summary": "List of CTAs"
      }
    },
    "/v1/link/short-link": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "description": "URL",
            "in": "query",
            "name": "url",
            "required": true,
            "type": "string",
            "x-example": "https://ritekit.com"
          },
          {
            "description": "cta id",
            "in": "query",
            "name": "cta",
            "required": true,
            "type": "integer",
            "x-example": "6530"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns a shorten link with a given CTA.",
        "operationId": "Shorten Link",
        "summary": "Shorten Link"
      }
    },
    "/v1/search/trending": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "default": "1",
            "description": "Restrict results only to green hashtags. Hides overused (red) hashtags.",
            "in": "query",
            "name": "green",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "1",
            "description": "Restrict results only to hashtags with latin characters",
            "in": "query",
            "name": "latin",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns list of hashtags currently trending on Twitter",
        "operationId": "Trending Hashtags",
        "summary": "Trending Hashtags"
      }
    },
    "/v1/stats/auto-hashtag": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "description": "Text of the post",
            "in": "query",
            "name": "post",
            "required": true,
            "type": "string",
            "x-example": "Is artificial intelligence the future of customer service?"
          },
          {
            "default": 2,
            "description": "Max number of hashtags.",
            "in": "query",
            "name": "maxHashtags",
            "required": false,
            "type": "integer"
          },
          {
            "default": "auto",
            "description": "Position of hashtags: end => at the end, auto => anywhere",
            "in": "query",
            "name": "hashtagPosition",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns auto-hashtagged text of the post.",
        "operationId": "Auto-Hashtag",
        "summary": "Auto-Hashtag"
      }
    },
    "/v1/stats/hashtag-suggestions": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "description": "Topic",
            "in": "query",
            "name": "text",
            "required": true,
            "type": "string",
            "x-example": "seo"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns list of hashtag suggestions for a single-word topic or a shorter text up to 1000 characters. Takes into account both semantic relevancy and real-time hashtag popularity.",
        "operationId": "Hashtag Suggestions",
        "summary": "Hashtag Suggestions"
      }
    },
    "/v1/stats/history/{hashtag}": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "description": "Hashtag without # mark",
            "in": "path",
            "name": "hashtag",
            "required": true,
            "type": "string",
            "x-example": "job"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns historical stats for a given hashtag from the last 30 days",
        "operationId": "Hashtag History",
        "summary": "Hashtag History"
      }
    },
    "/v1/stats/multiple-hashtags": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Hashtag(s) without # mark",
            "in": "query",
            "items": {},
            "name": "tags",
            "required": true,
            "type": "array",
            "x-example": "jobs,hello"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Returns real-time stats for up to 100 hashtags (updated hourly).",
        "operationId": "Hashtag Stats",
        "summary": "Hashtag Stats"
      }
    },
    "/v2/instagram/hashtags-cleaner": {
      "get": {
        "produces": [
          "application/json; charset=utf-8"
        ],
        "parameters": [
          {
            "description": "post",
            "in": "query",
            "name": "post",
            "required": true,
            "type": "string",
            "x-example": "#instaphotography #instabeauty #instagirls #instanature #instagirl #photography #beauty #girls #nature #girl #sky #water #lady #ladies #woman #women #photograph #photographs #beauties #sunlight #sitting #waters #skies #sit #photographies"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": [],
        "description": "Remove banned hashtags before posting to Instagram",
        "operationId": "Hashtags cleaner",
        "summary": "Hashtags cleaner"
      }
    }
  },
  "definitions": {
    "Emojis": {},
    "Hashtags": {},
    "Images": {},
    "Instagram": {},
    "Link_shortening": {}
  },
  "tags": [],
  "x-components": {}
}